{"version":3,"sources":["Images/seal.jpg","Images/sign.jpg","Images/logo.png","Images/js.jpg","Images/mk.jpg","Images/proud.jpg","Images/scaff.jpg","Services/api.js","utils/setAuthorizationHeader.js","Services/types.js","Schemas/schemas.js","actions/actions.js","Components/Header/Header.js","Containers/AddUser/AddUserForm/AddUserForm.js","Containers/AddUser/AddUser.js","Containers/AddUser/AddUserForm/UpdateUserForm.js","Containers/AddUser/UpdateUser.js","Containers/Admin/AdminDashboard.js","actions/Product.js","Services/transactionapi.js","actions/Transaction.js","Containers/Billing/BillingForm/BillingForm.js","Containers/Billing/BillingTable.js","Containers/Billing/ProductBilling.js","Containers/LoginPage/LoginForm/LoginForm.js","Services/Roles.js","Components/loader/loader.js","Containers/LoginPage/LoginPage.js","Components/Alert/Alert.js","Containers/Material/MaterialForms/AddMaterialForm.js","Components/Table/DatatablePage.js","Containers/Material/AddMaterial.js","Containers/Material/MaterialForms/AddMaterialTypesForm.js","Containers/Material/AddMaterialType.js","Containers/Material/MaterialForms/UpdateMaterialForm.js","Containers/Material/UpdateMaterial.js","Containers/Material/MaterialForms/UpdateMaterialTypesForm.js","Containers/Material/UpdateMaterialType.js","Containers/Product/ProductForm/ProductForm.js","actions/uom.js","Containers/Product/Product.js","Containers/Product/ViewProduct.js","Containers/Product/ViewProductList.js","Containers/SetUp/Customer/AddCustomer/CustomerForm/CustomerForm.js","Containers/SetUp/Customer/ViewCustomerList.js","Services/customerapi.js","actions/customerContact.js","Containers/SetUp/Customer/Customer.js","Containers/SetUp/Customer/Transaction.js","Containers/SetUp/Customer/UpdateCustomer/CustomerForm/UpdateCustomerForm.js","Containers/SetUp/Customer/UpdateCustomer.js","Containers/SetUp/Customer/ViewCustomerTable.js","Containers/SetUp/CustomerInfo/ViewCustomerList.js","Containers/SetUp/CustomerInfo/CustomerInfo.js","Services/quotationapi.js","actions/quotation.js","Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList.js","Containers/SetUp/FinancialYear/AddYear/AddYearForm/AddYearForm.js","Containers/SetUp/FinancialYear/AddFinancialYear.js","actions/financialYearAdd.js","Services/challanapi.js","actions/challan.js","Containers/Transaction/Challan/Challan/ChallanForm.js","Containers/Transaction/Challan/Challan/AddChalan.js","Containers/Transaction/Challan/View/ViewChallan.js","Containers/Transaction/Challan/View/Component.js","Containers/Transaction/Challan/View/ViewChallanPdf.js","Containers/Transaction/Enquiry.js","Services/invoiceapi.js","actions/Invoice.js","Containers/Transaction/Invoice/Invoice/InvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddInvoice.js","Containers/Transaction/Invoice/Invoice/ProformaInvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddProformaInvoice.js","Containers/Transaction/Invoice/View/ViewInvoice.js","Containers/Transaction/Invoice/View/Component.js","Containers/Transaction/Invoice/View/ViewInvoicePdf.js","Containers/Transaction/Invoice/View/ViewProformaInvoice.js","Containers/Transaction/Invoice/View/Component2.js","Containers/Transaction/Invoice/View/ViewProformaInvoicePdf.js","Containers/Transaction/Item/Form/ItemList/AddItemListForm.js","Containers/Transaction/Item/ItemList/ViewMasterItemList.js","Containers/Transaction/Item/ItemList/AddMasterItemList.js","Containers/Transaction/Item/ItemList/MasterItemListValues.js","Containers/Transaction/Item/Form/ItemList/UpdateItemListForm.js","Containers/Transaction/Item/ItemList/UpdateMasterItemList.js","Containers/Transaction/Item/Form/MasterItemTypeForm.js","Containers/Transaction/Item/ItemType/ItemMasterType.js","Containers/Transaction/Item/ItemType/ItemMasterTypeList.js","Containers/Transaction/Item/Form/UpdateMasterItemTypeForm.js","Containers/Transaction/Item/ItemType/UpdateItemMasterType.js","Components/EditTable/EditTable.js","Services/locationapi.js","actions/Location.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptScreenForm.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptTable.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen.js","Containers/Transaction/ItemScreening/ReceiptScreen/Component.js","Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt.js","Services/moveorderapi.js","actions/moveorder.js","Containers/Transaction/MoveOrder/MoveOrderScreenForm/MoveOrderScreenForm.js","Containers/Transaction/MoveOrder/MoveOrderScreen.js","Containers/Transaction/MoveOrder/View/ViewMoveOrder.js","Containers/Transaction/OnHand/AddOnHandScreenForm/AddOnHandScreenForm.js","Containers/Transaction/OnHand/AddOnHand.js","Services/productionapi.js","actions/Production.js","Containers/Transaction/ProductionScreen/Production/ProductionForm.js","Containers/Transaction/ProductionScreen/Production/AddProduction.js","Containers/Transaction/ProductionScreen/View/ViewProudction.js","Containers/Transaction/PurchaseOrder/PurchaseOrderForm/PurchaseOrderForm.js","Services/supplierapi.js","actions/Supplier.js","Services/currency.js","actions/Currency.js","Containers/Transaction/PurchaseOrder/PurchaseOrder.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList.js","Containers/Transaction/PurchaseOrder/Component.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf.js","Containers/Transaction/Quotation/Quotation/QuotationForm/QuotationForm.js","Containers/Transaction/Quotation/Quotation/AddQuotation.js","Containers/Transaction/Quotation/View/ViewQuotation.js","Containers/Transaction/Quotation/View/Component.js","Containers/Transaction/Quotation/View/ViewQuotationPdf.js","Containers/Transaction/Supplier/SupplierForm/SupplierContact.js","Containers/Transaction/Supplier/SupplierContact/SupplierContact.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetail.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetail.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/Supplierlist.js","Containers/Transaction/TotalQuantityScreen/TotalQuantityForm/ItemQuantitySearch.js","Containers/Transaction/TotalQuantityScreen/TotalQuantity.js","Services/order.js","actions/order.js","Containers/Transaction/WorkOrder/Order/OrderForm.js","Containers/Transaction/WorkOrder/Order/AddOrder.js","Containers/Transaction/WorkOrder/View/ViewOrder.js","Containers/Transaction/WorkOrder/View/Component.js","Containers/Transaction/WorkOrder/View/ViewOrderPdf.js","Containers/View/AdminRole.js","Containers/View/EmployeeRole.js","Pages/BOMPage.js","Pages/Challan.js","Pages/CRMPage.js","Pages/CustomerPage.js","Pages/InventoryPage.js","Pages/InvoicePage.js","Pages/InvoicePage1.js","Pages/InvoicePage2.js","Pages/ItemsPage.js","Pages/ManufacturingPage.js","Pages/MoveOrder.js","Pages/OnHandPage.js","Pages/Production.js","Pages/PurchaceOrderPage.js","Pages/QuantityPage.js","Pages/QuotationPage.js","Pages/SupplierPage.js","Pages/TransactionPage.js","Pages/WorkOrder.js","Routes/GuestRoute.js","Routes/UserRoute.js","App.js","serviceWorker.js","Store/rootReducer.js","reducer/user.js","reducer/userlist.js","reducer/materialoptionlist.js","reducer/materiallistvalues.js","reducer/productlistvalues.js","reducer/masteritemtypenamevalue.js","reducer/masteritemlistnamevalue.js","reducer/suppliercontactlistvalue.js","reducer/supplierdetaillistvalue.js","reducer/uomlistvalue.js","reducer/currencylistvalue.js","reducer/locationlistvalue.js","reducer/purchaseorderlistvalue.js","reducer/receiptlistvalues.js","reducer/customerlistvalues.js","reducer/customertransationvalues.js","reducer/quotationlistvalues.js","reducer/invoicelistvalues.js","reducer/proformainvoicelistvalues.js","reducer/challanlistvalues.js","reducer/orderlistvalues.js","reducer/productionlistvalues.js","reducer/moveorderlistvalues.js","Store/store.js","Store/persistStore.js","index.js","Images/client.png"],"names":["module","exports","__webpack_require__","p","api","userRegister","userRegisterdata","axios","post","concat","process","then","res","data","userRecord","login","credentials","user","getUser","get","userdata","getUserbyid","id","userRecordData","updateUser","patch","success","addmaterialtype","materialdata","getmaterialstype","materiallist","updatematerialtype","addmaterial","getmaterial","updatematerial","addproduct","getproducts","productlist","addyear","checkexists","year","updateyear","updateid","catch","err","error","setAuthorizationHeader","token","arguments","length","undefined","defaults","headers","common","authorization","UOM_LIST","CURRENCY_LIST","Location_LIST","userSchema","schema","Entity","idAttribute","uomListSchema","materialOptionSchema","materialListSchema","productListSchema","masterItemTypeNameSchema","masterItemTypeListSchema","supplierContactListSchema","supplierDetailListSchema","currencyListSchema","locationListSchema","purchaseOrderListSchema","customerListSchema","customerTransactionSchema","quotationListSchema","invoiceListSchema","proformainvoiceListSchema","challanListSchema","orderListSchema","productionListSchema","moveorderListSchema","userLoggedIn","type","Header","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","logout","window","location","reload","history","push","toggle","bind","_assertThisInitialized","state","isOpen","isAuthenticated","_createClass","key","value","setState","React","createElement","Navbar","expand","className","NavbarBrand","tag","Link","to","src","logo","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","role","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Component","withRouter","connect","e","dispatch","localStorage","removeItem","AddUserForm","_len","args","Array","_key","apply","title","firstname","lastname","email","phone","startdate","Date","enddate","username","password","repassword","active","persontype","department","job","errors","loading","onChange","_objectSpread","_defineProperty","target","name","handleValidSubmit","console","log","submit","myFormRef","reset","response","handleChangeStartDate","date","selectedDate","formattedDate","getDate","getMonth","getFullYear","handleChangeEndDate","handleInvalidSubmit","_this2","_this$state","Alert","color","AvForm","onValidSubmit","onInvalidSubmit","ref","el","Card","CardHeader","CardBody","Row","Col","sm","AvGroup","Label","for","AvField","validate","required","errorMessage","pattern","minLength","maxLength","DatePicker","selected","autoComplete","minDate","dateFormat","maxDate","match","Button","disabled","AddUser","UpdateUserForm","count","userRecordModified","userlist","UpdateUser","userid","params","AdminDashboard","paddingTop","productlistvalues","productdata","productvalueFetched","normalize","getMaterialsTypes","materialsvalue","materialsdata","materialoption","getMaterial","materialslistvalue","materialsvalues","transactionapi","getUomDetails","uomlist","addMasterItemType","masterItemType","getMasterItemType","masteritemtypes","updateMasterItemType","addMasterItemList","url","method","Accept","Content-Type","masterItemList","getMasterItemList","masteritemlist","updatemasteritemlist","addPurchaseOrder","purchaseorderlist","updatePurchaseOrder","getPurchaseOrderList","searchponumber","ponumber","purchaseordervalue","addorupdateitemsinlocation","additemsinlocation","getitemlistavaliable","locationid","itemid","totalitemlistvalues","getReceiptList","receiptlist","getMasterItemTypes","masteritemtypenamevalue","masteritemtypenamedata","MasterItemTypeName","masteritemtypelistvalues","masteritemtypelistdata","MasterItemTypeList","getPurchaseOrder","purchaseorderlistvalues","purchaseorderlistdata","purchaseOrderListFetched","totalitemvaluesearch","ProductBilling","product","profit","qty","labourcost","materiallistvalues","createSelectItems","items","map","option","i","filter","productname","_id","masteritemdescription","Object","values","textAlign","masteritemlistvalues","BillingTable","_this$props","selectedProduct","productformvalues","materialTotalCost","productMaterial","productMaterialData","parseFloat","productqty","product_id","masteritemcostperunit","reduce","a","b","subTotal","grandTotal","colSpan","masteritemname","masteritemuom","uomname","toFixed","parseInt","productlistvalue","gloabl","global","Breadcrumb","BreadcrumbItem","BillingForm","LoginForm","JSON","stringify","Roles","ADMIN","EMPLOYEE","ITADMIN","FINANCE","PURCHASE","SALES","STORE","PRODUCTION","CustomLoader","Loader","height","LoginPage","dataHandler","Mob_JWT","decoded","jwtDecode","userinfo","AddMaterialForm","materialtype","materialname","materialdescription","materialuom","costperunit","materialrate","materialoptionlistvalues","DatatablePage","columns","columnvalue","rows","rowvalues","MDBDataTable","striped","bordered","small","AddMaterial","updateButton","path","addMaterial","view","DataTable","label","field","sort","AddMaterialTypesForm","material","AddMaterialType","materialoptions","addMaterialTypes","MDBBtn","size","AddMaterialOptions","UpdateMaterialForm","materialvalues","updateMaterial","updatematerialdetails","materialid","UpdateMaterialTypesForm","dataRecord","materialoptionobjectlist","UpdateMaterialType","updateMaterialType","UpdateMaterialTypeForm","ProductForm","initialState","createSelectItems3","optionvalue","uomlistvalues","masteritemtypename","split","createSelectItems2","createSelectunfinishedItems","masteritemtype","handleClick","_toConsumableArray","products","productsqty","productsuom","productsqtyinmeter","handleChange","index","materiallistvaluesObject","ProductqtyhandleChange","arr","item","productsweight","masteritemunitwt","ProductuomhandleChange","ProductqtyinmeterhandleChange","removeClick","removeProduct","splice","productMaterials","forEach","v","obj","alert","toggelbutton","getUnitmeasures","uomdata","message","_this3","Modal","ModalHeader","ModalBody","ModalFooter","_React$createElement3","marginTop","paddingLeft","getUomList","uomlistvalue","uomListFetched","Product","propTypes","PropTypes","func","isRequired","ViewProduct","productMaterialslist","materialitemtype","tablerows","itemlist","marginBottom","fontSize","fontWeight","marginRight","Table","ViewProductList","CustomerForm","customernumber","customername","customercontactnumber","customergstnumber","customeraddress1","customeraddress2","city","pincode","country","codate","getTime","deliveryAddress","address1","address2","visible","sameAsBilling","suppliercontactlistvalue","onDeliveryAddressChange","val","onShowAlert","setTimeout","keys","customerlistvalues","toString","ViewCustomerList","searchcustomername","searchfromdate","searchtodate","backupcustomerlistvalues","fromdatetimestamp","todatetimestamp","componentDidMount","getTransaction","filterCustomer","customervalues","customerdata","Transaction","setItem","dateName","dateValue","getDateByMMDDYYYY","filterBydates","initializeCustomers","ev","_this4","trim","filtereddata","toLowerCase","indexOf","date1","date2","_this5","customer","comparedate","_this$state2","customerBlock","customerapi","addcustomer","getcustomer","customerlist","updatecustomer","getcustomerTransaction","getCustomerList","customerlistvalue","customerListFetched","Customer","addCustomerContact","AddCustomerForm","enquirydate","quotationdate","podate","enquirytimestamp","quotationtimestamp","podatetimestamp","ponum","customerName","getItem","transactionID","customertransationvalues","backupcustomertransationvalues","initializeTransactions","poreceived","updatePO","podates","put","onChange1","onChange2","customerid","Transactionhistory","enq_Date","_this6","modaldata","_this7","placeholder","customerTransactionBlock","quote","PO","invoice","dc","quotation","Qno","po","margin","marginLeft","background","getCustomerTransaction","customerTransactionFetched","UpdateCustomerForm","updateCustomerContact","ViewCustomerTable","CustomerInfo","quotationapi","addquotation","quotationdata","updatequotation","getquotation","quotationlist","searchquotation","customerquotationlist","quotationCreated","quotationlistvalues","quotationFetched","CustomerQuotationList","AddYearForm","exists","updated","currentyear","AddFinancialYear","updateYear","addYear","challanapi","challan","addchallan","challandata","updatechallan","getchallan","challanlist","challanCreated","getChallan","challanlistvalues","challanFetched","ChallanForm","selectedItemlist","itemname","itemdescription","itemtype","itemrate","itemuom","itemlocation","quantity","totalcost","remarks","customerdetail","deliverychallanno","toaddress","mobilenumber","site","vehiclenumber","gstno","otherreference","customerobjects","supplierdetaillistvalue","supplierdetaillistvalueobject","masteritemlistvaluesobject","currencylistvalues","uom","locationlistvalue","successmsg","counts","handleChallanDate","handlePODate","handleChange2","selected_id","totalValue","totalvalue","createSelectcustomer","selectitemchange","selected_item","masteritemrate","ID","locationChange","selected_location","onhandlerChange","onSubjectHandler","filterItems","createSelectItemTypes","createSelectCurrencyItems","currencyname","createSelectUomItems","createSelectLocationItems","locationname","quantityChange","remarkChange","unitChange","AddedIteminfo","_this$state$data","supplierdetail","getDCDetails","getChallandata","founddata","newState","assign","addeditemlist","itemarray","localeCompare","customerID","readOnly","currencylistvalue","purchaseorderlistvalue","AddChallan","updateChallan","addChallan","ViewChallan","quotationvalue","styles","StyleSheet","create","textcenter","textright","textleft","paddingleft","pagepadding","padding","section","position","display","flexDirection","overflow","section_column","myHeight","headerfont","descriptionText","headerfont2","headerfontleft","billingaddress","shippingaddress","row","justifyContent","dcaddress","dcaddress_left","view_border","border","flexGrow","view_border_left","borderLeft","borderTop","borderBottom","view_border_right","borderRight","column","headerwidth","headerwidthdate","headerwidthlogo","header_name","header_sub_name","paddingHorizontal","header_sub_name_phone","header_tintext","header_sub_name3","header_sub_nameB","flex","header_sub_nameA","headerwidthAddress","refstyle","paddingBottom","headerpadding","flexgrow","fontsize18","kindattend","yourref","main","tableheaderbgcolor","backgroundColor","footerfixed","bottom","dc_header","dc_gst","Small","_ref","children","Text","Medium","_ref3","textDecorationLine","Bold","_ref5","_ref6","MyDocument","_ref7","data_cond","toAD","totalrs","taxableAmount","taxableamount","moment","format","grandtotal","purchaseorderdate","deliveryaddress","vendorcode","freightcharges","subtotal","cgst","sgst","igst","total","deliverychallannumber","goodsDescription","invoicenumber","roundoffamount","mobileno","purchaseordernumber","tax","tableComponentTwo","datalength","Page","wrap","TableHeader","TableCell","weighting","TableBody","DataTableCell","getContent","r","slno","View","Image","itemimage","weighteach","itemdiscount","unit","Document","stye","paddingRight","wordWrap","ViewChallanPdf","status","link","quotationid","requestdeliverydate","masteritemimage","dynamicClick","document","getElementsByClassName","getElementById","click","href","download","PDFViewer","EnquiryPage","update","enquirylistvalues","backupenquirylistvalues","errorMsg","eno","company","detail","enquiryFrom","getEnquiries","addenquiry","addnewenquiry","updateenquiry","enquirylist","enquirydata","enquiryvalues","reverse","enquiry","errormessage","float","invoiceapi","addinvoice","invoicedata","updateinvoice","getinvoice","invoicelist","getproformainvoice","invoiceCreated","invoicelistvalues","invoiceFetched","InvoiceForm","_customerdetail","_data","transaction","hsncode","saccode","masteritemtypelistvaluesobject","_objectSpread2","sub","taxable","Number","calculatePercentageAmount","ttl","gst","gt","roa","calculateRoundoffTotal","_objectSpread7","onCustomerChange","onRemarksChange","handleDate","handleWorkorderDate","handleDespathdate","purchaseDate","invocieDate","bool","discountpercentagevalue","discountvalue","totalvaluecost","itemdiscountChange","discount","unitcost","particularindextotalvalue","_objectSpread15","updateQuotation","saveDynamicPonum","createChallanList","handleChallanChange","selecteddeliveryChallan","selectedChallan","getInvoiceDetails","lastIndexOf","invoicedate","deliverychallandata","workorderno","workorderdate","despathdate","removaltime","transportationcharge","advanceamountreceived","_React$createElement","quotationnumber","AddInvoice","valid","ProformaInvoiceForm","proformainvoicelist","transportationgst","transportchargerequired","AddProformaInvoice","ViewInvoice","invoiceid","originalInvoice","profomaInvoice","_pagepadding","boxShadow","headerfont4","headerfont5","headerfont3","seal","invoice_header","nobordertable","borderWidth","borderRightWidth","borderBottomWidth","Description","_ref2","SmallBold","_ref4","amountinwords","Rs","amount","words","number","join","n_length","words_string","n_array","received_n_array","substr","j","cgstval","sgstval","igstval","n","op","nums","whole","substring","fraction","RsPaise","alignItems","ViewInvoicePdf","ViewProformaInvoice","sessionStorage","getProformaInvoice","proformainvoicelistvalues","proformainvoiceFetched","MyDocument2","financialYear","financialyear","total2","transportationgstper","transportationchargegst","totalaftertransportcharge","sign","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","ViewProformaInvoicePdf","_componentDidMount","_asyncToGenerator","_callee","_context","parse","AddItemListForm","masteritemshortdescription","permeter","perfeet","perinch","masteritemimagefile","filename","_objectSpread3","onItemTypeChange","selecteditemtype","selecteditemtypevalue","selectitemid","selecteditemvalues","fileSelectedHandler","files","file_size","file_name","file_type","filesize","hasExtension","formdata","FormData","append","fileName","exts","RegExp","replace","test","encType","accept","cursor","ViewMasterItemList","masteritemdata","AddmasterItemList","MasterItemListForm","errorHandler","MasterItemListValues","class","UpdateItemListForm","itemImage","imageChanged","itemimg","maxWidth","maxHeight","UpdateMasterItemList","UpdateMasterItemListForm","MasterItemTypeForm","MasterItemTypename","MasterItemType","ItemMasterTypeList","masteritemtypesvalues","masteritemtypedata","UpdateMasterItemTypeForm","masteritemtypenamevalueobjectlist","UpdateItemMasterType","updateMasterItemTypes","masteritemid","EditTable","poid","poitemid","itemquantity","receivedqty","recevingqty","totalqty","receiptnumber","selectedItem","sucess","loadingvalue","selected_qty","iteminfo","itemlistsubmit","selectedItemlistvalues","tableBody","nowDate","min","max","locationapi","getLocationList","locationlist","locationdata","locationListFetched","ReceiptScreenForm","onhandleChange","ReceiptTable","receiptlistitems","receiptlisttable","receiptvalue","ReceiptScreen","getReceiptlist","searchPoNumber","podata","poItem","datavalue","searchporesult","searchdata","_x","savereport","orderlistvalues","today","poqty","receiptDate","availqty","ViewReceiptPdf","poreceiptvalues","itemcode","TotalRecQty","moveorderapi","moveorder","addmoveorder","moveorderdata","getmoveorder","moveorderlist","addMoveOrder","moverorderlistvalues","moverorderlist","getMoveOrder","moveorderFetched","MoveOrderScreenForm","availableQuantity","moveorderno","fromaddress","tolocationlist","handleChangeDeliveryDate","it","itemdesc","onhandlerFromChange","onhandlerToChange","createToLocationList","moveorderlistvalues","getMovedata","overflowX","MoveOrderScreen","ViewProduction","AddOnHandScreenForm","isAdded","entities","AddOnHand","productionapi","addproduction","productiondata","getproduction","productionlist","productionlistvalues","productionFetched","ProductionForm","totalweight","readystock","firstround","secondround","thirdround","productionorderno","subAssembly","dummyProductMapping","assembly","products2","options","selectedIndex","text","productMaterial2","found","calculationArray","calculationdata","quantityPerMeter","quantityPerKg","thickness","masteritemdescription2","weightChange","stockChange","secondChange","firstChange","thirdChange","toggelreload","onthicknessChange","mainindex","onQuantityChange","onQuantityChangeMeter","calc","kg","onQuantityChangeKg","onTotalChange","addItemComp","changeQuantity","getProddata","maninindex","AddProduction","ViewProudction","productiondate","description","qtyAvaillength","isViewList","productionTodayList","updateTransaction","toggle2","onhandlerChange2","subitem","usedqty","transactionHistrory","view2","viewTransaction","addTransaction","headerBlock","contentBlock","PurchaseOrderForm","isEditdone","suppliernumber","suppliername","supplieraddress1","supplieraddress2","suppliergstnumber","refno","subject","suppliercontactid","quotationno","currency","scheduledays","schedulepayment","createSelectSupplier","createSelectSupplierContact","suppliercontactname","_this$state$data2","getPODetails","podetail","supplierid","referenceno","currencyid","itemnameinfo","supplierapi","addSupplierContact","supplierContactdata","getSupplierContact","suppliercontactlist","addsupplierdetails","getSupplierDetails","supplierdetaillist","updateSupplierContact","suppliercontactlistdata","suppplierContactListFetched","supplierdetaillistdata","suppplierDetailListFetched","getCurrencyList","currencylist","currencydata","currencyListFetched","purchaseOrder","ViewPurchaseOrderlist","purchaseorder","address","suppliercity","supplierstate","supplierpincode","suppliercountry","columnSection","padd6","padding2","headerwidthNew","fontsize18bold","totaleachitem","selectecontactlist","selectedcontactlist","suppliercontactnumber","client","ViewPurchaseOrderPdf","purchaseorderid","selectedcontact","contactid","QuotationForm","isRemovedCalled","isVisible","itemdiscountamount","tcharge","transitinsurance","ws","loadingcharge","selectitemchange2","totaldiscountcost","getQuotationDetails","customerNumber","customerGST","customerAddress","dataelem","F","AddQuotation","ViewQuotation","tableHeader","cutoff","whiteSpace","wordBreak","bgblue","padding5","fontbold","smallicon","brandname","padding1","flexview","RedBold","BlackBold","customeraddress","loadingcharges","tchargegst","subtotalgst","totalincludegst","proud","makeInIdia","justDial","scaff","SupplierContactForm","SupplierContact","SupplierDetail","suppliercontactnamelist","suppliercontactdesignation","suppliercontactemail","supplierContacthandleChange","removeContact","contactnameChange","contactdesignationChange","contactnumberChange","contactemailChange","supplierContactinfo","suppliercontactarray","suppliercontactdesignationarray","suppliercontactnumberarray","suppliercontactemailarray","addSupplierDetails","SupplierDetailForm","SupplierDetailUpdateForm","mongoid","SupplierDetailUpdate","updateSupplierDetails","supplierdetailid","Supplierlist","supplierdata","supplierAddress","ItemQuantitySearch","TotalQuantity","ItemSearch","order","addorder","orderdata","updateaddorder","getorder","orderlist","orderCreated","orderFetched","OrderForm","companydetails","contactperson","officeno","deliveryschedule","orderdate","distance","sitecontactperson","pono","handleChangeDeliveryschedule","getWorkorderDetails","getOrderData","_React$createElement2","AddOrder","ViewOrder","updateworkorder","companyname","totalwt","ViewOrderPdf","AdminRole","startdat","userlistvalue","userFetched","EmployeeRole","BOMPage","_Component","ChallanPage","padding-top","CRMPage","CustomerPage","InventoryPage","top","InvoicePage","InvoicePage1","InvoicePage2","ItemsPage","ManufacturingPage","MoveOrder","OnHandPage","ProductionPage","PurchaceOrderPage","QuantityPage","QuotationPage","SupplierPage","TransactionPage","adminMenu","Fragment","financeMenu","purchaseMenu","salesMenu","storeMenu","productionMenu","WorkOrderPage","component","rest","_objectWithoutProperties","_excluded","Route","render","Redirect","roles","includes","App","exact","GuestRoute","UserRoute","ViewAdmin","ViewEmployee","ProductList","UpdateMaterial","ViewMoveOrder","AddMasterItemList","MasterItemList","UpdateMasterItemType","PurchaseOrder","ViewPurchaseOrderList","SupplierList","AddCustomer","UpdateCustomer","ViewQuotationPdf","AddChalan","Boolean","hostname","appReducer","combineReducers","action","storage","users","receiptlistvalues","rootReducer","persistConfig","LocalStorage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","persistStore","library","add","faHome","faDollyFlatbed","faCube","faKaaba","faUsers","faUser","faUsersCog","faUserFriends","faCalendarPlus","ReactDOM","BrowserRouter","Provider","PersistGate","persistor","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cab9e5a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seal.0511c619.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign.83a51cee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd12c247.png\";","module.exports = __webpack_public_path__ + \"static/media/js.15986e52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mk.e7f890af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proud.b1a70432.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scaff.184bf216.jpg\";","import axios from \"axios\";\n\nexport default {\n  user: {\n    userRegister: userRegisterdata => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/auth`, {\n          userRegisterdata\n        })\n        .then(res => {\n          return res.data.userRecord;\n        });\n    },\n    login: credentials => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/login`, {\n          credentials\n        })\n        .then(res => {\n          return res.data.user;\n        });\n    },\n    getUser: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuser`)\n        .then(res => {\n          return res.data.userdata;\n        });\n    },\n    getUserbyid: id => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuserbyid?id=${id}`)\n        .then(res => {\n          return res.data.userRecordData;\n        });\n    },\n    updateUser: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/api/updateuser?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  material: {\n    addmaterialtype: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/materialtype/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterialstype: data => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/materialtype/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerialtype: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/materialtype/updatematerialtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    addmaterial: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/material/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterial: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/material/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerial: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/material/updatematerial?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  product: {\n    addproduct: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/product/addproduct`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getproducts: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/product/getproducts`)\n        .then(res => {\n          return res.data.productlist;\n        });\n    }\n  },\n  year: {\n    addyear: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/year/addyear`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    checkexists: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/year/getyear`)\n        .then(res => {\n          return res.data.year;\n        });\n    },\n    updateyear: data => {\n      return axios\n      .patch(\n        `${process.env.REACT_APP_BASE_URL}/year/updateyear?id=${data.updateid}`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res.data.success;\n      })\n      .catch(err => {\n        return err.data.error;\n      });\n    }\n  }\n};\n","import axios from \"axios\";\nexport default (token = null) => {\n  if (token) {\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.headers.common.authorization;\n  }\n};\n","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\nexport const USER_FETCHED = 'USER_FETCHED';\nexport const MATERIAL_OPTIONS = 'MATERIAL_OPTIONS';\nexport const MATERIAL_VALUES_FETCHED = 'MATERIAL_VALUES_FETCHED';\nexport const PRODUCT_VALUES_FETCHED = 'PRODUCT_VALUES_FETCHED';\nexport const MASTER_ITEM_TYPES = 'MASTER_ITEM_TYPES';\nexport const MASTER_ITEM_LIST = 'MASTER_ITEM_LIST';\nexport const SUPPLIER_CONTACT_LIST = 'SUPPLIER_CONTACT_LIST';\nexport const SUPPLIER_DETAIL_LIST = 'SUPPLIER_DETAIL_LIST';\nexport const UOM_LIST = 'UOM_LIST';\nexport const CURRENCY_LIST = 'CURRENCY_LIST';\nexport const Location_LIST = 'LOCATION_LIST';\nexport const PURCHASE_ORDER_LIST = 'PURCHASE_ORDER_LIST';\nexport const PO_RECEIPT_LIST = 'PO_RECEIPT_LIST';\nexport const ADD_CUSTOMER_CONTACT = 'ADD_CUSTOMER_CONTACT';\nexport const CUSTOMER_CONTACT_FETCHED = 'CUSTOMER_CONTACT_FETCHED';\nexport const CUSTOMERTRANSACTION_FETCHED = 'CUSTOMERTRANSACTION_FETCHED';\nexport const ADD_CUSTOMER_TRANSACTION = 'ADD_CUSTOMER_TRANSACTION';\n\nexport const QUOTATION_FETCHED = 'QUOTATION_FETCHED';\nexport const ADD_QUOTATION = 'ADD_QUOTATION';\n\nexport const INVOICE_FETCHED = 'INVOICE_FETCHED';\nexport const PROFORMAINVOICE_FETCHED = 'PROFORMAINVOICE_FETCHED';\nexport const ADD_PROFORMA_INVOICE = 'ADD_PROFORMA_INVOICE';\n\nexport const ADD_INVOICE = 'ADD_INVOICE';\n\nexport const CHALLAN_FETCHED = 'CHALLAN_FETCHED';\nexport const ADD_CHALLAN = 'ADD_CHALAN';\n\nexport const ORDER_FETCHED = 'ORDER_FETCHED';\nexport const ADD_ORDER = 'ADD_ORDER';\n\nexport const PRODUCTION_FETCHED = 'PRODUCTION_FETCHED';\nexport const ADD_PRODUCTION = 'ADD_PRODUCTION';\n\nexport const MOVEORDER_FETCHED = 'MOVEORDER_FETCHED';\nexport const ADD_MOVEORDER = 'ADD_MOVEORDER';\n","import { schema } from 'normalizr';\n\nexport const userSchema = new schema.Entity('users', {}, { idAttribute: 'id' });\n\nexport const uomListSchema = new schema.Entity(\n  'uomlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialOptionSchema = new schema.Entity(\n  'materialoptions',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialListSchema = new schema.Entity(\n  'materialslistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const productListSchema = new schema.Entity(\n  'productlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeNameSchema = new schema.Entity(\n  'masteritemtypenamevalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeListSchema = new schema.Entity(\n  'masteritemtypelistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierContactListSchema = new schema.Entity(\n  'suppliercontactlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierDetailListSchema = new schema.Entity(\n  'supplierdetaillistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const currencyListSchema = new schema.Entity(\n  'currencylistvalue',\n  {},\n  { idAttribute: 'id' }\n);\nexport const locationListSchema = new schema.Entity(\n  'locationlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const purchaseOrderListSchema = new schema.Entity(\n  'purchaseorderlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const receiptListSchema = new schema.Entity(\n  'receiptlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerListSchema = new schema.Entity(\n  'customerlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerTransactionSchema = new schema.Entity(\n  'customertransationvalues',\n  {},\n  { idAttribute: 'customerid' }\n);\n\nexport const quotationListSchema = new schema.Entity(\n  'quotationlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const invoiceListSchema = new schema.Entity(\n  'invoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const proformainvoiceListSchema = new schema.Entity(\n  'proformainvoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const challanListSchema = new schema.Entity(\n  'challanlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const orderListSchema = new schema.Entity(\n  'orderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const productionListSchema = new schema.Entity(\n  'productionlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const moveorderListSchema = new schema.Entity(\n  'moveorderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport setAuthorizationHeader from \"../utils/setAuthorizationHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  USER_FETCHED\n} from \"../Services/types\";\nimport { userSchema } from \"../Schemas/schemas\";\n\nexport const userLoggedIn = user => {\n  return {\n    type: USER_LOGGED_IN,\n    user: user\n  };\n};\n\nexport const userLoggedOut = () => {\n  return {\n    type: USER_LOGGED_OUT,\n    user: {}\n  };\n};\n\nexport const userFetched = userlist => {\n  return {\n    type: USER_FETCHED,\n    userlist\n  };\n};\n\nexport const userRegister = data => {\n  return dispatch => {\n    return api.user.userRegister(data);\n  };\n};\n\nexport const getUser = () => {\n  console.log(\"dispatch action calling\");\n  return dispatch => {\n    return api.user.getUser().then(userlist => {\n      const userlistvalue = userlist.userdata;\n      return dispatch(userFetched(normalize(userlistvalue, [userSchema])));\n    });\n  };\n};\n\nexport const updateUser = data => {\n  return dispatch => {\n    return api.user.updateUser(data);\n  };\n};\n\nexport const login = credentials => {\n  return dispatch => {\n    return api.user.login(credentials).then(user => {\n      localStorage.Mob_JWT = user.token;\n      setAuthorizationHeader(user.token);\n      var decoded = jwtDecode(localStorage.Mob_JWT);\n      console.log(\"Decoded \", decoded)\n      const userinfo = {\n        email: decoded.email,\n        role: decoded.role,\n        token: localStorage.Mob_JWT\n      };\n      dispatch(userLoggedIn(userinfo));\n    });\n  };\n};\n\nexport const logout = e => {\n  return dispatch => {\n    localStorage.removeItem(\"Mob_JWT\");\n    dispatch(userLoggedOut());\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/actions';\nimport logo from '../../Images/logo.png';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      isAuthenticated: this.props.isAuthenticated\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logout = () => {\n    this.props.logout();\n    window.location.reload();\n    this.props.history.push('/login');\n  };\n  render() {\n    return (\n      <div>\n        <Navbar  expand='md'>\n          <div className='container'>\n            <NavbarBrand tag={Link} to='/'>\n              <div>\n                <img src={logo} alt='scaffolding' style={{ width: '90px' }} />\n              </div>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'admin'\n                ) && (\n                  <NavItem>\n                    <NavLink tag={Link} to='/admin_dashboard'>\n                      <i className='fas fa-home fa-2x'></i>\n                    </NavLink>\n                  </NavItem>\n                )}\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'management' || this.props.role == 'itadmin'\n                ) && (\n                  <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                      Users\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem tag={Link} to='/adduser'>\n                        Add User\n                      </DropdownItem>\n                      <DropdownItem tag={Link} to='/adminlist'>\n                        Registered user details\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                )}\n                {/* {!!(this.props.isAuthenticated && this.props.role == \"admin\") &&\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Material & product\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag={Link} to=\"/addmaterialtype\">\n                    Add MaterialTypes \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addmaterial\">\n                    Add Material \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addproduct\">\n                    Add Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/viewproductlist\">\n                    View Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/productbilling\">\n                    Product Billing \n                  </DropdownItem>  \n                </DropdownMenu>\n              </UncontrolledDropdown>\n              } */}\n                {this.props.isAuthenticated ? (\n                  <NavItem>\n                    <NavLink tag={Link} onClick={this.logout}>\n                      Logout\n                    </NavLink>\n                  </NavItem>\n                ) : (\n                  <NavItem>\n                    <NavLink tag={Link} to='/login'>\n                      Login\n                    </NavLink>\n                  </NavItem>\n                )}\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  if (state && state.user) {\n    return {\n      isAuthenticated: !!state.user.token,\n      role: state.user.role\n    };\n  } else {\n    return {\n      isAuthenticated: false,\n      role: 'admin'\n    };\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { logout }\n  )(Header)\n);\n","import React from 'react';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass AddUserForm extends React.Component {\n  state = {\n    data: {\n      title: 'Mr',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: null,\n      username: 'nA',\n      password: '',\n      repassword: '',\n      active: '1',\n      persontype: 'admin',\n      department: '1',\n      job: '1',\n      location: '1'\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? <Alert color='info'>user is added</Alert> : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Management</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='password'\n                      type='password'\n                      id='password'\n                      value={data.password}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                       \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Re Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='repassword'\n                      type='password'\n                      id='re-password'\n                      value={data.repassword}\n                      onChange={this.onChange}\n                      validate={{\n                        match: { value: 'password' },\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                      \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {loading}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default AddUserForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { userRegister } from \"../../actions/actions\";\nimport AddUserForm from \"./AddUserForm/AddUserForm\";\n\nclass AddUser extends React.Component {\n  submit = data => this.props.userRegister(data);\n\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <AddUserForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nAddUser.propTypes = {\n  userRegister: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { userRegister }\n)(AddUser);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass UpdateUserForm extends React.Component {\n  state = {\n    data: {\n      id: '',\n      title: '',\n      firstname: this.props.firstname,\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: '',\n      username: '',\n      password: '',\n      repassword: '',\n      active: '',\n      persontype: '',\n      department: '',\n      job: '',\n      location: ''\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    count: ''\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const userRecord = props.userRecord;\n    const userRecordModified = userRecord;\n    userRecordModified.startdate = new Date(userRecord.startdate);\n    // userRecordModified.enddate = new Date(userRecord.enddate);\n    userRecordModified.enddate =\n      userRecord.enddate === null ? null : new Date(userRecord.enddate);\n    this.setState({ ...this.state.data, data: userRecordModified });\n  }\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(data => {\n        console.log('updateuserform page');\n        console.log(data);\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? (\n            <Alert color='info'>User details is updated successfully</Alert>\n          ) : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                      value={data.title}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n            \n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        disabled={true}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Management</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\nUpdateUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateUserForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport UpdateUserForm from \"./AddUserForm/UpdateUserForm\";\n// import api from \"../api\";\nimport { updateUser } from \"../../actions/actions\";\n\nclass UpdateUser extends React.Component {\n  state = {\n    userRecord: \"\"\n  };\n\n  componentDidMount() {\n    const userid = this.props.match.params.id;\n    const userRecord = this.props.userlist[userid];\n    this.setState({ userRecord });\n    // api.user.getUserbyid(userid)\n    // .then((userRecord)=>{\n    //     this.setState({userRecord});\n    // })\n    // .catch((err)=>{\n    //     console.log(\"updateuserfile err\");\n    //     console.log(err);\n    // });\n  }\n\n  submit = data => this.props.updateUser(data);\n\n  render() {\n    const { userRecord, userid } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <UpdateUserForm userRecord={userRecord} submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nUpdateUser.propTypes = {\n  userlist: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  userRecord: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    firstname: PropTypes.string.isRequired,\n    lastname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    startdate: PropTypes.string.isRequired,\n    enddate: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    persontype: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    job: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updateUser }\n)(UpdateUser);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AdminDashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/inventory_page\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Setup</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/transaction_page\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Transactions</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n            {/* <li className=\"bg-color-lg-pk\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-user fa-3x\"></i>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-org\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-users-cog fa-3x\"></i>\n                </Link>\n              </div>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport {\n  MATERIAL_OPTIONS,\n  MATERIAL_VALUES_FETCHED,\n  PRODUCT_VALUES_FETCHED\n} from \"../Services/types\";\nimport {\n  materialOptionSchema,\n  materialListSchema,\n  productListSchema\n} from \"../Schemas/schemas\";\n\nexport const productvalueFetched = productlistvalues => {\n  return {\n    type: PRODUCT_VALUES_FETCHED,\n    productlistvalues\n  };\n};\nexport const materialoptionFetched = materialoption => {\n  return {\n    type: MATERIAL_OPTIONS,\n    materialoption\n  };\n};\n\nexport const materialsFetched = materialsvalues => {\n  return {\n    type: MATERIAL_VALUES_FETCHED,\n    materialsvalues\n  };\n};\n\nexport const addproduct = data => {\n  return dispatch => {\n    return api.product.addproduct(data);\n  };\n};\n\nexport const getproducts = data => {\n  return dispatch => {\n    return api.product.getproducts(data).then(data => {\n      const productlistvalues = data.productdata;\n      return dispatch(\n        productvalueFetched(normalize(productlistvalues, [productListSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterialTypes = data => {\n  return dispatch => {\n    return api.material.addmaterialtype(data);\n  };\n};\n\nexport const updateMaterialType = data => {\n  return dispatch => {\n    return api.material.updatematerialtype(data);\n  };\n};\n\nexport const getMaterialsTypes = () => {\n  return dispatch => {\n    return api.material.getmaterialstype().then(materiallist => {\n      const materialsvalue = materiallist.materialsdata;\n      return dispatch(\n        materialoptionFetched(normalize(materialsvalue, [materialOptionSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterial = data => {\n  return dispatch => {\n    return api.material.addmaterial(data);\n  };\n};\n\nexport const getMaterial = () => {\n  return dispatch => {\n    return api.material.getmaterial().then(materiallist => {\n      const materialslistvalue = materiallist.materialsdata;\n      return dispatch(\n        materialsFetched(normalize(materialslistvalue, [materialListSchema]))\n      );\n    });\n  };\n};\n\nexport const updatematerialdetails = data => {\n  return dispatch => {\n    return api.material.updatematerial(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  uom: {\n    getUomDetails: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n        .then(res => {\n          return res.data.uomlist;\n        });\n    }\n  },\n  transaction: {\n    addMasterItemType: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/transaction/addmasteritemtype`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getMasterItemType: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/transaction/getmasteritemtype`)\n        .then(res => {\n          return res.data.masteritemtypes;\n        });\n    },\n    updateMasterItemType: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/transaction/updatemasteritemtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  transactionMasterItemList: {\n    addMasterItemList: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/addmasteritemlist`,\n        method: \"POST\",\n        data: data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    getMasterItemList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/getmasteritemlist`\n        )\n        .then(res => {\n          return res.data.masteritemlist;\n        });\n    },\n    updatemasteritemlist: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/updatemasteritemlist?id=${data.id}`,\n        method: \"PATCH\",\n        data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    }\n  },\n  purchaseorder: {\n    addPurchaseOrder: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/addpurchaseorder`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    updatePurchaseOrder: data =>{\n      console.log(data)\n      return axios\n      .post(\n        `${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res;\n      });\n    },\n    getPurchaseOrderList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorderrlist`\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    searchponumber: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/searchpurchaseorderrlist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.purchaseordervalue;\n        });\n    }\n  },\n  addorupdateitemsinlocation: {\n    addorupdateitemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/addorupdateitems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    additemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/additems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    getitemlistavaliable: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/getitemlistavaliable/?locationid=${data.locationid}&itemid=${data.itemid}`\n        )\n        .then(res => {\n          return res.data.totalitemlistvalues;\n        });\n    }\n  },\n  receipt: {\n    getReceiptList: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/receiptinfo/getreceiptinfolist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.receiptlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport {\n  MASTER_ITEM_TYPES,\n  MASTER_ITEM_LIST,\n  PURCHASE_ORDER_LIST,\n  PO_RECEIPT_LIST\n} from \"../Services/types\";\nimport {\n  masterItemTypeNameSchema,\n  masterItemTypeListSchema,\n  purchaseOrderListSchema,\n  receiptListSchema\n} from \"../Schemas/schemas\";\n\nexport const masterItemTypeNameFetched = MasterItemTypeName => {\n  return {\n    type: MASTER_ITEM_TYPES,\n    MasterItemTypeName\n  };\n};\n\nexport const masterItemTypeListFetched = MasterItemTypeList => {\n  return {\n    type: MASTER_ITEM_LIST,\n    MasterItemTypeList\n  };\n};\n\nexport const purchaseOrderListFetched = purchaseorderlistvalues => {\n  return {\n    type: PURCHASE_ORDER_LIST,\n    purchaseorderlistvalues\n  };\n};\n\nexport const ReceiptListFetched = receiptlistvalues => {\n  return {\n    type: PO_RECEIPT_LIST,\n    receiptlistvalues\n  };\n};\nexport const addMasterItemType = data => {\n  return dispatch => {\n    return api.transaction.addMasterItemType(data);\n  };\n};\n\nexport const updateMasterItemTypes = data => {\n  return dispatch => {\n    return api.transaction.updateMasterItemType(data);\n  };\n};\n\nexport const updatemasteritemlist = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.updatemasteritemlist(data);\n  };\n};\nexport const getMasterItemTypes = () => {\n  return dispatch => {\n    return api.transaction.getMasterItemType().then(masteritemtypes => {\n      const masteritemtypenamevalue = masteritemtypes.masteritemtypenamedata;\n      return dispatch(\n        masterItemTypeNameFetched(\n          normalize(masteritemtypenamevalue, [masterItemTypeNameSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const addMasterItemList = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.addMasterItemList(data);\n  };\n};\n\nexport const getMasterItemList = () => {\n  return dispatch => {\n    return api.transactionMasterItemList\n      .getMasterItemList()\n      .then(masteritemlist => {\n        const masteritemtypelistvalues = masteritemlist.masteritemtypelistdata;\n        return dispatch(\n          masterItemTypeListFetched(\n            normalize(masteritemtypelistvalues, [masterItemTypeListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const addPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.addPurchaseOrder(data);\n  };\n};\n\n\nexport const updatePurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.updatePurchaseOrder(data);\n  };\n};\n\nexport const getPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.getPurchaseOrderList().then(purchaseorderlist => {\n      const purchaseorderlistvalues = purchaseorderlist.purchaseorderlistdata;\n      return dispatch(\n        purchaseOrderListFetched(\n          normalize(purchaseorderlistvalues, [purchaseOrderListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const searchPoNumber = data => {\n  return dispatch => {\n    return api.purchaseorder.searchponumber(data);\n  };\n};\n\nexport const addorupdateitemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.addorupdateitemsinlocation(data);\n  };\n};\n\nexport const additemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.additemsinlocation(data);\n  };\n};\n\nexport const getReceiptlist = data => {\n  return dispatch => {\n    return api.receipt.getReceiptList(data);\n    // .then(receiptlist => {\n    //   if (receiptlist.count > 0) {\n    //     const receiptlistvalues = receiptlist.receiptlist;\n    //     return dispatch(\n    //       ReceiptListFetched(normalize(receiptlistvalues, [receiptListSchema]))\n    //     );\n    //   }\n    //   return receiptlist;\n    // });\n  };\n};\nexport const totalitemvaluesearch = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.getitemlistavaliable(data);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    data: {\n      product: \"\",\n      profit: \"\",\n      qty: \"\",\n      labourcost: \"\"\n    },\n    productlistvalues: [],\n    errors: {},\n    materiallistvalues: {},\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    this.setState({ ...this.state, productlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const productlistvalues = Object.values(props.productlistvalues);\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const productlistvalues = this.state.productlistvalues;\n    const materiallistvalues = this.state.materiallistvalues;\n    productlistvalues\n      .map((option, i) => option)\n      .filter((option, i) => {\n        if (materiallistvalues[option.productname._id]) {\n          items.push(\n            <option key={i} value={option.id}>\n              {materiallistvalues[option.productname._id].masteritemdescription}\n            </option>\n          );\n        }\n      });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const data = this.props.submit(this.state.data);\n    console.log(data);\n    if (data) {\n      this.setState({ loading: false, errors: {}, success: true });\n    }\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Product Billing</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"product\">Product Id</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"product\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">Please select value</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"profit\">Profit %</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"profit\"\n                      type=\"text\"\n                      id=\"profit\"\n                      value={data.profit}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter profit value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"profit value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"qty\">Quantity</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"qty\"\n                      type=\"text\"\n                      id=\"qty\"\n                      value={data.qty}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter product quantity value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"quantity value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"labourcost\">Labour Cost</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"labourcost\"\n                      type=\"text\"\n                      id=\"labourcost\"\n                      value={data.labourcost}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter labour cost value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"labour cost value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{'textAlign':'center'}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductBilling);\n","import React from \"react\";\n\nclass BillingTable extends React.Component {\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.props;\n    const materialTotalCost =\n      selectedProduct.productMaterial\n        .map((productMaterialData, i) => {\n          return (\n            parseFloat(productMaterialData.productqty) *\n            // parseFloat(productMaterialData.product_id.materialrate) *\n            parseFloat(productMaterialData.product_id.masteritemcostperunit)\n          );\n        })\n        .reduce((a, b) => a + b, 0) * parseFloat(productformvalues.qty);\n    const subTotal =\n      materialTotalCost + parseFloat(productformvalues.labourcost);\n    const profit = (parseFloat(productformvalues.profit) / 100) * subTotal;\n    const grandTotal = subTotal + profit;\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th colSpan=\"4\">\n                {\n                  materiallistvalues[selectedProduct.productname._id]\n                    .masteritemdescription\n                }\n              </th>\n            </tr>\n            <tr>\n              <th>Item Name</th>\n              <th>UOM</th>\n              <th>Unit per Cost</th>\n              <th>Item Qty</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selectedProduct.productMaterial.map((productMaterialData, i) => {\n              return (\n                <tr>\n                  <td>{productMaterialData.product_id.masteritemname}</td>\n                  <td>\n                    {productMaterialData.product_id.masteritemuom.uomname}\n                  </td>\n                  <td>\n                    {productMaterialData.product_id.masteritemcostperunit}\n                  </td>\n                  <td>{productMaterialData.productqty}</td>\n                  <td>\n                    {parseFloat(productMaterialData.productqty).toFixed(2) *\n                      // parseFloat(productMaterialData.product_id.materialrate) *\n                      parseFloat(\n                        productMaterialData.product_id.masteritemcostperunit\n                      ).toFixed(2)}\n                  </td>\n                </tr>\n              );\n            })}\n            <tr>\n              <td colSpan=\"4\">Product Quantity</td>\n              <td>{parseFloat(productformvalues.qty)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Material Total Cost</td>\n              <td>{materialTotalCost}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Labour charge</td>\n              <td>{parseInt(productformvalues.labourcost)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Sub Total</td>\n              <td>{subTotal}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Profit % </td>\n              <td>{profit}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Grand Total</td>\n\n              <td>{grandTotal}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default BillingTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport BillingForm from \"./BillingForm/BillingForm\";\nimport BillingTable from \"./BillingTable\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    productformvalues: {},\n    productlistvalue: {},\n    materiallistvalues: {},\n    selectedProduct: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.props.getMasterItemList();\n  }\n  componentWillReceiveProps(props) {\n    const productlistvalues = props.productlistvalues;\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n  submit = productformvalues => {\n    const selectedProduct = this.props.productlistvalues[\n      productformvalues.product\n    ];\n    if (selectedProduct) {\n      this.setState({ ...this.state, productformvalues, selectedProduct });\n      return {\n        success: { gloabl: \"data exist\" }\n      };\n    } else {\n      return {\n        errors: { global: \"something went wrong\" }\n      };\n    }\n  };\n\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.state;\n\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Cost</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <BillingForm submit={this.submit} />\n        {!!selectedProduct && (\n          <BillingTable\n            selectedProduct={selectedProduct}\n            productformvalues={productformvalues}\n            materiallistvalues={materiallistvalues}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts, getMasterItemList }\n)(ProductBilling);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginForm.scss\";\n\nclass LoginForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    errors: {},\n    loading: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props.submit(this.state.data).catch(err => {\n      console.log(JSON.stringify(err))\n      this.setState({ errors: err.response.data.errors, loading: false });\n      this.props.error(false);\n    });\n  };\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading } = this.state;\n    return (\n      <div className=\"center login-form-parent mg-20\">\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <AvGroup>\n            <div>\n              {!!errors.global ? (\n                <Alert color=\"danger\">{errors.global}</Alert>\n              ) : null}\n\n              {!!errors.email ? (\n                <Alert color=\"danger\">{errors.email}</Alert>\n              ) : null}\n            </div>\n            <Label className='small-font-size' for=\"Email\">Email</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"email\"\n              id=\"Email\"\n              type=\"email\"\n              value={data.email}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a Email\"\n                },\n                pattern: {\n                  value:\n                    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                  errorMessage: \"Please enter valid Email\"\n                }\n              }}\n            />\n          </AvGroup>\n          <AvGroup>\n            <Label className='small-font-size' for=\"password\">Password</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a password\"\n                }\n              }}\n            />\n          </AvGroup>\n          <div style={{ textAlign: \"center\" }}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","export const Roles = {\n  ADMIN: 'management',\n  EMPLOYEE: 'employee',\n  ITADMIN: 'itadmin',\n  FINANCE: 'finance',\n  PURCHASE: 'purchase',\n  SALES: 'sales',\n  STORE: 'stores',\n  PRODUCTION:'production'\n};\n","import React from \"react\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport \"./loader.css\";\nclass CustomLoader extends React.Component {\n    render() {\n        return(\n         <Loader className=\"loaderposition\"\n            type=\"ThreeDots\"\n            color=\"#ed272f\"\n            height=\"100\"\n            width=\"100\"\n         />\n        );\n       }\n}\n\nexport default CustomLoader;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginForm from './LoginForm/LoginForm';\nimport { login } from '../../actions/actions';\nimport { Roles } from '../../Services/Roles';\nimport CustomLoader from '../../Components/loader/loader';\nimport Alert2 from '../../Components/Alert/Alert';\n\nclass LoginPage extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.login(data).then(() => {\n\n      this.dataHandler(false);\n      console.log(this.props.role)\n      if (this.props.role === Roles.ADMIN) {\n        // return this.props.history.push(`/adduser`);\n        return this.props.history.push(`/admin_dashboard`);\n      } else if (this.props.role === Roles.ITADMIN) {\n        return this.props.history.push(`/adminlist`);\n      } else if (\n        this.props.role === Roles.FINANCE ||\n        this.props.role === Roles.PURCHASE ||\n        this.props.role === Roles.SALES ||\n        this.props.role === Roles.STORE ||\n        this.props.role === Roles.PRODUCTION\n      ) {\n        return this.props.history.push(`/transaction_page`);\n      } else {\n\n        return this.props.history.push(`/admin_dashboard`);\n      }\n    });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n\n        <LoginForm submit={this.submit} error={this.dataHandler} />\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  role: PropTypes.string.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  submit: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(LoginPage);\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass Alert2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  render() {\n    return (\n      <div>\n        {/* <Button color=\"danger\" onClick={this.toggle}>\n          {this.props.buttonLabel}\n        </Button> */}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Pondhan Scaffolding</ModalHeader>\n          <ModalBody>\n          {this.props.errormessage}\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"secondary\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Alert2;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass AddMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: null,\n      materialrate: null\n    },\n    materialoptionlistvalues: [],\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Material is added successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Itemname\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid Itemname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">Item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Please select value</option>\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemdescription\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">Item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                       \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                   \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddMaterialForm);\n","import React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./DataTable.css\";\n\nconst DatatablePage = props => {\n  const data = {\n    columns: props.columnvalue,\n    rows: props.rowvalues\n  };\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n      className={props.className}\n    />\n  );\n};\n\nexport default DatatablePage;\n","import React from \"react\";\nimport AddMaterialForm from \"./MaterialForms/AddMaterialForm\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  addMaterial,\n  getMaterial,\n  getMaterialsTypes\n} from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\n\nclass AddMaterial extends React.Component {\n  state = {\n    materiallist: \"\",\n    count: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_material/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentWillReceiveProps(props) {\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    const materiallist = materiallistvalues.map((materialdata, i) => {\n      return {\n        materialtype: materialdata.materialtype.materialname,\n        materialname: materialdata.materialname,\n        materialdescription: materialdata.materialdescription,\n        materialuom: materialdata.materialuom,\n        materialrate: materialdata.materialrate,\n        costperunit: materialdata.costperunit,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            View / Edit\n          </Button>\n        )\n      };\n    });\n    const count = materiallistvalues.length;\n    this.setState({ ...this.state, materiallist, count });\n  }\n\n  submit = data => {\n    return this.props.addMaterial(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { count, materiallist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"material Type\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Name\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"materialdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"unit of measure\",\n        field: \"materialuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Rate\",\n        field: \"materialrate\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"cost per unit\",\n        field: \"costperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"view / Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Item</BreadcrumbItem>\n        </Breadcrumb>\n        <AddMaterialForm submit={this.submit} />\n        <div>\n          {count > 0 && (\n            <div className=\"container mg-20\">\n              <DataTable columnvalue={columnvalue} rowvalues={materiallist} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAddMaterial.propTypes = {\n  addMaterial: PropTypes.func.isRequired,\n  getMaterial: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMaterial, getMaterial, getMaterialsTypes }\n)(AddMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass AddMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            material:\"\"\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    handleValidSubmit = () => {\n        console.log(this.state.data);\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Material details is Added successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Material data already exist.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Add Item Type</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"material\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.option}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item\"\n                                            },\n                                   \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid materialname\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <AvGroup className=\"mg-20\">\n                                    <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                                        Submit\n                                        {/* {loading} */}\n                                    </Button>\n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nAddMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nexport default AddMaterialTypesForm;","import React from \"react\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport AddMaterialOptions from \"./MaterialForms/AddMaterialTypesForm\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport { addMaterialTypes, getMaterialsTypes } from \"../../actions/Product\";\n\nclass AddMaterialType extends React.Component {\n  state = {\n    count: \"\",\n    materialoptions: []\n  };\n  componentDidMount() {\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_itemtype/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const materialoptionslist = Object.values(props.materialoptions);\n    const materialoptions = materialoptionslist.map((materialdata, i) => {\n      return {\n        materialname: materialdata.materialname,\n        view: (\n          <MDBBtn\n            color=\"info\"\n            size=\"sm\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            view / Edit\n          </MDBBtn>\n        )\n      };\n    });\n    const count = materialoptions.length;\n    this.setState({ ...this.state, materialoptions, count });\n  }\n  submit = data => {\n    return this.props.addMaterialTypes(data).then(data => {\n      this.props.getMaterialsTypes();\n      return data;\n    });\n  };\n  render() {\n    const { count, materialoptions } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div>\n        <div className=\"container mg-20\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Inventory</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Add Item Type</BreadcrumbItem>\n          </Breadcrumb>\n\n          <AddMaterialOptions submit={this.submit} />\n        </div>\n        {count > 0 && (\n          <div className=\"container mg-20\">\n            <DataTable columnvalue={columnvalue} rowvalues={materialoptions} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAddMaterialType.propTypes = {\n  addMaterialTypes: PropTypes.func.isRequired,\n  getMaterialsTypes: PropTypes.func.isRequired,\n  materialoptions: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    materialname: PropTypes.string.isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptions: state.materialoption\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { addMaterialTypes, getMaterialsTypes }\n)(AddMaterialType);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UpdateMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: \"\",\n      materialrate: \"1\"\n    },\n\n    errors: {},\n    materialoptionlistvalues: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.materialvalues;\n    data.materialtype = props.materialvalues.materialtype._id;\n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Item is updated successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader>Add Material</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemname\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid materialname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                      value={data.materialtype}\n                    >\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                      value={data.materialuom}\n                    >\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"ea\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                      \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                 \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateMaterialForm);\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMaterialForm from \"./MaterialForms/UpdateMaterialForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatematerialdetails, getMaterial } from \"../../actions/Product\";\n\nclass updateMaterial extends React.Component {\n  state = {\n    materialvalues: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    const materialid = this.props.match.params.id;\n    const materialvalues = this.props.materiallistvalues[materialid];\n    this.setState({ materialvalues });\n  }\n\n  submit = data => {\n    return this.props.updatematerialdetails(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { materialvalues } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/additem\">Add Item</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <UpdateMaterialForm\n          submit={this.submit}\n          materialvalues={materialvalues}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updatematerialdetails, getMaterial }\n)(updateMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass UpdateMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            materialname:this.props.materialoption.materialname,\n            id:this.props.materialoption.id\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    componentWillReceiveProps(props){\n        const dataRecord = props.materialoption;\n        this.setState({...this.state.data, data:dataRecord});\n    }\n\n    handleValidSubmit = () => {\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            // this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        console.log(this.props);\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Item details is updated successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Item data already exist.</Alert>\n                ) : null}\n                {!!errors.global ? (\n                    <Alert color=\"danger\">Something went wrong,Please try again later.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Update Item</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"materialname\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.materialname}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item name\"\n                                            },\n                                      \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid item name\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                    <div className=\"mg-20\">\n                        <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                            update\n                            {/* {loading} */}\n                        </Button>\n                    </div>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nUpdateMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n      materialoptionobjectlist: state.materialoption\n    };\n}\n\nexport default connect(mapStateToProps,{})(UpdateMaterialTypesForm);","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport UpdateMaterialTypeForm from \"./MaterialForms/UpdateMaterialTypesForm\";\nimport { updateMaterialType,getMaterialsTypes } from \"../../actions/Product\";\n\nclass UpdateMaterialType extends React.Component{\n    state={\n        materialoption:''\n    }\n    \n    componentDidMount(){\n        const materialid = this.props.match.params.id;\n        const materialoption = this.props.materialoptions[materialid];\n        this.setState({materialoption});\n    }\n\n    submit = (data) => this.props.updateMaterialType(data);\n\n\n    render(){\n        const { materialoption } = this.state;\n        return(\n            <div className=\"container mg-20\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/inventory_page\">Inventory</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to=\"/add_itemtype\">Item type</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Item View/Edit</BreadcrumbItem>\n                </Breadcrumb>\n                <UpdateMaterialTypeForm materialoption={materialoption} submit={this.submit} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        materialoptions: state.materialoption\n    }\n}\n\nexport default connect(mapStateToProps,{updateMaterialType,getMaterialsTypes})(UpdateMaterialType);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nclass ProductForm extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      data: {\n        productname: \"\",\n        values: [\"\"],\n        products: [\"\"],\n        productsqty: [\"\"],\n        productsuom: [\"\"],\n        productsqtyinmeter: [\"\"],\n        productsweight: [\"\"]\n      },\n      materiallistvalues: [],\n      uomlistvalues:[],\n      materiallistvaluesObject: {},\n      loading: false,\n      errors: {},\n      success: false\n    };\n  }\n  componentDidMount() {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(this.props.materiallistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n    this.getUnitmeasures()\n  }\n\n  componentWillReceiveProps(props) {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    //const uomlistvalues = Object.values(props.uomlistvalues);\n    // console.log(uomlistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n  }\n\n\n\n  getUnitmeasures(){\n    \n    this.setState({ loading: true });\n \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n    .then(res => {\n      console.log(res.data)\n      if(res.data.uomlist.uomdata.length > 0){\n        this.setState({\n          uomlistvalues:res.data.uomlist.uomdata\n        });\n      }\n      this.setState({ loading: false });\n    },\n    error =>{\n      this.setState({ loading: false });\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n\n  createSelectItems3 = optionvalue => {\n\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues\n    uomlistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.uomname}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItems = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'id': '1',\n    //     'itemname': 'Props'\n    //   },\n    //   {\n    //     'id': '2',\n    //     'itemname': 'MS Span'\n    //   },\n    //   {\n    //     'id': '3',\n    //     'itemname': 'MS Centering sheet'\n    //   },\n    //   {\n    //     'id': '4',\n    //     'itemname': 'Cuplock Vertical'\n    //   },\n    //   {\n    //     'id': '5',\n    //     'itemname': 'Cuoplock horizontal'\n    //   },\n    //   {\n    //     'id': '6',\n    //     'itemname': 'H Frame Scaffolding'\n    //   },\n    //   {\n    //     'id': '7',\n    //     'itemname': 'U Jack/ Base Jack'\n    //   },\n    //   {\n    //     'id': '8',\n    //     'itemname': 'Spigot pins'\n    //   },\n    //   {\n    //     'id': '9',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '10',\n    //     'itemname': 'pressed right cuplers'\n    //   },\n    //   {\n    //     'id': '11',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '12',\n    //     'itemname': 'Shttering clamps'\n    //   }\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    console.log(\"__MATERIAL_LIST_VALUES___\");\n    console.log(materiallistvalues);\n    materiallistvalues.filter((option, i) => {\n      if(option.masteritemtypename != \"\"){\n        if(option.masteritemtypename.split('')[0] == \"3\"){\n          items.push(\n            <option key={i} value={option.masteritemdescription}>\n              {option.masteritemdescription}\n            </option>\n          );\n        }\n      }\n   \n    });\n    return items;\n  };\n\n\n  createSelectItems2 = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'itemname': '50 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '6 mm MS Plate'\n    //   },\n    //   {\n    //     'itemname': 'Prop nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R sheet'\n    //   },\n    //   {\n    //     'itemname': 'Dia10 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': '65mm*6mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '75mm*75mm*8mm L Angle'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS span Bolt'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS Hexagonal nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R. Sheet'\n    //   },\n    //   {\n    //     'itemname': '25mm*25mm*5mm L angle.'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Top cup'\n    //   },\n    //   {\n    //     'itemname': 'Bottom cup'\n    //   },\n    //   {\n    //     'itemname': 'Dia 8 mm Rod'\n    //   },\n    //   {\n    //     'itemname': '20 NB H.R Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Ledger blade'\n    //   },\n    //   {\n    //     'itemname': 'locking pins'\n    //   },\n    //   {\n    //     'itemname': 'Dia 32 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': 'MS pLate'\n    //   },\n    //   {\n    //     'itemname': 'Cup nuts'\n    //   },\n    //   {\n    //     'itemname': 'dia 38 OD pipe'\n    //   },\n    //   {\n    //     'itemname': '40mm*40mm'\n    //   },\n    //   {\n    //     'itemname': '40mm*50mm'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm Ms flat'\n    //   }\n\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.masteritemdescription}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectunfinishedItems = optionvalue => {\n    let items = [];\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      if (option.masteritemtype.masteritemtypename !== optionvalue) {\n        items.push(\n          <option key={i} value={option.id}>\n            {option.masteritemtypename}\n          </option>\n        );\n      }\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        products: [...this.state.data.products, \"\"],\n        productsqty: [...this.state.data.productsqty, \"\"],\n        productsuom: [...this.state.data.productsuom, \"\"],\n        productsqtyinmeter: [...this.state.data.productsqtyinmeter, \"\"]\n      }\n    });\n  };\n  handleChange = (e, index) => {\n    this.state.data.products[index] = e.target.value;\n    const materialuom = this.state.materiallistvaluesObject[\n      this.state.data.products[index]\n    ];\n    this.state.data.productsqty[index] = \"1\";\n    this.state.data.productsuom[index] = materialuom.masteritemuom.uomname;\n    this.state.data.productsqtyinmeter[index] = \"\"\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        products: this.state.data.products,\n        productsuom: this.state.data.productsuom,\n        productsqty: this.state.data.productsqty,\n        productsqtyinmeter: this.state.data.productsqtyinmeter\n      }\n    });\n  };\n\n  ProductqtyhandleChange = (e, index) => {\n    console.log(index);\n    let arr = this.state.materiallistvalues.filter((item) =>{\n      return item.masteritemdescription == e.target.value\n    })\n    console.log(arr)\n    this.state.data.productsqty[index] = e.target.value;\n    this.state.data.productsweight[index] = \n    arr.length > 0 ? (arr[0].masteritemunitwt != 'undefined' && arr[0].masteritemunitwt != 'null' && arr[0].masteritemunitwt != '' ? arr[0].masteritemunitwt : 0) : 0\n    \n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, \n        productsqty: this.state.data.productsqty,\n        productsweight: this.state.data.productsweight\n      }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  ProductuomhandleChange = (e, index) => {\n    console.log(index);\n    this.state.data.productsuom[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsuom: this.state.data.productsuom }\n    });\n  };\n  \n  ProductqtyinmeterhandleChange = (e, index) => {\n    console.log(e.target.value);\n    this.state.data.productsqtyinmeter[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsqtyinmeter: this.state.data.productsqtyinmeter }\n    });\n  };\n  \n  removeClick = (e, index) => {\n    const removeProduct = { ...this.state.data };\n    const products = removeProduct.products;\n    const productsqty = removeProduct.productsqty;\n    const productsuom = removeProduct.productsuom;\n    const productsqtyinmeter = removeProduct.productsqtyinmeter;\n    const values = removeProduct.values;\n    products.splice(index, 1);\n    productsqty.splice(index, 1);\n    productsuom.splice(index, 1);\n    productsqtyinmeter.splice(index, 1);\n    values.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products, productsqty, productsuom,productsqtyinmeter, values }\n    });\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(\"product form data\");\n    console.log(this.state.data);\n    const products = this.state.data.products;\n    const productsqty = this.state.data.productsqty;\n    console.log(productsqty)\n    let productMaterials = [];\n    products.forEach(function (v, i) {\n      var obj = {};\n      obj.product_id = v;\n      obj.productqty = productsqty[i];\n      productMaterials.push(obj);\n    });\n\n    const data = { ...this.state.data, productMaterials };\n    delete data.products;\n    delete data.productsqty;\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            productname: \"\",\n            values: [\"\"],\n            products: [\"\"],\n            productsqty: [\"\"],\n            productsuom: [\"\"],\n            productsqtyinmeter: [\"\"]\n          },\n          materiallistvalues: this.initialState.materiallistvalues,\n          materiallistvaluesObject: this.initialState.materiallistvaluesObject\n        });\n        this.myFormRef.reset();\n\n      })\n      .catch(err => {\n        alert(\"Same product sub assembly is already added.\")\n        window.location.reload()\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  toggelbutton = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,uomlistvalues } = this.state;\n    console.log(\"__STATE_VALUE___DATA_\");\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Product detail is added successfully.</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className='small-font-size-bold'>Subassembly</ModalHeader>\n            <ModalBody >Subassembly is added successfully.</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggelbutton}>\n                Ok\n              </Button>{\" \"}\n\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.productname ? (\n          <Alert Label color=\"danger\">Product Name must be unique id.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Product Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"productname\" Label>Product Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"productname\"\n                      id=\"productname\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">select</option>\n          \n                      {this.createSelectItems(\"FinishedGoods\")}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={12}>\n                  <div>\n                    <div className=\"mg-20\">\n                      <Button color=\"info\" onClick={this.handleClick}>\n                        Add Component\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n\n              {data.values.map((value, index) => {\n                return (<Row key={index}>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qty+${index}`}>\n                        Sub assembly\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n\n                      <AvField\n                        Label\n                        type=\"select\"\n                        name=\"material_qty\"\n                        id={`Material-qty+${index}`}\n                        value={data.productsqty[index] || null}\n                        onChange={e =>\n                          this.ProductqtyhandleChange(e, index)\n                        }\n                      >\n                        <option value=\"\">select</option>\n             \n                        {this.createSelectItems2(\"\")}\n                      </AvField>\n                    </AvGroup>\n\n\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qtymeter+${index}`}>\n                        Quantity\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"text\"\n                      name=\"Material-qtymeter\"\n                      id={`Material-qtymeter+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsqtyinmeter[index]}\n                      onChange={e =>\n                        this.ProductqtyinmeterhandleChange(e, index)\n                      }\n                    >\n                     \n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-uom+${index}`}>\n                        UOM\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"Material-uom\"\n                      id={`Material-uom+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsuom[index]}\n                      onChange={e =>\n                        this.ProductuomhandleChange(e, index)\n                      }\n                    >\n                      <option value=\"\">Select unit</option>\n          \n                      {this.createSelectItems3(\"FinishedGoods\")}\n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  \n                  <Col sm={2}>\n                    <AvGroup style={{ marginTop: \"28px\" }}>\n                      <Button\n                        Label\n                        Label\n                        color='danger'\n                        type=\"button\"\n                        onClick={e => this.removeClick(e, index)}\n                      >\n                        -\n                  </Button>\n\n                    </AvGroup>\n\n                  </Col>\n                </Row>)\n              })}\n              {/* <div>\n                                    <button onClick={this.handleSubmit}>submit</button>\n                                </div> */}\n\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{paddingLeft: 15, paddingTop: 10}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader small-font-size\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.masteritemlistvalues\n    // masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductForm);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport { UOM_LIST } from \"../Services/types\";\nimport { uomListSchema } from \"../Schemas/schemas\";\n\nfunction uomListFetched(uomlist) {\n  return {\n    type: UOM_LIST,\n    uomlist\n  };\n}\n\nexport const getUomList = () => {\n  return dispatch => {\n    return api.uom.getUomDetails().then(uomlist => {\n      const uomlistvalue = uomlist.uomdata;\n      return dispatch(uomListFetched(normalize(uomlistvalue, [uomListSchema])));\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProductForm from \"./ProductForm/ProductForm\";\nimport { addproduct } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport { getUomList } from \"../../actions/uom\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass Product extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    //this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addproduct(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem  Label>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem  Label active>Add Subassembly</BreadcrumbItem>\n        </Breadcrumb>\n        <ProductForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  addproduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addproduct, getMasterItemList,getUomList }\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport axios from \"axios\";\n\nclass ViewProduct extends React.Component {\n  state = {\n    productlistvalue: \"\",\n    productMaterialslist: [],\n    productname: \"\"\n  };\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/product/getproduct/${this.props.match.params.id}`)\n      .then(res => {\n\n        console.log(res)\n        if (res.data.productlist.productdata.length > 0) {\n          let product = res.data.productlist.productdata[0]\n          let obj = {}, arr = []\n          const productname = product.productname;\n\n          for (var i = 0; i < product.productMaterial.length; i++) {\n            obj = {}\n            obj['materialitemtype'] = product.productname;\n            obj['materialname'] = product.productMaterial[i].productqty;\n            obj['materialuom'] = product.productsuom[i];\n            obj['productqty'] = product.productsqtyinmeter[i]\n            arr.push(obj)\n          }\n\n          this.setState({ 'productname': productname, 'productMaterialslist': arr });\n        }\n\n      },\n        error => {\n\n          alert(\"Server error\")\n        });\n\n    /* const productid = this.props.match.params.id;\n     const productlistvalue = this.props.productlistvalues[productid];\n     const productname = productlistvalue.productname.masteritemdescription;\n     const productMaterialslist = productlistvalue.productMaterial.map(\n       productMaterialData => {\n         let totalcost =\n           parseFloat(productMaterialData.productqty) *\n           parseFloat(productMaterialData.product_id.masteritemcostperunit);\n         let materialcostperunit =\n           productMaterialData.product_id.masteritemcostperunit;\n         return {\n           materialitemtype:\n             productMaterialData.product_id.masteritemtype.masteritemtypename,\n           materialname: productMaterialData.product_id.masteritemname,\n \n           materialdescription:\n             productMaterialData.product_id.masteritemdescription,\n \n           materialuom: productMaterialData.product_id.masteritemuom.uomname,\n           materialcostperunit:\n             materialcostperunit !== \"null\" ? materialcostperunit : \" \",\n           materialqty: productMaterialData.productqty,\n           totalcost: isNaN(totalcost) ? \" \" : totalcost\n         };\n       }\n     );\n     this.setState({ ...this.state, productMaterialslist, productname });*/\n  }\n  render() {\n    const { productMaterialslist, productname } = this.state;\n    let product;\n    if (productMaterialslist.length) {\n      product = productMaterialslist[0].materialitemtype;\n    }\n\n    const tablerows = productMaterialslist.map((itemlist, i) => {\n      return (\n        <tr key={i}>\n          {/* <td>{itemlist.materialitemtype}</td> */}\n          <td style={{textAlign:'left'}}>{itemlist.materialname}</td>\n          <td style={{textAlign:'left'}}>{itemlist.materialuom}</td>\n          <td style={{textAlign:'left'}}>{itemlist.productqty}</td>\n          \n          {/* <td>{itemlist.materialcostperunit}</td>\n          <td>{itemlist.materialqty}</td>\n          <td>{itemlist.totalcost}</td> */}\n        </tr>\n      );\n    });\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/viewproductlist\">View subassembly</Link>\n            </BreadcrumbItem>\n\n          </Breadcrumb>\n        </div>\n        {/* <h5>Product Name: {productname}</h5> */}\n        {/* <DataTable columnvalue={columnvalue} rowvalues={productMaterialslist} /> */}\n        <div style={{\n              marginBottom: 16}}>\n          <span\n            style={{\n              fontSize: 12,\n              fontWeight: 900,\n              marginRight: 16\n            }}>Product</span>\n          <span\n            style={{\n              fontSize: 12\n            }}>{product ? product : ''}</span>\n        </div>\n        <Table bordered style={{'width':'40%'}}>\n          <thead>\n            <tr>\n              {/* <th>Product Type</th> */}\n              <th>Subassembly</th>\n\n              <th>UOM</th>\n              <th>Quantity</th>\n              {/* (Meter) */}\n              {/* <th>Unit Cost</th>\n              <th>Item QTY</th>\n              <th>Total cost</th> */}\n            </tr>\n          </thead>\n          <tbody>{tablerows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ViewProduct);\n","import React from \"react\";\nimport { Alert, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass ViewProductList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    productlistvalues: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.dataHandler(true);\n  }\n  updateButton = id => {\n    let path = `/viewproduct/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const productlist = Object.values(props.productlistvalues);\n    const productlistvalues = productlist.map((productdata, i) => {\n      console.log(productdata)\n      return {\n        materialname: productdata.productname,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(productdata.id);\n            }}\n          >\n            View Sub assembly\n          </Button>\n        )\n      };\n    });\n    const count = productlistvalues.length;\n    this.setState({ ...this.state, count, productlistvalues });\n    this.dataHandler(false);\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading, count, productlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Product Name\",\n        field: \"productname\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"View\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 10\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Products</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        {count > 0 ? (\n          <DataTable columnvalue={columnvalue} \n          rowvalues={productlistvalues}\n          className=\"viewproductlist\" />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts }\n)(ViewProductList);\n","import { AvField, AvForm, AvGroup } from 'availity-reactstrap-validation';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Alert, Button, Card,\n  CardBody,\n  CardHeader, Col, Label, Modal, ModalBody,\n  ModalFooter, ModalHeader, Row\n} from 'reactstrap';\n\nclass CustomerForm extends React.Component {\n  state = {\n    data: {\n      customernumber: '',\n      customername: '',\n      customercontactnumber: '',\n      customergstnumber: '',\n      customeraddress1: '',\n      customeraddress2: '',\n      city: '',\n      pincode: '',\n      state: '',\n      country: '',\n      codate: new Date().getTime(),\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    sameAsBilling: false,\n    suppliercontactlistvalue: []\n  };\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.keys(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customernumber = count ? 1001 + count : 1001;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customernumber\n      }\n    });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        deliveryAddress: {\n          ...this.state.data.deliveryAddress,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n  sameAsBilling = e => {\n    let val = e.target.value === 'false' ? true : false;\n    this.setState({ ...this.state, sameAsBilling: val });\n    if (val) {\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          deliveryAddress: {\n            address1: this.state.data.customeraddress1,\n            address2: this.state.data.customeraddress2,\n            city: this.state.data.city,\n            pincode: this.state.data.pincode,\n            state: this.state.data.state,\n            country: this.state.data.country\n          }\n        }\n      });\n    }\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const {\n      data,\n      errors,\n      loading,\n      success,\n      visible,\n      sameAsBilling\n    } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is added successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color='danger' isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      value={data.customernumber.toString()}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customername'\n                      type='text'\n                      id='customername'\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Name'\n                        }\n                    \n                        // pattern: {\n                        //   value: '^[a-zA-Z ]+$',\n                        //   errorMessage: 'Please enter valid Supplier Name'\n                        // }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customercontactnumber'>Contact Number </Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customercontactnumber'\n                      type='text'\n                      id='customercontactnumber'\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer contact number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GSTN </Label>\n                    <AvField\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Billing Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress1'>Address 1</Label>\n                        <AvField\n                          name='customeraddress1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                      \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress2'>Address 2</Label>\n                        <AvField\n                          name='customeraddress2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Delivery Address */}\n              <Card>\n                <CardHeader>\n                  Delivery Address ({' '}\n                  <input\n                    type='checkbox'\n                    className='same_checkbox'\n                    value={sameAsBilling}\n                    name='same'\n                    onChange={this.sameAsBilling}\n                  ></input>{' '}\n                  Same as billing address)\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                         \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain atleast 1 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              <div className='mg-20'>\n                <Button\n                  color='primary'\n                  disabled={loading}\n                  className='lgn-loader'\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{' '}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CustomerForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col\n} from \"reactstrap\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    data: {\n      searchcustomername: '',\n      searchfromdate: null,\n      searchtodate: null\n    },\n    count: 0,\n    customerlistvalues: [],\n    backupcustomerlistvalues: [],\n    fromdatetimestamp: '',\n    todatetimestamp: '',\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n  };\n\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        // id: customerdata.id,\n        // customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber != '' ? customerdata.customercontactnumber : '-',\n        codate: customerdata.codate != undefined ? customerdata.codate : '-',\n\n        Transaction: (\n          <Button\n            // style={{ fontSize: '0.8rem' }}\n            Label\n            color=\"primary\"\n            onClick={() => {\n              localStorage.setItem('customername', customerdata.customername)\n              this.getTransaction(customerdata.id);\n            }}\n          >\n            Transaction\n          </Button>\n        )\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, backupcustomerlistvalues: customervalues, count });\n    this.setState({ customerlistvalues: customervalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n\n  getTransaction = id => {\n    this.props.history.push(`/transaction/${id}`);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n\n  onChange = e => {\n    console.log(e)\n    this.setState({\n      //data: { ...this.state.data, [e.target.name]: e.target.value }\n      data: {\n        searchcustomername: e.target.value,\n        searchfromdate: null,\n        searchtodate: null\n      },\n      fromdatetimestamp: '',\n      todatetimestamp: ''\n    }, () => {\n      this.filterCustomer(this.state.data.searchcustomername)\n    });\n\n  };\n\n  getDateByMMDDYYYY(date) {\n    let searchdate = date != '-' ?\n      (new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n      + \"/\" +\n      (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n  handleDateChanges(dateName, dateValue) {\n\n    let { data, fromdatetimestamp, todatetimestamp } = this.state;\n    if (dateName === 'startDateTime') {\n      data.searchfromdate = dateValue;\n      fromdatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    } else {\n      data.searchtodate = dateValue;\n      todatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    }\n    data.searchcustomername = ''\n    this.setState({\n      data,\n      fromdatetimestamp,\n      todatetimestamp\n    }, () => {\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        this.filterBydates(this.state.fromdatetimestamp, this.state.todatetimestamp)\n      }\n      else {\n        this.initializeCustomers();\n      }\n    });\n  };\n\n  filterCustomer(ev) {\n    this.initializeCustomers();\n    setTimeout(() => {\n      const val = ev\n      if (val && val.trim() != '') {\n        let filtereddata = this.state.customerlistvalues.filter((item) => {\n          return (item.customername.toLowerCase().indexOf(val.toLowerCase()) > -1\n          )\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  filterBydates(date1, date2) {\n    this.initializeCustomers();\n    setTimeout(() => {\n\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        let filtereddata = this.state.customerlistvalues.filter((customer) => {\n          let comparedate =\n            (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1)\n            + \"/\" + (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate())\n            + \"/\" + new Date(parseInt(customer.codate)).getFullYear()\n\n          return (new Date(this.getDateByMMDDYYYY(comparedate)).getTime() >= date1 && new Date(this.getDateByMMDDYYYY(comparedate)).getTime() <= date2)\n\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  initializeCustomers() {\n    this.setState({\n      customerlistvalues: this.state.backupcustomerlistvalues\n    })\n  }\n\n\n  render() {\n    const { count, customerlistvalues, data, loading } = this.state;\n\n    const customerBlock = customerlistvalues.map(customer => {\n      customer['codate2'] = customer.codate != '-' ? (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate()) +\n        \"/\" + (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1) + \"/\" + new Date(parseInt(customer.codate)).getFullYear() : '-'\n      return (\n        <tr key={customer.customernumber}>\n\n          <td style={{'width' : '15%'}}>{customer.customername}</td>\n          {/* <td style={{ textAlign: 'center' }}>{customer.customernumber}</td> */}\n          <td style={{ textAlign: 'center','width' : '12%' }}>{customer.customercontactnumber}</td>\n\n          <td style={{ textAlign: 'center','width' : '8%' }}>{customer.Transaction}</td>\n        </tr>\n      )\n    });\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            {/* <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            /> */}\n\n            {/* <Card>\n           \n            <CardBody> */}\n            <Row>\n              <Col sm={3}>\n                <Label className='small-font-size' for=\"searchcustomername\">Search Customer Name</Label>\n\n\n                <input\n                  name=\"searchcustomername\"\n                  type=\"text\"\n                  id=\"searchcustomername\"\n                  className=\"form-control small-font-size\"\n                  value={data.searchcustomername}\n\n                  onChange={this.onChange}\n                />\n\n              </Col>\n\n\n\n              {/* <Col sm={3}>\n                  <Label for=\"searchfromdate\">Transaction from date</Label>\n                \n\n                     <DatePicker\n                    selected={data.searchfromdate}\n     \n                    onChange={date => this.handleDateChanges('startDateTime', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchfromdate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n                 <Col sm={3}>\n                  <Label for=\"searchtodate\">Transaction to date</Label>\n                 \n                  \n                  <DatePicker\n                    selected={data.searchtodate}\n                    onChange={date => this.handleDateChanges('endDateTime', date)}\n                    className=\"form-control\"\n                    isClearable={true}\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchtodate\"\n                  />\n                 \n                </Col> */}\n\n            </Row>\n            {/* </CardBody>\n                </Card> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{ 'marginTop': '10px','width': '40%' }}>\n              <thead>\n                <tr>\n\n                  <th style={{'width': '15%'}}>Customer Name</th>\n                  {/* <th>Customer Number</th> */}\n                  <th style={{'width': '12%'}}>Contact</th>\n                  <th style={{'width': '8%'}}>Transaction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerBlock}\n              </tbody>\n            </table>\n\n\n\n\n          </div>\n        ) : (\n            <div>\n              <Alert color=\"info\" Label>Loading Customer data</Alert>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import axios from \"axios\";\n\nexport default {\n  customer: {\n    addcustomer: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/customer/addcustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.customerdata;\n        });\n    },\n    getcustomer: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customer/getcustomer`)\n        .then(res => {\n          return res.data.customerlist;\n        });\n    },\n    updatecustomer: data => {\n      return axios\n        .patch(`${process.env.REACT_APP_BASE_URL}/customer/updatecustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  customerTransaction: {\n    getcustomerTransaction: (id) => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/${id}`)\n        .then(res => {\n          \n          return res.data.customerlist;\n        });\n    },\n  \n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/customerapi\";\nimport {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED,\n  CUSTOMERTRANSACTION_FETCHED\n} from \"../Services/types\";\nimport { customerListSchema,customerTransactionSchema } from \"../Schemas/schemas\";\n\nconst customerCreated = customerlist => {\n  return {\n    type: ADD_CUSTOMER_CONTACT,\n    customerlist\n  };\n};\n\nconst customerListFetched = customerlist => {\n\n  return {\n    type: CUSTOMER_CONTACT_FETCHED,\n    customerlist\n  };\n};\n\nconst customerTransactionFetched = customerlist => {\n\n  return {\n    type: CUSTOMERTRANSACTION_FETCHED,\n    customerlist\n  };\n};\n\nexport const addCustomerContact = data => {\n  return dispatch => {\n    return api.customer.addcustomer(data).then(customerlistvalues => {\n      return dispatch(\n        customerCreated(normalize(customerlistvalues, customerListSchema))\n      );\n    });\n  };\n};\n\nexport const getCustomerList = () => {\n  return dispatch => {\n    return api.customer.getcustomer().then(customerlist => {\n      const customerlistvalue = customerlist.customerdata;\n      return dispatch(\n        customerListFetched(normalize(customerlistvalue, [customerListSchema]))\n      );\n    });\n  };\n};\n\nexport const getCustomerTransaction = (id) => {\n  return dispatch => {\n    return api.customerTransaction.getcustomerTransaction(id).then(customerlist => {\n      const customertransationvalues = customerlist.customerdata;\n      console.log(customertransationvalues)\n      if(customertransationvalues.length != 0){\n        return dispatch(\n          customerTransactionFetched(normalize(customertransationvalues, [customerTransactionSchema]))\n        );\n      }\n      // console.log(normalize(customertransationvalues, [customerTransactionSchema]))\n\n    });\n  };\n};\n\nexport const updateCustomerContact = data => {\n  return dispatch => {\n    return api.customer.updatecustomer(data).then(customerlistvalues => {\n      return customerlistvalues;\n      // return dispatch(\n      //   customerCreated(normalize(customerlistvalues, customerListSchema))\n      // );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport AddCustomerForm from \"./AddCustomer/CustomerForm/CustomerForm\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass Customer extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddCustomerForm submit={this.submit} />\n        </div>\n        {/* <div>\n          <ViewCustomerList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n    getCustomerTransaction\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\n\n\nclass Transaction extends React.Component {\n  \n  state = {\n    data: {\n      enquirydate:null,\n      quotationdate:null,\n      podate:null\n    },\n    enquirytimestamp:null,\n    quotationtimestamp:null,\n    podatetimestamp:null,\n    userid : this.props.match.params.id,\n    loading: false,\n    count:0,\n    success: false,\n    message:'',\n    ponum:'',\n    podate:'',\n    customerName:localStorage.getItem('customername') !=null ? localStorage.getItem('customername') : '',\n    transactionID:'',\n    customertransationvalues:[],\n    backupcustomertransationvalues:[]\n  };\n  componentDidMount = () => {\n    // this.props.match.params.id\n    // 5d7245b928e146194b806e38\n    \n    this.getTransaction(this.props.match.params.id);\n  };\n\n  componentWillReceiveProps(props) {\n    let customervalues = Object.values(props.customertransationvalues).map(customerdata => {\n      return {\n        customerid: customerdata.customerid,\n        Transactionhistory: customerdata.Transactionhistory,\n        id:new Date().getTime()\n      };\n    });\n    if(customervalues.length > 0){\n      customervalues = customervalues.filter((item) =>{\n        return item.customerid == this.props.match.params.id\n      })\n      this.setState({ \n        customertransationvalues: customervalues,\n        backupcustomertransationvalues:customervalues,\n        count:customervalues.length\n      }, () => {\n        console.log(JSON.stringify(this.state.backupcustomertransationvalues))\n      })\n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  \n  initializeTransactions = () => {\n    this.setState({\n      customertransationvalues:this.state.backupcustomertransationvalues\n    },() =>{\n      console.log(this.state.backupcustomertransationvalues)\n    })\n  }\n\n  newEnquiry(){\n    localStorage.setItem('ids',this.state.userid)\n    this.setState({ success: true, message:'Are you sure want to add new enquiry' });\n  }\n\n  getTransaction(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n    .then(res => {\n      this.dataHandler(false)\n      if(res.data.customerlist.customerdata.length > 0){\n        let customervalues = res.data.customerlist.customerdata;\n        if(customervalues.length > 0){\n          customervalues = customervalues.filter((item) =>{\n            return item.customerid == this.props.match.params.id\n          })\n          this.setState({ customertransationvalues: customervalues,\n            backupcustomertransationvalues:customervalues,\n            count:customervalues.length}, () => {\n            console.log(JSON.stringify(this.state.customertransationvalues))\n          })\n        }\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  addenquiry(){\n    this.dataHandler(true)\n    let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) + \n    \"/\" + ( new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n     axios\n    .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`,\n    {\n      \"customerid\":this.state.userid,\n      \"enq_Date\" : date\n    })\n    .then(res => {\n      this.getTransaction(this.state.userid)\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  poreceived = value =>{\n    this.setState({\n      transactionID:value._id,\n      ponum:'',\n      podate:''\n    },() =>{\n      this.setState({ success: true, message:'update transaction' });\n    })\n  }\n\n  updatePO = () => {\n    if(this.state.ponum != '' && this.state.podate != ''){\n      let podates = this.state.podate.split('-')[2] + '/' + this.state.podate.split('-')[1] + '/' + this.state.podate.split('-')[0]\n      let obj = {}\n      obj['_id'] = this.state.transactionID\n      obj['po'] = podates\n      obj['ponum'] = this.state.ponum\n      this.dataHandler(true)\n      axios\n      .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n      .then(res => {\n        this.toggle()\n        this.getTransaction(this.state.userid)\n      },\n      error =>{\n        this.dataHandler(false)\n        this.toggle()\n        this.setState({ success: false, message:'Server error.' });\n      });\n    }\n    else\n      this.toggle()\n  }\n\n  onChange1 = e => {\n    this.setState({\n      'ponum' : e.target.value\n    });\n  }\n\n  onChange2 = e => {\n    console.log(e.target.value)\n    this.setState({\n      'podate' : e.target.value\n    });\n  }\n\n  getDateByMMDDYYYY(date){\n    let searchdate = date != '-' ? \n\n    (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" +\n    ( new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n    + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n    \n  handleDateChanges(dateName, dateValue) {\n\n    let { data,enquirytimestamp,quotationtimestamp,podatetimestamp } = this.state;\n    if (dateName === 'enquirydate') {\n      data.enquirydate = dateValue;\n      enquirytimestamp = this.getDateByMMDDYYYY(dateValue)\n    }\n    this.setState({\n      data,\n      enquirytimestamp\n    }, () => {\n      if (this.state.data.enquirydate != null) {\n        this.filterBydates()\n      }\n      else{\n        this.initializeTransactions();\n      }\n    });\n  };\n\n  filterBydates(){\n    this.initializeTransactions();\n    setTimeout(() => {\n        let filtereddata = this.state.customertransationvalues.filter((item) => {\n            return (this.state.enquirytimestamp != null && item.enq_Date == this.state.enquirytimestamp)\n            \n        })\n        this.setState({\n          customertransationvalues:filtereddata\n        })\n    })\n  }\n\n  render() {\n    let modaldata;\n\n    const { customertransationvalues,loading,count,success,message,data,customerName } = this.state;\n    if(message == 'update transaction' && success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Add customer PO</ModalHeader>\n        <ModalBody>\n          <input type=\"text\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.ponum} style={{'marginBottom': '15px'}} onChange={this.onChange1}/>\n          <input type=\"date\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.podate} onChange={this.onChange2}/>\n        </ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={this.updatePO}>\n            Update\n          </Button>\n        </ModalFooter>\n      </Modal>\n      )\n    }\n    else if(message == 'Server error.' && !success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Transaction</ModalHeader>\n        <ModalBody>{this.state.message}</ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n      )\n    }\n\n\n\n    const customerTransactionBlock = customertransationvalues.map((customer,index) => {\n      \n      let enquiry = '',quote = '',PO=(<td style={{textAlign:'center'}}>---</td>),invoice=(<td style={{textAlign:'center'}}>---</td>),dc=(<td style={{textAlign:'center'}}>---</td>)\n      enquiry = customer.enq_Date !=undefined ? (<td style={{textAlign:'center'}}> {customer.enq_Date}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      quote = customer.quotation !=undefined && customer.quotation != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.Qno} </b> <br/>{customer.quotation}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      PO = customer.po !=undefined && customer.po != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.ponum} </b> <br/> {customer.po}</td>) \n      : (<td style={{textAlign:'center'}}> \n           Customer PO not reveived<br/>\n           <Button color=\"primary\" onClick={() => this.poreceived(customer)} style={{fontSize: '12px'}}>\n            Add customer PO\n          </Button>\n      </td>)\n\n      if(customer.quotation == ''){\n        PO = (<td style={{textAlign:'center'}}>---</td>)\n      }\n\n      \n      return (\n        \n        <tr>\n          {/* <td></td>\n          {enquiry} */}\n          {quote}\n          {PO}\n          {invoice}\n          {dc}\n\n          </tr>\n             \n      )\n \n    })\n\n\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerlist\">CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{customerName}</BreadcrumbItem>\n        </Breadcrumb>\n     \n\n            {modaldata}\n \n        <h5 style={{ 'fontWeight': 'bold','margin': '15px'}}>{count} transaction found.</h5>\n        {customertransationvalues.length > 0 ?\n        (\n\n        <div>\n{/*           \n          <Row style={{ 'width': '75%','marginLeft': '9%'}}>\n                <Col sm={3} >\n                    <Label for=\"enquirydate\">Search enquiry date</Label>\n                    \n\n                      <DatePicker\n                    selected={data.enquirydate}\n\n                    onChange={date => this.handleDateChanges('enquirydate', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"enquirydate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n        \n\n                \n\n                </Row> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{'marginTop':'10px', 'width': '75%','marginLeft': '10%','background':'#fff'}}>\n\n              <tr>\n                {/* <th></th>\n                <th>Enquiry</th> */}\n                <th>Quotation</th>\n                <th>PO</th>\n                <th>Invoice</th>\n                <th>Delivary challan</th>\n                </tr>\n                {customerTransactionBlock}\n              </table>\n          </div>\n        ) : null\n       }\n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    customertransationvalues: state.customertransationvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getCustomerTransaction }\n)(Transaction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateCustomerForm extends React.Component {\n  state = {\n    data: {\n      id: \"\",\n      customernumber: \"\",\n      customername: \"\",\n      customercontactnumber: \"\",\n      customergstnumber: \"\",\n      customeraddress1: \"\",\n      customeraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    suppliercontactlistvalue: []\n  };\n  componentDidMount() {\n    const id = this.props.id;\n    const data = this.props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const data = props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({ ...this.state, data: {\n      ...this.state.data,\n      deliveryAddress:{\n        ...this.state.data.deliveryAddress,\n        [e.target.name] : e.target.value\n      }\n    } });\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success, visible } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is Updated successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color=\"danger\" isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customernumber\"\n                      type=\"number\"\n                      id=\"customernumber\"\n                      value={data.customernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Number\"\n                        },\n    \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customername\"\n                      type=\"text\"\n                      id=\"customername\"\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Name\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z ]+$\",\n                          errorMessage: \"Please enter valid Supplier Name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customercontactnumber\">Contact Number </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customercontactnumber\"\n                      type=\"text\"\n                      id=\"customercontactnumber\"\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer contact number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage:\n                            \"Your phone number must be composed only with numbers\"\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            \"Your phone number must be between 10 and 12 numbers\"\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            \"Your phone number be between 10 and 12 numbers\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GSTN </Label>\n                    <AvField\n                      name=\"customergstnumber\"\n                      type=\"text\"\n                      id=\"customergstnumber\"\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress1\">Address 1</Label>\n                        <AvField\n                          name=\"customeraddress1\"\n                          type=\"text\"\n                          id=\"customeraddress1\"\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress2\">Address 2</Label>\n                        <AvField\n                          name=\"customeraddress2\"\n                          type=\"text\"\n                          id=\"customeraddress2\"\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"city\">City</Label>\n                        <AvField\n                          name=\"city\"\n                          type=\"text\"\n                          id=\"city\"\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid city Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                        <AvField\n                          name=\"pincode\"\n                          type=\"text\"\n                          id=\"pincode\"\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                \"Pincode should contain atleast 6 characters\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                \"Pincode should contain between 6 to 10 characters\"\n                            },\n                            pattern: {\n                              value: \"^[0-9]+$\",\n                              errorMessage: \"Please enter valid PinCode\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"state\">State</Label>\n                        <AvField\n                          name=\"state\"\n                          type=\"text\"\n                          id=\"state\"\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid State Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"country\">Country</Label>\n                        <AvField\n                          name=\"country\"\n                          type=\"text\"\n                          id=\"country\"\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid Country Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                {/* Delivery Address */}\n                {/* Delivery Address */}\n              <Card>\n                <CardHeader>Delivery Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              </Card>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Update\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{\" \"}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateCustomerForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport UpdateCustomerForm from \"./UpdateCustomer/CustomerForm/UpdateCustomerForm\";\nimport {\n  updateCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader\n} from \"reactstrap\";\n\nclass Customer extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getCustomerList();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer List</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n\n          <UpdateCustomerForm submit={this.submit} id={id} />\n\n           \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\n\nclass ViewCustomerTable extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Link to=\"/crmlist\">CRM</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem active>Customer Transaction</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(ViewCustomerTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    count: 0,\n    customerlistvalues: []\n  };\n  componentWillReceiveProps(props) {\n    let customerlistvalues = Object.values(props.customerlistvalues);\n    //customerlistvalues= customerlistvalues.sort((a, b) => b.customernumber.toString().toLowerCase().localeCompare(a.customernumber.toString().toLowerCase()));\n    console.log(customerlistvalues)\n    customerlistvalues.sort(function(a, b){\n      return parseInt(b.customernumber) - parseInt(a.customernumber);\n    });\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber,\n        customergstnumber: customerdata.customergstnumber,\n        customeraddress1: customerdata.customeraddress1 != '' ? customerdata.customeraddress1 : '-',\n        customeraddress2: customerdata.customeraddress2 != '' ? customerdata.customeraddress2 : '-',\n        city: customerdata.city != '' ? customerdata.city : '-',\n        pincode: customerdata.pincode != '' ? customerdata.pincode : '-',\n        state: customerdata.state != '' ? customerdata.state : '-',\n        country: customerdata.country != '' ? customerdata.country : '-',\n        view: (\n          <Button\n            Label\n            // style={{ fontSize: '0.8rem' }}\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(customerdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, count });\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { count, customerlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Customer Number\",\n        field: \"customernumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Name\",\n        field: \"customername\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Contact\",\n        field: \"customercontactnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"GST Number\",\n        field: \"customergstnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address1\",\n        field: \"customeraddress1\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address2\",\n        field: \"customeraddress2\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"City\",\n        field: \"city\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Pincode\",\n        field: \"pincode\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"State\",\n        field: \"state\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Country\",\n        field: \"country\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n    return (\n      <div className=\"mg-t-20\">\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCustomerList } from \"../../../actions/customerContact\";\nimport ViewCustomerList from \"./ViewCustomerList\";\n\nclass CustomerInfo extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer Information</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(CustomerInfo);\n","import axios from \"axios\";\n\nexport default {\n  quotation: {\n    addquotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/addquotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    updatequotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/updatequotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    getquotation: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/quotation/getquotation`)\n        .then(res => {\n          return res.data.quotationlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/quotationapi\";\nimport { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\nimport { quotationListSchema } from \"../Schemas/schemas\";\n\nconst quotationCreated = quotationlist => {\n  return {\n    type: ADD_QUOTATION,\n    quotationlist\n  };\n};\n\nconst quotationFetched = quotationlist => {\n  return {\n    type: QUOTATION_FETCHED,\n    quotationlist\n  };\n};\n\nexport const addquotation = data => {\n  return dispatch => {\n    return api.quotation.addquotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\nexport const updatequotation = data => {\n  return dispatch => {\n    return api.quotation.updatequotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getquotation = () => {\n  return dispatch => {\n    return api.quotation.getquotation().then(quotationlist => {\n      const quotationlistvalues = quotationlist.quotationdata;\n      return dispatch(\n        quotationFetched(normalize(quotationlistvalues, [quotationListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { searchquotation } from \"../../../../actions/quotation\";\n\nclass CustomerQuotationList extends React.Component {\n  componentDidMount() {\n    const customerid = this.props.match.params.id;\n    this.props\n      .searchquotation(customerid)\n      .then(data => {})\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer list</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer status</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { searchquotation }\n)(CustomerQuotationList);\n","import { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Alert, Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nclass AddYearForm extends React.Component {\r\n  state = {\r\n    data: {\r\n      addyear: \"\",\r\n      updateyear: \"\",\r\n      updateid: \"\",\r\n    },\r\n    exists: false,\r\n    errors: {},\r\n    loading: false,\r\n    success: false,\r\n    visible: false,\r\n    updated: false,\r\n    suppliercontactlistvalue: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ loading: true });\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\r\n      (res) => {\r\n        if(res.data.year) {\r\n          this.setState({\r\n            ...this.state,\r\n            data: {\r\n              ...this.state.data,\r\n              updateid: res.data.year._id,\r\n              updateyear: res.data.year.currentyear\r\n            },\r\n          });\r\n          this.setState({ exists: true });\r\n        }\r\n        this.setState({ loading: false });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: {\r\n            ...this.state.errors,\r\n            error,\r\n          },\r\n          loading: false,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n  handleValidSubmit = () => {\r\n    this.setState({ loading: true });\r\n    const { data } = this.state;\r\n    console.log(JSON.stringify(data));\r\n    this.props\r\n      .submit(data)\r\n      .then((data) => {\r\n        this.setState({ success: true, loading: false, errors: {} });\r\n        this.onShowAlert();\r\n        this.myFormRef.reset();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ errors: err.response.data.errors, loading: false });\r\n        this.onShowAlert();\r\n      });\r\n  };\r\n\r\n  onShowAlert = () => {\r\n    this.setState({ visible: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ visible: false });\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ ...this.state, success: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, errors, loading, success, exists, visible } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {!!success ? (\r\n            // <Alert color=\"info\" isOpen={visible}>\r\n            //   Customer is added successfully.\r\n            // </Alert>\r\n            <Modal\r\n              isOpen={success}\r\n              toggle={this.toggle}\r\n              className={this.props.className}\r\n            >\r\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\r\n              <ModalBody>Year Added successfully</ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>\r\n                  Ok\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={(el) => (this.myFormRef = el)}\r\n        >\r\n          <div>\r\n            {!!errors.global ? (\r\n              <Alert color=\"danger\">{errors.global}</Alert>\r\n            ) : null}\r\n          </div>\r\n          {!!exists ? (\r\n            <Card>\r\n              <CardHeader>Update Year</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Update Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"updateyear\"\r\n                        type=\"text\"\r\n                        placeholder={data.updateyear.toString()}\r\n                        id=\"addyear\"\r\n                        value={data.updateyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>AddYear</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Add Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"addyear\"\r\n                        type=\"text\"\r\n                        placeholder=\"ex: 2020-21\"\r\n                        id=\"addyear\"\r\n                        value={data.addyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </AvForm>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(AddYearForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport {\r\n  addYear, updateYear\r\n} from \"../../../actions/financialYearAdd\";\r\nimport CustomLoader from \"../../../Components/loader/loader\";\r\nimport AddYearForm from \"./AddYear/AddYearForm/AddYearForm\";\r\n\r\nclass AddFinancialYear extends React.Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  submit = data => {\r\n    if(data.updateid !== \"\") {\r\n      this.dataHandler(true);\r\n    return this.props\r\n      .updateYear(data)\r\n      .then(data => {\r\n        this.dataHandler(false);\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        this.dataHandler(false);\r\n        throw err;\r\n      });    \r\n    }\r\n    else {\r\n      this.dataHandler(true);\r\n      return this.props\r\n        .addYear(data)\r\n        .then(data => {\r\n          this.dataHandler(false);\r\n          return data;\r\n        })\r\n        .catch(err => {\r\n          this.dataHandler(false);\r\n          throw err;\r\n        });\r\n    }\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"container mg-t-20\">\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/admin_dashboard\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/inventory_page\">Setup</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/financialYearAdd\">Add Year</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Add Year</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddYearForm submit={this.submit} />\r\n        </div>\r\n        {/* <div>\r\n          <ViewCustomerList />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { addYear,updateYear }\r\n)(AddFinancialYear);\r\n","import api from \"../Services/api\";\r\n\r\n\r\n export const addYear = data => {\r\n    return dispatch => {\r\n      return api.year.addyear(data);\r\n    }\r\n  }\r\n\r\n  export const updateYear = data => {\r\n    return dispatch => {\r\n      return api.year.updateyear(data);\r\n    }\r\n  }","import axios from 'axios';\n\nexport default {\n  challan: {\n    addchallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/addchallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    updatechallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/updatechallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    \n    getchallan: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n        .then(res => {\n          return res.data.challanlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport { challanListSchema } from \"../Schemas/schemas\";\nimport api from \"../Services/challanapi\";\nimport { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nconst challanCreated = challanlist => {\n  return {\n    type: ADD_CHALLAN,\n    challanlist\n  };\n};\n\nconst challanFetched = challanlist => {\n  return {\n    type: CHALLAN_FETCHED,\n    challanlist\n  };\n};\n\nexport const addChallan = data => {\n  return dispatch => {\n    return api.challan.addchallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\nexport const updateChallan = data => {\n  return dispatch => {\n    return api.challan.updatechallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getChallan = () => {\n  return dispatch => {\n    return api.challan.getchallan().then(challanlist => {\n      console.log(challanlist)\n      const challanlistvalues = challanlist.challandata;\n      console.log(challanlistvalues)\n      return dispatch(\n        challanFetched(normalize(challanlistvalues, [challanListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass ChallanForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [],\n        itemlocation: [null],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      },\n      customerdetail: {\n        id: \"\",\n        customername: \"\"\n      },\n      deliverychallanno: '',\n      toaddress: '',\n      mobilenumber: '',\n      site: '',\n      date: new Date(),\n      ponumber: '',\n      podate: new Date(),\n      vehiclenumber: '',\n      gstno: '',\n      otherreference: '',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    customerlistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:'',\n    counts:1\n  };\n\n  componentDidMount() {\n  \n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        customerlistvalues,\n        customerobjects,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data\n        }\n      },() =>{\n        if (this.props.ID != undefined) {\n          this.getDCDetails(this.props.ID)\n        }\n        else{\n          //if(Object.keys(this.props.challanlistvalues).length == 0){\n            this.getChallandata()\n          //}\n        }\n      });\n    \n  }\n\n  getChallandata(){\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n      // if (res.data.challanlist.challandata.length > 0) {\n         \n        let deliverychallanno =\n        res.data.challanlist.challandata.length > 0 ? 1 + res.data.challanlist.challandata.length : 1;\n\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        });\n      //}\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n  getDCDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/challan/getsinglechallan/${id}`)\n      .then(res => {\n\n        console.log(res.data)\n         if (res.data.challanlist.challandata.length > 0) {\n           let founddata = res.data.challanlist.challandata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.deliverychallanno = founddata[0].deliverychallanno;\n           newState.data.toaddress = founddata[0].toaddress;\n           newState.data.site = founddata[0].site;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.ponumber = founddata[0].ponumber;\n           newState.data.podate =  new Date(founddata[0].podate);\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.otherreference = founddata[0].otherreference;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.mobilenumber = founddata[0].mobilenumber ? founddata[0].mobilenumber : ''\n           newState.data.customerdetail.id = founddata[0].customerid ? founddata[0].customerid._id : '';\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n          \n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState);\n\n         \n         \n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.ID == undefined){\n      const materialoptionlistvalues = Object.values(\n        props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n      const masteritemlistvaluesobject = props.masteritemlistvalues;\n      const currencylistvalues = Object.values(props.currencylistvalues);\n      const uomlistvalues = Object.values(props.uomlistvalues);\n      const locationlistvalue = Object.values(props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const challanlistvalues = Object.keys(this.props.challanlistvalues);\n      \n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      let deliverychallanno =\n        challanlistvalues.length > 0 ? 1 + challanlistvalues.length : 1;\n  \n        this.setState({\n          ...this.state,\n          masteritemlistvalues,\n          masteritemlistvaluesobject,\n          materialoptionlistvalues,\n          currencylistvalues,\n          locationlistvalue,\n          customerlistvalues,\n          customerobjects,\n          uom: uomlistvalues,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        },()=>{\n          console.log(this.state.customerlistvalues)\n        });\n    }\n \n    \n\n      \n \n  }\n\n  handleChallanDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: date\n      }\n    });\n  };\n\n  handlePODate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        podate: date\n      }\n    });\n  };\n\n  handleChange = e => {\n    console.log( e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChange2 = e => {\n\n    let selected_id = e.target ? e.target.value : e\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n\n    let toaddress = customerdetail ? customerdetail.customeraddress1 +\n    \" \" +\n    customerdetail.customeraddress2 +\n    \" \" +\n    customerdetail.city +\n    \" \" +\n    customerdetail.state +\n    \" \" +\n    customerdetail.country +\n    \" \" +\n    customerdetail.pincode : ''\n\n  \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail,\n        toaddress\n      }\n    },()=>{\n      localStorage.setItem('custname',this.state.data.customerdetail.customername)\n      console.log(this.state.data.customerdetail)\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n\n  createSelectcustomer = () => {\n    let items = [];\n    let customerlistvalues = this.state.customerlistvalues;\n    console.log(this.state.customerlistvalues)\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.target ? e.target.value : e;\n    console.log(this.state.masteritemlistvaluesobject)\n    console.log(selected_id)\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //   : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        \n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        }\n  \n        this.setState({\n  \n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          this.totalValue();\n        });\n      }\n      \n      }\n\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    const remarks = removeItem.selectedItemlist.remarks;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    remarks.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks\n        }\n      }\n    },() =>{\n      console.log(this.state.data.selectedItemlist)\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    console.log(this.state.data.customerdetail)\n    const { supplierdetail, selectedItemlist,customerdetail } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    data['customerdetail'].customername = localStorage.getItem('custname')\n    \n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    \n\n    this.props\n      .submit(data)\n      .then(() => {\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n        }\n\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n\n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n          }\n        \n      });\n  };\n\n  \n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    const customerID = data.customerdetail ? (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n      value={data.customerdetail.id}\n      required={true}\n      onChange={e => this.handleChange2(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    ) : (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n  \n      required={true}\n      onChange={e => this.handleChange2(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    )\n    return (\n      <div>\n\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Delivery Challan</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Delivery Challan</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallanno'>DC</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='deliverychallanno'\n                      type='text'\n                      id='deliverychallanno'\n                      value={data.deliverychallanno || null}\n                      onChange={this.handleChange}\n                 \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To address </Label>\n                    <AvField\n                      Label\n                      name='toaddress'\n                      type='text'\n                      id='toaddress'\n                      value={data.toaddress}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='site'>Site</Label>\n                  <AvField\n                    Label\n                    name='site'\n                    type='text'\n                    id='site'\n                    value={data.site || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='mobilenumber'>Mobile No</Label>\n                  <AvField\n                    Label\n                    name='mobilenumber'\n                    type='text'\n                    id='mobilenumber'\n                    value={data.mobilenumber || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='quotationno'>Date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChallanDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>PO no</Label>\n                    <AvField\n                      Label\n                      type='text'\n                      name='ponumber'\n                      id='ponumber'\n                      value={data.ponumber || null}\n                      onChange={e => this.handleChange(e)}\n                    ></AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='podate'>PO Date</Label>\n                  <DatePicker\n                    selected={data.podate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handlePODate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='podate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='vehiclenumber'>Vehicle Number</Label>\n                    <AvField\n                      Label\n                      name='vehiclenumber'\n                      type='text'\n                      id='vehiclenumber'\n                      value={data.vehiclenumber}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      Label\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='otherreference'>Other reference</Label>\n                    <AvField\n                      Label\n                      name='otherreference'\n                      type='text'\n                      id='otherreference'\n                      value={data.otherreference}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              {/* className='purchaseorder-item-row' */}\n              <div >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                readOnly\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                \n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                            \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                readOnly\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] || null\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='remarks'>Remarks</Label>\n                              <AvField\n                                Label\n                                name='remarks'\n                                type='text'\n                                id='remarks'\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChallanForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addChallan } from '../../../../actions/challan';\nimport { getChallan } from '../../../../actions/challan';\nimport { updateChallan } from '../../../../actions/challan';\n\nimport ChallanForm from './ChallanForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddChallan extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n\n      return this.props\n      .updateChallan(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n        .addChallan(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n    }\n  \n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Challan</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ChallanForm submit={this.submit}  ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addChallan,\n    updateChallan,\n    getCustomerList,\n    getChallan\n  }\n)(AddChallan);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getChallan } from '../../../../actions/challan';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nclass ViewChallan extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    challanlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    \n    console.log(this.props);\n    if (this.props.challanlistvalues) {\n      let quotationlist = Object.values(this.props.challanlistvalues);\n\n      quotationlist.sort(function(a, b){\n        return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n      });\n      const challanlistvalues = quotationlist.map(quotationvalue => {\n        return {\n          deliverychallanno: quotationvalue.deliverychallanno,\n          ponumber: quotationvalue.ponumber,\n          vehiclenumber: quotationvalue.vehiclenumber,\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, challanlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.challanlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.deliverychallanno.toLowerCase().localeCompare(a.deliverychallanno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n    });\n    const challanlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        deliverychallanno: quotationvalue.deliverychallanno,\n        ponumber: quotationvalue.ponumber,\n        vehiclenumber: quotationvalue.vehiclenumber,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, challanlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_challanpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  updatechallan(id) {\n    let path = `/editchallan/${id}`;\n    this.props.history.push(path);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, challanlistvalues } = this.state;\n    console.log(challanlistvalues)\n    const columnvalue = [\n      {\n        label: 'Delivery Challan',\n        field: 'deliverychallanno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'PO Number',\n        field: 'ponumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Vehicle Number',\n        field: 'vehiclenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={challanlistvalues} \n          columnvalue={columnvalue}\n          className=\"challanlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getChallan \n    }\n)(ViewChallan);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ challanlistvalues, data_cond }) => {\n  console.log(JSON.stringify(challanlistvalues));\n  const data = challanlistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = challanlistvalues.totalvalue\n    ? challanlistvalues.totalvalue\n    : '';\n  const taxableAmount = challanlistvalues.taxableamount;\n  const date = moment(challanlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(challanlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(challanlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = challanlistvalues.billingaddress;\n  const deliveryaddress = challanlistvalues.deliveryaddress;\n  const vendorcode = challanlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = challanlistvalues;\n\n  let {\n    deliverychallanno,\n    toaddress,\n    site,\n    ponumber,\n    vehiclenumber,\n    otherreference,\n    gstno,\n    customername\n  } = challanlistvalues;\n  let arr = [],toAD='',arr1 = [],siteAD='',customername1 = ''\n  let mobileno = challanlistvalues.mobilenumber ? challanlistvalues.mobilenumber : ''\n  // if(toaddress.indexOf(',') > -1){\n  //   arr = toaddress.split(',');\n  //   customername = arr[0]\n  //   if(arr.length > 2){\n  //     for(var i=1;i<arr.length;i++){\n  //       toAD = i > 1 ? toAD + ',' + arr[i] : toAD + arr[i]\n  //     }\n  //   }\n  // }\n  // else\n  //   toAD = toaddress\n\n\n    toAD = toaddress\n  \n    // if(site.indexOf(',') > -1){\n    //   arr1 = site.split(',');\n    //   customername1 = arr1[0]\n    //   if(arr1.length > 2){\n    //     for(var i=1;i<arr1.length;i++){\n    //       siteAD = i > 1 ? siteAD + ',' + arr1[i] : siteAD + arr1[i]\n    //     }\n    //   }\n    // }\n    // else\n    //   siteAD = site\n\n    \n\n\n  const purchaseordernumber = challanlistvalues.purchaseordernumber;\n  const tax = challanlistvalues.tax ? challanlistvalues.tax : '';\n  const taxpercentage = challanlistvalues.tax\n    ? challanlistvalues.tax / 100\n    : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = challanlistvalues.selectedcontactlist[0]\n  //     ? challanlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, { color: 'red', paddingLeft: 16 }]}>{deliverychallanno}</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{toAD}</Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={styles.dcaddress}>Site</Text>\n              <Text style={styles.dcaddress}>{site}</Text>\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={styles.header_tintext}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.weighteach}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.costperunit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.totalcost}</Text>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text>\n\n    \n\n        {/* <Text>{'\\n'}</Text> */}\n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, {\n                  color: 'red',\n                  paddingLeft: 16,\n                }]}>{deliverychallanno}/2020-21</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{toAD}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}> Phone no : {mobileno} </Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>Site</Text>\n              {/* <Text style={styles.dcaddress}>{site}</Text> */}\n              {/* <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername1}</Text> */}\n\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{site}</Text>\n\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Text>{'\\n'}</Text>\n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>REMARKS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getChallan } from '../../../../actions/challan';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewChallan';\n\nclass ViewChallanPdf extends React.Component {\n  state = {\n    challanlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getChallan();\n    const quotationid = this.props.match.params.id;\n    const challanlistvalues = this.props.challanlistvalues[quotationid];\n    challanlistvalues.requestdeliverydate = moment(\n      challanlistvalues.date\n    ).format('DD MMM, YYYY');\n    challanlistvalues.addeditemlist = challanlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          itemdiscount: 0,\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = challanlistvalues.customerid;\n    const customernumber = challanlistvalues.customernumber;\n    const customername = challanlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(challanlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        challanlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/challanlist');\n          }, 300);\n        });\n   \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, challanlistvalues, link } = this.state;\n    console.log(this.state);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                challanlistvalues={this.state.challanlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getChallan }\n)(ViewChallanPdf);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../../Components/loader/loader\";\nimport axios from \"axios\";\n\n\nclass EnquiryPage extends React.Component {\n  state = {\n    searchtodate: null,\n    count: null,\n    success: false,\n    update: false,\n    enquirylistvalues: [],\n    backupenquirylistvalues: [],\n    loading: false,\n    errorMsg: '',\n    data: {\n      eno: '',\n      company: '',\n      name: '',\n      phone: '',\n      email: '',\n      detail: '',\n      enquiryFrom: '',\n //   quoteno: '',\n      quotationCreated: false\n    }\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n    this.getEnquiries()\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  quotationCreated = e => {\n    const val = this.state.data.quotationCreated;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [\"quotationCreated\"]: !val }\n    })\n  }\n  updateButton = e => {\n    console.log(e);\n    if (!e.quotationCreated) { e.quotationCreated = false; }\n    this.setState({ ...this.state, success: true, update: true, data: e });\n  }\n  getEnquiries() {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/Enquiry/getenquiry`)\n      .then(res => {\n        this.dataHandler(false)\n        if (res.data.enquirylist.enquirydata.length > 0) {\n          let enquiryvalues = res.data.enquirylist.enquirydata;\n          if (enquiryvalues.length > 0) {\n            enquiryvalues = enquiryvalues.reverse()\n            enquiryvalues = enquiryvalues.map(enquiry => {\n              console.log(enquiry)\n              let created = \"No\"\n              if (enquiry.quotationCreated) {\n                created = \"Yes\"\n              }\n              return {\n                date: enquiry.date,\n                name: enquiry.name,\n                phone: enquiry.phone,\n                company: enquiry.company,\n                email: enquiry.email,\n                detail: enquiry.detail,\n                enquiryFrom: enquiry.enquiryFrom || null,\n            //    quoteno: enquiry.quoteno || null,\n                view: (\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(enquiry);\n                    }}\n                  >\n                    Edit\n                </Button>\n                )\n\n              };\n            });\n\n            this.setState({\n              enquirylistvalues: enquiryvalues,\n              count: enquiryvalues.length\n            }, () => {\n            })\n          }\n        }\n        else {\n          this.setState({ count: 0 })\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  addenquiry = () => {\n    this.setState({\n      success: true, update: false,\n      data: {\n        eno: '',\n        company: '',\n        name: '',\n        phone: '',\n        email: '',\n        detail: '',\n        enquiryFrom: '',\n   //   quoteno: '',\n        quotationCreated: false\n      }\n    });\n  }\n\n  addnewenquiry = () => {\n    const { data } = this.state;\n    if (data.company == '' || data.name == '' || data.phone == '' || data.email == '' || data.detail == '' || data.enquiryFrom == '') {\n      this.setState({ 'errorMsg': 'Fill all fields' });\n    }\n    else {\n      console.log(this.state.data)\n\n      this.dataHandler(true)\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      axios\n        .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/addenquiry`,\n          {\n            \"eno\": \"\",\n            \"company\": data.company,\n            \"name\": data.name,\n            \"phone\": data.phone,\n            \"email\": data.email,\n            \"detail\": data.detail,\n            \"date\": date,\n            \"enquiryFrom\": data.enquiryFrom,\n          //  \"quoteno\": data.quoteno,\n            \"quotationCreated\": data.quotationCreated\n          })\n        .then(res => {\n          this.getEnquiries()\n          this.toggle();\n        },\n          error => {\n            this.dataHandler(false)\n            this.setState({ success: false, message: 'Server error.' });\n          });\n    }\n  }\n\n  updateenquiry = () => {\n    const { data } = this.state;\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/updateenquiry`,\n        {\n          \"_id\": data._id,\n          \"eno\": \"\",\n          \"company\": data.company,\n          \"name\": data.name,\n          \"phone\": data.phone,\n          \"email\": data.email,\n          \"detail\": data.detail,\n          \"date\": data.date,\n          \"enquiryFrom\": data.enquiryFrom,\n        //  \"quoteno\": data.quoteno,\n          \"quotationCreated\": data.quotationCreated\n        })\n      .then(res => {\n        this.getEnquiries()\n        this.toggle();\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  }\n\n  render() {\n    const { count, enquirylistvalues, loading, success, data, errorMsg, update } = this.state;\n\n    const columnvalue = [\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Phone number\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Company name\",\n        field: \"company\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Item detail\",\n        field: \"detail\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Enquiry\",\n        field: \"enquiryFrom\",\n        sort: \"asc\",\n        width: 50\n      },\n      // {\n      //   label: \"Quotation created\",\n      //   field: \"quotationCreated\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Edit\",\n        field: \"edit\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n\n\n\n    let modaldata, errormessage;\n    errormessage = errorMsg != '' ? (<p style={{ 'textAlign': 'center', 'color': 'red' }}>{errorMsg}</p>) : null\n    if (success) {\n      modaldata = (\n        <Modal\n          isOpen={success}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Enquiry</ModalHeader>\n          <ModalBody>\n\n            <input type=\"text\" className=\"form-control\" placeholder=\"Company name\" name=\"company\" value={data.company} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Person name\" name=\"name\" value={data.name} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Mode of enquiry\" name=\"enquiryFrom\" value={data.enquiryFrom} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"number\" className=\"form-control\" placeholder=\"Phone number\" name=\"phone\" value={data.phone} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" value={data.email} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  />\n            <textarea type=\"text\" className=\"form-control\" placeholder=\"Item details\" name=\"detail\" value={data.detail} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  ></textarea>\n            {/* <input type=\"text\" className=\"form-control\" placeholder=\"Quotation Number\" name=\"quoteno\" value={data.quoteno} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} /> */}\n            {/* <input type=\"checkbox\" className=\"\" value={data.quotationCreated} onChange={this.quotationCreated} checked={data.quotationCreated} /> <span style={{position:'relative',top:'-12px'}}> Quotation created </span> */}\n            {errormessage}\n          </ModalBody>\n          <ModalFooter>\n            {update ? (\n              <Button\n                Label\n                style={{ float: 'right' }}\n                color=\"primary\"\n                onClick={this.updateenquiry}\n              >\n                Update\n          </Button>\n            ) : (\n                <div>\n                  <Button color=\"primary\" onClick={this.toggle} style={{ fontSize: '0.8rem' }}>\n                    Cancel\n          </Button>\n                  <Button\n                    Label\n                    style={{ float: 'right' }}\n                    color=\"primary\"\n                    onClick={this.addnewenquiry}\n                  >\n                    Submit\n        </Button>\n                </div>\n              )}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n \n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/crmlist\">CRM</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Enquiries</BreadcrumbItem>\n\n            </Breadcrumb>\n\n\n            <Button\n              Label\n              style={{ float: 'right' }}\n              color=\"primary\"\n              onClick={this.addenquiry}\n            >\n              Add Enquiry\n          </Button>\n\n            {modaldata}\n\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={enquirylistvalues}\n              className=\"customerlist\"\n            />\n\n          </div>\n         \n      </div>\n    );\n  }\n}\n\n\n\nexport default EnquiryPage\n","import axios from \"axios\";\n\nexport default {\n  invoice: {\n    addinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/addinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    updateinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/updateinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    \n    getinvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    getproformainvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/invoiceapi\";\nimport { ADD_INVOICE, INVOICE_FETCHED,PROFORMAINVOICE_FETCHED } from \"../Services/types\";\nimport { invoiceListSchema,proformainvoiceListSchema } from \"../Schemas/schemas\";\n\nconst invoiceCreated = invoicelist => {\n  return {\n    type: ADD_INVOICE,\n    invoicelist\n  };\n};\n\nconst invoiceFetched = invoicelist => {\n  return {\n    type: INVOICE_FETCHED,\n    invoicelist\n  };\n};\n\nconst proformainvoiceFetched = proformainvoicelist => {\n  return {\n    type: PROFORMAINVOICE_FETCHED,\n    proformainvoicelist\n  };\n};\n\nexport const addinvoice = data => {\n  return dispatch => {\n    return api.invoice.addinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\nexport const updateinvoice = data => {\n  return dispatch => {\n    return api.invoice.updateinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getinvoice = () => {\n  return dispatch => {\n    return api.invoice.getinvoice().then(invoicelist => {\n      const invoicelistvalues = invoicelist.invoicedata;\n      console.log(invoicelistvalues)\n      return dispatch(\n        invoiceFetched(normalize(invoicelistvalues, [invoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const getproformainvoice = () => {\n  return dispatch => {\n    return api.invoice.getproformainvoice().then(invoicelist => {\n      const proformainvoicelist = invoicelist.invoicedata;\n      console.log(proformainvoicelist)\n      return dispatch(\n        proformainvoiceFetched(normalize(proformainvoicelist, [proformainvoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass InvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      advanceamountreceived:'',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n      if(Object.keys(this.props.invoicelistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n         // if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          //}\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n      else{\n        const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n        this.setState({\n          data: {\n            ...this.state.data,\n            invoicenumber\n          }\n        })\n      }\n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/invoice/getsingleinvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n              console.log(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        \n          // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n          // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    },()=>{\n      this.totalValue();\n    });\n  \n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.target ? e.target.value : e\n    this.updateQuotation(selected_id);\n    console.log(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    \n    if(customerdetail){\n      console.log(customerdetail)\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      });\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      \n\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          this.handleChange(selectedChallan.customerid._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n               \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Delivery Challan No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Delivery challan date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n\n                {/* <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> */}\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    readOnly\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n         \n                   <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n              {/* <Row>\n                <div className='mg-t-20' style={{ 'marginLeft': '15px','fontSize': '16px','fontWeight': 'bold'}}>\n                   For Proforma Invoice:\n                </div>\n              </Row>\n              \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Despath </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n              </Row> */}\n\n\n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n           \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(InvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport InvoiceForm from \"./InvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n  submit = data => {\n    console.log(data)\n    this.dataHandler(true);\n      if(this.props.match.params.id != undefined){\n        data['_id'] = this.props.match.params.id;\n        return this.props\n        .updateinvoice(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n      else{\n        return this.props\n        .addinvoice(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <InvoiceForm submit={this.submit} ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(AddInvoice);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ProformaInvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    proformainvoicelist: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      transportationgst:'',\n      advanceamountreceived:'',\n      transportchargerequired: 'Yes',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          }\n          else{\n            const invoicenumber = 1\n            this.setState({\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            })\n          }\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n    \n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getsingleproformainvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.transportationgst = founddata[0].transportationgst ?  founddata[0].transportationgst : ''\n           \n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.data.transportchargerequired = founddata[0].transportchargerequired ? founddata[0].transportchargerequired : ''\n           \n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    console.log(e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.target ? e.target.value : e\n    this.updateQuotation(selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n\n    if (this.props.ID != undefined) {\n      data['_id'] = this.props.ID;\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/updateproformainvoice`, {\n        data\n      })\n      .then(res => {\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      },(err) =>{\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      });\n    }\n\n    else{\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/addproformainvoice`, {\n        data\n      })\n      .then(res => {\n        \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      },(err) =>{\n \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      this.setState(newState);\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n      let addeditemlist = selectedChallan.addeditemlist;\n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n       \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n          this.handleChange(selectedChallan.customerid._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Proforma Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Proforma Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Proforma Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n              \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Delivery Challan No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Delivery challan date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n               \n\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    readOnly\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n           \n\n                 <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> \n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n            \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Dispatch </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationgst'>Transportation GST </Label>\n                    <AvField\n                      Label\n                      name='transportationgst'\n                      type='text'\n                      id='transportationgst'\n                      value={data.transportationgst}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportchargerequired'>GST required for Transport charge </Label>\n                    <AvField\n                      Label\n                      name='transportchargerequired'\n                      type='select'\n                      id='transportchargerequired'\n                      value={data.transportchargerequired}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    >\n                    <option value='Yes'>Yes</option>\n                    <option value='No'>No</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n\n             \n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n         \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProformaInvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport ProformaInvoiceForm from \"./ProformaInvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddProformaInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Proforma Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProformaInvoiceForm ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(AddProformaInvoice);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n\n    console.log(this.props);\n    if (this.props.invoicelistvalues) {\n      let quotationlist = Object.values(this.props.invoicelistvalues);\n      quotationlist.sort(function(a, b){\n        return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n      });\n      const invoicelistvalues = quotationlist.map(quotationvalue => {\n        return {\n          invoicenumber: quotationvalue.invoicenumber,\n          customername: quotationvalue.customername,\n          customernumber: quotationvalue.customernumber,\n          customercontactnumber: quotationvalue.customercontactnumber,\n\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, invoicelistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.invoicelistvalues);\n    console.log(quotationlist)\n    //quotationlist= quotationlist.sort((a, b) => b.invoicenumber.toString().toLowerCase().localeCompare(a.invoicenumber.toString().toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n    });\n    const invoicelistvalues = quotationlist.map(quotationvalue => {\n      return {\n        invoicenumber: quotationvalue.invoicenumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, invoicelistvalues });\n    this.dataHandler(false);\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = id => {\n    let path = `/view_invoicepdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editinvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, invoicelistvalues,success } = this.state;\n    console.log(invoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={invoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(ViewInvoice);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport './ViewInvoice.scss';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n   padding:5,\n   paddingLeft:10,\n   paddingRight:10,\n\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n    border: 'none',\n    boxShadow: 'none',\n    border: '30px solid green',\n    background:'#000'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  nobordertable: {\n    borderWidth: 0, borderRightWidth: 0, borderBottomWidth: 0\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = invoicelistvalues.taxableamount;\n  taxableAmount = parseFloat(taxableAmount)\n  taxableAmount = taxableAmount.toFixed(2)\n  console.log(taxableAmount)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername\n  } = invoicelistvalues;\n  let purchaseordernumber = invoicelistvalues.purchaseordernumber;\n\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n   \n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n\n\n\n\n  freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n  freightcharges = freightcharges.toFixed(2)\n  subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n  subtotal = parseFloat(subtotal)\n  subtotal = subtotal.toFixed(2)\n  \n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n\n\n  total = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total = total.toFixed(2)\n\n  roundoffamount = roundoffamount != '' && roundoffamount != null ? parseFloat(roundoffamount) : 0\n  roundoffamount = roundoffamount.toFixed(2)\n\n  grandtotal = parseFloat(total) + parseFloat(roundoffamount)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader style={styles.section}>\n              <TableCell weighting={1.087} style={styles.section}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13} style={styles.section}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n          \n                      GST No: {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                      GST No. {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              \n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            \n         \n\n\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n            <Text style={styles.headerwidth}>INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n           \n           \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                 \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}/2020-21\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table styles={{'borderWidth':'0'}}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n               \n                  {deliveryaddress} \n                </Text>\n              </TableCell>\n\n              <TableCell weighting={0.5} >\n                <Table style={styles.section} style={{borderWidth: 0}}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                {/* style={styles.headerfont} */}\n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n              {/* <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell> */}\n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            */}\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n          </Page>\n          <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={[styles.section,styles.nobordertable]}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  Remarks:\n                  {'\\n'}\n                  {'\\n'}\n                  {remarks}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n                <Text style={styles.headerfont3}>{amountinwords}</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.087}>\n                        <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                      </TableCell>\n                      <TableCell weighting={0.45}>\n                        <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                      <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n            \n              </TableCell>\n            </TableHeader>\n          </Table>\n          \n          {/* Two */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n      \n              </TableCell>\n            </TableHeader>\n          </Table> */}\n          {/* Three */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                {amountinwords}\n                </Text>\n              </TableCell>\n   \n            </TableHeader>\n          </Table> */}\n          {/* ends here */}\n          <Text> {'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n          \n            </View>\n\n       \n\n          </View>\n\n          <View style={styles.row}>\n            \n              <View>\n              <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n              </View>\n            \n          </View>\n          </Page>\n\n     \n     \n    </Document >\n  );\n};\n\nexport default MyDocument;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport \"./ViewInvoice\";\n\nclass ViewInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\"\n  };\n  componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    const invoicelistvalues = this.props.invoicelistvalues[quotationid];\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        invoicelistvalues,\n        status: true\n      });\n    },2000);\n   \n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/invoicelist\");\n          }, 300);\n        });\n  \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewInvoicePdf);\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproformainvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport axios from 'axios';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewProformaInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.getProformaInvoice();\n    this.props.getChallan();\n  }\n\n\n  getProformaInvoice(){\n     axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n         console.log(res)\n         this.dataHandler(false);\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let invoicelist = res.data.invoicelist.invoicedata;\n           //invoicelist= invoicelist.sort((a, b) => b.invoicenumber.toLowerCase().localeCompare(a.invoicenumber.toLowerCase()));\n           invoicelist.sort(function(a, b){\n            return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n          });\n          const proformainvoicelistvalues = invoicelist.map(quotationvalue => {\n            return {\n              invoicenumber: quotationvalue.invoicenumber,\n              customername: quotationvalue.customername,\n              customernumber: quotationvalue.customernumber,\n              customercontactnumber: quotationvalue.customercontactnumber,\n      \n              view: (\n                <div className=\"actionbuttons\">\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(quotationvalue);\n                    }}\n                  >\n                    Print\n                  </Button>\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateinvoice(quotationvalue._id);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  </div>\n              )\n            };\n          });\n          this.setState({ ...this.state, proformainvoicelistvalues });\n         }\n        },error =>{\n          this.dataHandler(false)\n         \n        });\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = obj => {\n    sessionStorage.setItem(\"pformadata\",JSON.stringify(obj))\n    let path = `/view_proformainvoicepdf/123`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editproformainvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, proformainvoicelistvalues,success } = this.state;\n    console.log(proformainvoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={proformainvoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    proformainvoicelistvalues: state.proformainvoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getproformainvoice,\n    getChallan\n  }\n)(ViewProformaInvoice);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport moment from 'moment';\nimport React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\nimport './ViewInvoice.scss';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  \n  pagepadding: {\n    padding:5,\n    paddingLeft:10,\n    paddingRight:10,\n  },\n  section: {\n    // position: 'relative',\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument2 = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  const financialYear = invoicelistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = parseFloat(invoicelistvalues.taxableamount)\n  taxableAmount = taxableAmount.toFixed(2)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  let workorderdate = invoicelistvalues.workorderdate != '' ? moment(invoicelistvalues.workorderdate).format('DD MMM, YYYY') : '';\n  let despathdate = invoicelistvalues.despathdate != '' ? moment(invoicelistvalues.despathdate).format('DD MMM, YYYY') : '-';\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername,\n    deliverychallandata,\n    workorderno,\n    removaltime,\n    transportationcharge,\n    transportationgst,\n    advanceamountreceived,\n    transportchargerequired\n  } = invoicelistvalues;\n  deliverychallannumber = deliverychallannumber && deliverychallannumber != '' ? deliverychallannumber.toString() + '/2020-21': ''\n  let purchaseordernumber = deliverychallannumber && deliverychallannumber != '' ? invoicelistvalues.purchaseordernumber : ''\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n\n\n  \n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n   freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n   freightcharges = freightcharges.toFixed(2)\n   subtotal = 0;\n   subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n   subtotal = parseFloat(subtotal)\n   subtotal = subtotal.toFixed(2)\n  // total = parseFloat(total)\n  // total = total.toFixed(2)\n\n\n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n  let total2 = 0\n  total2 = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total2 = parseFloat(total2)\n  total2 = total2.toFixed(2)\n  let transportationgstper=0;\n  transportationgst = transportationgst && transportationgst != '' ? parseFloat(transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n  transportationcharge = transportationcharge != '' && transportationcharge != null ? parseFloat(transportationcharge) : 0\n  transportationcharge = transportationcharge.toFixed(2)\n  let transportationchargegst = transportationcharge * transportationgst\n  transportationchargegst = transportationchargegst.toFixed(2)\n  transportationchargegst = transportchargerequired != '' && transportchargerequired == 'No' ? 0.00 : transportationchargegst\n  let totalaftertransportcharge = parseFloat(total2) + parseFloat(transportationchargegst) + parseFloat(transportationcharge)\n  totalaftertransportcharge = parseFloat(totalaftertransportcharge)\n  totalaftertransportcharge = totalaftertransportcharge.toFixed(2)\n\n\n  advanceamountreceived = advanceamountreceived != '' && advanceamountreceived != null ? parseFloat(advanceamountreceived) : 0\n  advanceamountreceived = advanceamountreceived.toFixed(2)\n  grandtotal = parseFloat(totalaftertransportcharge) - parseFloat(advanceamountreceived)\n  grandtotal = parseFloat(grandtotal)\n  grandtotal = grandtotal.toFixed(2)\n\n  \n  RsPaise(grandtotal)\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n            <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n            \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Proforma Invoice No: {invoicenumber}/{financialYear}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Dispatch Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {despathdate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n         \n                  {deliveryaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n        </Page>\n        <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n   \n                   <Text style={styles.headerfont3}>\n                  {amountinwords}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges </Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {subtotal}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n              \n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                     <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total2}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation Charge</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation @ {transportationgstper}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationchargegst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalaftertransportcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Advance Received</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {advanceamountreceived}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Balance Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n          {'\\n'}\n          {'\\n'}\n            {'\\n'}\n          </Text> \n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.0}>\n                <Text style={styles.headerfont3}>\n                 \n                  \n                  Our Bank details:-  {'\\n'} {'\\n'}\n                  Company Name : Pondhan Scaffolding Pvt Ltd  {'\\n'}\n                  Bank : Vijaya Bank, Branch: Byatarayanapura, Bangalore-92  {'\\n'}\n                  A/c No: 104 00 6211 000 006 Transportation {'\\n'}\n                  IFSC Code: VIJB 000 1040\n                </Text>\n              </TableCell>\n             \n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* Three */}\n\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                  {'\\n'}{'\\n'}{'\\n'}{'\\n'}\n                </Text>\n                <Text\n                 style={[styles.descriptionText, { color: 'red' }]}\n                > Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                \n         \n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n              \n                      <View style={{ flexDirection: 'row', justifyContent: 'center', padding: 5  }}>\n                        <Image style={{ width: 53, height: 53 }} src={sign} />\n                        <Image style={{ width: 53, height: 53 }} src={seal} />\n                      </View>\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                   \n                  </TableCell>\n                </TableHeader>\n               \n              </Table>\n          \n            </View>\n\n       \n            \n          </View>\n          </Page>\n    </Document >\n  );\n};\n\nexport default MyDocument2;","import { PDFViewer } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport logo from \"../../../../Images/logo.png\";\nimport MyDocument2 from \"./Component2\";\nimport \"./ViewInvoice\";\n\nclass ViewProformaInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\"\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    let invoicelistvalues = JSON.parse(sessionStorage.getItem('pformadata'))\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.invoicelistvalues,\n        invoicelistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/proformainvoicelist\");\n          }, 300);\n        });\n       \n      }\n    } else {\n    }\n  }\n  \n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument2\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewProformaInvoicePdf);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass AddItemListForm extends React.Component {\n  state = {\n    data: {\n      masteritemtype: '',\n      masteritemname: null,\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      costperunit: null,\n      masteritemrate: null,\n      masteritemunitwt: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null,\n      masteritemimagefile: null\n    },\n    materialoptionlistvalues: [],\n    masteritemlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    filename:''\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  onItemTypeChange = e => {\n    const selecteditemtype = e.target.value;\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    const masteritemlistvalues = this.state.masteritemlistvalues;\n    const selecteditemtypevalue = materialoptionlistvalues.filter(\n      (option, i) => {\n        if (option.id === selecteditemtype) {\n          return option;\n        }\n      }\n    );\n    const selectitemid = selecteditemtypevalue[0].id;\n    if (selectitemid) {\n      const selecteditemvalues = masteritemlistvalues.filter(item => {\n        if (item.masteritemtype._id == selectitemid) {\n          return item;\n        }\n      });\n      console.log(selecteditemtypevalue);\n      console.log(selecteditemvalues);\n      const count = selecteditemvalues.length;\n      if ((selectitemid === '5d263475917f5e27146d9ee4' || selectitemid === '5df361a6f57a6f7c679da493' || selectitemid === '5f0830f14d38d207245a37eb')) {\n        const itemname = count > 0 ? 1002 + count : 1001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d263480917f5e27146d9ee5' || selectitemid == '5df361e1f57a6f7c679da494'  || selectitemid === '5f0831104d38d207245a37ec')) {\n        const itemname = count > 0 ? 2002 + count : 2001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d270f30136e660798dce139' || selectitemid == '5df361eaf57a6f7c679da495'  || selectitemid === '5f0831204d38d207245a37ed')) {\n        const itemname = count > 0 ? 3002 + count : 3001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n\n      if ((selectitemid === '5d5e206ea24f1806712491b7' || selectitemid == '5df361f3f57a6f7c679da496'  || selectitemid === '5f08312c4d38d207245a37ee')) {\n        const itemname = count > 0 ? 4002 + count : 4001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n    }\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleValidSubmit = () => {\n    let { data } = this.state;\n    this.setState({ loading: true });\n    let formdata = new FormData();\n    console.log(data)\n    formdata.append('imagefile', data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('costperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n        })\n        .catch(err => {\n          this.props.error(false);\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(this.state.data)\n    console.log('invalid submit');\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is added successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is added successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>{' '}\n             \n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onItemTypeChange}\n                      required={true}\n                      Label\n                    >\n                      <option value=''>select</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='Number'\n                      id='masteritemname'\n                      value={data.masteritemname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Code'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=''>Please select value</option>\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit Cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      Label\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className=\"required-label\">*</span> */}\n        \n\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader small-font-size'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddItemListForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getMasterItemList } from \"../../../../actions/Transaction\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ViewMasterItemList extends React.Component {\n  state = {\n    loading: false,\n    masteritemlist: [],\n    count: 0\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemList();\n  }\n\n  componentWillReceiveProps(props) {\n    let masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n    const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n      return {\n        masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n        masteritemtypename: masteritemdata.masteritemtypename,\n        masteritemdescription: masteritemdata.masteritemdescription,\n        masteritemshortdescription:masteritemdata.masteritemshortdescription,\n        masteritemuom: masteritemdata.masteritemuom.uomname,\n        // masteritemrate: masteritemdata.masteritemrate,\n        masteritemcostperunit: masteritemdata.masteritemcostperunit,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(masteritemdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n      };\n    });\n    const count = masteritemlistvalues.length;\n    this.setState({ ...this.state, masteritemlist, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/m_updateitemlist/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { loading, count, masteritemlist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"masteritemtype\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Code\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"masteritemdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Short Description\",\n        field: \"masteritemshortdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"UOM\",\n        field: \"masteritemuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      // {\n      //   label: \"Item Rate\",\n      //   field: \"masteritemrate\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Unit Cost\",\n        field: \"masteritemcostperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={masteritemlist}\n              className=\"masteritemlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getMasterItemList }\n  )(ViewMasterItemList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddmasterItemList extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemList(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemList();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemListForm submit={this.submit} error={this.errorHandler}/>\n        </div>\n        {loading ? (\n        <CustomLoader/>\n        ) : null}\n        {/* <div>\n          <ViewMasterItemList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nAddmasterItemList.propTypes = {\n  addMasterItemList: PropTypes.func.isRequired,\n  getMasterItemList: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addMasterItemList, getMasterItemList, getUomList, getMasterItemTypes }\n)(AddmasterItemList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\n\nclass MasterItemListValues extends React.Component {\n  render() {\n    return (\n      <div class=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <ViewMasterItemList />\n      </div>\n    );\n  }\n}\n\nexport default MasterItemListValues;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass UpdateItemListForm extends React.Component {\n  state = {\n    data: {\n      id: null,\n      masteritemtype: '',\n      masteritemname: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      itemImage: '',\n      costperunit: null,\n      // masteritemrate: null,\n      masteritemunitwt: null,\n      masteritemimagefile: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null\n    },\n    materialoptionlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    imageChanged: false,\n    filename:''\n  };\n\n  componentDidMount() {\n    const id = this.props.id;\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const masteritemlistvalues = props.masteritemlistvalues[id];\n    console.log(masteritemlistvalues)\n    const data = {};\n    data.id = masteritemlistvalues.id;\n\n    data.masteritemname = masteritemlistvalues.masteritemtypename;\n    data.masteritemdescription = masteritemlistvalues.masteritemdescription;\n    data.masteritemshortdescription = masteritemlistvalues.masteritemshortdescription;\n    \n    data.permeter = masteritemlistvalues.permeter;\n    data.masteritemunitwt = masteritemlistvalues.masteritemunitwt;\n\n    data.perfeet =  masteritemlistvalues.permeter / 3.2808.toFixed(2)\n    data.perinch =  masteritemlistvalues.permeter / 39.3701.toFixed(2)\n    data.itemImage = masteritemlistvalues.masteritemimage != undefined && \n                     masteritemlistvalues.masteritemimage != null &&\n                     masteritemlistvalues.masteritemimage != '' ? `${process.env.REACT_APP_IMAGE_BASE_URL}` + '/' + masteritemlistvalues.masteritemimage : ''\n    \n    console.log(data.itemImage)\n    data.masteritemtype = masteritemlistvalues.masteritemtype._id;\n    data.masteritemuom = masteritemlistvalues.masteritemuom._id;\n    data.costperunit = masteritemlistvalues.masteritemcostperunit != undefined && \n                       masteritemlistvalues.masteritemcostperunit != null ? \n                      masteritemlistvalues.masteritemcostperunit.toString() : 0\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      data\n    });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      ...this.state,\n      imageChanged: true,\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleInvalidSubmit = () =>{\n    console.log(this.state.data)\n  }\n\n  handleValidSubmit = () => {\n\n    const { data, imageChanged } = this.state;\n    this.setState({ loading: true });\n    const formdata = new FormData();\n    if (imageChanged) {\n      formdata.append('imagefile', data.masteritemimagefile);\n    }\n    // formdata.append(\"imagefile\", data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('id', data.id);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('masteritemcostperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    const itemimg = this.state.data.itemImage != '' ?\n    (<img src={data.itemImage} style={{'maxWidth': '150px','maxHeight' : '130px'}}/>) : ''\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is Updated successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemtype || null}\n                    >\n                      <option value=''>select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='text'\n                      id='masteritemname'\n                      value={data.masteritemname || null}\n                      readOnly\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription || null}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n\n                {/* <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemrate\">Item Rate</Label>\n                    <AvField\n                      name=\"masteritemrate\"\n                      type=\"text\"\n                      id=\"masteritemrate\"\n                      value={data.masteritemrate}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        maxLength: {\n                          value: 150,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Item Rate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col> */}\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemuom || null}\n                    >\n                      <option value=''>Please select value</option>\n                      {/* <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option> */}\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      className='small-font-size'\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      \n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className='required-label'>*</span> */}\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n                  </AvGroup>\n                </Col>\n\n                 <Col sm={6}>\n                {itemimg}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport UpdateMasterItemListForm from \"../Form/ItemList/UpdateItemListForm\";\nimport { updatemasteritemlist } from \"../../../../actions/Transaction\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateMasterItemList extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updatemasteritemlist(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/mitemlistvalues\">Item List</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Update Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <UpdateMasterItemListForm id={id} submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    updatemasteritemlist,\n    addMasterItemList,\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList\n  }\n)(UpdateMasterItemList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass MasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      itemtype: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type data is Added successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Added successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item Type data already exist.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item Type</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"itemtype\"\n                      type=\"text\"\n                      id=\"masteritemtype\"\n                      value={data.option}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item Type\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid Item Type name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup className=\"mg-20\">\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader\"\n                    >\n                      Submit\n                      {/* {loading} */}\n                    </Button>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default MasterItemTypeForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport MasterItemTypeForm from \"../Form/MasterItemTypeForm\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass MasterItemType extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemType(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemTypes();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Type</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemTypeForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(MasterItemType);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nclass ItemMasterTypeList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    masteritemtypesvalues: []\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemTypes();\n  }\n  componentWillReceiveProps(props) {\n    const masteritemtypenamevaluelist = Object.values(\n      props.masteritemtypenamevalue\n    );\n    const masteritemtypesvalues = masteritemtypenamevaluelist.map(\n      (masteritemtypedata, i) => {\n        return {\n          masteritemtypename: masteritemtypedata.masteritemtypename,\n          view: (\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                this.updateButton(masteritemtypedata.id);\n              }}\n            >\n              view / Edit\n            </MDBBtn>\n          )\n        };\n      }\n    );\n    const count = masteritemtypesvalues.length;\n    this.setState({ ...this.state, masteritemtypesvalues, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/update_mitemtype/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { loading, count, masteritemtypesvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 && (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={masteritemtypesvalues}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(ItemMasterTypeList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateMasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      id: this.props.masteritemtypenamevalue.id,\n      masteritemtypename: this.props.masteritemtypenamevalue.masteritemtypename\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const dataRecord = props.masteritemtypenamevalue;\n    this.setState({ ...this.state.data, data: dataRecord });\n  }\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type is updated successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Updated successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>{\" \"}\n         \n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item data already exist.</Alert>\n        ) : null}\n        {!!errors.global ? (\n          <Alert color=\"danger\">\n            Something went wrong,Please try again later.\n          </Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Update Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"item\">Item</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"masteritemtypename\"\n                      type=\"text\"\n                      id=\"item\"\n                      value={data.masteritemtypename}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item name\"\n                        },\n                   \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid item name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalueobjectlist: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateMasterItemTypeForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMasterItemTypeForm from \"../Form/UpdateMasterItemTypeForm\";\nimport {\n  getMasterItemTypes,\n  updateMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateItemMasterType extends React.Component {\n  state = {\n    loading: false,\n    masteritemtypenamevalue: {}\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    const masteritemid = this.props.match.params.id;\n    const masteritemtypenamevalue = this.props.masteritemtypenamevalue[\n      masteritemid\n    ];\n    this.setState({ masteritemtypenamevalue });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updateMasterItemTypes(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { loading, masteritemtypenamevalue } = this.state;\n\n    return (\n      <div className=\"mg-t-20 container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/masteritemtypelist\">Item Type</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <UpdateMasterItemTypeForm\n            submit={this.submit}\n            masteritemtypenamevalue={masteritemtypenamevalue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMasterItemTypes, updateMasterItemTypes }\n)(UpdateItemMasterType);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../loader/loader\";\n\nclass EditTable extends React.Component {\n  state = {\n    data: {\n      poid: null,\n      ponumber: null,\n      poitemid: [],\n      itemid: [],\n      itemuom: [],\n      itemquantity: [],\n      receivedqty: [],\n      recevingqty: [],\n      itemlocation: [],\n      totalqty: [],\n      date: []\n    },\n    receiptnumber: null,\n    selectedItem: [],\n    locationlistvalue: [],\n    sucess: false,\n    errors: {},\n    uomlistvalues: [],\n    loading: false,\n    loadingvalue: false,\n    visible: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const ponumber = this.props.ponumber;\n    const poid = this.props.poid;\n    const selectedItemlistvalues = this.props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const poid = props.poid;\n    const ponumber = props.ponumber;\n    const selectedItemlistvalues = props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const itemlocation = [...this.state.data.itemlocation];\n    itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        itemlocation\n      }\n    });\n  };\n  quantityChange = (e, index) => {\n    const selected_qty = e.target.value;\n    const recevingqty = [...this.state.data.recevingqty];\n    const totalqty = [...this.state.data.totalqty];\n    const receivedqty = [...this.state.data.receivedqty];\n    recevingqty[index] = selected_qty;\n    totalqty[index] =\n      parseFloat(receivedqty[index]) + parseFloat(recevingqty[index]);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        recevingqty,\n        totalqty\n      }\n    });\n  };\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n  handleValidSubmit = () => {\n    this.dataHandler(true);\n    let data = {};\n    let AddedIteminfo = [];\n    const {\n      poid,\n      ponumber,\n      poitemid,\n      itemid,\n      itemuom,\n      itemquantity,\n      receivedqty,\n      recevingqty,\n      itemlocation,\n      totalqty,\n      date\n    } = this.state.data;\n    data.ponumber = ponumber;\n    data.poid = poid;\n    itemid.forEach(function(id, i) {\n      let obj = {};\n      obj.poitemid = poitemid[i];\n      obj.itemid = itemid[i];\n      obj.itemuom = itemuom[i];\n      obj.itemquantity = itemquantity[i];\n      obj.receivedqty = receivedqty[i];\n      obj.recevingqty = recevingqty[i];\n      obj.itemlocation = itemlocation[i];\n      obj.totalqty = totalqty[i];\n      AddedIteminfo.push(obj);\n    });\n    data.iteminfo = AddedIteminfo;\n    this.props\n      .itemlistsubmit(data)\n      .then(data => {\n        this.onShowAlert();\n        this.dataHandler(false);\n        this.setState({\n          success: true,\n          loading: false,\n          receiptnumber: data.receiptnumber\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ errors: err.response.data.error, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  dataHandler = value => {\n    this.setState({ loadingvalue: value });\n  };\n\n  render() {\n    // const { selectedItem } = this.props;\n    const {\n      loading,\n      data,\n      success,\n      errors,\n      selectedItem,\n      receiptnumber,\n      visible,\n      loadingvalue\n    } = this.state;\n    const tableBody = selectedItem.map((itemlist, i) => {\n      let nowDate = new Date();\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={itemlist.poitemid}>\n          <td>{i + 1}</td>\n          <td>{itemlist.itemname}</td>\n          <td>{itemlist.itemdescription}</td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`uom${i}`}\n              onChange={this.onChange}\n              required={true}\n              value={itemlist.itemuom || \" \"}\n            >\n              <option value=\"\">uom</option>\n              {this.createSelectUomItems()}\n            </AvField>\n          </td>\n          <td>{itemlist.quantity}</td>\n          <td>{itemlist.receivedqty}</td>\n          <td>\n            <AvField\n              name={`quantity${i}`}\n              type=\"number\"\n              id={`quantity${i}`}\n              value={itemlist.recevingqty.toString() || null}\n              min={0}\n              max={itemlist.recevingqty}\n              onChange={e => this.quantityChange(e, i)}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter Item Quantity\"\n                },\n                minLength: {\n                  value: 1,\n                  errorMessage: \"quantity value is required\"\n                },\n                pattern: {\n                  value: \"^[0-9.]*$\",\n                  errorMessage: \"Please enter valid quantity\"\n                }\n              }}\n            />\n          </td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`location${i}`}\n              onChange={e => this.locationChange(e, i)}\n              required={true}\n              value={itemlist.itemlocation}\n            >\n              {this.createSelectLocationItems()}\n            </AvField>\n          </td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loadingvalue ? <CustomLoader /> : null}\n        {success && (\n          // <Alert color=\"info\" isOpen={visible}>\n          //   Receipt {receiptnumber} created Successfully\n          // </Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Receipt {receiptnumber} created Successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        )}\n        {!!errors.global ? <Alert color=\"danger\">{errors.global}</Alert> : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>SI No</th>\n                    <th>Item Name</th>\n                    <th>Item Description</th>\n                    <th>UOM</th>\n                    <th>PO Qty</th>\n                    <th>Received Qty</th>\n                    <th>Receiving Qty</th>\n                    <th>location</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>{tableBody}</tbody>\n              </table>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    uomlistvalues: state.uomlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditTable);\n","import axios from \"axios\";\n\nexport default {\n  location: {\n    getLocationList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/location/getlocation`)\n        .then(res => {\n          return res.data.locationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/locationapi\";\nimport { Location_LIST } from \"../Services/types\";\nimport { locationListSchema } from \"../Schemas/schemas\";\n\nfunction locationListFetched(locationlist) {\n  return {\n    type: Location_LIST,\n    locationlist\n  };\n}\n\nexport const getLocationList = () => {\n  return dispatch => {\n    return api.location.getLocationList().then(locationlist => {\n      const locationlistvalue = locationlist.locationdata;\n      return dispatch(\n        locationListFetched(normalize(locationlistvalue, [locationListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert\n} from \"reactstrap\";\n\nclass ReceiptScreenForm extends React.Component {\n  state = {\n    data: {\n      ponumber: null\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onhandleChange = e => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        // eslint-disable-next-line prettier/prettier\n        this.setState({ errors: err.response.data.errors, loading: false, success: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Receipt Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    {!!errors.global ? (\n                      <Alert color=\"danger\" Label>Result Not Found</Alert>\n                    ) : null}\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\" Label>PO Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"ponumber\"\n                        type=\"number\"\n                        id=\"ponumber\"\n                        value={data.ponumber}\n                        onChange={this.onChange}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader small-font-size\"\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      Find\n                      {/* {loading} */}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptScreenForm;\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\n\nclass ReceiptTable extends React.Component {\n  state = {\n    receiptlistitems: []\n  };\n  componentDidMount() {\n    const receiptlistitems = this.props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const receiptlistitems = props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n  render() {\n    const { receiptlistitems } = this.state;\n    const receiptlisttable = receiptlistitems.map((receiptvalue, i) => {\n      let loc = receiptvalue.itemlocation ? receiptvalue.itemlocation.locationname : '-'\n      let nowDate = new Date(receiptvalue.date);\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={receiptvalue.id}>\n          <td>{i + 1}</td>\n          <td>{receiptvalue.itemid.masteritemname}</td>\n          <td>{receiptvalue.itemid.masteritemdescription}</td>\n          <td>{receiptvalue.itemuom.uomname}</td>\n          <td>{receiptvalue.itemquantity}</td>\n          <td>{receiptvalue.recevingqty}</td>\n          <td>{loc}</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>SI No</th>\n              <th>Item Name</th>\n              <th>Item Description</th>\n              <th>UOM</th>\n              <th>PO Qty</th>\n              <th>Received Qty</th>\n              <th>location</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>{receiptlisttable}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport async from \"async\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Button\n} from \"reactstrap\";\nimport EditTable from \"../../../../Components/EditTable/EditTable\";\nimport {\n  getPurchaseOrder,\n  searchPoNumber,\n  addorupdateitemsinlocation,\n  getReceiptlist\n} from \"../../../../actions/Transaction\";\nimport { getLocationList } from \"../../../../actions/Location\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport ReceiptScreenForm from \"./ReceiptScreenForm/ReceiptScreenForm\";\nimport ReceiptTable from \"./ReceiptScreenForm/ReceiptTable\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ReceiptScreen extends React.Component {\n  state = {\n    count: 0,\n    poid: null,\n    ponumber: null,\n    selectedItem: [],\n    success: false,\n    receiptlistitems: [],\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getLocationList();\n    this.props.getUomList();\n    const purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  componentWillReceiveProps(props) {\n    const purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  submit = data => {\n    this.dataHandler(true);\n    this.props.getReceiptlist(data).then(receiptlist => {\n      this.dataHandler(false);\n      const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n        return receiptvalue;\n      });\n      this.setState({\n        ...this.state,\n        receiptlistitems: receiptlistitems\n      });\n    });\n\n    return this.props\n      .searchPoNumber(data)\n      .then(podata => {\n        this.dataHandler(false);\n        const selectedItem = podata.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n        const ponumber = data.ponumber;\n        const poid = podata._id;\n        this.setState({\n          ...this.state,\n          selectedItem,\n          ponumber,\n          poid,\n          success: true\n        });\n        return podata;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ ...this.state, success: false });\n        throw err;\n      });\n  };\n\n  itemlistsubmit = data => {\n    const datavalue = {};\n    datavalue.ponumber = data.ponumber;\n    this.dataHandler(true);\n    this.props.getReceiptlist(datavalue).then(receiptlist => {\n      this.dataHandler(false);\n      if (receiptlist) {\n        const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n          return receiptvalue;\n        });\n        this.setState({\n          ...this.state,\n          receiptlistitems: receiptlistitems\n        });\n      }\n    });\n\n    return this.props\n      .addorupdateitemsinlocation(data)\n      .then(async data => {\n        this.dataHandler(false);\n        const receiptlist = await this.props.getReceiptlist(datavalue);\n        const searchporesult = await this.props.searchPoNumber(datavalue);\n        data = {\n          searchdata: data,\n          receiptlist: receiptlist,\n          searchporesult: searchporesult\n        };\n        return data;\n      })\n      .then(data => {\n        console.log(data);\n        const receiptlistitems = data.receiptlist.receiptlist.map(\n          receiptvalue => {\n            return receiptvalue;\n          }\n        );\n\n        const selectedItem = data.searchporesult.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n\n        this.setState({\n          ...this.state,\n          receiptlistitems,\n          selectedItem\n        });\n\n        return data.searchdata;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  savereport = value => {\n    sessionStorage.setItem(\"Receipt\",JSON.stringify(value))\n    let path = `/viewreceipt`;\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      poid,\n      ponumber,\n      count,\n      success,\n      selectedItem,\n      receiptlistitems,\n      loading\n    } = this.state;\n\n    const receiptlisttable = receiptlistitems.map(receiptvalue => {\n      return (\n        <div className=\"container mg-t-20\" key={receiptvalue.id}>\n          {loading ? <CustomLoader /> : null}\n          <Card>\n            <CardHeader>\n              <span> Receipt No : {receiptvalue.receiptnumber} </span>\n              <span> || </span>\n              <span> PO Number : {receiptvalue.ponumber} </span>\n              <div style={{ 'float':'right','marginTop': '-8px','marginBottom':'-5px'}}>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        this.savereport(receiptvalue);\n                      }}\n                      className=\"lgn-loader small-font-size\"\n                      \n                    >\n                      Save Report\n                     \n                    </Button>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <ReceiptTable itemlist={receiptvalue.itemlist} />\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Receipt Screen</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <ReceiptScreenForm submit={this.submit} />\n              {success && (\n                <EditTable\n                  selectedItem={selectedItem}\n                  ponumber={ponumber}\n                  poid={poid}\n                  itemlistsubmit={this.itemlistsubmit}\n                />\n              )}\n              {receiptlistitems.length > 0 && receiptlisttable}\n            </div>\n          ) : (\n              <Alert color=\"info\" Label>Please Add purchase order </Alert>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPurchaseOrder,\n    searchPoNumber,\n    addorupdateitemsinlocation,\n    getReceiptlist,\n    getLocationList,\n    getUomList\n  }\n)(ReceiptScreen);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 50,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height:50,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n\nconst today = new Date().getDate() + '/' +  (new Date().getMonth()+1) + '/' + new Date().getFullYear()\nconst data = orderlistvalues.addeditemlist;\n  const {\n    ponumber,\n    receiptnumber\n  } = orderlistvalues;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small>\n              </View>\n       \n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : 40 & 41 (corner) Road,no.5, Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>Off: +91 080 23339150, Mob: +91 9900069150</Bold>\n    \n        </Text>\n        <Text> {'\\n'}</Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black',textAlign:'center' }]}>\n          <Bold>Goods Received Note</Bold>\n        </Text>\n\n        \n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>GRN No. </Text>\n                <Text style={[styles.dcaddress, {\n                \n                  paddingLeft: 16,\n                }]}>{receiptnumber}/2019-20 \n                {'\\n'}\n                </Text>\n              </View>\n            \n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>PO No.</Text>\n                <Text style={[styles.dcaddress, {\n                    paddingLeft: 16,\n                    wordWrap: 'break-word'\n                }]}> PSPL/2019-20/{ponumber}\n                {'\\n'}\n                </Text>\n             </View>\n            </View>\n           \n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {today}\n                  {'\\n'}\n                </Text>\n              </View>\n            </View>\n            <Text>{'\\n'}</Text> \n          </View>\n          <Text>{'\\n'}</Text> \n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>UOM</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>PO Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Received Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>Received Date</Text>\n              </TableCell>\n              \n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Remaining Qty</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemuom}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.poqty}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receivedqty}</Text>} />\n            <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receiptDate}</Text>} />\n                \n                <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.availqty}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             Authorised : Yes {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspection Required : Yes {'\\n'}\n             \n            </Text>\n          </View>\n          <Text>{'\\n'}</Text> \n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             EDP Prepared by {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Store incharge {'\\n'}\n             \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspected By {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Manager {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Accounts Department {'\\n'}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\n//import './ViewOrder';\n\nclass ViewReceiptPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    let data = JSON.parse(sessionStorage.getItem(\"Receipt\"))\n    let receipts = JSON.parse(sessionStorage.getItem(\"SelectedItem\"))\n    receipts.map((item)=>{\n      for(var j=0;j<data.itemlist.length;j++){\n        if( data.itemlist[j].itemid.masteritemname == item.itemname){\n          data.itemlist[j]['TotalRecQty'] = item.recevingqty;break\n        }\n      }\n    })\n    let poreceiptvalues = {}\n    poreceiptvalues['ponumber'] = data['ponumber']\n    poreceiptvalues['receiptnumber'] = data['receiptnumber']\n    console.log(data.itemlist)\n    poreceiptvalues['addeditemlist'] = data.itemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemid.masteritemdescription ? itemlist.itemid.masteritemdescription : '',\n          itemcode: itemlist.itemid.masteritemname ? itemlist.itemid.masteritemname : '',\n          itemuom: itemlist.itemuom.uomname ? itemlist.itemuom.uomname : '',\n          poqty: itemlist.itemquantity ? itemlist.itemquantity.toString() : '',\n          receivedqty: itemlist.recevingqty ? itemlist.recevingqty.toString() : '',\n          receiptDate:  itemlist.date ? new Date(itemlist.date).getDate() + \"/\" + (new Date(itemlist.date).getMonth() + 1) + \"/\" + new Date(itemlist.date).getFullYear() : '',\n          availqty: itemlist.TotalRecQty ? itemlist.TotalRecQty : 0\n        };\n      }\n    );\n\n    setTimeout(() => {\n      this.setState({\n        orderlistvalues : poreceiptvalues,\n        status: true\n      },()=>{\n        console.log(this.state.orderlistvalues)\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 6000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/receipt_screen');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n           {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )} \n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps\n)(ViewReceiptPdf);\n","import axios from 'axios';\n\nexport default {\n  moveorder: {\n    addmoveorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/moveorder/addmoveorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.moveorderdata;\n        });\n    },\n    getmoveorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n        .then(res => {\n          return res.data.moveorderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/moveorderapi';\nimport { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\nimport { moveorderListSchema } from '../Schemas/schemas';\n\nconst moveorderCreated = moverorderlist => {\n  return {\n    type: ADD_MOVEORDER,\n    moverorderlist\n  };\n};\n\nconst moveorderFetched = moverorderlist => {\n  return {\n    type: MOVEORDER_FETCHED,\n    moverorderlist\n  };\n};\n\nexport const addMoveOrder = data => {\n  return dispatch => {\n    return api.moveorder.addmoveorder(data).then(moverorderlistvalues => {\n      return dispatch(\n        moveorderCreated(normalize(moverorderlistvalues, moveorderListSchema))\n      );\n    });\n  };\n};\n\nexport const getMoveOrder = () => {\n  return dispatch => {\n    return api.moveorder.getmoveorder().then(moverorderlist => {\n      console.log(moverorderlist);\n      const moverorderlistvalues = moverorderlist.moveorderdata;\n      console.log(moverorderlistvalues);\n      return dispatch(\n        moveorderFetched(normalize(moverorderlistvalues, [moveorderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass MoveOrderScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        availableQuantity: [null],\n        totalcost: [null],\n        remarks: [null]\n      },\n      moveorderno: '1',\n      fromaddress: '',\n      toaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const moveorderlistvalues = Object.keys(this.props.moveorderlistvalues);\n    const moveorderno =\n      moveorderlistvalues.length > 0 ? 1 + moveorderlistvalues.length : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        moveorderno\n      }\n    },()=>{\n      if(moveorderlistvalues.length == 0)\n        this.getMovedata()\n    });\n  }\n\n  getMovedata(){\n    if(Object.keys(this.props.moveorderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n      .then(res => {\n         //if (res.data.moveorderlist.moveorderdata.length > 0) {\n           \n          let moveorderno =\n          res.data.moveorderlist.moveorderdata.length > 0 ? 1 + res.data.moveorderlist.moveorderdata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              moveorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    console.log(this.state.masteritemlistvalues)\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      let itemdesc = ''\n      this.state.masteritemlistvalues.map((item) =>{\n        if(item.masteritemtypename == selected_item.itemname)\n          itemdesc = item.masteritemshortdescription != '' ? item.masteritemshortdescription : item.masteritemdescription\n       })\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc;\n  \n      // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n      // : selected_item.masteritemshortdescription\n      // selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      // selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      // selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n      // selectedItemlist.itemlocation[index] = null;\n      // selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      selectedItemlist.quantity[index] = selected_item.itemquantity;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity;\n      // selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(\n      item => item.id !== e.target.value\n    );\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n      const itemlist = data.itemlist.map(item => {\n        return {\n          id: item.id,\n          locationname: item.locationname,\n          itemid:item.itemid,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'itemname')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          availableQuantity: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n    \n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    availableQuantity.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          availableQuantity,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n\n   \n \n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    if(Number(e.target.value) > selectedItemlist.availableQuantity[index]){\n      window.alert('Move quantity cannot be greater than available quantity')\n      console.log(this.state.data.selectedItemlist.quantity)\n      selectedItemlist.quantity[index] = '0'\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n    else{\n      selectedItemlist.quantity[index] = e.target.value;\n      const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n      this.totalValue();\n    }\n\n\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>Order moved successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Move Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='moveorderno'>Move Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='moveorderno'\n                      type='text'\n                      id='moveorderno'\n                      value={data.moveorderno || null}\n                      onChange={this.handleChange}\n    \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Move Order No'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>From location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To location </Label>\n                    <AvField\n                      type='select'\n                      name='toaddress'\n                      onChange={this.onhandlerToChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createToLocationList()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Name</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Available quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                disabled='true'\n                                value={\n                                  data.selectedItemlist.availableQuantity[\n                                    index\n                                  ]\n                                }\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`movequantity${index}`}>\n                                Move quantity\n                              </Label>\n                              <AvField\n                                name={`movequantity${index}`}\n                                type='number'\n                                id={`movequantity${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.quantity[\n                                    index\n                                  ]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { totalitemvaluesearch }\n)(MoveOrderScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport MoveOrderScreenForm from './MoveOrderScreenForm/MoveOrderScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\n\nclass MoveOrderScreen extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addMoveOrder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Move</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <MoveOrderScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList\n  }\n)(MoveOrderScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getMoveOrder } from '../../../../actions/moveorder';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewProduction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    moveorderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getMoveOrder();\n    // console.log(this.props);\n    // if (this.props.moveorderlistvalues) {\n    //   const quotationlist = Object.values(this.props.moveorderlistvalues);\n    //   const moveorderlistvalues = quotationlist.map(quotationvalue => {\n    //     return {\n    //       moveorderno: quotationvalue.moveorderno,\n    //       fromaddress: quotationvalue.fromaddress,\n    //       toaddress: quotationvalue.toaddress\n    //     };\n    //   });\n    //   this.setState({ ...this.state, moveorderlistvalues });\n    //   this.dataHandler(false);\n    // }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.moveorderlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\n    });\n    const moveorderlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        moveorderno: quotationvalue.moveorderno,\n        fromaddress: quotationvalue.fromaddress,\n        toaddress: quotationvalue.toaddress\n      };\n    });\n    this.setState({ ...this.state, moveorderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_invoicepdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, moveorderlistvalues } = this.state;\n    console.log(moveorderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Move Order No',\n        field: 'moveorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'From Address',\n        field: 'fromaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'To Address',\n        field: 'toaddress',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={moveorderlistvalues}\n            columnvalue={columnvalue}\n            className=\"moveorderlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMoveOrder }\n)(ViewProduction);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch, getMasterItemList } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass AddOnHandScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemlocation: [null],\n        quantity: [null],\n        availableQuantity: [null],\n      },\n      fromaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false,\n    masterItemList: []\n  };\n\n  componentDidMount() {\n    // this.props.getLocationList();\n    this.props.getMasterItemList().then((result) => {\n      console.log('result..............................');\n      console.log(result);\n\n      let items = [];\n      //MasterItemTypeList.entities.masteritemtypelistvalues\n      for (let key in result.MasterItemTypeList.result) {\n        const data = result.MasterItemTypeList.entities.masteritemtypelistvalues[result.MasterItemTypeList.result[key]];\n        console.log(data);\n        items.push({\n          id: data['id'],\n          itemid: data['id'],\n          itemname: data['masteritemtypename'],\n          itemdescription: data['masteritemshortdescription'] != '' ? data['masteritemshortdescription'] : data['masteritemdescription'],\n          quantity: 0,\n          availableQuantity: 0\n        });\n      }\n\n      console.log('UUUUUUUUUUUUUUUUUUUUUUUU');\n      console.log(items);\n      this.setState({\n        masterItemList: items\n      });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data\n      }\n    }, () => {\n\n    });\n  }\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      console.log(this.state.masterItemList)\n      let itemdesc = ''\n      this.state.masterItemList.map((item) =>{\n        if(item.itemname == selected_item.itemname)\n          itemdesc = item.itemdescription\n      })\n\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc != '' ? itemdesc : selected_item.itemdescription;\n      selectedItemlist.quantity[index] = selected_item.itemquantity || 0;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity || 0;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(item => item.id !== e.target.value);\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    let location = e.target.value;\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n\n\n      const isAdded = [];\n      const itemlist = [];\n      data.itemlist.forEach(item => {\n        if (item['itemname']) {\n          itemlist.push({\n            id: item.id,\n            locationname: item.locationname,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n\n      itemlist.forEach(data => {\n        if (data['itemname']) {\n          isAdded.push(data['itemname'])\n        }\n      });\n\n      console.log('Before Adding Remaining');\n      console.log(itemlist);\n\n      const allItems = this.state.masterItemList;\n      allItems.forEach((item, index) => {\n        if (!(isAdded.indexOf(item.itemname) > -1)) {\n          itemlist.push({\n            id: item.id,\n            locationname: location,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n      console.log('After Adding Remaining');\n      console.log(itemlist);\n\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    console.log('###################################');\n    console.log(masteritemlistvalues);\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues, 'itemname');\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues = masteritemlistvalues.sort((a,b)=>{return a['itemname'].toLowerCase().localeCompare(b['itemname'].toLowerCase())})\n    \n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          availableQuantity: [...this.state.data.selectedItemlist.quantity, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemlocation.splice(index, 1);\n    quantity.splice(index, 1);\n    availableQuantity.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemlocation,\n          availableQuantity,\n          quantity\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n\n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    selectedItemlist.quantity[index] = e.target.value;\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let iteminfo = [];\n    const { supplierdetail, selectedItemlist, fromaddress } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    // const itemlocation = selectedItemlist.itemlocation;\n    const quantity = selectedItemlist.quantity;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemid = id[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemlocation = fromaddress;//itemlocation[i] || null;\n      obj.recevingqty = quantity[i] || null;\n      iteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['iteminfo'] = iteminfo;\n    this.setState({ loading: true });\n    // console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            selectedItemlist: {\n              id: [null],\n              itemname: [null],\n              itemdescription: [null],\n              itemlocation: [null],\n              quantity: [null],\n              availableQuantity: [null],\n            },\n            fromaddress: '',\n            values: ['']\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>On Hand Updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>On Hand</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>Select location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={data.selectedItemlist.availableQuantity[index]}\n                                disabled={true}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`newquantity${index}`}>\n                                New Quantity\n                              </Label>\n                              <AvField\n                                name={`newquantity${index}`}\n                                type='number'\n                                id={`newquantity${index}`}\n                                value={data.selectedItemlist.quantity[index]}\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    totalitemvaluesearch,\n    // getLocationList,\n    getMasterItemList\n  }\n)(AddOnHandScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport AddOnHandScreenForm from './AddOnHandScreenForm/AddOnHandScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\nimport { additemsinlocation } from '../../../actions/Transaction';\n\nclass AddOnHand extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .additemsinlocation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add On Hand</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddOnHandScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList,\n    additemsinlocation\n  }\n)(AddOnHand);","import axios from 'axios';\n\nexport default {\n  production: {\n    addproduction: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/production/addproduction`, {\n          data\n        })\n        .then(res => {\n          return res.data.productiondata;\n        });\n    },\n    getproduction: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n        .then(res => {\n          return res.data.productionlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/productionapi';\nimport { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\nimport { productionListSchema } from '../Schemas/schemas';\n\nconst productionCreated = productionlist => {\n  return {\n    type: ADD_PRODUCTION,\n    productionlist\n  };\n};\n\nconst productionFetched = productionlist => {\n  return {\n    type: PRODUCTION_FETCHED,\n    productionlist\n  };\n};\n\nexport const addproduction = data => {\n  return dispatch => {\n    return api.production.addproduction(data).then(productionlistvalues => {\n      return dispatch(\n        productionCreated(normalize(productionlistvalues, productionListSchema))\n      );\n    });\n  };\n};\n\nexport const getproduction = () => {\n  return dispatch => {\n    return api.production.getproduction().then(productionlist => {\n      const productionlistvalues = productionlist.productiondata;\n      console.log(productionlistvalues);\n      return dispatch(\n        productionFetched(\n          normalize(productionlistvalues, [productionListSchema])\n        )\n      );\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass ProductionForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        totalcost: [null],\n        remarks: [null],\n        totalweight: [null],\n        readystock: [null],\n        firstround: [null],\n        secondround: [null],\n        thirdround: [null]\n      },\n      products: [],\n      productionorderno: '',\n      customerid: '',\n      item: '',\n      date: new Date(),\n      quantity: '',\n      subAssembly: [],\n      values: ['']\n    },\n    errors: {},\n    itemname:'',\n    materialoptionlistvalues: [],\n    productMaterial: [],\n    customerlistvalues: [],\n    productlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n  dummyProductMapping = {\n    props: [\n      { assembly: '50 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '40 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '6 mm MS Plate', unit: 'Kgs' },\n      { assembly: 'Prop nut', unit: 'Kgs' }\n    ]\n  };\n\n \n\n  componentWillReceiveProps(props) {\n   \n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    console.log(productlistvalues)\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const productionlistvalues = Object.keys(this.props.productionlistvalues);\n    const productionorderno =\n      productionlistvalues.length > 0\n        ? 1 + productionlistvalues.length\n        : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      customerlistvalues,\n      productlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        productionorderno\n      }\n    },()=>{\n      if(productionlistvalues.length == 0)\n        this.getProddata()\n    });\n  }\n\n  getProddata(){\n    if(Object.keys(this.props.productionlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n      .then(res => {\n         //if (res.data.productionlist.productiondata.length > 0) {\n           \n          let productionorderno =\n          res.data.productionlist.productiondata.length > 0 ? 1 + res.data.productionlist.productiondata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              productionorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let products2 = this.state.data.products;\n    console.log(products2[index].quantity)\n\n    let item = e.target.options[e.target.selectedIndex].text;\n    console.log(item)\n    const selected_id = e.target.value;\n    console.log(selected_id)\n    let productMaterial2 = [],found=0;\n    let obj = {},arr = []\n    productMaterial2.push(this.props.masteritemlistvalues[selected_id])\n    let itemname = productMaterial2[0].masteritemtypename\n    console.log(productMaterial2)\n \n    for(var i=0;i<this.state.productlistvalues.length;i++){\n      if(this.state.productlistvalues[i].productname.toString().trim().toLowerCase() == productMaterial2[0].masteritemdescription.toString().trim().toLowerCase()){\n        found = 1;\n        break;\n      }\n    }\n    if(found == 1){\n      if(this.state.productlistvalues[i].productMaterial != null && this.state.productlistvalues[i].productMaterial.length > 0){\n        this.state.productlistvalues[i].productMaterial.map((item,index) =>{\n          console.log(item)\n          obj = {}\n          obj['masteritemdescription'] = item.productqty\n          obj['masteritemuom'] = new Object()\n          obj['permeter'] = this.state.productlistvalues[i].permeter\n          obj['perfeet'] = this.state.productlistvalues[i].perfeet\n          obj['perinch'] = this.state.productlistvalues[i].perinch\n          obj['quantityPerMeter'] = this.state.productlistvalues[i].productsqtyinmeter[index] ? this.state.productlistvalues[i].productsqtyinmeter[index] : 0\n          obj['quantityPerKg'] = this.state.productlistvalues[i].productsweight[index] ? this.state.productlistvalues[i].productsweight[index] : 0\n          obj['masteritemuom']['uomname'] =  this.state.productlistvalues[i].productsuom[index]\n          arr.push(obj)\n        })\n      }\n      productMaterial2 = arr\n    }\n    console.log(arr)\n    let subAssembly = [];\n    console.log(productMaterial2)\n    let calculationArray = [];\n    productMaterial2.map(product => {\n\n      let calculationdata = { permeter: null, perfeet: null, perinch: null };\n      product.quantityPerMeter = parseInt(product.quantityPerMeter)\n      product.quantityPerKg = parseInt(product.quantityPerKg)\n      product.quantityPerMeter = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) : product.quantityPerMeter\n      product.quantityPerKg = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) * product.quantityPerKg : product.quantityPerMeter * product.quantityPerKg\n\n      subAssembly.push({\n        name: product.masteritemdescription,\n        unit: product.masteritemuom.uomname,\n        thickness: 0,\n        quantity: 0,\n        quantityPerMeter:product.quantityPerMeter,\n        quantityPerKg: product.quantityPerKg,\n        total: 0\n      });\n      if (product.permeter && product.permeter !== null) {\n        calculationdata.permeter = Number(product.permeter);\n      }\n\n      if (product.perfeet && product.perfeet !== null) {\n        calculationdata.perfeet = Number(product.perfeet);\n      }\n\n      if (product.perinch && product.perinch !== null) {\n        calculationdata.perinch = Number(product.perinch);\n      }\n      calculationArray.push(calculationdata);\n    });\n    console.log(this.state.data.products)\n    let products = this.state.data.products;\n    products[index].subAssembly = subAssembly;\n    products[index].item = item;\n    products[index].calculationArray = calculationArray;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, item, subAssembly, products },\n      itemname: 'Item code: ' + '\\n' + itemname,\n      productMaterial2\n    });\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    let productlistvalues = this.state.masteritemlistvalues;\n    console.log(productlistvalues)\n    productlistvalues = productlistvalues.filter((item) =>{\n      return item.masteritemtype.masteritemtypename == 'FinishedGoods'\n    })\n    productlistvalues.map((option, i) => {\n     option['masteritemdescription2'] = option.masteritemshortdescription != '' ?  option.masteritemshortdescription : option.masteritemdescription\n      \n     items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemdescription2}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            products: [],\n            subAssembly: []\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggelreload = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  onthicknessChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['thickness'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onQuantityChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantity'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // METER\n  onQuantityChangeMeter = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerMeter'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) / Number(calc.permeter);\n      subAssembly[index]['quantityPerKg'] = kg;\n    }\n\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // KG\n  onQuantityChangeKg = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerKg'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) * Number(calc.permeter);\n      subAssembly[index]['quantityPerMeter'] = kg;\n    }\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onTotalChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['total'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  addItemComp = () => {\n    let products = this.state.data.products;\n    let items = { item: '', quantity: 0, subAssembly: [] };\n    products.push(items);\n    this.setState({\n      ...this.state.data,\n      products\n    });\n  };\n  changeQuantity = (e, index) => {\n    let products = this.state.data.products;\n    products[index].quantity = e.target.value;\n    console.log(products[index])\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  render() {\n    const { data, errors, loading, success, productMaterial,itemname } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Production</ModalHeader>\n              <ModalBody>Production order is generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggelreload}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>\n              Production\n              <Button\n                color='primary'\n                disabled={loading}\n                className='lgn-loader'\n                style={{ float: 'right' }}\n              >\n                Submit\n                {/* {loading} */}\n              </Button>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='productionorderno'>Production No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='productionorderno'\n                      type='text'\n                      id='productionorderno'\n                      value={data.productionorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter production order no'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customerid'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name={`customerid`}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              {data.products &&\n                data.products.map((item, maninindex) => {\n                  return (\n                    <div>\n                      <Row>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='item'>Item</Label>\n                          <AvField\n                            type='select'\n                            name='item'\n                          \n                            onChange={e => this.selectitemchange(e, maninindex)}\n                            //required={true}\n                          >\n                            <option value=''>select Item</option>\n                            {this.createSelectItems()}\n                          </AvField>\n                          <div style={{'color':'#707070','fontSize':'12px','fontWeight':'bold'}}>{itemname}</div>\n                        </Col>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='quantity'>Quantity</Label>\n                          <AvField\n                            name='quantity'\n                            type='number'\n                            id='quantity'\n                            value={data.quantity || ' ' || null}\n                            onChange={e => this.changeQuantity(e, maninindex)}\n                          />\n                        </Col>\n                      </Row>\n                      {/* Get table based on selected value */}\n                      {data.products[maninindex].subAssembly.length > 0 && (\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>Sub Assembly</th>\n                              <th>UOM</th>\n                              <th>Thickness</th>\n                              <th>Quantity (in meters)</th>\n                              <th>Quantity (in Kgs)</th>\n                              {/* <th>Total</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data.products[maninindex].subAssembly.map(\n                              (product, index) => {\n                                return (\n                                  <tr>\n                                    <td>{product.name}</td>\n                                    <td>{product.unit}</td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`thickness${index}`}\n                                          type='number'\n                                          id={`thickness${index}`}\n                                          placeholder='thickness'\n                                          onChange={e =>\n                                            this.onthicknessChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In meterts'\n                                          onChange={e =>\n                                            this.onQuantityChangeMeter(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerMeter}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In Kgs'\n                                          onChange={e =>\n                                            this.onQuantityChangeKg(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerKg}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    {/* <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`total${index}`}\n                                          type='number'\n                                          id={`total${index}`}\n                                          placeholder='total'\n                                          onChange={e =>\n                                            this.onTotalChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td> */}\n                                  </tr>\n                                );\n                              }\n                            )}\n                          </tbody>\n                        </Table>\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                    onClick={e => this.addItemComp()}\n                  >\n                    Add item\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    productionlistvalues: state.productionlistvalues,\n    customerlistvalues: state.customerlistvalues,\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductionForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addproduction } from '../../../../actions/Production';\nimport { getproduction } from '../../../../actions/Production';\nimport { getproducts } from '../../../../actions/Product';\nimport ProductionForm from './ProductionForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddProduction extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getproduction();\n    this.props.getproducts();\n  }\n  componentWillReceiveProps() {\n    \n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addproduction(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Production</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProductionForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getproduction,\n    getCustomerList,\n    addproduction,\n    getproducts\n  }\n)(AddProduction);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Modal,\n  Label,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproduction } from '../../../../actions/Production';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nclass ViewProudction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success: false,\n    quantity : '',\n    productiondate:'',\n    description:'',\n    id:'',\n    qtyAvaillength:0,\n    isViewList:false,\n    productionTodayList: [],\n    productionlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getproduction();\n    console.log(this.props);\n\n    if (this.props.productionlistvalues) {\n      let quotationlist = Object.values(this.props.productionlistvalues);\n      //quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n      quotationlist.sort(function(a, b){\n        return parseInt(b.productionorderno) - parseInt(a.productionorderno);\n      });\n      let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            obj['items'].push(subitem.item)\n          })\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n        \n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n          \n        };\n      });\n      this.setState({ ...this.state, productionlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.productionlistvalues);\n    quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n    let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            if(parseInt(subitem.quantity) > 0)\n              obj['items'].push(subitem.item)\n\n          })\n        }\n        if(obj['items'].length > 0){\n          obj['items'] = obj['items'].join(\", \")\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n\n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n        };\n      });\n    this.setState({ ...this.state, productionlistvalues });\n    this.dataHandler(false);\n  }\n\n  viewTransaction(arr){\n    this.setState({\n      isViewList:true,\n      productionTodayList : arr\n    })\n  }\n  addTransaction(data,totalqty){\n    console.log(data)\n    let usedqty = 0\n    if(data.transactionHistrory && data.transactionHistrory.length > 0){\n      data.transactionHistrory.map((item) =>{\n        usedqty = usedqty + parseInt(item.qty)\n      })\n    }\n    this.setState({success:true,id:data._id,quantity:'',productiondate:'',description:'',qtyAvaillength: totalqty - usedqty},() =>{\n      console.log(this.state.qtyAvaillength)\n    })\n  }\n\n  updateTransaction = () => {\n    // updateproductionqty\n    if(this.state.quantity == '' || this.state.productiondate == ''){\n      window.alert('All fields are manditory.')\n      return\n    }\n    if(parseInt(this.state.quantity) > this.state.qtyAvaillength){\n      window.alert('Quantity should be less than or equal to : ' + this.state.qtyAvaillength)\n      return\n    }\n    console.log(this.state.id)\n    let data = {}\n    data['_id'] = this.state.id\n    data['transactionHistrory'] = [{'qty' : this.state.quantity,\n              'productiondate' : this.state.productiondate,\n              'description' : this.state.description}]\n\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/production/updateproductionqty`, {\n      data\n      })\n      .then(res => {\n          this.toggle();\n          this.props.getproduction();\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggle2 = () => {\n    this.setState({ ...this.state, isViewList: false });\n  };\n  \n  onhandlerChange = e => { \n    this.setState({\n      quantity : e.target.value\n    });\n  };\n\n  onhandlerChange2 = e => { \n    this.setState({\n      description : e.target.value\n    });\n  };\n\n  \n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      productiondate : date\n    });\n  };\n\n  render() {\n    const { loading, count, isViewList,productionlistvalues,success,quantity,productiondate,description,qtyAvaillength,productionTodayList } = this.state;\n    let headerBlock = '',contentBlock = ''\n    if(isViewList){\n      headerBlock = \n      (\n      <div className=\"row meetingspace\">\n        <div className=\"col split1\">Quantity</div>\n        <div className=\"col split1\">Date</div>\n        <div className=\"col split1\">Remarks</div>\n      </div>\n    )\n\n\n    contentBlock = productionTodayList.map((value,index) => {\n    value['description'] = value.description ? value.description : '-'\n    value.productiondate = \n    (new Date(value.productiondate).getDate() < 10 ? ('0' + new Date(value.productiondate).getDate()) : new Date(value.productiondate).getDate()) + '/' +\n    (new Date(value.productiondate).getMonth()+1 < 10 ? ('0' + (new Date(value.productiondate).getMonth()+1) ) : (new Date(value.productiondate).getMonth()+1)) + '/' + new Date(value.productiondate).getFullYear()\n    return (\n      <div key={index} className=\"row meetingspace\">\n        <div className=\"col split2\">{value.qty}</div>\n        <div className=\"col split2\" >{value.productiondate}</div>\n        <div className=\"col split2\" >{value.description}</div>\n\n      </div>\n    )\n  });\n\n  }\n\n\n\n\n    const columnvalue = [\n      {\n        label: 'Production no',\n        field: 'productionorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'item',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Quantity',\n        field: 'quantity',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer',\n        field: 'customer',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: \"View Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      },\n      {\n        label: \"Add Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n\n         {!!isViewList ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={isViewList}\n              toggle={this.toggle2}\n              className={this.props.className}\n            >\n              <ModalHeader toggle2={this.toggle2}>View transaction <br/>\n              \n              </ModalHeader>\n              <ModalBody style={{'margin': '10px'}}>\n                {headerBlock}\n                {contentBlock}\n               \n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle2}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Add transaction <br/>\n              <span style={{ 'fontSize': '14px','fontWeight': 'bold'}}>Note: Available quantity is {qtyAvaillength}</span>\n              </ModalHeader>\n              <ModalBody>\n                \n                 <Label className='small-font-size' for=\"Quantity\">Quantity(*)</Label>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Quantity\" name=\"Quantity\" value={quantity} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n                 \n                  <Label className='small-font-size' for=\"productiondate\">Production Date(*)</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={productiondate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"productiondate\"\n                  />\n\n                 <Label className='small-font-size' for=\"description\">Remarks</Label>\n                  <textarea className=\"form-control\" placeholder=\"Remarks\" name=\"description\" value={description} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange2} ></textarea>\n                 \n\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.updateTransaction}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={productionlistvalues}\n            columnvalue={columnvalue}\n            className=\"productionlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productionlistvalues: state.productionlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproduction }\n)(ViewProudction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./purchaseorder.css\";\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass PurchaseOrderForm extends React.Component {\n  \n  state = {\n    data: {\n      isEditdone:false,\n      supplierdetail: {\n        id: null,\n        suppliernumber: \"\",\n        suppliername: \"\",\n        supplieraddress1: \"\",\n        supplieraddress2: \"\",\n        suppliercontactlistvalue: [],\n        city: \"\",\n        pincode: \"\",\n        state: \"\",\n        country: \"\",\n        suppliergstnumber: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      ponumber: \"\",\n      refno: \"\",\n      subject: \"\",\n      requestdeliverydate: \"\",\n      suppliercontactid: \"\",\n      values: [\"\"],\n      quotationno: null,\n      currency: \"5d3437e21c9d4400008624b7\",\n      totalvalue: null,\n      gst: null,\n      cgst:'',\n      sgst:'',\n      igst:'',\n      scheduledays:'',\n      schedulepayment:''\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:''\n   \n  };\n  \n  componentDidMount(){\n    console.log( Object.keys(this.props.purchaseorderlistvalues))\n    if(this.props.ID != undefined){\n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const supplierdetaillistvalue = Object.values(\n        this.props.supplierdetaillistvalue\n      );\n      const supplierdetaillistvalueobject = this.props.supplierdetaillistvalue;\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n  \n\n      this.setState({\n        ...this.state,\n        supplierdetaillistvalue,\n        supplierdetaillistvalueobject,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      },()=>{\n        this.getPODetails(this.props.ID)\n      });\n    }\n    else{\n      \n\n      if(Object.keys(this.props.purchaseorderlistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder//getpurchaseorderrlist`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n     \n            const purchaseorderlistlength =\n\n            res.data.purchaseorderlist.purchaseorderlistdata.length > 0 ? res.data.purchaseorderlist.purchaseorderlistdata.length : 0;\n      \n            let ponumber = (1 + purchaseorderlistlength).toString();\n       \n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                ponumber\n              }\n            });\n          \n            \n          }\n        \n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n    }\n\n  }\n\n  getPODetails(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorder/${id}`)\n    .then(res => {\n\n      this.dataHandler(false)\n      if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n        let founddata = res.data.purchaseorderlist.purchaseorderlistdata;\n        let podetail = {...this.state.data}\n \n         podetail.supplierdetail.suppliername = founddata[0].suppliername;\n         podetail.supplierdetail.supplierid = founddata[0].supplierid;\n        \n        const newState = Object.assign({}, this.state);\n        newState.data.ponumber = founddata[0].ponumber;\n        newState.data.refno = founddata[0].referenceno;\n        newState.data.values = founddata[0].addeditemlist;\n        newState.data.subject = founddata[0].subject;\n        newState.data.requestdeliverydate = new Date(founddata[0].requestdeliverydate);\n        newState.data.currency = founddata[0].currencyid;\n        newState.data.totalvalue =  founddata[0].totalvalue;\n        newState.data.gst = '0';\n        newState.data.cgst = founddata[0].cgst;\n        newState.data.sgst = founddata[0].sgst;\n        newState.data.igst = founddata[0].igst;\n        newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n        newState.data.schedulepayment = founddata[0].schedulepayment ? founddata[0].schedulepayment : \"\";\n        \n        newState.data.suppliercontactid = founddata[0].suppliercontactid;\n        if(founddata[0].addeditemlist.length > 0){\n          \n          for(var i=0;i<founddata[0].addeditemlist.length;i++){\n            newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n            newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom)\n            newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n            newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n            newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n            newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n            newState.data.selectedItemlist.itemlocation.push(founddata[0].addeditemlist[i].itemlocation)\n          }\n        }\n\n\n        this.setState(newState);\n      \n        console.log(this.state)\n      }\n      else{\n        this.setState({count:0})\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    \n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const purchaseorderlistlength =\n      purchaseorderlist.length > 0 ? purchaseorderlist.length : 0;\n\n    let ponumber = (1 + purchaseorderlistlength).toString();\n    if(this.props.ID != undefined){\n      ponumber = this.state.data.ponumber\n    }\n    this.setState({\n      ...this.state,\n      supplierdetaillistvalue,\n      supplierdetaillistvalueobject,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        ponumber\n      }\n    });\n\n    if(this.state.data.supplierdetail.supplierid && this.state.data.supplierdetail.supplierid != '' && this.props.ID != undefined && !this.state.isEditdone){\n        this.setState({isEditdone:true},()=>{\n          this.handleChange2(this.state.data.supplierdetail.supplierid)\n        })\n    }\n    //console.log(props.supplierdetaillistvalue)\n    \n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    \n    const selected_id = e.target.value;\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        supplierdetail\n      }\n    });\n\n  };\n\n  handleChange2 = e => {\n    const selected_id = e\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    console.log(supplierdetail)\n    \n    if(supplierdetail != undefined){\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          supplierdetail\n        }\n      });\n    }\n \n    \n\n  };\n\n  totalValue = () => {\n    // const { totalcost } = this.state.data.selectedItemlist;\n    // if (totalcost.length > 0) {\n    //   let totalvalue = totalcost\n    //     .map((value, i) => {\n    //       if (value) {\n    //         return parseFloat(value);\n    //       } else {\n    //         return 0;\n    //       }\n    //     })\n    //     .reduce((a, b) => {\n    //       return a + b;\n    //     });\n    //   // Check if tax exists and handle tax  \n    //   let {gst} = this.state.data;\n    //   if(gst !== null) {\n    //     gst = parseFloat(gst).toFixed(2);\n    //   let per = (gst * totalvalue) / 100;\n    //   totalvalue = parseFloat(Number(per)+Number(totalvalue)).toFixed(2);\n    //   }\n    //   this.setState({\n    //     ...this.state.data,\n    //     data: {\n    //       ...this.state.data,\n    //       totalvalue\n    //     }\n    //   });\n    // }\n    this.calculatePercentageAmount()\n  };\n\n\n\n  calculatePercentageAmount = () => {\n\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n\n            // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(totalvalue)\n      ? Number(parseFloat(totalvalue).toFixed(2))\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n      console.log(cgst)\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['totalvalue']: grandtotal\n      }\n    });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        console.log(selected_item)\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        //  selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //                                                                                           : selected_item.masteritemshortdescription\n        selectedItemlist.itemdescription[index] = selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },() =>{\n          this.totalValue();\n        });\n\n      }\n    \n      }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  createSelectSupplier = () => {\n    let items = [];\n    const supplierdetaillistvalue = this.state.supplierdetaillistvalue;\n    supplierdetaillistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.suppliername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      this.totalValue()\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectSupplierContact = () => {\n    let items = [];\n    const suppliercontactlistvalues = this.state.data.supplierdetail\n      .suppliercontactlistvalue;\n    suppliercontactlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option._id}>\n          {option.suppliercontactname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    },()=>{\n      console.log(this.state.data.values)\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    console.log(values)\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    },()=>{\n      this.totalValue()\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || \"\";\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const {\n      values,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      totalvalue,\n      ponumber,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const data = {\n      supplierdetail,\n      AddedIteminfo,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      ponumber,\n      totalvalue,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        \n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order edited successfully' });\n          }\n         \n      \n        \n   \n      })\n      .catch(err => {\n        \n          this.setState({ errors: err.response.data.errors, loading: false });\n        \n        \n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  \n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Purchase Order</ModalHeader>\n              <ModalBody>{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Purchase Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">PO Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"ponumber\"\n                      type=\"number\"\n                      id=\"ponumber\"\n  \n                      value={data.ponumber || null}\n                      onChange={this.onChange}\n                      \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter PO Number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"refno\">Reference No </Label>\n                   \n                    <AvField\n                      name=\"refno\"\n                      type=\"text\"\n                      id=\"refno\"\n                      value={data.refno}\n                      onChange={e => this.onhandlerChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"totalcost\">Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"currency\">Currency</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`currency`}\n                      required={true}\n                      value={data.currency || null}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select currency</option>\n                      {this.createSelectCurrencyItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"quotationno\">Request Delivery Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.requestdeliverydate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"schedulepayment\">Payment Schedule</Label>\n                  <AvField\n                      name=\"schedulepayment\"\n                      type=\"text\"\n                      id=\"schedulepayment\"\n                      value={data.schedulepayment || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                \n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`suppliername`}\n                      value={data.supplierdetail.supplierid}\n                      //required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select supplier name</option>\n                      {this.createSelectSupplier()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliernumber\"\n                      type=\"number\"\n                      readOnly\n                      id=\"suppliernumber\"\n                      value={data.supplierdetail.suppliernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier Number\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GST </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliergstnumber\"\n                      type=\"text\"\n                      readOnly\n                      id=\"suppliergstnumber\"\n                      value={data.supplierdetail.suppliergstnumber}\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier GST Number\"\n                        },\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliercontactinfo\">\n                      Supplier Contact Name\n                    </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      \n                      name={`suppliercontactid`}\n                      value={data.suppliercontactid}\n                      required={true}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select contact</option>\n                      {this.createSelectSupplierContact()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"supplieraddress\">Supplier Address</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"supplieraddress\"\n                      type=\"text\"\n                      id=\"supplieraddress\"\n                      readOnly\n                      value={\n                        data.supplierdetail.supplieraddress1 ||\n                        \"\" + \" \" + data.supplierdetail.supplieraddress2 ||\n                        \"\" + \" \" + data.supplierdetail.city ||\n                        \"\" + \" \" + data.supplierdetail.state ||\n                        \"\" + \" \" + data.supplierdetail.country ||\n                        \"\" + \" \" + data.supplierdetail.pincode ||\n                        \"\"\n                      }\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                  <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>  \n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                \n                    <AvField\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                 \n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"cgst\">CGST(%)</Label>\n                    \n                    <AvField\n                      name=\"cgst\"\n                      type=\"text\"\n                      id=\"cgst\"\n                      value={data.cgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"sgst\">SGST(%)</Label>\n                    \n                    <AvField\n                      name=\"sgst\"\n                      type=\"text\"\n                      id=\"sgst\"\n                      value={data.sgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"igst\">IGST(%)</Label>\n                    \n                    <AvField\n                      name=\"igst\"\n                      type=\"text\"\n                      id=\"igst\"\n                      value={data.igst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className=\"purchaseorder-item-row\">\n                {data.values.map((values, index) => {\n                  \n                  \n        const itemnameinfo = values.id != undefined ? (   \n          <AvField\n          type=\"select\"\n          value={values.id}\n          name={`selectitem${index}`}\n          onChange={e => this.selectitemchange(e, index)}\n          required={true}\n        >\n          <option value=\"\">select Item</option>\n          {this.createSelectItems()}\n        </AvField>\n  \n        ) : \n          (\n               <AvField\n               type=\"select\"\n               name={`selectitem${index}`}\n               value={\n                data.selectedItemlist.id[index]\n              }\n               onChange={e => this.selectitemchange(e, index)}\n               required={true}\n             >\n               <option value=\"\">select Item</option>\n               {this.createSelectItems()}\n             </AvField>\n             \n          )\n\n\n\n                  return (\n                    <div key={index}>\n                      <div className=\"purchaseorder-table\">\n                      \n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for=\"selectitem\">Item Code</Label>\n                              <span className=\"required-label\">*</span>\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type=\"text\"\n                                readOnly\n                                id=\"masteritemdescription\"\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      \"Please enter Item Description\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                style={{ width: \"150px\" }}\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] \n                                }\n                              >\n                                <option value=\"\">select</option>\n                                {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] \n                                }\n                              >\n                                <option value=\"\">uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`location${index}`}>\n                                Delivery Location\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                name={`location${index}`}\n                                onChange={e => this.locationChange(e, index)}\n                                \n                                 value={data.selectedItemlist.itemlocation[index]}\n                              >\n                                <option value=\"\">select location</option>\n                                {this.createSelectLocationItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                name={`costperunit${index}`}\n                                type=\"number\"\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index] \n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage:\n                                      \"Please enter valid costperunit\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type=\"number\"\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: \"Please enter Item Quantity\"\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage: \"Please enter valid quantity\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                name={`totalcost${index}`}\n                                type=\"number\"\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : \" \"\n                                }\n                                onChange={e => this.onChange(e, index)}\n                                // validate={{\n                                //   minLength: {\n                                //     value: 1,\n                                //     errorMessage: \"Total Cost value is required\"\n                                //   }\n                                // }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type=\"button\"\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: \"30px\" }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PurchaseOrderForm);\n","import axios from \"axios\";\n\nexport default {\n  suppliercontact: {\n    addSupplierContact: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/addsuppliercontact`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.supplierContactdata;\n        });\n    },\n    getSupplierContact: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/getsuppliercontact`\n        )\n        .then(res => {\n          return res.data.suppliercontactlist;\n        });\n    }\n  },\n  supplierdetail: {\n    addsupplierdetails: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/addsupplierdetail`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getSupplierDetails: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/getSupplierdetail`\n        )\n        .then(res => {\n          return res.data.supplierdetaillist;\n        });\n    },\n    updateSupplierContact: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/updateSupplierdetail?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/supplierapi\";\nimport { SUPPLIER_CONTACT_LIST, SUPPLIER_DETAIL_LIST } from \"../Services/types\";\nimport {\n  supplierContactListSchema,\n  supplierDetailListSchema\n} from \"../Schemas/schemas\";\n\nexport const suppplierContactListFetched = suppliercontactlistvalue => {\n  return {\n    type: SUPPLIER_CONTACT_LIST,\n    suppliercontactlistvalue\n  };\n};\n\nexport const suppplierDetailListFetched = supplierdetaillistvalue => {\n  return {\n    type: SUPPLIER_DETAIL_LIST,\n    supplierdetaillistvalue\n  };\n};\nexport const addSupplierContact = data => {\n  return dispatch => {\n    return api.suppliercontact.addSupplierContact(data);\n  };\n};\n\nexport const addSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.addsupplierdetails(data);\n  };\n};\n\nexport const getSupplierContact = () => {\n  return dispatch => {\n    return api.suppliercontact\n      .getSupplierContact()\n      .then(suppliercontactlist => {\n        const suppliercontactlistvalue =\n          suppliercontactlist.suppliercontactlistdata;\n        return dispatch(\n          suppplierContactListFetched(\n            normalize(suppliercontactlistvalue, [supplierContactListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const getSupplierDetails = () => {\n  return dispatch => {\n    return api.supplierdetail.getSupplierDetails().then(supplierdetaillist => {\n      const supplierdetaillistvalue = supplierdetaillist.supplierdetaillistdata;\n      return dispatch(\n        suppplierDetailListFetched(\n          normalize(supplierdetaillistvalue, [supplierDetailListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const updateSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.updateSupplierContact(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  currency: {\n    getCurrencyList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/currency/getcurrency`)\n        .then(res => {\n          return res.data.currencylist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/currency\";\nimport { CURRENCY_LIST } from \"../Services/types\";\nimport { currencyListSchema } from \"../Schemas/schemas\";\n\nfunction currencyListFetched(currencylist) {\n  return {\n    type: CURRENCY_LIST,\n    currencylist\n  };\n}\n\nexport const getCurrencyList = () => {\n  return dispatch => {\n    return api.currency.getCurrencyList().then(currencylist => {\n      const currencylistvalue = currencylist.currencydata;\n      return dispatch(\n        currencyListFetched(normalize(currencylistvalue, [currencyListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport PurchaseOrderForm from \"./PurchaseOrderForm/PurchaseOrderForm\";\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  addPurchaseOrder,\n  updatePurchaseOrder,\n  getPurchaseOrder,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport axios from \"axios\";\nclass purchaseOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n    \n    \n  }\n  submit = data => {\n\n    this.dataHandler(true);\n    if(this.props.match.params.id != undefined){\n      \n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatePurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n      \n      // axios\n      // .post(`${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,{\n      //   data\n      // })\n      // .then(res => {\n  \n      //   this.dataHandler(false)\n      //   if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n  \n      //   }\n      //   else{\n      //     this.setState({count:0})\n      //   }\n      // },\n      // error =>{\n      //   this.dataHandler(false)\n      //   this.setState({ success: false, message:'Server error.' });\n      // });\n\n      \n    }\n    else{\n      return this.props\n      .addPurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/view_purchaseorderlist\">Purchase Order</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <PurchaseOrderForm submit={this.submit} ID={ID} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    addPurchaseOrder,\n    updatePurchaseOrder,\n    getPurchaseOrder,\n    getMasterItemTypes\n  }\n)(purchaseOrder);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getPurchaseOrder } from \"../../../actions/Transaction\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\n\nclass ViewPurchaseOrderlist extends React.Component {\n  state = {\n    loading: true,\n    purchaseorderlistvalues: [],\n    count: 0\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  componentDidMount() {\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n\n    this.props.getPurchaseOrder();\n    \n    let purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.supplierstate +\n            \"\" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    // this.dataHandler(false);\n  }\n\n  componentWillReceiveProps(props) {\n    let purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    console.log(purchaseorderlist)\n    //purchaseorderlist= purchaseorderlist.sort((a, b) => b.ponumber.toString().toLowerCase().localeCompare(a.ponumber.toString().toLowerCase()));\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\" style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updatePO(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/view_purchaseorderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updatePO = id => {\n    let path = `/purchase_order_update/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { count, purchaseorderlistvalues, loading } = this.state;\n    const columnvalue = [\n\n      {\n        label: \"PO Number\",\n        field: \"ponumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Reference Number\",\n        field: \"referenceno\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Address\",\n        field: \"address\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Action\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Purchase Order List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {loading ? <CustomLoader /> : null}\n          <div className=\"container mg-20\">\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={purchaseorderlistvalues}\n                className=\"viewpurchaseorder\"\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    getMasterItemTypes,\n    getPurchaseOrder }\n)(ViewPurchaseOrderlist);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport React from 'react';\nimport client from '../../../Images/client.png';\nimport logo from '../../../Images/logo.png';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: '6px',\n    paddingRight: 20,\n    backgroundColor: 'white'\n  },\n  columnSection: {\n    paddingRight: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  padd6: {\n    paddingTop: '6px',\n    paddingBottom: '6px'\n  },\n  padding2: {\n    padding: 5\n  },\n\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: '100%',\n    paddingTop: 20,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  headerwidthNew: {\n    width: 140,\n    padding: 20\n  },\n  headerwidthdate: {\n    fontSize: 12,\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 210,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  fontsize18bold: {\n    fontSize: 10,\n    fontWeight: 900,\n    paddingBottom: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, textAlign: 'left', paddingLeft: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ purchaseorderlistvalue, data_cond }) => {\n  const ponumber = purchaseorderlistvalue.ponumber.toString();\n  const financialYear = purchaseorderlistvalue.financialyear.toString();\n  const data = purchaseorderlistvalue.addeditemlist;\n  let totaleachitem = 0\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n\n\n\n  let totalrs = purchaseorderlistvalue.totalvalue\n    ? purchaseorderlistvalue.totalvalue\n    : '';\n  const tax = purchaseorderlistvalue.cgst ? purchaseorderlistvalue.cgst : '';\n  let cgst = purchaseorderlistvalue.cgst && purchaseorderlistvalue.cgst != '' ? purchaseorderlistvalue.cgst : 0\n  cgst = parseFloat(cgst)\n  let cgstval = parseFloat(totaleachitem) * (cgst/100)\n  cgstval = parseFloat(cgstval)\n  cgstval = cgstval.toFixed(2)\n\n  let sgst = purchaseorderlistvalue.sgst && purchaseorderlistvalue.sgst != '' ? purchaseorderlistvalue.sgst : 0\n  sgst = parseFloat(sgst)\n  let sgstval = parseFloat(totaleachitem) * (sgst/100)\n  sgstval = parseFloat(sgstval)\n  sgstval = sgstval.toFixed(2)\n\n  let igst = purchaseorderlistvalue.igst && purchaseorderlistvalue.igst != '' ? purchaseorderlistvalue.igst : 0\n  igst = parseFloat(igst)\n  let igstval = parseFloat(totaleachitem) * (igst/100)\n  igstval = parseFloat(igstval)\n  igstval = igstval.toFixed(2)\n\n  console.log(purchaseorderlistvalue.scheduledays)\n\n  let scheduledays = purchaseorderlistvalue.scheduledays ? purchaseorderlistvalue.scheduledays : ''\n  let schedulepayment = purchaseorderlistvalue.schedulepayment ? purchaseorderlistvalue.schedulepayment : ''\n  const taxpercentage = purchaseorderlistvalue.gst\n    ? purchaseorderlistvalue.gst / 100\n    : '';\n  const grandtotal =  totalrs+igstval+cgstval+sgstval;\n  const selectecontactlist = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactname\n    : '';\n  const suppliercontactnumber = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactnumber\n    : '';\n  const cond_data = data_cond;\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          {/* <Text style={styles.logo}></Text> */}\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works:</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            visit us: www.pondhan.com\n          </Text>\n        </View> */}\n        <Text style={styles.headerwidth}><Header>Purchase Order</Header> \n        \n        \n        \n        </Text>\n\n        <View style={[styles.section, { paddingBottom: 15, marginTop: 8 }]}>\n        \n        <Text style={styles.refstyle}>\n            PO No. PSPL/{financialYear}/{ponumber}\n          </Text>\n          {/* <Text style={styles.refstyle}>\n            Ref No.{purchaseorderlistvalue.referenceno}\n          </Text> */}\n          <Text style={styles.headerwidthdate}>\n            Date:{purchaseorderlistvalue.requestdeliverydate}\n          </Text>\n        </View>\n\n        <View style={styles.columnSection}>\n          <View>\n            <View>\n              <Text style={styles.fontsize18bold}>Vendor Address:</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>M/S {purchaseorderlistvalue.suppliername}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.supplieraddress1}{' '}\n                {purchaseorderlistvalue.supplieraddress2}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.suppliercity}{' '}\n                {purchaseorderlistvalue.supplierstate}{' '}\n                {purchaseorderlistvalue.supplierpincode}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>{purchaseorderlistvalue.suppliercountry}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>Mobile: {suppliercontactnumber}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>GSTIN No: {purchaseorderlistvalue.suppliergstnumber}</Text>\n            </View>\n          </View>\n          <View>\n            <Text style={styles.fontsize18}>Billing & Delivery Address: {'\\n'}{'\\n'}\n              Pondhan Scaffolding Pvt Ltd.{'\\n'}\n              Plot No : 40&41, Rd. No 5{'\\n'}\n              3rd Phase, KIADB- Obadenahalli{'\\n'}\n              Industrial Area, Doddabalapura,{'\\n'}\n              Bangalore Rural- 561203{'\\n'}\n              GSTIN No : 29AAGCP4018E1ZJ{'\\n'}\n              Contact Person : Nehal Ganapathy{'\\n'}\n              Contact Number : 9844039150/9900069150\n\n      </Text>\n          </View>\n        </View>\n        <View >\n          <Text style={styles.kindattend}>Kind Attn:{selectecontactlist}</Text>\n        </View>\n  \n        <View >\n          <Text style={styles.kindattend}>{'\\n'}</Text>\n        </View>\n        <View>\n          <Text style={styles.main}>Dear Sir,</Text>\n        </View>\n        <View>\n          <Text style={[styles.main, styles.padd6]}>\n            With ref to the discussions we had with you, we are pleased to place our order for the below mentioned\n  material as per the rates quoted by you and as per the T&C given below. ( Ref No ({purchaseorderlistvalue.referenceno}))\n          </Text>\n        </View>\n        <Table style={(styles.section, styles.padding)} data={data}>\n          <TableHeader textAlign={'center'}>\n            <TableCell weighting={0.08}>\n              <Text style={styles.headerfont}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.headerfont}>Material Description</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Rate</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              \n              weighting={0.08}\n              getContent={r => <Small>{r.slno}</Small>}\n            />\n            <DataTableCell\n              style={{ maxWidth: 200, wordWrap: 'break-word' }}\n              weighting={0.6}\n              getContent={r => <Description>{r.itemname}</Description>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.itemdescription}</Small>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Total.</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>CGST@{cgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{cgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>SGST@{sgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{sgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>IGST@{igst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{igstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>\n                {totalrs}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n      \n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n     \n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View> */}\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}>Terms & conditions:</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>1. Payment Schedule: {schedulepayment} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>2. Delivery Schedule: {scheduledays} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            3. Unloading : Exclusive . (M/S Pondhan’s Scope)\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            4. Painting of material : If applicable\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            5. The weight mentioned above will be subject to toleranc of +/-\n            0.5%. Difference in weight beyond tolerance limit will not be\n            accepted and any shortfall in weight will be deducted from your\n            Invoice as applicable.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            6. All material shall be as per IS standard and acceptable quality.\n            You will take rejected material back at your cost.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            7. Weighing slip shall be sent along with each supply.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            8. Please specify the order No on challan & Bills.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            9. All your bills must contain our PO number, receipt along with the\n            bill, failing which the same will not be passed for the payment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            10. In the event you fail to mention GST number & HSN code of\n            purchaser and seller on the Invoice, the GST component will be\n            released only after the compliance of the same. (mandatory as per\n            the provision of GST ACT.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            11. Please ensure your GST Invoice is submitted to us immediately\n            after supply of materials, which should contain our GST number also.\n            Our GST no is : 29AAGCP4018E1ZJ & PAN is AAGCP4018E.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            12. We will recover the GST amount in case of mismatch of GST credit\n            with the GST return filed by the vendor.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            13. Above price is inclusive of loading but excludes transportation\n            charges & unloading comes under the perview of Pondhan Scaffolding\n            Pvt Ltd.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            14. The Transport Vehicle must have fitness certificate, emission\n            certificate, Inscurance, RC documents and all statutory vehicle\n            documents & Driver should have valid driving Liscenceas well as\n            driver alongwith unloaders compulsory to wear safety helmets,\n            reflection jackets and Shoes also.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            15. Special Terms : Relevant Eway bill has to be attached alongwith\n            each and every consignment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            16. Special Note : Relevant manufacturer test certificate has to be\n            submittedalongwith the material. (if applicable).\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            17. Special Note : Please ensure to put up your signature alongwith\n            your company seal, on TAX INVOICE without fail.\n          </Text>\n        </View>\n        <View >\n          <Text>{'\\n'}</Text>\n        </View>\n\n        <View>\n          <Text style={styles.main}>Note: {purchaseorderlistvalue.subject}</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            Kindly sign and return the duplicate copy of this PO as a token of\n            acceptance. {'\\n'} Thanking you, {'\\n'} {'\\n'} For Pondhan\n            Scaffolding Pvt Ltd. {'\\n'} {'\\n'} Authorised Signatory {'\\n'}\n          </Text>\n        </View>\n        <View style={styles.row}>\n          <Text style={styles.main}>Prepared By:</Text>\n          <Text style={styles.main}>Checked By:</Text>\n        </View>\n\n        <View>\n        <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getSupplierDetails } from '../../../actions/Supplier';\nimport { getPurchaseOrder } from '../../../actions/Transaction';\nimport logo from '../../../Images/logo.png';\nimport MyDocument from './Component';\nimport './ViewPurchaseOrder.scss';\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    purchaseorderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getSupplierDetails();\n    const purchaseorderid = this.props.match.params.id;\n    const purchaseorderlistvalues = this.props.purchaseorderlistvalues[\n      purchaseorderid\n    ];\n    console.log(purchaseorderlistvalues)\n    purchaseorderlistvalues.requestdeliverydate = moment(\n      purchaseorderlistvalues.requestdeliverydate\n    ).format('DD MMM, YYYY');\n    purchaseorderlistvalues.addeditemlist = purchaseorderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          itemdescription: itemlist.quantity\n            ? itemlist.quantity.toString()\n            : '',\n          quantity: itemlist.costperunit ? itemlist.costperunit.toString() : '',\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : ''\n        };\n      }\n    );\n    const supplierid = purchaseorderlistvalues.supplierid;\n    const suppliercontactid = purchaseorderlistvalues.suppliercontactid;\n    const supplierlistvalue = this.props.supplierdetaillistvalue[supplierid];\n    const selectedcontact = supplierlistvalue.suppliercontactlistvalue.filter(\n      contactid => {\n        if (contactid._id == suppliercontactid) {\n          return contactid;\n        }\n      }\n    );\n    console.log('__SELECTED_CONTACT_LIST____');\n    console.log(selectedcontact);\n    purchaseorderlistvalues.selectedcontactlist = selectedcontact;\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          purchaseorderlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          purchaseorderlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        purchaseorderlistvalues.financialyear = \"2020-21\";\n      }\n    );\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        purchaseorderlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/view_purchaseorderlist');\n          }, 300);\n        });\n      \n      }\n    } else {\n    }\n  }\n\n  render() {\n    //const link = \"blob:http://localhost:3000/0ef925bb-e930-4ea4-b861-2621aa6447ad\"\n\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                purchaseorderlistvalue={this.state.purchaseorderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getPurchaseOrder, getSupplierDetails }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport client from '../../../../../Images/client.png';\nimport CustomLoader from \"../../../../../Components/loader/loader\";\nclass QuotationForm extends React.Component {\n\n  state = {\n    customerID: null,\n    isRemovedCalled: false,\n    isVisible: true,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: \"\",\n        customernumber: \"\",\n        customergstnumber: \"\",\n        customercontactnumber: \"\",\n        customeraddress1: \"\",\n        customeraddress2: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\",\n        pincode: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemdiscountamount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      quotationnumber: null,\n      subject: \"\",\n      gst: null,\n      totalvalue: \"\",\n      values: [],\n      tcharge: \"\",\n      transportationgst: \"\",\n      transitinsurance:\"\",\n      ws: \"\",\n      loadingcharge: \"\",\n      scheduledays:\"\",\n      date: new Date()\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: true,\n    success: false,\n    visible: false\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getQuotationDetails(id) {\n    this.dataHandler(true)\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/quotation/getsinglequotation/${id}`)\n      .then(res => {\n\n\n        if (res.data.quotationlist.quotationdata.length > 0) {\n          let founddata = res.data.quotationlist.quotationdata;\n\n          const newState = Object.assign({}, this.state);\n          newState.data.customerdetail.id = founddata[0].customerid;\n\n          newState.data.values = founddata[0].addeditemlist;\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n\n\n          newState.data.subject = founddata[0].subject;\n          newState.data.date = new Date(founddata[0].date);\n          newState.data.quotationnumber = founddata[0].quotationnumber;\n          localStorage.setItem('QTno', founddata[0].quotationnumber)\n          newState.data.totalvalue = founddata[0].totalvalue;\n          newState.data.gst = founddata[0].tax;\n          newState.data.ws = founddata[0].ws != undefined && founddata[0].ws != null ? founddata[0].ws : '';\n          newState.data.tcharge = founddata[0].tcharge != undefined && founddata[0].tcharge != null ? founddata[0].tcharge : '';\n          newState.data.transportationgst = founddata[0].transportationgst != undefined && founddata[0].transportationgst != null ? founddata[0].transportationgst : '';\n          \n          newState.data.transitinsurance = founddata[0].transitinsurance != undefined && founddata[0].transitinsurance != null ? founddata[0].transitinsurance : '';\n          \n          newState.data.loadingcharge = founddata[0].loadingcharge != undefined && founddata[0].loadingcharge != null ? founddata[0].loadingcharge : '';\n          newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].itemdiscountamount = founddata[0].addeditemlist[i].itemdiscountamount == null || founddata[0].addeditemlist[i].itemdiscountamount == '' ?\n                founddata[0].addeditemlist[i].itemdiscountamount = 0 : founddata[0].addeditemlist[i].itemdiscountamount\n              founddata[0].addeditemlist[i].itemdiscountamount = (founddata[0].addeditemlist[i].itemdiscountamount).toString()\n\n\n\n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n              newState.data.selectedItemlist.itemdiscountamount.push(founddata[0].addeditemlist[i].itemdiscountamount)\n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.ID != undefined) {\n      this.getQuotationDetails(this.props.ID)\n    }\n    else{\n      setTimeout(() =>{\n        this.dataHandler(false)\n      },100)\n      // quotation/getquotation\n    }\n      \n    const quotationlistvalues = Object.keys(this.props.quotationlistvalues);\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n\n\n    if (this.props.ID == undefined) {\n\n      let quotationnumber = '';\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n      this.setState({\n        data: {\n          ...this.state.data,\n          quotationnumber\n        }\n      })\n\n    }\n    // else{\n    //   alert(this.state.data.quotationnumber)\n    // }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    //this.dataHandler(false)\n  }\n\n  componentWillReceiveProps(props) {\n    const quotationlistvalues = Object.keys(props.quotationlistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n    let quotationnumber = ''\n    if (this.props.ID == undefined) {\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n    }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom,\n      data: {\n        ...this.state.data,\n        quotationnumber\n      }\n    });\n  }\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      if (name === 'gst') {\n        this.totalValue();\n      }\n    });\n  };\n\n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onSubjectHandler = e => {\n\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },()=>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange2 = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      }, () => {\n        console.log(this.state.data.values)\n      });\n    }\n  }\n\n  selectitemchange = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate._id;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n  \n        if (this.props.ID == undefined) {\n          selectedItemlist.itemdiscount[index] = \"0\";\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n          selectedItemlist.quantity[index] = (1).toString();\n          selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n        }\n  \n  \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        }, () => {\n          this.totalValue();\n        });\n      }\n     \n    }\n   \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || \"\";\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : \"\";\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    console.log(unitcost)\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      //   selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost) - (parseFloat(unitcost) * discount) / 100).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(selectedItemlist.costperunit[index]) -\n        (parseFloat(selectedItemlist.costperunit[index]) * selectedItemlist.itemdiscount[index]) / 100).toFixed(2);\n\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n\n  /*itemdiscountChange = (e, index) => {\n    \n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n    \n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n        selectedItemlist.itemdiscountamount[index] = null;\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };*/\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      // Check if tax exists and handle tax  \n      let { gst } = this.state.data;\n      if (gst !== null) {\n        gst = parseFloat(gst).toFixed(2);\n        let per = (gst * totalvalue) / 100;\n        totalvalue = parseFloat(Number(per) + Number(totalvalue)).toFixed(2);\n      }\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n\n    let selected_id = e.target ? e.target.value : e\n    this.updateQuotation(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail\n      }\n    });\n\n  };\n\n  handleClick = e => {\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, [\"\"]],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, \"0\"],\n          itemdiscountamount: [...this.state.data.selectedItemlist.itemdiscountamount, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"1\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    }, () => {\n      console.log(this.state.data.values)\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    console.log(index)\n\n    let removeItem = { ...this.state.data };\n    console.log(removeItem.selectedItemlist)\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n    let itemdiscountamount = removeItem.selectedItemlist.itemdiscountamount;\n\n    values.splice(index, 1);\n\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n\n    costperunit.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    quantity.splice(index, 1);\n    itemdiscountamount.splice(index, 1);\n\n    totalcost.splice(index, 1);\n\n    console.log(removeItem.selectedItemlist)\n\n\n\n    //setTimeout(() =>{\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          itemdiscountamount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      },\n      isVisible: false,\n      isRemovedCalled: true\n    }, () => {\n      // setTimeout(() =>{\n      this.setState({\n        'isVisible': true\n      })\n      console.log(this.state.data.values)\n      console.log(this.state.data.selectedItemlist)\n      if (this.state.data.selectedItemlist.id.length > 0) {\n        this.state.data.selectedItemlist.id.filter((item, index) => {\n          if (typeof item == 'string' && item != '') {\n\n            this.selectitemchange2(item, index)\n          }\n\n        })\n\n      }\n      // },200)\n\n      this.totalValue();\n\n    });\n    //},200)\n\n\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const {\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const itemdiscountamount = selectedItemlist.itemdiscountamount;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.itemdiscountamount = itemdiscountamount[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    let data = {\n      customerdetail,\n      AddedIteminfo,\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    };\n    console.log(transportationgst)\n    data['quotationnumber'] = data['quotationnumber'] == '' ? localStorage.getItem('QTno') : data['quotationnumber']\n    data['customeraddress'] = document.getElementById('customeraddress').value ? document.getElementById('customeraddress').value : ''\n\n    this.setState({ loading: true });\n\n    if (localStorage.getItem('customerId') != null) {\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      let obj = {}\n      obj['customerid'] = localStorage.getItem('customerId')\n      obj['Qno'] = this.state.data.quotationnumber\n      obj['quotation'] = date\n\n\n\n      if (this.props.ID != undefined) {\n        console.log(data)\n        this.props\n          .submit(data)\n          .then(() => {\n            this.dataHandler(false)\n            this.setState({ loading: false, errors: {}, success: true });\n            this.onShowAlert();\n          })\n          .catch(err => {\n            this.setState({ loading: false, errors: {}, success: true });\n            if (err.response) {\n              this.setState({ errors: err.response.data.errors, loading: false });\n              this.onShowAlert();\n            }\n\n          });\n\n      }\n      else {\n        axios\n          .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`, obj)\n          .then(res => {\n            this.props\n              .submit(data)\n              .then(() => {\n                this.setState({ loading: false, errors: {}, success: true });\n                this.myFormRef.reset();\n                this.onShowAlert();\n              })\n              .catch(err => {\n                this.setState({ errors: err.response.data.errors, loading: false });\n                this.onShowAlert();\n              });\n          },\n            error => {\n              this.setState({ errors: error.response.data.errors, loading: false });\n              this.onShowAlert();\n            });\n      }\n    }\n    else {\n      this.props\n        .submit(data)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n          this.onShowAlert();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n          this.onShowAlert();\n        });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id)\n      // this.setState({ loading: true,transaction:[] });\n      // axios\n      // .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n      // .then(res => {\n      //   this.setState({ loading: false });\n      //   if(res.data.customerlist.customerdata.length > 0){\n      //     let customervalues = res.data.customerlist.customerdata;\n      //     if(customervalues.length > 0){\n      //       customervalues = customervalues.filter((item,index) =>{\n      //         return index == customervalues.length-1\n      //       })\n      //       if(customervalues.length == 1){\n      //         this.setState({ transaction: customervalues },() =>{\n      //           console.log(this.state.transaction)\n      //         });\n      //       }\n      //     }\n      //   }\n      // },\n      // error =>{\n      //   this.setState({ loading: false });\n      // });\n    }\n\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success, visible, isVisible } = this.state;\n    const successmsg = this.props.ID != undefined ? 'Quotation is updated successfully' : 'Quotation is added successfully'\n    const customerID = data.customerdetail ? (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n      value={data.customerdetail.id}\n      required={true}\n      onChange={e => this.handleChange(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    ) : (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n  \n      required={true}\n      onChange={e => this.handleChange(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    )\n\n    const customerNumber = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      value={data.customerdetail.customernumber}\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerGST = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" readOnly\n      id=\"customergstnumber\"\n      value={data.customerdetail.customergstnumber}\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" \n      readOnly\n      id=\"customergstnumber\"\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerAddress = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n      value={\n        data.customerdetail.customeraddress1 +\n        \" \" +\n        data.customerdetail.customeraddress2 +\n        \" \" +\n        data.customerdetail.city +\n        \" \" +\n        data.customerdetail.state +\n        \" \" +\n        data.customerdetail.country +\n        \" \" +\n        data.customerdetail.pincode\n      }\n      onChange={this.onCustomerChange}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n\n      onChange={this.onCustomerChange}\n    />\n    )\n\n\n\n\n\n    const dataelem = isVisible ? (\n\n      <div className=\"purchaseorder-item-row\">\n        {data.values.map((values, index) => {\n\n          const itemnameinfo = values.id != undefined ? (\n            <AvField\n              type=\"select\"\n              value={values.id._id}\n              name={`selectitem${index}`}\n              onChange={e => this.selectitemchange(e, index)}\n              required={true}\n            >\n              <option value=\"\">select Item</option>\n              {this.createSelectItems()}\n            </AvField>) :\n            (\n              <AvField\n                type=\"select\"\n                name={`selectitem${index}`}\n                value={\n                  data.selectedItemlist.id[index]\n                }\n                onChange={e => this.selectitemchange(e, index)}\n                required={true}\n              >\n                <option value=\"\">select Item</option>\n                {this.createSelectItems()}\n              </AvField>\n\n            )\n          return (\n            <div key={index}>\n\n              <div className=\"purchaseorder-table\">\n                <Row key={index}>\n                  <Col sm={1}>\n\n                    <AvGroup>\n\n                      <Label for=\"selectitem\">Item Code</Label>\n                      <span className=\"required-label\">*</span>\n                      {itemnameinfo}\n\n\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label for={`masteritemdescription${index}`}>\n                        Description\n                    </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`masteritemdescription${index}`}\n                        type=\"text\"\n                        readOnly\n                        id=\"masteritemdescription\"\n                        value={\n                          data.selectedItemlist.itemdescription[index]\n                        }\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              \"Please enter Item Description\"\n                          }\n\n\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemtype${index}`}>Type</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        style={{ width: \"150px\" }}\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemtype${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemtype[index]\n                        }\n                      >\n                        <option value=\"\">select</option>\n                        {this.createSelectItemTypes()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemuom${index}`}>UOM</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemuom${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemuom[index]\n                        }\n                      >\n                        <option value=\"\">uom</option>\n                        {this.createSelectUomItems()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`discount${index}`}>Discount %</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`itemdiscount${index}`}\n                        type=\"number\"\n                        id={`itemdiscount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscount[index]\n                        }\n                        onChange={e =>\n                          this.itemdiscountChange(e, index)\n                        }\n                        validate={{\n                          minLength: {\n                            value: 1,\n                            errorMessage:\n                              \"item Discount value is required\"\n                          },\n                          maxLength: { value: 100 },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid value\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`quantity${index}`}>Quantity</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`quantity${index}`}\n                        type=\"number\"\n                        id={`quantity${index}`}\n                        value={\n                          data.selectedItemlist.quantity[index]\n                        }\n                        onChange={e => this.quantityChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Item Quantity\"\n                          },\n                          minLength: {\n                            value: 1,\n                            errorMessage: \"quantity value is required\"\n                          },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid quantity\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`costperunit${index}`}>\n                        MRP Cost\n                    </Label>\n                      <AvField\n                        name={`costperunit${index}`}\n                        type=\"number\"\n                        id={`costperunit${index}`}\n                        value={\n                          data.selectedItemlist.costperunit[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Please enter cost'\n                          },\n\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage:\n                              \"Please enter valid costperunit\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`itemdiscountamount${index}`}>\n                        Discount Cost\n                    </Label>\n                      <AvField\n                        name={`itemdiscountamount${index}`}\n                        type=\"number\"\n                        id={`itemdiscountamount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscountamount[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`totalcost${index}`}>\n                        Total Cost\n                    </Label>\n                      <AvField\n                        name={`totalcost${index}`}\n                        type=\"number\"\n                        id={`totalcost${index}`}\n                        value={\n                          data.selectedItemlist.totalcost[index]\n                            ? data.selectedItemlist.totalcost[index]\n                            : \" \"\n                        }\n                        onChange={e => this.onChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <Button\n                      type=\"button\"\n                      onClick={e => this.removeClick(e, index)}\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      -\n                  </Button>\n                  </Col>\n                </Row>\n              </div>\n\n\n            </div>\n          );\n        })}\n      </div>\n\n\n    ) : null\n\n\n\n    return (\n      <div>\n        <div>\n\n          {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Quotation</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert color=\"danger\" isOpen={visible} Label>\n              Quotation number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Quotation</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">Quotation Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"quotationnumber\"\n                      type=\"number\"\n                      id=\"quotationnumber\"\n                      value={data.quotationnumber || null}\n                      onChange={this.onhandlerChange}\n\n                      validate={{\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"totalcost\" Label>Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"date\">Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.date}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control small-font-size\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label F\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    {customerNumber}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GST </Label>\n                    {customerGST}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customeraddress\">Customer Address</Label>\n                    {customerAddress}\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n              <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={this.onSubjectHandler}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                  \n                    <AvField\n                      Label\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                  \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"loadingcharge\">\n                      Loading and Handling Charges </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"loadingcharge\"\n                      type=\"number\"\n                      id=\"loadingcharge\"\n                      value={data.loadingcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Loading and Handling Charges\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ws\">\n                      W.S</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"ws\"\n                      type=\"number\"\n                      id=\"ws\"\n                      value={data.ws || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter W.S\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transitinsurance\">\n                    Transit Insurance</Label>\n     \n                    <AvField\n                      Label\n                      name=\"transitinsurance\"\n                      type=\"number\"\n                      id=\"transitinsurance\"\n                      value={data.transitinsurance || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />  \n                  </AvGroup>\n                </Col>\n\n                \n\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"tcharge\">\n                      Transportation Charges</Label>\n     \n                    <AvField\n                      Label\n                      name=\"tcharge\"\n                      type=\"number\"\n                      id=\"tcharge\"\n                      value={data.tcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transportationgst\">Transportation GST(%) </Label>\n                    <AvField\n                      Label\n                      name=\"transportationgst\"\n                      type=\"number\"\n                      id=\"transportationgst\"\n                      value={data.transportationgst || \"\"} \n                      onChange={this.onSubjectHandler}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n\n              {dataelem}\n\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(QuotationForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addquotation } from \"../../../../actions/quotation\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updatequotation } from \"../../../../actions/quotation\";\n\nimport QuotationForm from \"./QuotationForm/QuotationForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddQuotation extends React.Component {\n\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  }\n\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    \n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatequotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      \n      return this.props\n      .addquotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n          <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <QuotationForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addquotation,\n    updatequotation,\n    getCustomerList,\n    getquotation\n  }\n)(AddQuotation);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getquotation } from '../../../../actions/quotation';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\nclass ViewQuotation extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    quotationlistvalues: []\n  };\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n\n    let quotationlist = Object.values(this.props.quotationlistvalues);\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n  \n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              // style={{ 'fontSize': '0.8rem' }}\n              Label\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              Label\n              // style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.quotationlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.quotationnumber.toLowerCase().localeCompare(a.quotationnumber.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateQuotation(id) {\n    let path = `/editquotation/${id}`;\n    this.props.history.push(path);\n  }\n\n  updateButton = id => {\n    let path = `/view_quotationpdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, quotationlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: 'Quotation Number',\n        field: 'quotationnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n    \n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Action',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n       \n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <DataTable\n            rowvalues={quotationlistvalues}\n            columnvalue={columnvalue}\n            className=\"quotationlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getquotation \n  }\n)(ViewQuotation);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport justDial from '../../../../Images/js.jpg';\nimport makeInIdia from '../../../../Images/mk.jpg';\nimport proud from '../../../../Images/proud.jpg';\nimport scaff from '../../../../Images/scaff.jpg';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\n\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n\n  pagepadding: {\n    padding: 35\n  },\n  section: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  tableHeader: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    // backgroundColor: '#548DD4',\n    // width: '100%',\n    // height: 40,\n    // color: 'white',\n    // textAlign: 'center',\n    // padding: 5\n  },\n  refno: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  cutoff: {\n    // overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n    // width:'150px',\n    //wordBreak: 'break-all'\n\n    'whiteSpace': 'normal',\n    'wordBreak': 'breakAll',\n\n  },\n\n  bgblue: {\n    backgroundColor: '#000'\n  },\n  padding5: {\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  fontbold: {\n    fontWeight: 'bolder'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  smallicon: {\n    width: 25\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 300,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n\n  padding1: {\n    paddingTop: 6\n  },\n\n  kindattend: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  padding: {\n    padding: 0\n  },\n  main: {\n    fontSize: 10\n  },\n  flexview: {\n    fontSize: 10,\n    display: 'flex'\n  },\n  tableheaderbgcolor: {\n    backgroundColor: '#000',\n    color: 'red',\n    background: '#000'\n  },\n  footerfixed: {\n    // position: 'absolute',\n    // bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst RedBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'red'}}>{children}</Text>\n  )\n}\n\nconst BlackBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'black'}}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ quotationlistvalues, data_cond }) => {\n  console.log(quotationlistvalues)\n\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n\n  const data = quotationlistvalues.addeditemlist;\n  let totaleachitem = 0;\n  console.log('data');\n  console.log(data);\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n  // const data = [\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   }\n  // ];\n  console.log(quotationlistvalues)\n\n  let customeraddress = quotationlistvalues.customeraddress ? quotationlistvalues.customeraddress : ''\n  let loadingcharges = quotationlistvalues.loadingcharge != undefined\n    && quotationlistvalues.loadingcharge != null ?\n    parseFloat(quotationlistvalues.loadingcharge) : 0.00\n\n  let ws = quotationlistvalues.ws != undefined\n    && quotationlistvalues.ws != null ?\n    parseFloat(quotationlistvalues.ws) : 0.00\n\n  let transitinsurance = quotationlistvalues.transitinsurance != undefined\n    && quotationlistvalues.transitinsurance != null ?\n    parseFloat(quotationlistvalues.transitinsurance) : 0.00\n\n    \n\n  let tcharge = quotationlistvalues.tcharge != undefined\n    && quotationlistvalues.tcharge != null ?\n    parseFloat(quotationlistvalues.tcharge) : 0.00\n\n\n  loadingcharges = loadingcharges.toFixed(2)\n  let tchargegst = 0.00\n  ws = ws.toFixed(2)\n  transitinsurance = transitinsurance.toFixed(2)\n  tcharge = tcharge.toFixed(2)\n  let subtotal = parseFloat(totaleachitem) + parseFloat(loadingcharges) + parseFloat(ws) + parseFloat(transitinsurance)\n  subtotal = subtotal.toFixed(2)\n  let subtotalgst = parseFloat(subtotal * 0.18)\n  subtotalgst = subtotalgst.toFixed(2)\n  let totalincludegst = parseFloat(subtotal) + parseFloat(subtotalgst)\n  totalincludegst = totalincludegst.toFixed(2)\n\n  let transportationgstper=0,transportationgst;\n  transportationgst = quotationlistvalues.transportationgst && quotationlistvalues.transportationgst != '' ? parseFloat(quotationlistvalues.transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n\n  tchargegst = tcharge * transportationgst\n  tchargegst = tchargegst.toFixed(2)\n  let grandtotal = parseFloat(tcharge) + parseFloat(totalincludegst) + parseFloat(tchargegst)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  let scheduledays = quotationlistvalues.scheduledays ? quotationlistvalues.scheduledays + ' days' : ''\n\n  const totalrs = quotationlistvalues.totalvalue\n    ? quotationlistvalues.totalvalue\n    : '';\n  const tax = quotationlistvalues.tax ? quotationlistvalues.tax : '';\n  const taxpercentage = quotationlistvalues.tax\n    ? quotationlistvalues.tax / 100\n    : '';\n  //const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = quotationlistvalues.selectedcontactlist[0]\n  //     ? quotationlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const refno = 'Quotation no:PSPL/Quote/' + quotationlistvalues.quotationnumber + '/2020-21'\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: '#000' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n\n\n        <View style={[styles.section]}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n          \n         \n        </View>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={data}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ background: '#000' }}\n          >\n            <TableCell weighting={0.08}>\n              <Text style={[styles.headerfont, {}]}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.tableHeader}>Particular</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>\n                After Dist Rate/Each{'\\n'}\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              weighting={0.08}\n              style={styles.padding}\n              getContent={r => r.slno}\n            />\n            <DataTableCell\n              style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n              weighting={0.6}\n              getContent={r => {\n                return (\n                  <View>\n                    <Text style={{ fontSize: 11 }}><Small\n                    >{r.itemname}</Small>{'\\n'}</Text>\n                    {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                  </View>\n                );\n              }}\n            />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            <DataTableCell\n              weighting={0.2}\n              style={styles.padding}\n              getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n            />\n            <DataTableCell\n              weighting={0.2}\n              style={styles.padding}\n              getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n            />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Loading and Handling Charges per ton Rs185.00 x (No of tons)</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{loadingcharges}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>W.S</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{ws}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}> Transit Insurance</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transitinsurance}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Sub Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@18%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotalgst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalincludegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Transportation Charges</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@{transportationgstper}%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tchargegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                {grandtotal}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n{/* \n        <Text style={[styles.headerfont, { textAlign: 'right' }]}>\n        {'\\n'} \n            {amountinwords}\n        </Text> */}\n\n       \n\n        {/* <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View> */}\n      </Page>\n\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text>We hope the rates quoted are reasonable and looking forward for your kind orders.</Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} >Thanking you </Text>\n          <Text style={styles.padding1}>Yours truly,</Text>\n          <Text style={styles.brandname}>For PONDHAN SCAFFOLING PVT LTD</Text>\n        </View>\n\n\n\n        <View style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\n          <Image style={{ width: 70, height: 70 }} src={sign} />\n          <Image style={{ width: 70, height: 70 }} src={seal} />\n        </View>\n\n        <View>\n          {/* <Image src={seal} style={styles.smallicon} />\n          <Image src={sign} style={styles.smallicon} /> */}\n          <Text style={styles.brandname}>A.B. Ponnappa {'\\n'}\n            Managing Director\n          </Text>\n          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.brandname} > Note:</Text>\n          \n          <Text style={styles.padding1}>Delivery Schedule: {scheduledays}</Text>\n          <Text style={styles.padding1}>1, 100% Payment Along With Purchase Order.</Text>\n          <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n          <Text style={styles.padding1}>3, Transportation Charges extra as actual.</Text>\n\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.brandname} > Bank Details:-</Text>\n          <Text style={styles.padding1}>Name: Pondhan scaffolding Pvt ltd.</Text>\n          <Text style={styles.padding1}>Bank: Vijaya Bank Branch: Byatarayanapura</Text>\n          <Text style={styles.padding1}>City: Bangalore-560092</Text>\n          <Text style={styles.padding1}>A/C No: 104006211000006.</Text>\n          <Text style={styles.padding1}>IFSC: Code: VIJB-0001040.</Text>\n        </View>\n\n        <View>\n            <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={[styles.footerfixed]}>\n          <Image src={client} />\n        </View>\n\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport \"./ViewQuotation.scss\";\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    quotationlistvalues: {},\n    status: false\n  };\n  componentDidMount() {\n    this.props.getquotation();\n\n    const quotationid = this.props.match.params.id;\n    const quotationlistvalues = this.props.quotationlistvalues[quotationid];\n    quotationlistvalues.requestdeliverydate = moment(\n      quotationlistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    quotationlistvalues.addeditemlist = quotationlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        console.log(itemlist)\n        itemlist.itemdiscountamount = parseFloat(itemlist.itemdiscountamount)\n        itemlist.itemdiscountamount = itemlist.itemdiscountamount.toFixed(2)\n        itemlist.quantity = parseInt(itemlist.quantity)\n        itemlist.totalcost = itemlist.itemdiscountamount != '0.00' ? \n        parseFloat(itemlist.itemdiscountamount) * parseInt(itemlist.quantity) : \n        parseFloat(itemlist.totalcost) * parseInt(itemlist.quantity) \n  \n        itemlist.totalcost = parseFloat(itemlist.totalcost)\n        itemlist.totalcost = itemlist.totalcost.toFixed(2)\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.id.masteritemunitwt && itemlist.id.masteritemunitwt != \"undefined\" && \n          itemlist.id.masteritemunitwt != \"null\"\n            ? itemlist.id.masteritemunitwt\n            : \"-\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n          itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n            itemdiscountamount:itemlist.itemdiscountamount\n            ? itemlist.itemdiscountamount\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost\n            : \"\"\n        };\n      }\n    );\n    const customerid = quotationlistvalues.customerid;\n    const customernumber = quotationlistvalues.customernumber;\n    const customername = quotationlistvalues.customername;\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(quotationlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        quotationlistvalues,\n        status: true\n      });\n    }, 2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        });\n\n        setTimeout(() => {\n          document.getElementById(\"D1\").click();\n          this.props.history.push(\"/quotationlist\");\n        }, 200);\n    \n      }\n    } else {\n    }\n  }\n\n\n\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, quotationlistvalues,link } = this.state;\n    return (\n      <div>\n        <div className=\"pdf-class\">\n        Downloading file.Please wait.\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                \n                quotationlistvalues={this.state.quotationlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getquotation }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass SupplierContactForm extends React.Component {\n  state = {\n    data: {\n      suppliercontactname: \"\",\n      suppliercontactnumber: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Supplier Contact is added Successfully</Alert>\n          ) : null}\n          {!!errors.suppliercontactnumber ? (\n            <Alert color=\"danger\">Supplier Contact Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\">Full Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliercontactname\"\n                        type=\"text\"\n                        id=\"fullname\"\n                        value={data.suppliercontactname}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Your Name\"\n                          },\n                      \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"phone\">Phone</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"text\"\n                        name=\"suppliercontactnumber\"\n                        id=\"phone\"\n                        value={data.suppliercontactnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter your phone number\"\n                          },\n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage:\n                              \"Your phone number must be composed only with numbers\"\n                          },\n                          minLength: {\n                            value: 10,\n                            errorMessage:\n                              \"Your phone number must be between 10 and 12 numbers\"\n                          },\n                          maxLength: {\n                            value: 12,\n                            errorMessage:\n                              \"Your phone number be between 10 and 12 numbers\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierContactForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierContactForm from \"../SupplierForm/SupplierContact\";\nimport {\n  addSupplierContact,\n  getSupplierContact\n} from \"../../../../actions/Supplier\";\n\nclass SupplierContact extends React.Component {\n  componentDidMount() {\n    this.props.getSupplierContact();\n  }\n  submit = data => {\n    return this.props.addSupplierContact(data);\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Admin Dashboard</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/transaction_page\">Transaction</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/supplier\">Supplier</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Supplier Contact</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div>\n          <SupplierContactForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierContact.propTypes = {\n  addSupplierContact: PropTypes.func.isRequired,\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addSupplierContact, getSupplierContact }\n)(SupplierContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [\"\"],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const suppliercontactlistvalue = Object.values(\n      props.suppliercontactlistvalue\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const count = supplierdetaillistvalue.length;\n    const suppliernumber = count > 0 ? 10001 + count : 10001;\n    this.setState({\n      ...this.state,\n      suppliercontactlistvalue,\n      data: { ...this.state.data, suppliernumber }\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function (value, i) {\n      var obj = {};\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is added successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody >Supplier data is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>{\" \"}\n               \n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert Label color=\"danger\">Supplier Number alreadt exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert Label color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString()}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                        \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                          minLength: {\n                            value: 3,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          maxLength: {\n                            value: 300,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader Label>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader Label>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            designation{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              maxLength: {\n                                value: 100,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          Label\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                  <AvGroup>\n                                    <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                    <span className=\"required-label\">*</span>\n                                    <AvField\n                                      type=\"select\"\n                                      name=\"contactnumber\"\n                                      onChange={this.onChange}\n                                      required={true}\n                                      disabled={true}\n                                    >\n                                      <option value=\"\">123</option>\n                                      <option value=\"\">345</option>\n                                      <option value=\"\"></option>\n                                      {this.createSelectNumbers()}\n                                    </AvField>\n                                  </AvGroup>\n                                </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    suppliercontactlistvalue: state.suppliercontactlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(SupplierDetail);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailForm from \"../SupplierForm/SupplierDetail\";\nimport {\n  getSupplierContact,\n  addSupplierDetails,\n  getSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierContact();\n    this.props.getSupplierDetails();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetail.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { getSupplierContact, addSupplierDetails, getSupplierDetails }\n)(SupplierDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetailUpdateForm extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [null],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"],\n      mongoid: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.supplierdetaillistvalue;\n    const suppliercontactname = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactname\n    );\n\n    const mongoid = data.suppliercontactlistvalue.map(obj => obj._id);\n    const suppliercontactnumber = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactnumber\n    );\n\n    const suppliercontactdesignation = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactdesignation\n    );\n\n    const suppliercontactemail = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactemail\n    );\n    data.mongoid = mongoid;\n    data.values = suppliercontactname;\n    data.suppliercontactnamelist = suppliercontactname;\n    data.suppliercontactdesignation = suppliercontactdesignation;\n    data.suppliercontactnumber = suppliercontactnumber.map((item, i) => {\n      return item ? item.toString() : item;\n    });\n    data.suppliercontactemail = suppliercontactemail;\n    this.setState({ ...this.state.data, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactid = this.state.data.mongoid;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function(value, i) {\n      var obj = {};\n      obj.id = suppliercontactid[i] || null;\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is updated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody>Supplier data is updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert color=\"danger\">Supplier Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString() || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                  \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                       \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            Contact designation{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact designation name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact designation name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                      <AvGroup>\n                                        <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                        <span className=\"required-label\">*</span>\n                                        <AvField\n                                          type=\"select\"\n                                          name=\"contactnumber\"\n                                          onChange={this.onChange}\n                                          required={true}\n                                          disabled={true}\n                                        >\n                                          <option value=\"\">123</option>\n                                          <option value=\"\">345</option>\n                                          <option value=\"\"></option>\n                                          {this.createSelectNumbers()}\n                                        </AvField>\n                                      </AvGroup>\n                                    </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(SupplierDetailUpdateForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailUpdateForm from \"../SupplierForm/SupplierDetailUpdate\";\nimport {\n  getSupplierDetails,\n  updateSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetailUpdate extends React.Component {\n  state = {\n    supplierdetaillistvalue: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierDetails();\n    const supplierdetailid = this.props.match.params.id;\n    const supplierdetaillistvalue = this.props.supplierdetaillistvalue[\n      supplierdetailid\n    ];\n    this.setState({ supplierdetaillistvalue });\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, supplierdetaillistvalue } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Set Up</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail Update</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailUpdateForm\n            supplierdetaillistvalue={supplierdetaillistvalue}\n            submit={this.submit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetailUpdate.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails, updateSupplierDetails }\n)(SupplierDetailUpdate);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem, Button, Alert } from \"reactstrap\";\nimport { getSupplierDetails } from \"../../../../actions/Supplier\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass Supplierlist extends React.Component {\n  state = {\n    supplierdetaillist: [],\n    count: 0,\n    loading: false\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getSupplierDetails();\n  }\n  componentWillReceiveProps(props) {\n    let supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    //supplierdetaillistvalue= supplierdetaillistvalue.sort((a, b) => b.suppliernumber.toString().toLowerCase().localeCompare(a.suppliernumber.toString().toLowerCase()));\n\n    supplierdetaillistvalue.sort(function(a, b){\n      return parseInt(b.suppliernumber) - parseInt(a.suppliernumber);\n    });\n    const count = supplierdetaillistvalue.length;\n    const supplierdetaillist = supplierdetaillistvalue.map(\n      (supplierdata, i) => {\n        return {\n          suppliernumber: supplierdata.suppliernumber,\n          suppliername: supplierdata.suppliername,\n          suppliergstnumber: supplierdata.suppliergstnumber,\n          supplierAddress:\n            supplierdata.supplieraddress1 +\n            \" \" +\n            supplierdata.supplieraddress2 +\n            \" \" +\n            supplierdata.city +\n            \" \" +\n            supplierdata.state +\n            \" \" +\n            supplierdata.country +\n            \" \" +\n            supplierdata.pincode,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(supplierdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          )\n        };\n      }\n    );\n    this.setState({ supplierdetaillist, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/supplierdetail_update/${id}`;\n    this.props.history.push(path);\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { supplierdetaillist, count, loading } = this.state;\n    const columnvalue = [\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier GST\",\n        field: \"suppliergstnumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Address\",\n        field: \"supplierAddress\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier list</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={supplierdetaillist}\n                className=\"supplierlist\"\n              />\n            </div>\n          ) : (\n              <div>\n                <Alert color=\"info\">Please add Supplier details</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails }\n)(Supplierlist);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass ItemQuantitySearch extends React.Component {\n  state = {\n    data: {\n      locationid: \"\",\n      itemid: \"\"\n    },\n    locationlistvalue: [],\n    masteritemlistvalues: [],\n    loading: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    console.log('XXXXXXXXXXXXX');\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n  selectitemchange = () => { };\n  \n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          ...this.state,\n          loading: false\n        });\n      })\n      .catch(err => { });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Search Item Quantity</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>location</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"locationid\"\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>Item</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name={`itemid`}\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select Item</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    type=\"submit\"\n                    onClick={this.submit}\n                    style={{ marginTop: \"30px\" }}\n                  >\n                    Find\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ItemQuantitySearch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Alert } from \"reactstrap\";\nimport ItemSearch from \"./TotalQuantityForm/ItemQuantitySearch\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport {\n  totalitemvaluesearch,\n  getMasterItemList\n} from \"../../../actions/Transaction\";\nimport { ar } from \"date-fns/locale\";\n\nclass TotalQuantity extends React.Component {\n  state = {\n    itemlist: [],\n    success: false\n  };\n  componentDidMount() {\n    this.props.getLocationList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    return this.props.totalitemvaluesearch(data).then(data => {\n   \n       //console.log(itemsArray)\n      // var i=0,j,arr = [],count=0,isAllDuplicate=false;\n      // for(i=0;i<data.itemlist.length;i++){\n      //   j=i;\n      //   j = j + 1;\n      //   console.log(data.itemlist[i].itemquantity)\n      //   if(j < data.itemlist.length){\n      //     if(data.itemlist[i].itemname == data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[i].itemquantity)\n      //       isAllDuplicate = true;\n      //     }\n      //     else if(data.itemlist[i].itemname != data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[j].itemquantity)\n      //       if(count > 0)\n      //         data.itemlist[i].itemquantity = count\n      //       arr.push(data.itemlist[i])\n      //       count=0;\n      //       isAllDuplicate=false;\n      //     }\n      //   }\n      //   else if(j == data.itemlist.length){\n      //     console.log(data.itemlist[i].itemquantity)\n      //      if(count > 0)\n      //          data.itemlist[i].itemquantity = data.itemlist[i].itemquantity + count\n      //   }\n\n        \n      // }\n\n      // //console.log(count)\n      // //console.log(i)\n      // if(isAllDuplicate){\n      //   i > data.itemlist.length - 1 ?  arr.push(data.itemlist[i-1]) : arr.push(data.itemlist[i])\n      // }\n        \n\n      // console.log(arr)\n\n      // data.itemlist = arr;\n      \n      \n      const itemlist = data.itemlist.map(item => {\n        return {\n          // locationname: item.locationname,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist,\n        success: true\n      });\n   \n    });\n  };\n  render() {\n    const { success, itemlist } = this.state;\n    const columnvalue = [\n      // {\n      //   label: \"location\",\n      //   field: \"locationname\",\n      //   sort: \"asc\",\n      //   width: 40\n      // },\n      {\n        label: \"Item Code\",\n        field: \"itemname\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Item Description\",\n        field: \"itemdescription\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Quantity\",\n        field: \"itemquantity\",\n        sort: \"asc\",\n        width: 40\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transaction</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Total Item Quantity</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ItemSearch submit={this.submit} />\n        </div>\n        <div className=\"mg-t-20\">\n          {itemlist.length > 0 ? (\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={itemlist}\n              className=\"totalquantity\"\n            />\n          ) : (\n              <div>\n                <Alert color=\"info\" Label>Result Not Found.</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getLocationList, totalitemvaluesearch, getMasterItemList }\n)(TotalQuantity);\n","import axios from 'axios';\n\nexport default {\n  order: {\n    addorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/addorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    updateaddorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/updateworkorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    getorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n        .then(res => {\n          return res.data.orderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/order';\nimport { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\nimport { orderListSchema } from '../Schemas/schemas';\n\nconst orderCreated = orderlist => {\n  return {\n    type: ADD_ORDER,\n    orderlist\n  };\n};\n\nconst orderFetched = orderlist => {\n  return {\n    type: ORDER_FETCHED,\n    orderlist\n  };\n};\n\nexport const addorder = data => {\n  return dispatch => {\n    return api.order.addorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\nexport const updateaddorder = data => {\n  return dispatch => {\n    return api.order.updateaddorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getorder = () => {\n  return dispatch => {\n    return api.order.getorder().then(orderlist => {\n      console.log(orderlist);\n      const orderlistvalues = orderlist.orderdata;\n      console.log(orderlistvalues);\n      return dispatch(\n        orderFetched(normalize(orderlistvalues, [orderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass OrderForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: [],\n        totalweight: [],\n        readystock: [],\n        firstround: [],\n        secondround: [],\n        thirdround: []\n      },\n      workorderno: '',\n      companydetails: '',\n      contactperson: '',\n      date: new Date(),\n      officeno: '',\n      deliveryschedule: new Date(),\n      orderdate: new Date(),\n      deliveryaddress: '',\n      distance: '',\n      sitecontactperson: '',\n      gstno: '',\n      pono: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n\n    if (this.props.ID != undefined) {\n      this.getWorkorderDetails(this.props.ID)\n    }\n  }\n\n  getWorkorderDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getsingleworkorder/${id}`)\n      .then(res => {\n\n         if (res.data.orderlist.orderdata.length > 0) {\n           let founddata = res.data.orderlist.orderdata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.workorderno = founddata[0].workorderno;\n           newState.data.companydetails = founddata[0].companydetails;\n           newState.data.contactperson = founddata[0].contactperson;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.officeno = founddata[0].officeno;\n           newState.data.deliveryschedule =  new Date(founddata[0].deliveryschedule);\n           newState.data.orderdate =  new Date(founddata[0].orderdate);\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.distance = founddata[0].distance;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.pono = founddata[0].pono\n           newState.data.sitecontactperson = founddata[0].sitecontactperson\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n               \n              newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.totalweight.push(founddata[0].addeditemlist[i].totalweight)\n              newState.data.selectedItemlist.readystock.push(founddata[0].addeditemlist[i].readystock)\n              newState.data.selectedItemlist.firstround.push(founddata[0].addeditemlist[i].firstround)\n              newState.data.selectedItemlist.secondround.push(founddata[0].addeditemlist[i].secondround)\n              newState.data.selectedItemlist.thirdround.push(founddata[0].addeditemlist[i].thirdround)\n   \n\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState,()=>{\n              console.log(this.state.data.selectedItemlist)\n            });\n\n         \n         \n          // if (founddata[0].addeditemlist.length > 0) {\n          //   founddata[0].addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index);\n          //   })\n          // }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  componentWillReceiveProps(props) {\n\n    console.log(this.props.orderlistvalues);\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const orderlistvalues = Object.keys(this.props.orderlistvalues);\n    if (this.props.ID == undefined) {\n      const workorderno =\n      orderlistvalues.length > 0 ? 1 + orderlistvalues.length : 1;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data,\n          workorderno\n        }\n      },() =>{\n        if(orderlistvalues.length == 0)\n          this.getOrderData()\n      });\n    }\n    else{\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      });\n    }\n\n  }\n\n  getOrderData(){\n    if(Object.keys(this.props.orderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n      .then(res => {\n        console.log(res.data.orderlist.orderdata)\n         //if (res.data.orderlist.orderdata.length > 0) {\n           \n          let workorderno =\n          res.data.orderlist.orderdata.length > 0 ? 1 + res.data.orderlist.orderdata.length : 1;\n\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              workorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChangeDeliveryschedule = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        deliveryschedule: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n      // selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        : selected_item.masteritemshortdescription\n\n      selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n     // selectedItemlist.itemlocation[index] = null;\n\n\n\n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n\n          selectedItemlist.totalweight[index] = \n          selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n          selected_item.masteritemunitwt != \"\" ? (1 * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n          \n        } \n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 1],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, ''],\n          totalweight: [...this.state.data.selectedItemlist.totalweight, ''],\n          readystock: [...this.state.data.selectedItemlist.readystock, ''],\n          firstround: [...this.state.data.selectedItemlist.firstround, ''],\n          secondround: [...this.state.data.selectedItemlist.secondround, ''],\n          thirdround: [...this.state.data.selectedItemlist.thirdround, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    let removeItem = { ...this.state.data };\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemlocation = removeItem.selectedItemlist.itemlocation;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n\n    let remarks = removeItem.selectedItemlist.remarks;\n    let totalweight = removeItem.selectedItemlist.totalweight;\n    let readystock = removeItem.selectedItemlist.readystock;\n    let firstround = removeItem.selectedItemlist.firstround;\n    let secondround = removeItem.selectedItemlist.secondround;\n    let thirdround = removeItem.selectedItemlist.thirdround;\n\n\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n    remarks.splice(index, 1);\n    totalweight.splice(index, 1);\n    readystock.splice(index, 1);\n    firstround.splice(index, 1);\n    secondround.splice(index, 1);\n    thirdround.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks,\n          totalweight,\n          readystock,\n          firstround,\n          secondround,\n          thirdround\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    console.log(selectedItemlist)\n    \n    const selected_item = this.state.masteritemlistvaluesobject[selectedItemlist.id[index]];\n    console.log(selected_item)\n\n\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    const wtperunit = selectedItemlist.totalweight[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit  \n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue ? parseFloat(totalValue).toFixed(2)\n      : '';\n\n\n    selectedItemlist.totalweight[index] = \n    selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n    selected_item.masteritemunitwt != \"\" ? (e.target.value * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n\n    const totalweight = selectedItemlist.totalweight;\n    const readystock = selectedItemlist.readystock;\n    const firstround = selectedItemlist.firstround;\n    const secondround = selectedItemlist.secondround;\n    const thirdround = selectedItemlist.thirdround;\n\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      obj.totalweight = totalweight[i] || null;\n      obj.readystock = readystock[i] || null;\n      obj.firstround = firstround[i] || null;\n      obj.secondround = secondround[i] || null;\n      obj.thirdround = thirdround[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Work Order</ModalHeader>\n              <ModalBody>Work order is edited/generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Work order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='companydetails'>Company Name & address </Label>\n                    <AvField\n                      name='companydetails'\n                      type='text'\n                      id='companydetails'\n                      value={data.companydetails}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='contactperson'>Contact Person</Label>\n                  <AvField\n                    name='contactperson'\n                    type='text'\n                    id='contactperson'\n                    value={data.contactperson || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='officeno'>Office Number</Label>\n                  <AvField\n                    name='officeno'\n                    type='number'\n                    id='officeno'\n                    value={data.officeno || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryschedule'>Delivery Schedule</Label>\n                    <DatePicker\n                    autoComplete=\"new-password\"\n                      selected={data.deliveryschedule}\n                      onChange={this.handleChangeDeliveryschedule}\n                      className='form-control'\n                      autoComplete=\"new-password\"\n                      dateFormat='dd/MM/yyyy'\n                      id='deliveryschedule'\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='orderdate'>Order Date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.orderdate}\n                    onChange={this.handleChangeDeliveryDate}\n                    className='form-control'\n                    autoComplete=\"new-password\"\n                    dateFormat='dd/MM/yyyy'\n                    id='orderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      value={data.deliveryaddress}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='distance'>Distance(KM)</Label>\n                    <AvField\n                      name='distance'\n                      type='text'\n                      id='distance'\n                      value={data.distance}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sitecontactperson'>Site contact person</Label>\n                    <AvField\n                      name='sitecontactperson'\n                      type='text'\n                      id='sitecontactperson'\n                      value={data.sitecontactperson}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='pono'>PO NO</Label>\n                    <AvField\n                      name='pono'\n                      type='number'\n                      id='pono'\n                      value={data.pono}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={data.selectedItemlist.id[index]}\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalweight${index}`}>Total weight</Label>\n                              <AvField\n                                name={`totalweight${index}`}\n                                type='text'\n                                id={`totalweight${index}`}\n                                value={\n                                  data.selectedItemlist.totalweight[index] \n                                \n                                }\n                                onChange={e => this.weightChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`readystock${index}`}>Ready stock</Label>\n                              <AvField\n                                name={`readystock${index}`}\n                                type='text'\n                                id={`readystock${index}`}\n                                value={\n                                  data.selectedItemlist.readystock[index]\n                                }\n                                onChange={e => this.stockChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`firstround${index}`} >1st round</Label>\n                              <AvField\n                                name={`firstround${index}`}\n                                type='text'\n                                id={`firstround${index}`}\n                                value={\n                                  data.selectedItemlist.firstround[index]\n                                }\n                                onChange={e => this.firstChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`secondround${index}`}>2nd round</Label>\n                              <AvField\n                                name={`secondround${index}`}\n                                type='text'\n                                id={`secondround${index}`}\n                                value={\n                                  data.selectedItemlist.secondround[index]\n                                }\n                                onChange={e => this.secondChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`thirdround${index}`}>3rd round</Label>\n                              <AvField\n                                name={`thirdround${index}`}\n                                type='text'\n                                id={`thirdround${index}`}\n                                value={\n                                  data.selectedItemlist.thirdround[index]\n                                }\n                                onChange={e => this.thirdChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`remarks${index}`}>Remarks</Label>\n                              <AvField\n                                name={`remarks${index}`}\n                                type='text'\n                                id={`remarks${index}`}\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OrderForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { getorder } from '../../../../actions/order';\nimport OrderForm from './OrderForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getorder();\n  }\n  \n  componentWillReceiveProps() {\n    \n  }\n\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      return this.props\n      .updateaddorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n      .addorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Work order</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <OrderForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getorder,\n    getCustomerList,\n    addorder,\n    updateaddorder\n  }\n)(AddOrder);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getorder } from '../../../../actions/order';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewOrder extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    orderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getorder();\n    console.log(this.props);\n    if (this.props.orderlistvalues) {\n      let orderlist = Object.values(this.props.orderlistvalues);\n      orderlist.sort(function(a, b){\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\n      });\n      const orderlistvalues = orderlist.map(quotationvalue => {\n        return {\n          workorderno: quotationvalue.workorderno,\n          companyname: quotationvalue.companydetails,\n          contactperson: quotationvalue.contactperson,\n          officeno: quotationvalue.officeno,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                Label\n                color='primary'\n                onClick={() => {\n                  this.updateButton(quotationvalue._id);\n                }}\n              >\n                Print\n              </Button>\n              <Button\n                Label\n                color='primary'\n                onClick={() => {\n                  this.updateworkorder(quotationvalue._id);\n                }}\n              >\n                Edit\n              </Button>\n              </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, orderlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let orderlist = Object.values(props.orderlistvalues);\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\n    orderlist.sort(function(a, b){\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\n    });\n    console.log(props);\n    const orderlistvalues = orderlist.map(quotationvalue => {\n      return {\n        workorderno: quotationvalue.workorderno,\n        companyname: quotationvalue.companydetails,\n        contactperson: quotationvalue.contactperson,\n        officeno: quotationvalue.officeno,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, orderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_orderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updateworkorder= id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editworkorder/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, orderlistvalues } = this.state;\n    console.log(orderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Work order',\n        field: 'workorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Company Name',\n        field: 'companyname',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Contact Person',\n        field: 'contactperson',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Office Number',\n        field: 'officeno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={orderlistvalues} \n          columnvalue={columnvalue}\n          className=\"orderlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrder);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  headerfont3: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  headerfont4: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold'\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 10\n  },\n  dcaddress_left: {\n    fontSize: 10\n  },\n  view_border: {\n    border: '1pt solid #000',\n    flexGrow: 1,\n    height: 100\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingLeft: 100\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 10,\n    fontWeight: 'bolder',\n    textAlign: 'center'\n  },\n  header_tintext: {\n    fontSize: 10,\n    fontWeight: 900\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, textAlign: 'left', wordWrap: 'break-word' }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n  console.log(JSON.stringify(orderlistvalues));\n  let data = orderlistvalues.addeditemlist;\n  let totalwt = 0\n  if(data.length > 0){\n   \n    for(var i=0;i<data.length;i++){\n      totalwt += parseFloat(data[i].totalweight)\n    }\n  }\n  console.log('data');\n  console.log(totalwt);\n  totalwt = parseFloat(totalwt)\n  totalwt = totalwt.toFixed(2)\n  const totalrs = orderlistvalues.totalvalue ? orderlistvalues.totalvalue : '';\n  const taxableAmount = orderlistvalues.taxableamount;\n  const date = moment(orderlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(orderlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(orderlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = orderlistvalues.billingaddress;\n  const vendorcode = orderlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = orderlistvalues;\n\n  let {\n    workorderno,\n    companydetails,\n    contactperson,\n    officeno,\n    deliveryschedule,\n    orderdate,\n    gstno,\n    deliveryaddress,\n    distance,\n    sitecontactperson,\n    pono\n  } = orderlistvalues;\n  //orderdate = new Date(orderdate)\n  const purchaseordernumber = orderlistvalues.purchaseordernumber;\n\n  const tax = orderlistvalues.tax ? orderlistvalues.tax : '';\n  const taxpercentage = orderlistvalues.tax ? orderlistvalues.tax / 100 : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = orderlistvalues.selectedcontactlist[0]\n  //     ? orderlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>PO No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{pono}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => r.itemname}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.totalweight} />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.readystock} />\n              <DataTableCell weighting={0.2} getContent={r => r.firstround} />\n              <DataTableCell weighting={0.2} getContent={r => r.secondround} />\n              <DataTableCell weighting={0.2} getContent={r => r.thirdround} />\n              <DataTableCell weighting={0.4} getContent={r => r.remarks} />\n            </TableBody>\n          </Table>\n          \n          <Text>{'\\n'}</Text>\n          \n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        <Text style={{ fontSize: 14, fontWeight: 900, textAlign: 'center', margin: 8 }}>WORK ORDER</Text>\n        <Text style={{ fontSize: 12, fontWeight: 500, textAlign: 'right', margin: 8 }}>Workorder Date : {orderdate}</Text>\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{workorderno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder Date</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{orderdate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table> */}\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>9</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Distance</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{distance} Km</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text>{'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont3}>SL</Text>\n              </TableCell>\n              <TableCell weighting={0.7}>\n                <Text style={styles.headerfont3}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n               \n                getContent={r => <Text style={styles.headerfont4}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                \n                weighting={0.7}\n                getContent={r => <Text style={styles.headerfont4}>{r.itemname}</Text>}\n              />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.totalweight}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.quantity}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.readystock}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.firstround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.secondround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.thirdround}</Text>} />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Text style={styles.headerfont4}>Total Weight : {totalwt}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getorder } from '../../../../actions/order';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewOrder';\n\nclass ViewOrderPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getorder();\n    const quotationid = this.props.match.params.id;\n    console.log(this.props.orderlistvalues);\n    const orderlistvalues = this.props.orderlistvalues[quotationid];\n    orderlistvalues.requestdeliverydate = moment(orderlistvalues.date).format(\n      'DD MMM, YYYY'\n    );\n    orderlistvalues.deliveryschedule = moment(\n      orderlistvalues.deliveryschedule\n    ).format('DD MMM, YYYY');\n    \n    orderlistvalues.orderdate = moment(\n      orderlistvalues.orderdate\n    ).format('DD MMM, YYYY');\n\n    orderlistvalues.addeditemlist = orderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          // itemdiscount: itemlist.itemdiscount.toString()\n          //   ? itemlist.itemdiscount\n          //   : \"0\",\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          totalweight: itemlist.totalweight\n            ? itemlist.totalweight.toString()\n            : '',\n          readystock: itemlist.readystock ? itemlist.readystock.toString() : '',\n          firstround: itemlist.firstround ? itemlist.firstround.toString() : '',\n          secondround: itemlist.secondround\n            ? itemlist.secondround.toString()\n            : '',\n          thirdround: itemlist.thirdround ? itemlist.thirdround.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = orderlistvalues.customerid;\n    const customernumber = orderlistvalues.customernumber;\n    const customername = orderlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(orderlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        orderlistvalues,\n        status: true\n      });\n    },5000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 4000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/orderlist');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    console.log(this.state.orderlistvalues);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrderPdf);\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../../actions/actions\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport moment from \"moment\";\n\nclass AdminRole extends React.Component {\n  state = {\n    count: \"\",\n    userdata: []\n  };\n\n  updateButton = id => {\n    let path = `/updateuser/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentDidMount() {\n    this.props.getUser().catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const userlist = Object.values(props.userlist);\n    const userdata = userlist.map((userdata, i) => {\n      return {\n        title: userdata.title,\n        name: `${userdata.firstname} ${userdata.lastname}`,\n        email: userdata.email,\n        phone: userdata.phone,\n        startdat: moment(userdata.startdate).format(\"DD MMM, YYYY\"),\n        enddate: userdata.enddate ? moment(userdata.enddate).format(\"DD MMM, YYYY\"):\" \",\n        persontype: userdata.persontype,\n        department: userdata.department,\n        job: userdata.job,\n        location: userdata.location,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(userdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n      };\n    });\n    this.setState({ userdata });\n  }\n  render() {\n    const columnvalue = [\n      {\n        label: \"Title\",\n        field: \"title\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Full Name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 270\n      },\n      {\n        label: \"Phone\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 200\n      },\n      {\n        label: \"Start date\",\n        field: \"startdate\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"End date\",\n        field: \"enddate\",\n        sort: \"asc\",\n        width: 150\n      },\n      {\n        label: \"Person type\",\n        field: \"persontype\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Department\",\n        field: \"department\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Job\",\n        field: \"job\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Location\",\n        field: \"location\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Edit\",\n        field: \"Edit\",\n        width: 100\n      }\n    ];\n    return (\n      <div style={{ overflow: \"hidden\" }} className=\"mg-t-20\">\n        <DataTable columnvalue={columnvalue} rowvalues={this.state.userdata} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUser }\n)(AdminRole);\n","import React from \"react\";\n\nclass EmployeeRole extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h6>Employee List</h6>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeRole;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass BOMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>BOM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/addproduct\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/viewproductlist\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BOMPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ChallanPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Delivery challan</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addchallan'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Challan</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/challanlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Challan List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ChallanPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass CRMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>CRM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n          \n\n            <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/enquiry'>\n                    <i className='fas fa-envelope fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>New Enquiry</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                     \n                <li className='bg-color-lg-blue'>\n                  <div className='icon-eleme'>\n                    <Link to='/quotationpage'>\n                      <i className='fas fa-credit-card fa-3x'></i>\n                      <div style={{ paddingTop: '5px' }}>\n                        <span>Quotations</span>\n                      </div>\n                    </Link>\n                  </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/customerlist'>\n                    <i className='fas fa-users fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Customer Transaction</span>\n                    </div>\n                    </Link>\n                </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CRMPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass CustomerPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div class=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/AddCustomer\">\n                  <i class=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Add Customer</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n    \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customerinfo\">\n                  <i class=\"fas fa-list fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Customer List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass InventoryPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Setup</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\" style={{'top': '55%', 'width': '55%'}}>\n          <ul className=\"clearfix\">\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemtype\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/masteritemtypelist\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* \n             */}\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/itemspage\">\n                  <i className=\"fas fa-cart-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Items</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n          {/* <li className='bg-colo-lg-red'>\n            <div className='icon-eleme'>\n              <Link to='/productbilling'>\n                <i className='fas fa-kaaba fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                  <span>Item Cost</span>\n                </div>\n              </Link>\n            </div>\n          </li> */}\n\n      \n\n             <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/bomproductlist\">\n                  <i className=\"fa fa-cog fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n            \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Suppliers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customer\">\n                  <i className=\"fas fa-users fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Customers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/financialYearAdd\">\n                  <i className=\"fas fa-calendar-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add/Update FinancialYear</span>\n                  </div>\n                </Link>\n              </div>\n            </li>            \n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InventoryPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice1'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Normal Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice2'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage1 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addinvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n           \n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage1;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage2 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Proforma Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n      \n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addproformainvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/proformainvoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage2;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass ItemsPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Items</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n          <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/madditem\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Item</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemlistvalues\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ItemsPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ManufacturingPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Manufacturing</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n            <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/work-order'>\n              <i className='fas fa-shopping-cart fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Work Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/production'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Production</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ManufacturingPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass MoveOrder extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Move Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/move'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Move Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/moveorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Move Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveOrder;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass OnHandPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/quantitypage'>Quantity</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>On Hand</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addonhand'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Update On Hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>View On hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default OnHandPage;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ProductionPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n            <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Production</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/add-production'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Production</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/productionlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Production list</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProductionPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass PurchaceOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/purchase_order'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>Purchase Order</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/view_purchaseorderlist'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>View Purchase Order List</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PurchaceOrderPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuantityPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quantity</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/receipt_screen'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>PO receipts</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/onhand'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                {/* <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand Old</span>\n                    </div>\n                    </Link>\n                </div>\n                </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuantityPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuotationPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/crmlist'>CRM</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quotation</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addquotation'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Add Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/quotationlist'>\n                    <i className='fas fa-list fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>List Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuotationPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass SupplierPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Supplier</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_detail\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Supplier</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_list\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Supplier List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass TransactionPage extends React.Component {\n  render() {\n    const adminMenu = (\n      <React.Fragment>\n     \n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        {/*  */}\n        \n        {/*  */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-cart-arrow-down fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Inventory</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        \n   \n        \n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/addquotation'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Add Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quotationlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n      \n\n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n          <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const financeMenu = (\n      <React.Fragment>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const purchaseMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_order'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/view_purchaseorderlist'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const salesMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/enquiry'>\n              <i className='fas fa-envelope fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>New Enquiry</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const storeMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/receipt_screen'>\n              <i className='fas fa-dolly-flatbed fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Receive quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/totalitemquantity'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>On hand quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n         <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-folder fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      </React.Fragment>\n    );\n    const productionMenu = (\n      <React.Fragment>\n        \n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    return (\n      <div className='container mg-20'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Transactions</BreadcrumbItem>\n        </Breadcrumb>\n        <div className='admin-dashboard-icons' style={{'top': '55%','width': '55%'}}>\n          <ul className='clearfix'>\n            {this.props.role === 'management'\n              ? adminMenu\n              : this.props.role === 'finance'\n              ? financeMenu\n              : this.props.role === 'purchase'\n              ? purchaseMenu\n              : this.props.role === 'sales'\n              ? salesMenu\n              : this.props.role === 'stores'\n              ? storeMenu\n              : this.props.role === 'production'\n              ? productionMenu\n              : ''}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\nexport default connect(mapStateToProps)(TransactionPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass WorkOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Work order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addorder'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Work Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/orderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default WorkOrderPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst GuestRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\n    }\n  />\n);\n\nGuestRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GuestRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst UserRoute = ({\n  isAuthenticated,\n  roles,\n  role,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      // return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      if (!isAuthenticated) {\n        return <Redirect to='/login' />;\n      }\n      if (typeof roles === 'string') {\n        if (!(role === roles)) {\n          return <Redirect to='/' />;\n        }\n      } else if (!roles.includes(role)) {\n        return <Redirect to='/' />;\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\n\nUserRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  // role: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token,\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UserRoute);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport AddUser from './Containers/AddUser/AddUser';\nimport UpdateUser from './Containers/AddUser/UpdateUser';\nimport AdminDashboard from './Containers/Admin/AdminDashboard';\nimport ProductBilling from './Containers/Billing/ProductBilling';\nimport LoginPage from './Containers/LoginPage/LoginPage';\nimport AddMaterial from './Containers/Material/AddMaterial';\nimport AddMaterialType from './Containers/Material/AddMaterialType';\nimport UpdateMaterial from './Containers/Material/UpdateMaterial';\nimport UpdateMaterialType from './Containers/Material/UpdateMaterialType';\nimport ProductList from './Containers/Product/Product';\nimport ViewProduct from './Containers/Product/ViewProduct';\nimport ViewProductList from './Containers/Product/ViewProductList';\nimport AddCustomer from './Containers/SetUp/Customer/Customer';\nimport Transaction from './Containers/SetUp/Customer/Transaction';\nimport UpdateCustomer from './Containers/SetUp/Customer/UpdateCustomer';\nimport ViewCustomerTable from './Containers/SetUp/Customer/ViewCustomerTable';\nimport CustomerInfo from './Containers/SetUp/CustomerInfo/CustomerInfo';\nimport CustomerQuotationList from './Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList';\nimport AddFinancialYear from './Containers/SetUp/FinancialYear/AddFinancialYear';\nimport AddChalan from './Containers/Transaction/Challan/Challan/AddChalan';\nimport ViewChallan from './Containers/Transaction/Challan/View/ViewChallan';\nimport ViewChallanPdf from './Containers/Transaction/Challan/View/ViewChallanPdf';\nimport EnquiryPage from './Containers/Transaction/Enquiry';\nimport AddInvoice from './Containers/Transaction/Invoice/Invoice/AddInvoice';\nimport AddProformaInvoice from './Containers/Transaction/Invoice/Invoice/AddProformaInvoice';\nimport ViewInvoice from './Containers/Transaction/Invoice/View/ViewInvoice';\nimport ViewInvoicePdf from './Containers/Transaction/Invoice/View/ViewInvoicePdf';\nimport ViewProformaInvoice from './Containers/Transaction/Invoice/View/ViewProformaInvoice';\nimport ViewProformaInvoicePdf from './Containers/Transaction/Invoice/View/ViewProformaInvoicePdf';\nimport AddMasterItemList from './Containers/Transaction/Item/ItemList/AddMasterItemList';\nimport MasterItemList from './Containers/Transaction/Item/ItemList/MasterItemListValues';\nimport UpdateMasterItemList from './Containers/Transaction/Item/ItemList/UpdateMasterItemList';\nimport MasterItemType from './Containers/Transaction/Item/ItemType/ItemMasterType';\nimport MasterItemTypeList from './Containers/Transaction/Item/ItemType/ItemMasterTypeList';\nimport UpdateMasterItemType from './Containers/Transaction/Item/ItemType/UpdateItemMasterType';\nimport ReceiptScreen from './Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen';\nimport ViewReceiptPdf from './Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt';\nimport MoveOrderScreen from './Containers/Transaction/MoveOrder/MoveOrderScreen';\nimport ViewMoveOrder from './Containers/Transaction/MoveOrder/View/ViewMoveOrder';\nimport AddOnHand from './Containers/Transaction/OnHand/AddOnHand';\nimport AddProduction from './Containers/Transaction/ProductionScreen/Production/AddProduction';\nimport ViewProudction from './Containers/Transaction/ProductionScreen/View/ViewProudction';\nimport PurchaseOrder from './Containers/Transaction/PurchaseOrder/PurchaseOrder';\nimport ViewPurchaseOrderList from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList';\nimport ViewPurchaseOrderPdf from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf';\nimport AddQuotation from './Containers/Transaction/Quotation/Quotation/AddQuotation';\nimport ViewQuotation from './Containers/Transaction/Quotation/View/ViewQuotation';\nimport ViewQuotationPdf from './Containers/Transaction/Quotation/View/ViewQuotationPdf';\nimport SupplierContact from './Containers/Transaction/Supplier/SupplierContact/SupplierContact';\nimport SupplierDetail from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetail';\nimport SupplierDetailUpdate from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate';\nimport SupplierList from './Containers/Transaction/Supplier/SupplierDetail/Supplierlist';\nimport TotalQuantity from './Containers/Transaction/TotalQuantityScreen/TotalQuantity';\nimport AddOrder from './Containers/Transaction/WorkOrder/Order/AddOrder';\nimport ViewOrder from './Containers/Transaction/WorkOrder/View/ViewOrder';\nimport ViewOrderPdf from './Containers/Transaction/WorkOrder/View/ViewOrderPdf';\nimport ViewAdmin from './Containers/View/AdminRole';\nimport ViewEmployee from './Containers/View/EmployeeRole';\nimport './global/global.scss';\nimport BOMPage from './Pages/BOMPage';\nimport ChallanPage from './Pages/Challan';\nimport CRMPage from './Pages/CRMPage';\nimport CustomerPage from './Pages/CustomerPage';\nimport InventoryPage from './Pages/InventoryPage';\nimport InvoicePage from './Pages/InvoicePage';\nimport InvoicePage1 from './Pages/InvoicePage1';\nimport InvoicePage2 from './Pages/InvoicePage2';\nimport ItemsPage from './Pages/ItemsPage';\nimport ManufacturingPage from './Pages/ManufacturingPage';\nimport MoveOrder from './Pages/MoveOrder';\nimport OnHandPage from './Pages/OnHandPage';\nimport ProductionPage from './Pages/Production';\nimport PurchaceOrderPage from './Pages/PurchaceOrderPage';\nimport QuantityPage from './Pages/QuantityPage';\nimport QuotationPage from './Pages/QuotationPage';\nimport SupplierPage from './Pages/SupplierPage';\nimport TransactionPage from './Pages/TransactionPage';\nimport WorkOrderPage from './Pages/WorkOrder';\nimport GuestRoute from './Routes/GuestRoute';\nimport UserRoute from './Routes/UserRoute';\nimport { Roles } from './Services/Roles';\n\n\n\n\n\n\n\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route path='/' exact component={LoginPage} />\n        <GuestRoute path='/login' exact component={LoginPage} />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/admin_dashboard'\n          exact\n          component={AdminDashboard}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adduser'\n          exact\n          component={AddUser}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adminlist'\n          exact\n          component={ViewAdmin}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/employeelist'\n          exact\n          component={ViewEmployee}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/updateuser/:id'\n          exact\n          component={UpdateUser}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/enquiry'\n          exact\n          component={EnquiryPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addproduct'\n          exact\n          component={ProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproductlist'\n          exact\n          component={ViewProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/bomproductlist'\n          exact\n          component={BOMPage}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproduct/:id'\n          exact\n          component={ViewProduct}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/add_itemtype'\n          exact\n          component={AddMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_itemtype/:id'\n          exact\n          component={UpdateMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/additem'\n          exact\n          component={AddMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_material/:id'\n          exact\n          component={UpdateMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productbilling'\n          exact\n          component={ProductBilling}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/inventory_page'\n          exact\n          component={InventoryPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[\n            Roles.ADMIN,\n            Roles.FINANCE,\n            Roles.PURCHASE,\n            Roles.SALES,\n            Roles.STORE,\n            Roles.PRODUCTION\n          ]}\n          path='/transaction_page'\n          exact\n          component={TransactionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice'\n          exact\n          component={InvoicePage}\n        />\n          <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice1'\n          exact\n          component={InvoicePage1}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice2'\n          exact\n          component={InvoicePage2}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/delivery-challan'\n          exact\n          component={ChallanPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addonhand'\n          exact\n          component={AddOnHand}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move-order'\n          exact\n          component={MoveOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move'\n          exact\n          component={MoveOrderScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/moveorderlist'\n          exact\n          component={ViewMoveOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/work-order'\n          exact\n          component={WorkOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/editworkorder/:id'\n          exact\n          component={AddOrder}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/manufacturing'\n          exact\n          component={ManufacturingPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customer'\n          exact\n          component={CustomerPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/financialYearAdd'\n          exact\n          component={AddFinancialYear}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/transaction/:id'\n          exact\n          component={Transaction}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier'\n          exact\n          component={SupplierPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/quotationpage'\n          exact\n          component={QuotationPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/quantitypage'\n          exact\n          component={QuantityPage}\n        />\n\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/itemspage'\n          exact\n          component={ItemsPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtype'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtypelist'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/masteritemtypelist'\n          exact\n          component={MasterItemTypeList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/madditem'\n          exact\n          component={AddMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemlistvalues'\n          exact\n          component={MasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/m_updateitemlist/:id'\n          exact\n          component={UpdateMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_mitemtype/:id'\n          exact\n          component={UpdateMasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order'\n          exact\n          component={PurchaseOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_orderpage'\n          exact\n          component={PurchaceOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderpdf/:id'\n          exact\n          component={ViewPurchaseOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderlist'\n          exact\n          component={ViewPurchaseOrderList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_detail'\n          exact\n          component={SupplierDetail}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_contact'\n          exact\n          component={SupplierContact}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order_update/:id'\n          exact\n          component={PurchaseOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplierdetail_update/:id'\n          exact\n          component={SupplierDetailUpdate}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_list'\n          exact\n          component={SupplierList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/receipt_screen'\n          exact\n          component={ReceiptScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/viewreceipt'\n          exact\n          component={ViewReceiptPdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/totalitemquantity'\n          exact\n          component={TotalQuantity}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/onhand'\n          exact\n          component={OnHandPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/AddCustomer'\n          exact\n          component={AddCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/customerlist'\n          exact\n          component={ViewCustomerTable}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/crmlist'\n          exact\n          component={CRMPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/updatecustomer/:id'\n          exact\n          component={UpdateCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerinfo'\n          exact\n          component={CustomerInfo}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addquotation'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/editquotation/:id'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/quotationlist'\n          exact\n          component={ViewQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/view_quotationpdf/:id'\n          exact\n          component={ViewQuotationPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerquotationlist/:id'\n          exact\n          component={CustomerQuotationList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addinvoice'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addproformainvoice'\n          exact\n          component={AddProformaInvoice}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editinvoice/:id'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editproformainvoice/:id'\n          exact\n          component={AddProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addchallan'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editchallan/:id'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addorder'\n          exact\n          component={AddOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/orderlist'\n          exact\n          component={ViewOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoicelist'\n          exact\n          component={ViewInvoice}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/proformainvoicelist'\n          exact\n          component={ViewProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/challanlist'\n          exact\n          component={ViewChallan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productionlist'\n          exact\n          component={ViewProudction}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_invoicepdf/:id'\n          exact\n          component={ViewInvoicePdf}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_proformainvoicepdf/:id'\n          exact\n          component={ViewProformaInvoicePdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_orderpdf/:id'\n          exact\n          component={ViewOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_challanpdf/:id'\n          exact\n          component={ViewChallanPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/production'\n          exact\n          component={ProductionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/add-production'\n          exact\n          component={AddProduction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport user from '../reducer/user';\nimport userlist from '../reducer/userlist';\nimport materialoptionlist from '../reducer/materialoptionlist';\nimport materiallistvalues from '../reducer/materiallistvalues';\nimport productlistvalues from '../reducer/productlistvalues';\nimport masteritemtypenamevalue from '../reducer/masteritemtypenamevalue';\nimport masteritemtypelistvalues from '../reducer/masteritemlistnamevalue';\nimport suppliercontactlistvalue from '../reducer/suppliercontactlistvalue';\nimport supplierdetaillistvalue from '../reducer/supplierdetaillistvalue';\nimport uomlistvalue from '../reducer/uomlistvalue';\nimport currencylistvalue from '../reducer/currencylistvalue';\nimport locationlistvalue from '../reducer/locationlistvalue';\nimport purchaseorderlistvalue from '../reducer/purchaseorderlistvalue';\nimport receiptlistvalues from '../reducer/receiptlistvalues';\nimport customerlistvalues from '../reducer/customerlistvalues';\nimport quotationlistvalues from '../reducer/quotationlistvalues';\nimport invoicelistvalues from '../reducer/invoicelistvalues';\nimport proformainvoicelistvalues from '../reducer/proformainvoicelistvalues';\n\nimport challanlistvalues from '../reducer/challanlistvalues';\nimport orderlistvalues from '../reducer/orderlistvalues';\nimport productionlistvalues from '../reducer/productionlistvalues';\nimport moveorderlistvalues from '../reducer/moveorderlistvalues';\nimport customertransationvalues from '../reducer/customertransationvalues';\n\nimport { USER_LOGGED_OUT } from '../Services/types';\n\nconst appReducer = combineReducers({\n  user: user,\n  userlist: userlist,\n  materialoption: materialoptionlist,\n  materiallistvalues: materiallistvalues,\n  productlistvalues: productlistvalues,\n  masteritemtypenamevalue: masteritemtypenamevalue,\n  masteritemlistvalues: masteritemtypelistvalues,\n  suppliercontactlistvalue: suppliercontactlistvalue,\n  supplierdetaillistvalue: supplierdetaillistvalue,\n  uomlistvalue: uomlistvalue,\n  currencylistvalue: currencylistvalue,\n  locationlistvalue: locationlistvalue,\n  purchaseorderlistvalue: purchaseorderlistvalue,\n  receiptlistvalues: receiptlistvalues,\n  customerlistvalues: customerlistvalues,\n  customertransationvalues: customertransationvalues,\n  quotationlistvalues: quotationlistvalues,\n  invoicelistvalues: invoicelistvalues,\n  proformainvoicelistvalues: proformainvoicelistvalues,\n  challanlistvalues: challanlistvalues,\n  orderlistvalues: orderlistvalues,\n  productionlistvalues: productionlistvalues,\n  moveorderlistvalues: moveorderlistvalues\n});\n\nconst rootReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGGED_OUT:\n      state = {};\n      storage.removeItem('persist:root');\n      return {};\n    default:\n      return appReducer(state, action);\n  }\n};\n\nexport default rootReducer;\n","import storage from \"redux-persist/lib/storage\";\nimport { USER_LOGGED_IN } from \"../Services/types\";\nimport { USER_LOGGED_OUT } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return action.user;\n    case USER_LOGGED_OUT:\n      storage.removeItem(\"persist:root\");\n      return {};\n    default:\n      return state;\n  }\n}\n","import { USER_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_FETCHED:\n      return { ...state, ...action.userlist.entities.users };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_OPTIONS } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_OPTIONS:\n      return {\n        ...state,\n        ...action.materialoption.entities.materialoptions\n      };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.materialsvalues.entities.materialslistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PRODUCT_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCT_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.productlistvalues.entities.productlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_TYPES } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_TYPES:\n      return {\n        ...state,\n        ...action.MasterItemTypeName.entities.masteritemtypenamevalue\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_LIST:\n      return {\n        ...state,\n        ...action.MasterItemTypeList.entities.masteritemtypelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_CONTACT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_CONTACT_LIST:\n      return {\n        ...state,\n        ...action.suppliercontactlistvalue.entities.suppliercontactlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_DETAIL_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_DETAIL_LIST:\n      return {\n        ...state,\n        ...action.supplierdetaillistvalue.entities.supplierdetaillistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { UOM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UOM_LIST:\n      return {\n        ...state,\n        ...action.uomlist.entities.uomlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { CURRENCY_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case CURRENCY_LIST:\n      return {\n        ...state,\n        ...action.currencylist.entities.currencylistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { Location_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case Location_LIST:\n      return {\n        ...state,\n        ...action.locationlist.entities.locationlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PURCHASE_ORDER_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PURCHASE_ORDER_LIST:\n      return {\n        ...state,\n        ...action.purchaseorderlistvalues.entities.purchaseorderlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PO_RECEIPT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PO_RECEIPT_LIST:\n      return {\n        ...state,\n        ...action.receiptlistvalues.entities.receiptlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED\n} from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(state)\n  switch (action.type) {\n    case CUSTOMER_CONTACT_FETCHED:\n    \n    case ADD_CUSTOMER_CONTACT:\n      return {\n        ...state,\n        ...action.customerlist.entities.customerlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    CUSTOMERTRANSACTION_FETCHED,\n    ADD_CUSTOMER_TRANSACTION\n  } from \"../Services/types\";\n  \n  export default function(state = {}, action) {\n    console.log(action)\n    switch (action.type) {\n      case CUSTOMERTRANSACTION_FETCHED:\n      return {\n        ...state,\n        ...action.customerlist.entities.customertransationvalues\n      };\n      case ADD_CUSTOMER_TRANSACTION:\n        return {\n          ...state,\n          ...action.customerlist.entities.customertransationvalues\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case QUOTATION_FETCHED:\n    case ADD_QUOTATION:\n      return {\n        ...state,\n        ...action.quotationlist.entities.quotationlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_INVOICE, INVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case INVOICE_FETCHED:\n    case ADD_INVOICE:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","\n\nimport { ADD_PROFORMA_INVOICE, PROFORMAINVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PROFORMAINVOICE_FETCHED:\n    case ADD_PROFORMA_INVOICE:\n      return {\n        ...state,\n        ...action.proformainvoicelist.entities.proformainvoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(action)\n  switch (action.type) {\n    case CHALLAN_FETCHED:\n    case ADD_CHALLAN:\n      return {\n        ...state,\n        ...action.challanlist.entities.challanlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ADD_ORDER:\n    case ORDER_FETCHED:\n      return {\n        ...state,\n        ...action.orderlist.entities.orderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCTION_FETCHED:\n    case ADD_PRODUCTION:\n      return {\n        ...state,\n        ...action.productionlist.entities.productionlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MOVEORDER_FETCHED:\n    case ADD_MOVEORDER:\n      return {\n        ...state,\n        ...action.moverorderlist.entities.moveorderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport LocalStorage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: LocalStorage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n);\n\nexport default store;\n","import { persistStore } from \"redux-persist\";\nimport store from \"./store\";\n\nexport default persistStore(store);\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCalendarPlus, faCube, faDollyFlatbed, faHome, faKaaba, faUser, faUserFriends, faUsers, faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport jwtDecode from \"jwt-decode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { userLoggedIn } from \"./actions/actions\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport persistor from \"./Store/persistStore\";\nimport store from \"./Store/store\";\nimport setAuthorizationHeader from \"./utils/setAuthorizationHeader\";\n\nlibrary.add(\n  faHome,\n  faDollyFlatbed,\n  faCube,\n  faKaaba,\n  faUsers,\n  faUser,\n  faUsersCog,\n  faUserFriends,\n  faCalendarPlus\n);\n\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n\nif (localStorage.Mob_JWT) {\n  const token = localStorage.Mob_JWT;\n  setAuthorizationHeader(token);\n  var decoded = jwtDecode(localStorage.Mob_JWT);\n  const userinfo = {\n    email: decoded.email,\n    role: decoded.role,\n    token: localStorage.Mob_JWT\n  };\n  store.dispatch(userLoggedIn(userinfo));\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App component={App} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/client.e1af59ba.png\";"],"sourceRoot":""}