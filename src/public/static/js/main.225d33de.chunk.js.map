{"version":3,"sources":["Images/sign.jpg","Images/js.jpg","Images/mk.jpg","Images/proud.jpg","Images/scaff.jpg","Images/logo.png","Images/seal.jpg","Images/client.png","Services/api.js","utils/setAuthorizationHeader.js","Services/types.js","Schemas/schemas.js","actions/actions.js","Components/Header/Header.js","Containers/AddUser/AddUserForm/AddUserForm.js","Containers/AddUser/AddUser.js","Components/loader/loader.js","Containers/AddUser/AddUserForm/UpdateUserForm.js","Containers/AddUser/UpdateUser.js","Containers/Admin/AdminDashboard.js","actions/Product.js","Services/transactionapi.js","actions/Transaction.js","Containers/Billing/BillingForm/BillingForm.js","Containers/Billing/BillingTable.js","Containers/Billing/ProductBilling.js","Containers/LoginPage/LoginForm/LoginForm.js","Services/Roles.js","Containers/LoginPage/LoginPage.js","Components/Alert/Alert.js","Containers/Material/MaterialForms/AddMaterialForm.js","Components/Table/DatatablePage.js","Containers/Material/AddMaterial.js","Containers/Material/MaterialForms/AddMaterialTypesForm.js","Containers/Material/AddMaterialType.js","Containers/Material/MaterialForms/UpdateMaterialForm.js","Containers/Material/UpdateMaterial.js","Containers/Material/MaterialForms/UpdateMaterialTypesForm.js","Containers/Material/UpdateMaterialType.js","Containers/Product/ProductForm/ProductForm.js","actions/uom.js","Containers/Product/Product.js","Containers/Product/ViewProduct.js","Containers/Product/ViewProductList.js","Containers/SetUp/Customer/AddCustomer/CustomerForm/CustomerForm.js","Containers/SetUp/Customer/ViewCustomerList.js","Services/customerapi.js","actions/customerContact.js","Containers/SetUp/Customer/Customer.js","Containers/SetUp/Customer/Transaction.js","Containers/SetUp/Customer/UpdateCustomer/CustomerForm/UpdateCustomerForm.js","Containers/SetUp/Customer/UpdateCustomer.js","Containers/SetUp/Customer/ViewCustomerTable.js","Containers/SetUp/CustomerInfo/ViewCustomerList.js","Containers/SetUp/CustomerInfo/CustomerInfo.js","Services/quotationapi.js","actions/quotation.js","Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList.js","Containers/SetUp/FinancialYear/AddYear/AddYearForm/AddYearForm.js","Containers/SetUp/FinancialYear/AddFinancialYear.js","actions/financialYearAdd.js","Services/challanapi.js","actions/challan.js","Services/invoiceapi.js","actions/Invoice.js","Containers/Transaction/Challan/Challan/ChallanForm.js","Containers/Transaction/Challan/Challan/AddChalan.js","Containers/Transaction/Challan/View/ViewChallan.js","Containers/Transaction/Challan/View/Component.js","Containers/Transaction/Challan/View/ViewChallanPdf.js","Containers/Transaction/Enquiry.js","Containers/Transaction/Invoice/Invoice/InvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddInvoice.js","Containers/Transaction/Invoice/Invoice/ProformaInvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddProformaInvoice.js","Containers/Transaction/Invoice/View/ViewInvoice.js","Containers/Transaction/Invoice/View/Component.js","Containers/Transaction/Invoice/View/ViewInvoicePdf.js","Containers/Transaction/Invoice/View/ViewProformaInvoice.js","Containers/Transaction/Invoice/View/Component2.js","Containers/Transaction/Invoice/View/ViewProformaInvoicePdf.js","Containers/Transaction/Item/Form/ItemList/AddItemListForm.js","Containers/Transaction/Item/ItemList/ViewMasterItemList.js","Containers/Transaction/Item/ItemList/AddMasterItemList.js","Containers/Transaction/Item/ItemList/MasterItemListValues.js","Containers/Transaction/Item/Form/ItemList/UpdateItemListForm.js","Containers/Transaction/Item/ItemList/UpdateMasterItemList.js","Containers/Transaction/Item/Form/MasterItemTypeForm.js","Containers/Transaction/Item/ItemType/ItemMasterType.js","Containers/Transaction/Item/ItemType/ItemMasterTypeList.js","Containers/Transaction/Item/Form/UpdateMasterItemTypeForm.js","Containers/Transaction/Item/ItemType/UpdateItemMasterType.js","Components/EditTable/EditTable.js","Services/locationapi.js","actions/Location.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptScreenForm.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptTable.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen.js","Containers/Transaction/ItemScreening/ReceiptScreen/Component.js","Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt.js","Services/moveorderapi.js","actions/moveorder.js","Containers/Transaction/MoveOrder/MoveOrderScreenForm/MoveOrderScreenForm.js","Containers/Transaction/MoveOrder/MoveOrderScreen.js","Containers/Transaction/MoveOrder/View/ViewMoveOrder.js","Containers/Transaction/MoveOrder/View/viewOrderItems.js","Containers/Transaction/OnHand/AddOnHandScreenForm/AddOnHandScreenForm.js","Containers/Transaction/OnHand/AddOnHand.js","Services/productionapi.js","actions/Production.js","Containers/Transaction/ProductionScreen/Production/ProductionForm.js","Containers/Transaction/ProductionScreen/Production/AddProduction.js","Containers/Transaction/ProductionScreen/View/ViewProudction.js","Containers/Transaction/PurchaseOrder/PurchaseOrderForm/PurchaseOrderForm.js","Services/supplierapi.js","actions/Supplier.js","Services/currency.js","actions/Currency.js","Containers/Transaction/PurchaseOrder/PurchaseOrder.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList.js","Containers/Transaction/PurchaseOrder/Component.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf.js","Containers/Transaction/Quotation/Quotation/QuotationForm/QuotationForm.js","Containers/Transaction/Quotation/Quotation/AddQuotation.js","Containers/Transaction/Quotation/View/ViewQuotation.js","Containers/Transaction/Quotation/View/Component.js","Containers/Transaction/Quotation/View/ViewQuotationPdf.js","Containers/Transaction/Supplier/SupplierForm/SupplierContact.js","Containers/Transaction/Supplier/SupplierContact/SupplierContact.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetail.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetail.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/Supplierlist.js","Containers/Transaction/TotalQuantityScreen/TotalQuantityForm/ItemQuantitySearch.js","Containers/Transaction/TotalQuantityScreen/TotalQuantity.js","Services/order.js","actions/order.js","Containers/Transaction/WorkOrder/Order/OrderForm.js","Containers/Transaction/WorkOrder/Order/AddOrder.js","Containers/Transaction/WorkOrder/View/ViewOrder.js","Containers/Transaction/WorkOrder/View/ViewCompletedOrder.js","Containers/Transaction/WorkOrder/View/Component.js","Containers/Transaction/WorkOrder/View/ViewOrderPdf.js","Containers/View/AdminRole.js","Containers/View/EmployeeRole.js","Pages/BOMPage.js","Pages/Challan.js","Pages/CRMPage.js","Pages/CustomerPage.js","Pages/InventoryPage.js","Pages/InvoicePage.js","Pages/InvoicePage1.js","Pages/InvoicePage2.js","Pages/ItemsPage.js","Pages/ManufacturingPage.js","Pages/MoveOrder.js","Pages/OnHandPage.js","Pages/Production.js","Pages/PurchaceOrderPage.js","Pages/QuantityPage.js","Pages/QuotationPage.js","Pages/SupplierPage.js","Pages/TransactionPage.js","Pages/WorkOrder.js","Routes/GuestRoute.js","Routes/UserRoute.js","App.js","serviceWorker.js","Store/rootReducer.js","reducer/user.js","reducer/userlist.js","reducer/materialoptionlist.js","reducer/materiallistvalues.js","reducer/productlistvalues.js","reducer/masteritemtypenamevalue.js","reducer/masteritemlistnamevalue.js","reducer/suppliercontactlistvalue.js","reducer/supplierdetaillistvalue.js","reducer/uomlistvalue.js","reducer/currencylistvalue.js","reducer/locationlistvalue.js","reducer/purchaseorderlistvalue.js","reducer/receiptlistvalues.js","reducer/customerlistvalues.js","reducer/customertransationvalues.js","reducer/quotationlistvalues.js","reducer/invoicelistvalues.js","reducer/proformainvoicelistvalues.js","reducer/challanlistvalues.js","reducer/orderlistvalues.js","reducer/productionlistvalues.js","reducer/moveorderlistvalues.js","Store/store.js","Store/persistStore.js","index.js"],"names":["module","exports","__webpack_require__","p","api","userRegister","userRegisterdata","axios","post","concat","process","then","res","data","userRecord","login","credentials","user","getUser","get","userdata","getUserbyid","id","userRecordData","updateUser","patch","success","deleteUser","delete","addmaterialtype","materialdata","getmaterialstype","materiallist","updatematerialtype","addmaterial","getmaterial","updatematerial","addproduct","getproducts","productlist","addyear","checkexists","year","updateyear","updateid","catch","err","error","setAuthorizationHeader","token","arguments","length","undefined","defaults","headers","common","authorization","UOM_LIST","CURRENCY_LIST","Location_LIST","userSchema","schema","Entity","idAttribute","uomListSchema","materialOptionSchema","materialListSchema","productListSchema","masterItemTypeNameSchema","masterItemTypeListSchema","supplierContactListSchema","supplierDetailListSchema","currencyListSchema","locationListSchema","purchaseOrderListSchema","customerListSchema","customerTransactionSchema","quotationListSchema","invoiceListSchema","proformainvoiceListSchema","challanListSchema","orderListSchema","productionListSchema","moveorderListSchema","userLoggedIn","type","Header","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","logout","window","location","reload","history","push","toggle","bind","_assertThisInitialized","state","isOpen","isAuthenticated","_createClass","key","value","setState","React","createElement","Navbar","expand","className","NavbarBrand","tag","Link","to","src","logo","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","role","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Component","withRouter","connect","e","dispatch","localStorage","removeItem","AddUserForm","_len","args","Array","_key","apply","title","firstname","lastname","email","phone","startdate","Date","enddate","username","password","repassword","active","persontype","department","job","errors","loading","onChange","_objectSpread","_defineProperty","target","name","handleValidSubmit","console","log","submit","myFormRef","reset","response","handleChangeStartDate","date","selectedDate","formattedDate","getDate","getMonth","getFullYear","handleChangeEndDate","handleInvalidSubmit","_this2","_this$state","Alert","color","AvForm","onValidSubmit","onInvalidSubmit","ref","el","Card","CardHeader","CardBody","Row","Col","sm","AvGroup","Label","for","AvField","validate","required","errorMessage","pattern","minLength","maxLength","DatePicker","selected","autoComplete","minDate","dateFormat","maxDate","match","Button","disabled","AddUser","CustomLoader","Loader","height","UpdateUserForm","count","userRecordModified","userlist","UpdateUser","userid","params","AdminDashboard","paddingTop","productlistvalues","productdata","productvalueFetched","normalize","getMaterialsTypes","materialsvalue","materialsdata","materialoption","getMaterial","materialslistvalue","materialsvalues","transactionapi","getUomDetails","uomlist","addMasterItemType","masterItemType","getMasterItemType","masteritemtypes","updateMasterItemType","addMasterItemList","url","method","Accept","Content-Type","masterItemList","getMasterItemList","masteritemlist","updatemasteritemlist","deletemasteritemlist","addPurchaseOrder","purchaseorderlist","updatePurchaseOrder","getPurchaseOrderList","searchponumber","ponumber","purchaseordervalue","addorupdateitemsinlocation","additemsinlocation","getitemlistavaliable","locationid","itemid","totalitemlistvalues","getReceiptList","receiptlist","getMasterItemTypes","masteritemtypenamevalue","masteritemtypenamedata","MasterItemTypeName","masteritemtypelistvalues","masteritemtypelistdata","MasterItemTypeList","getPurchaseOrder","purchaseorderlistvalues","purchaseorderlistdata","purchaseOrderListFetched","totalitemvaluesearch","ProductBilling","product","profit","qty","labourcost","materiallistvalues","createSelectItems","items","map","option","i","filter","productname","_id","masteritemdescription","Object","values","textAlign","masteritemlistvalues","BillingTable","_this$props","selectedProduct","productformvalues","materialTotalCost","productMaterial","productMaterialData","parseFloat","productqty","product_id","masteritemcostperunit","reduce","a","b","subTotal","grandTotal","colSpan","masteritemname","masteritemuom","uomname","toFixed","parseInt","productlistvalue","gloabl","global","Breadcrumb","BreadcrumbItem","BillingForm","LoginForm","JSON","stringify","Roles","ADMIN","EMPLOYEE","ITADMIN","FINANCE","PURCHASE","SALES","STORE","PRODUCTION","LoginPage","dataHandler","Mob_JWT","decoded","jwtDecode","userinfo","AddMaterialForm","materialtype","materialname","materialdescription","materialuom","costperunit","materialrate","materialoptionlistvalues","DatatablePage","scroll","scrollx","columns","columnvalue","rows","rowvalues","MDBDataTable","scrollX","striped","bordered","small","AddMaterial","updateButton","path","addMaterial","view","DataTable","label","field","sort","AddMaterialTypesForm","material","AddMaterialType","materialoptions","addMaterialTypes","MDBBtn","size","AddMaterialOptions","UpdateMaterialForm","materialvalues","updateMaterial","updatematerialdetails","materialid","UpdateMaterialTypesForm","dataRecord","materialoptionobjectlist","UpdateMaterialType","updateMaterialType","UpdateMaterialTypeForm","ProductForm","initialState","createSelectItems3","optionvalue","uomlistvalues","masteritemtypename","split","createSelectItems2","createSelectunfinishedItems","masteritemtype","handleClick","_toConsumableArray","products","productsqty","productsuom","productsqtyinmeter","handleChange","index","materiallistvaluesObject","ProductqtyhandleChange","arr","item","productsweight","masteritemunitwt","ProductuomhandleChange","ProductqtyinmeterhandleChange","removeClick","removeProduct","splice","productMaterials","forEach","v","obj","alert","toggelbutton","getUnitmeasures","uomdata","message","_this3","Modal","ModalHeader","ModalBody","ModalFooter","_React$createElement3","marginTop","paddingLeft","getUomList","uomlistvalue","uomListFetched","Product","propTypes","PropTypes","func","isRequired","ViewProduct","productMaterialslist","materialitemtype","tablerows","itemlist","marginBottom","fontSize","fontWeight","marginRight","Table","ViewProductList","CustomerForm","customernumber","customername","customercontactnumber","customergstnumber","customeraddress1","customeraddress2","city","pincode","country","codate","getTime","deliveryAddress","address1","address2","visible","sameAsBilling","suppliercontactlistvalue","onDeliveryAddressChange","val","onShowAlert","setTimeout","keys","customerlistvalues","toString","ViewCustomerList","searchcustomername","searchfromdate","searchtodate","backupcustomerlistvalues","fromdatetimestamp","todatetimestamp","componentDidMount","getTransaction","filterCustomer","customervalues","customerdata","Transaction","setItem","dateName","dateValue","getDateByMMDDYYYY","filterBydates","initializeCustomers","ev","_this4","trim","filtereddata","toLowerCase","indexOf","date1","date2","_this5","customer","comparedate","_this$state2","customerBlock","customerapi","addcustomer","getcustomer","customerlist","updatecustomer","getcustomerTransaction","getCustomerList","customerlistvalue","customerListFetched","Customer","addCustomerContact","AddCustomerForm","enquirydate","quotationdate","podate","enquirytimestamp","quotationtimestamp","podatetimestamp","ponum","customerName","getItem","transactionID","customertransationvalues","backupcustomertransationvalues","initializeTransactions","poreceived","gotoPDF","updatePO","podates","put","onChange1","onChange2","customerid","Transactionhistory","enq_Date","_this6","modaldata","_this7","placeholder","customerTransactionBlock","quote","invoice","invoice_link","dc","challan_link","PO","quotation","Qno","po","margin","marginLeft","background","getCustomerTransaction","customerTransactionFetched","UpdateCustomerForm","updateCustomerContact","ViewCustomerTable","CustomerInfo","quotationapi","addquotation","quotationdata","updatequotation","getquotation","quotationlist","searchquotation","customerquotationlist","quotationCreated","quotationlistvalues","quotationFetched","CustomerQuotationList","AddYearForm","exists","updated","currentyear","AddFinancialYear","updateYear","addYear","challanapi","challan","addchallan","challandata","updatechallan","getchallan","challanlist","challanCreated","getChallan","challanlistvalues","challanFetched","invoiceapi","addinvoice","invoicedata","updateinvoice","getinvoice","invoicelist","getproformainvoice","invoiceCreated","invoicelistvalues","invoiceFetched","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","ChallanForm","invoicenumber","transactionid","invoiceid","selectedItemlist","itemname","itemdescription","itemtype","itemrate","itemuom","itemlocation","quantity","totalcost","remarks","customerdetail","deliverychallanno","toaddress","mobilenumber","site","vehiclenumber","gstno","otherreference","selectedCustomerID","selectedCustomerName","selectedInvoiceId","selectedInvoiceNumber","customerobjects","supplierdetaillistvalue","supplierdetaillistvalueobject","invoicelistselectedOptions","itemlistSelectedOption","masteritemlistvaluesobject","currencylistvalues","customerlistSelect","uom","locationlistvalue","successmsg","counts","handleInvoiceChange","_ref","_asyncToGenerator","_callee","selectedinvoice","invoiceselected","purchaseordernumber","transId","purchaseorderdate","_context","assign","quotationnumber","itemshortdescription","itemdiscount","addeditemlist","billingaddress","selectitemchange","handleChange2","_x","handleChallanDate","handlePODate","selected_id","totalValue","totalvalue","createSelectcustomer","selected_item","masteritemrate","ID","locationChange","selected_location","onhandlerChange","onSubjectHandler","filterItems","createSelectItemTypes","createSelectCurrencyItems","currencyname","createSelectUomItems","createSelectLocationItems","locationname","quantityChange","remarkChange","unitChange","AddedIteminfo","_this$state$data","supplierdetail","newArraySet","masteritemshortdescription","objset","arrayInvoiceSet","getDCDetails","getChallandata","founddata","newState","arraySet","itemarray","localeCompare","SelVal","SelINV","customStyles","control","base","minHeight","valueContainer","provided","padding","input","indicatorSeparator","display","indicatorsContainer","customerID","Select","classNamePrefix","styles","options","invoiceDisp","defaultValue","optionsel","itemnameinfo","selectedOption","readOnly","currencylistvalue","purchaseorderlistvalue","AddChallan","updateChallan","submitdata","addChallan","ViewChallan","quotationvalue","StyleSheet","textcenter","textright","textleft","paddingleft","pagepadding","section","position","flexDirection","overflow","section_column","myHeight","headerfont","descriptionText","headerfont2","headerfontleft","shippingaddress","row","justifyContent","dcaddress","dcaddress_left","view_border","border","flexGrow","view_border_left","borderLeft","borderTop","borderBottom","view_border_right","borderRight","column","headerwidth","headerwidthdate","headerwidthlogo","header_name","header_sub_name","paddingHorizontal","header_sub_name_phone","header_tintext","header_sub_name3","header_sub_nameB","flex","header_sub_nameA","headerwidthAddress","refstyle","paddingBottom","headerpadding","flexgrow","fontsize18","kindattend","yourref","main","tableheaderbgcolor","backgroundColor","footerfixed","bottom","dc_header","dc_gst","Small","children","Text","Medium","_ref3","textDecorationLine","Bold","_ref5","_ref6","MyDocument","_ref7","data_cond","toAD","totalrs","taxableAmount","taxableamount","moment","format","grandtotal","deliveryaddress","vendorcode","freightcharges","subtotal","cgst","sgst","igst","total","deliverychallannumber","goodsDescription","roundoffamount","mobileno","tax","tableComponentTwo","datalength","Page","TableHeader","TableCell","weighting","TableBody","DataTableCell","getContent","r","slno","View","Image","itemimage","weighteach","unit","Document","stye","paddingRight","wordWrap","ViewChallanPdf","status","link","quotationid","requestdeliverydate","masteritemimage","dynamicClick","document","getElementsByClassName","getElementById","click","href","download","PDFViewer","EnquiryPage","update","enquirylistvalues","backupenquirylistvalues","errorMsg","eno","company","detail","enquiryFrom","getEnquiries","addenquiry","addnewenquiry","updateenquiry","enquirylist","enquirydata","enquiryvalues","enquiry","errormessage","float","InvoiceForm","_customerdetail","_data","transaction","hsncode","saccode","selectedQuotationId","selectedQuotationNumber","quotationlistSelect","masteritemtypelistvaluesobject","_objectSpread2","sub","taxable","Number","calculatePercentageAmount","ttl","gst","gt","roa","calculateRoundoffTotal","_objectSpread7","onCustomerChange","onRemarksChange","handleDate","handleWorkorderDate","handleDespathdate","purchaseDate","invocieDate","bool","discountpercentagevalue","discountvalue","totalvaluecost","itemdiscountChange","discount","unitcost","particularindextotalvalue","_objectSpread15","updateQuotation","saveDynamicPonum","createChallanList","handleQuotationChange","selectedquotation","quotationselected","poDate","handleChallanChange","selecteddeliveryChallan","selectedChallan","arrayQuotationSet","getInvoiceDetails","_ref2","_callee2","_context2","lastIndexOf","invoicedate","deliverychallandata","workorderno","workorderdate","despathdate","removaltime","transportationcharge","advanceamountreceived","_x2","SelQuota","customerDisp","quotationdisp","AddInvoice","valid","ProformaInvoiceForm","proformainvoicelist","transportationgst","transportchargerequired","_objectSpread16","_React$createElement","AddProformaInvoice","ViewInvoice","originalInvoice","profomaInvoice","brandname","padding1","_pagepadding","boxShadow","headerfont4","headerfont5","headerfont3","seal","invoice_header","nobordertable","borderWidth","borderRightWidth","borderBottomWidth","Description","SmallBold","_ref4","financialYear","financialyear","amountinwords","Rs","amount","words","number","join","n_length","words_string","n_array","received_n_array","substr","j","cgstval","sgstval","igstval","n","op","nums","whole","substring","fraction","RsPaise","dispDyn","datanew","alignItems","firstDat","secondDat","element","Fragment","ViewInvoicePdf","text","_componentDidMount","goBack","ViewProformaInvoice","sessionStorage","getProformaInvoice","proformainvoicelistvalues","proformainvoiceFetched","MyDocument2","total2","transportationgstper","transportationchargegst","totalaftertransportcharge","sign","ViewProformaInvoicePdf","parse","AddItemListForm","itemName","permeter","perfeet","perinch","masteritemimagefile","filename","onNameChange","_objectSpread3","_objectSpread4","onItemTypeChange","selecteditemtype","selecteditemtypevalue","selectitemid","selecteditemvalues","fileSelectedHandler","files","file_size","file_name","file_type","filesize","hasExtension","formdata","FormData","append","fileName","exts","RegExp","replace","test","encType","accept","cursor","ViewMasterItemList","showModal","setDeleteId","deleteItem","deleteMasterItemList","masteritemdata","deletedData","payload","AddmasterItemList","MasterItemListForm","errorHandler","MasterItemListValues","class","UpdateItemListForm","itemImage","imageChanged","itemimg","maxWidth","maxHeight","UpdateMasterItemList","UpdateMasterItemListForm","MasterItemTypeForm","MasterItemTypename","MasterItemType","ItemMasterTypeList","masteritemtypesvalues","masteritemtypedata","UpdateMasterItemTypeForm","masteritemtypenamevalueobjectlist","UpdateItemMasterType","updateMasterItemTypes","masteritemid","EditTable","poid","poitemid","itemquantity","receivedqty","recevingqty","totalqty","receiptnumber","selectedItem","sucess","loadingvalue","selected_qty","iteminfo","itemlistsubmit","selectedItemlistvalues","tableBody","nowDate","min","max","locationapi","getLocationList","locationlist","locationdata","locationListFetched","ReceiptScreenForm","onhandleChange","ReceiptTable","receiptlistitems","receiptlisttable","receiptvalue","ReceiptScreen","getReceiptlist","searchPoNumber","podata","poItem","datavalue","searchporesult","searchdata","savereport","orderlistvalues","today","poqty","receiptDate","availqty","ViewReceiptPdf","poreceiptvalues","itemcode","TotalRecQty","moveorderapi","moveorder","addmoveorder","moveorderdata","getmoveorder","moveorderlist","getItemsMoveOrder","addMoveOrder","moverorderlistvalues","moverorderlist","getMoveOrder","moveorderFetched","itemorderlist","itemorderlistvalues","itemdata","MoveOrderScreenForm","availableQuantity","moveorderno","fromaddress","tolocationlist","handleChangeDeliveryDate","it","itemdesc","onhandlerFromChange","onhandlerToChange","createToLocationList","moveorderlistvalues","getMovedata","overflowX","MoveOrderScreen","ViewProduction","ViewMoveOrderProduction","moveorderid","receivedData","_componentWillReceiveProps","AddOnHandScreenForm","isAdded","entities","AddOnHand","productionapi","addproduction","productiondata","getproduction","productionlist","productionlistvalues","productionFetched","ProductionForm","totalweight","readystock","firstround","secondround","thirdround","productionorderno","subAssembly","dummyProductMapping","assembly","handleChangeCust","products2","productMaterial2","found","calculationArray","calculationdata","quantityPerMeter","quantityPerKg","thickness","weightChange","stockChange","secondChange","firstChange","thirdChange","toggelreload","onthicknessChange","mainindex","onQuantityChange","onQuantityChangeMeter","calc","kg","onQuantityChangeKg","onTotalChange","addItemComp","changeQuantity","getProddata","maninindex","AddProduction","ViewProudction","productiondate","description","qtyAvaillength","isViewList","productionTodayList","updateTransaction","toggle2","onhandlerChange2","subitem","usedqty","transactionHistrory","view2","viewTransaction","addTransaction","headerBlock","contentBlock","PurchaseOrderForm","isEditdone","suppliernumber","suppliername","supplieraddress1","supplieraddress2","suppliergstnumber","refno","subject","suppliercontactid","quotationno","currency","scheduledays","schedulepayment","createSelectSupplier","createSelectSupplierContact","suppliercontactname","_this$state$data2","getPODetails","podetail","supplierid","referenceno","currencyid","supplierapi","addSupplierContact","supplierContactdata","getSupplierContact","suppliercontactlist","addsupplierdetails","getSupplierDetails","supplierdetaillist","updateSupplierContact","suppliercontactlistdata","suppplierContactListFetched","supplierdetaillistdata","suppplierDetailListFetched","getCurrencyList","currencylist","currencydata","currencyListFetched","purchaseOrder","ViewPurchaseOrderlist","purchaseorder","address","suppliercity","supplierstate","supplierpincode","suppliercountry","columnSection","padd6","padding2","headerwidthNew","fontsize18bold","totaleachitem","selectecontactlist","selectedcontactlist","suppliercontactnumber","client","ViewPurchaseOrderPdf","purchaseorderid","selectedcontact","contactid","QuotationForm","isRemovedCalled","isVisible","itemdiscountamount","tcharge","transitinsurance","ws","loadingcharge","selectitemchange2","totaldiscountcost","getQuotationDetails","customerNumber","customerGST","customerAddress","dataelem","F","AddQuotation","ViewQuotation","tableHeader","cutoff","whiteSpace","wordBreak","bgblue","padding5","fontbold","smallicon","flexview","RedBold","BlackBold","customeraddress","loadingcharges","tchargegst","subtotalgst","totalincludegst","proud","makeInIdia","justDial","scaff","SupplierContactForm","SupplierContact","SupplierDetail","suppliercontactnamelist","suppliercontactdesignation","suppliercontactemail","supplierContacthandleChange","removeContact","contactnameChange","contactdesignationChange","contactnumberChange","contactemailChange","supplierContactinfo","suppliercontactarray","suppliercontactdesignationarray","suppliercontactnumberarray","suppliercontactemailarray","addSupplierDetails","SupplierDetailForm","SupplierDetailUpdateForm","mongoid","SupplierDetailUpdate","updateSupplierDetails","supplierdetailid","Supplierlist","supplierdata","supplierAddress","ItemQuantitySearch","TotalQuantity","ItemSearch","order","addorder","orderdata","updateaddorder","getorder","orderlist","orderFetched","OrderForm","companydetails","contactperson","officeno","deliveryschedule","orderdate","distance","sitecontactperson","pono","handleChangeDeliveryschedule","getWorkorderDetails","getOrderData","_React$createElement2","AddOrder","ViewOrder","updateCompleteOrder","updateworkorder","completed","DateNow","deliveryDate","companyname","ViewCompletedOrder","totalwt","ViewOrderPdf","AdminRole","deleteButton","startdat","userlistvalue","userFetched","EmployeeRole","BOMPage","_Component","ChallanPage","padding-top","CRMPage","CustomerPage","InventoryPage","top","InvoicePage","InvoicePage1","InvoicePage2","ItemsPage","ManufacturingPage","MoveOrder","OnHandPage","ProductionPage","PurchaceOrderPage","QuantityPage","QuotationPage","SupplierPage","TransactionPage","adminMenu","financeMenu","purchaseMenu","salesMenu","storeMenu","productionMenu","WorkOrderPage","component","rest","_objectWithoutProperties","_excluded","Route","render","Redirect","roles","includes","App","exact","GuestRoute","UserRoute","ViewAdmin","ViewEmployee","ProductList","UpdateMaterial","ViewMoveOrder","ViewItemsMoveOrder","AddMasterItemList","MasterItemList","UpdateMasterItemType","PurchaseOrder","ViewPurchaseOrderList","SupplierList","AddCustomer","UpdateCustomer","ViewQuotationPdf","AddChalan","Boolean","hostname","appReducer","combineReducers","action","storage","users","arrayData","fileteredData","ind","receiptlistvalues","rootReducer","persistConfig","localforage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","persistStore","library","add","faHome","faDollyFlatbed","faCube","faKaaba","faUsers","faUser","faUsersCog","faUserFriends","faCalendarPlus","ReactDOM","BrowserRouter","Provider","PersistGate","persistor","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.225d33de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sign.83a51cee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/js.15986e52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mk.e7f890af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proud.b1a70432.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scaff.184bf216.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd12c247.png\";","module.exports = __webpack_public_path__ + \"static/media/seal.0511c619.jpg\";","module.exports = __webpack_public_path__ + \"static/media/client.e1af59ba.png\";","import axios from \"axios\";\n\nexport default {\n  user: {\n    userRegister: userRegisterdata => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/auth`, {\n          userRegisterdata\n        })\n        .then(res => {\n          return res.data.userRecord;\n        });\n    },\n    login: credentials => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/login`, {\n          credentials\n        })\n        .then(res => {\n          return res.data.user;\n        });\n    },\n    getUser: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuser`)\n        .then(res => {\n          return res.data.userdata;\n        });\n    },\n    getUserbyid: id => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuserbyid?id=${id}`)\n        .then(res => {\n          return res.data.userRecordData;\n        });\n    },\n    updateUser: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/api/updateuser?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    deleteUser: id => {\n      return axios\n      .delete(`${process.env.REACT_APP_BASE_URL}/api/deleteUser?id=${id}`)\n    }\n  },\n  material: {\n    addmaterialtype: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/materialtype/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterialstype: data => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/materialtype/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerialtype: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/materialtype/updatematerialtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    addmaterial: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/material/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterial: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/material/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerial: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/material/updatematerial?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  product: {\n    addproduct: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/product/addproduct`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getproducts: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/product/getproducts`)\n        .then(res => {\n          return res.data.productlist;\n        });\n    }\n  },\n  year: {\n    addyear: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/year/addyear`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    checkexists: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/year/getyear`)\n        .then(res => {\n          return res.data.year;\n        });\n    },\n    updateyear: data => {\n      return axios\n      .patch(\n        `${process.env.REACT_APP_BASE_URL}/year/updateyear?id=${data.updateid}`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res.data.success;\n      })\n      .catch(err => {\n        return err.data.error;\n      });\n    }\n  }\n};\n","import axios from \"axios\";\nexport default (token = null) => {\n  if (token) {\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.headers.common.authorization;\n  }\n};\n","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\nexport const USER_FETCHED = 'USER_FETCHED';\nexport const MATERIAL_OPTIONS = 'MATERIAL_OPTIONS';\nexport const MATERIAL_VALUES_FETCHED = 'MATERIAL_VALUES_FETCHED';\nexport const PRODUCT_VALUES_FETCHED = 'PRODUCT_VALUES_FETCHED';\nexport const MASTER_ITEM_TYPES = 'MASTER_ITEM_TYPES';\nexport const MASTER_ITEM_LIST = 'MASTER_ITEM_LIST';\nexport const DELETE_MASTER_ITEM_LIST = 'DELETE_MASTER_ITEM_LIST';\nexport const SUPPLIER_CONTACT_LIST = 'SUPPLIER_CONTACT_LIST';\nexport const SUPPLIER_DETAIL_LIST = 'SUPPLIER_DETAIL_LIST';\nexport const UOM_LIST = 'UOM_LIST';\nexport const CURRENCY_LIST = 'CURRENCY_LIST';\nexport const Location_LIST = 'LOCATION_LIST';\nexport const PURCHASE_ORDER_LIST = 'PURCHASE_ORDER_LIST';\nexport const PO_RECEIPT_LIST = 'PO_RECEIPT_LIST';\nexport const ADD_CUSTOMER_CONTACT = 'ADD_CUSTOMER_CONTACT';\nexport const CUSTOMER_CONTACT_FETCHED = 'CUSTOMER_CONTACT_FETCHED';\nexport const CUSTOMERTRANSACTION_FETCHED = 'CUSTOMERTRANSACTION_FETCHED';\nexport const ADD_CUSTOMER_TRANSACTION = 'ADD_CUSTOMER_TRANSACTION';\n\nexport const QUOTATION_FETCHED = 'QUOTATION_FETCHED';\nexport const ADD_QUOTATION = 'ADD_QUOTATION';\n\nexport const INVOICE_FETCHED = 'INVOICE_FETCHED';\nexport const PROFORMAINVOICE_FETCHED = 'PROFORMAINVOICE_FETCHED';\nexport const ADD_PROFORMA_INVOICE = 'ADD_PROFORMA_INVOICE';\n\nexport const ADD_INVOICE = 'ADD_INVOICE';\n\nexport const CHALLAN_FETCHED = 'CHALLAN_FETCHED';\nexport const ADD_CHALLAN = 'ADD_CHALAN';\n\nexport const ORDER_FETCHED = 'ORDER_FETCHED';\nexport const ADD_ORDER = 'ADD_ORDER';\n\nexport const PRODUCTION_FETCHED = 'PRODUCTION_FETCHED';\nexport const ADD_PRODUCTION = 'ADD_PRODUCTION';\n\nexport const MOVEORDER_FETCHED = 'MOVEORDER_FETCHED';\nexport const ADD_MOVEORDER = 'ADD_MOVEORDER';\n","import { schema } from 'normalizr';\n\nexport const userSchema = new schema.Entity('users', {}, { idAttribute: 'id' });\n\nexport const uomListSchema = new schema.Entity(\n  'uomlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialOptionSchema = new schema.Entity(\n  'materialoptions',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialListSchema = new schema.Entity(\n  'materialslistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const productListSchema = new schema.Entity(\n  'productlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeNameSchema = new schema.Entity(\n  'masteritemtypenamevalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeListSchema = new schema.Entity(\n  'masteritemtypelistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierContactListSchema = new schema.Entity(\n  'suppliercontactlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierDetailListSchema = new schema.Entity(\n  'supplierdetaillistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const currencyListSchema = new schema.Entity(\n  'currencylistvalue',\n  {},\n  { idAttribute: 'id' }\n);\nexport const locationListSchema = new schema.Entity(\n  'locationlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const purchaseOrderListSchema = new schema.Entity(\n  'purchaseorderlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const receiptListSchema = new schema.Entity(\n  'receiptlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerListSchema = new schema.Entity(\n  'customerlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerTransactionSchema = new schema.Entity(\n  'customertransationvalues',\n  {},\n  { idAttribute: 'customerid' }\n);\n\nexport const quotationListSchema = new schema.Entity(\n  'quotationlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const invoiceListSchema = new schema.Entity(\n  'invoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const proformainvoiceListSchema = new schema.Entity(\n  'proformainvoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const challanListSchema = new schema.Entity(\n  'challanlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const orderListSchema = new schema.Entity(\n  'orderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const productionListSchema = new schema.Entity(\n  'productionlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const moveorderListSchema = new schema.Entity(\n  'moveorderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport setAuthorizationHeader from \"../utils/setAuthorizationHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  USER_FETCHED\n} from \"../Services/types\";\nimport { userSchema } from \"../Schemas/schemas\";\n\nexport const userLoggedIn = user => {\n  return {\n    type: USER_LOGGED_IN,\n    user: user\n  };\n};\n\nexport const userLoggedOut = () => {\n  return {\n    type: USER_LOGGED_OUT,\n    user: {}\n  };\n};\n\nexport const userFetched = userlist => {\n  return {\n    type: USER_FETCHED,\n    userlist\n  };\n};\n\nexport const userRegister = data => {\n  return dispatch => {\n    return api.user.userRegister(data);\n  };\n};\n\nexport const getUser = () => {\n  console.log(\"dispatch action calling\");\n  return dispatch => {\n    return api.user.getUser().then(userlist => {\n      const userlistvalue = userlist.userdata;\n      return dispatch(userFetched(normalize(userlistvalue, [userSchema])));\n    });\n  };\n};\n\nexport const updateUser = data => {\n  return dispatch => {\n    return api.user.updateUser(data);\n  };\n};\n\nexport const deleteUser = id => {\n  return dispatch => {\n    return api.user.deleteUser(id);\n  }\n}\n\nexport const login = credentials => {\n  return dispatch => {\n    return api.user.login(credentials).then(user => {\n      localStorage.Mob_JWT = user.token;\n      setAuthorizationHeader(user.token);\n      var decoded = jwtDecode(localStorage.Mob_JWT);\n      console.log(\"Decoded \", decoded)\n      const userinfo = {\n        email: decoded.email,\n        role: decoded.role,\n        token: localStorage.Mob_JWT\n      };\n      dispatch(userLoggedIn(userinfo));\n    });\n  };\n};\n\nexport const logout = e => {\n  return dispatch => {\n    localStorage.removeItem(\"Mob_JWT\");\n    dispatch(userLoggedOut());\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/actions';\nimport logo from '../../Images/logo.png';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      isAuthenticated: this.props.isAuthenticated\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logout = () => {\n    this.props.logout();\n    window.location.reload();\n    this.props.history.push('/login');\n  };\n  render() {\n    return (\n      <div>\n        <Navbar  expand='md'>\n          <div className='container'>\n            <NavbarBrand tag={Link} to='/'>\n              <div>\n                <img src={logo} alt='scaffolding' style={{ width: '90px' }} />\n              </div>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'admin'\n                ) && (\n                  <NavItem>\n                    <NavLink tag={Link} to='/admin_dashboard'>\n                      <i className='fas fa-home fa-2x'></i>\n                    </NavLink>\n                  </NavItem>\n                )}\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'management' || this.props.role == 'itadmin'\n                ) && (\n                  <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                      Users\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem tag={Link} to='/adduser'>\n                        Add User\n                      </DropdownItem>\n                      <DropdownItem tag={Link} to='/adminlist'>\n                        Registered user details\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                )}\n                {/* {!!(this.props.isAuthenticated && this.props.role == \"admin\") &&\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Material & product\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag={Link} to=\"/addmaterialtype\">\n                    Add MaterialTypes \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addmaterial\">\n                    Add Material \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addproduct\">\n                    Add Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/viewproductlist\">\n                    View Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/productbilling\">\n                    Product Billing \n                  </DropdownItem>  \n                </DropdownMenu>\n              </UncontrolledDropdown>\n              } */}\n                {this.props.isAuthenticated ? (\n                  <NavItem>\n                    <NavLink tag={Link} onClick={this.logout}>\n                      Logout\n                    </NavLink>\n                  </NavItem>\n                ) : (\n                  <NavItem>\n                    <NavLink tag={Link} to='/login'>\n                      Login\n                    </NavLink>\n                  </NavItem>\n                )}\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  if (state && state.user) {\n    return {\n      isAuthenticated: !!state.user.token,\n      role: state.user.role\n    };\n  } else {\n    return {\n      isAuthenticated: false,\n      role: 'admin'\n    };\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { logout }\n  )(Header)\n);\n","import React from 'react';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass AddUserForm extends React.Component {\n  state = {\n    data: {\n      title: 'Mr',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: null,\n      username: 'nA',\n      password: '',\n      repassword: '',\n      active: '1',\n      persontype: 'admin',\n      department: '1',\n      job: '1',\n      location: '1'\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? <Alert color='info'>user is added</Alert> : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='password'\n                      type='password'\n                      id='password'\n                      value={data.password}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                       \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Re Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='repassword'\n                      type='password'\n                      id='re-password'\n                      value={data.repassword}\n                      onChange={this.onChange}\n                      validate={{\n                        match: { value: 'password' },\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                      \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {loading}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default AddUserForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { userRegister } from \"../../actions/actions\";\nimport AddUserForm from \"./AddUserForm/AddUserForm\";\n\nclass AddUser extends React.Component {\n  submit = data => this.props.userRegister(data);\n\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <AddUserForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nAddUser.propTypes = {\n  userRegister: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { userRegister }\n)(AddUser);\n","import React from \"react\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport \"./loader.css\";\nclass CustomLoader extends React.Component {\n    render() {\n        return(\n         <Loader className=\"loaderposition\"\n            type=\"ThreeDots\"\n            color=\"#ed272f\"\n            height=\"100\"\n            width=\"100\"\n         />\n        );\n       }\n}\n\nexport default CustomLoader;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\nimport CustomLoader from '../../../Components/loader/loader';\n\nclass UpdateUserForm extends React.Component {\n  state = {\n    data: {\n      id: '',\n      title: '',\n      firstname: this.props.firstname,\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: '',\n      username: '',\n      password: '',\n      repassword: '',\n      active: '',\n      persontype: '',\n      department: '',\n      job: '',\n      location: ''\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    count: ''\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const userRecord = props.userRecord;\n    const userRecordModified = userRecord;\n    userRecordModified.startdate = new Date(userRecord.startdate);\n    // userRecordModified.enddate = new Date(userRecord.enddate);\n    userRecordModified.enddate =\n      userRecord.enddate === null ? null : new Date(userRecord.enddate);\n    this.setState({ ...this.state.data, data: userRecordModified });\n  }\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(data => {\n        console.log('updateuserform page');\n        console.log(data);\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          {!!success ? (\n            <Alert color='info'>User details is updated successfully</Alert>\n          ) : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                      value={data.title}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n            \n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        disabled={true}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                        {data.enddate ? (\n                        <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />                        \n                      ): null}\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\nUpdateUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateUserForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport UpdateUserForm from \"./AddUserForm/UpdateUserForm\";\n// import api from \"../api\";\nimport { updateUser } from \"../../actions/actions\";\n\nclass UpdateUser extends React.Component {\n  state = {\n    userRecord: \"\"\n  };\n\n  componentDidMount() {\n    const userid = this.props.match.params.id;\n    const userRecord = this.props.userlist[userid];\n    this.setState({ userRecord });\n    // api.user.getUserbyid(userid)\n    // .then((userRecord)=>{\n    //     this.setState({userRecord});\n    // })\n    // .catch((err)=>{\n    //     console.log(\"updateuserfile err\");\n    //     console.log(err);\n    // });\n  }\n\n  submit = data => this.props.updateUser(data);\n\n  render() {\n    const { userRecord, userid } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <UpdateUserForm userRecord={userRecord} submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nUpdateUser.propTypes = {\n  userlist: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  userRecord: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    firstname: PropTypes.string.isRequired,\n    lastname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    startdate: PropTypes.string.isRequired,\n    enddate: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    persontype: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    job: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updateUser }\n)(UpdateUser);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AdminDashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/inventory_page\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Setup</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/transaction_page\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Transactions</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n            {/* <li className=\"bg-color-lg-pk\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-user fa-3x\"></i>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-org\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-users-cog fa-3x\"></i>\n                </Link>\n              </div>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport {\n  MATERIAL_OPTIONS,\n  MATERIAL_VALUES_FETCHED,\n  PRODUCT_VALUES_FETCHED\n} from \"../Services/types\";\nimport {\n  materialOptionSchema,\n  materialListSchema,\n  productListSchema\n} from \"../Schemas/schemas\";\n\nexport const productvalueFetched = productlistvalues => {\n  return {\n    type: PRODUCT_VALUES_FETCHED,\n    productlistvalues\n  };\n};\nexport const materialoptionFetched = materialoption => {\n  return {\n    type: MATERIAL_OPTIONS,\n    materialoption\n  };\n};\n\nexport const materialsFetched = materialsvalues => {\n  return {\n    type: MATERIAL_VALUES_FETCHED,\n    materialsvalues\n  };\n};\n\nexport const addproduct = data => {\n  return dispatch => {\n    return api.product.addproduct(data);\n  };\n};\n\nexport const getproducts = data => {\n  return dispatch => {\n    return api.product.getproducts(data).then(data => {\n      const productlistvalues = data.productdata;\n      return dispatch(\n        productvalueFetched(normalize(productlistvalues, [productListSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterialTypes = data => {\n  return dispatch => {\n    return api.material.addmaterialtype(data);\n  };\n};\n\nexport const updateMaterialType = data => {\n  return dispatch => {\n    return api.material.updatematerialtype(data);\n  };\n};\n\nexport const getMaterialsTypes = () => {\n  return dispatch => {\n    return api.material.getmaterialstype().then(materiallist => {\n      const materialsvalue = materiallist.materialsdata;\n      return dispatch(\n        materialoptionFetched(normalize(materialsvalue, [materialOptionSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterial = data => {\n  return dispatch => {\n    return api.material.addmaterial(data);\n  };\n};\n\nexport const getMaterial = () => {\n  return dispatch => {\n    return api.material.getmaterial().then(materiallist => {\n      const materialslistvalue = materiallist.materialsdata;\n      return dispatch(\n        materialsFetched(normalize(materialslistvalue, [materialListSchema]))\n      );\n    });\n  };\n};\n\nexport const updatematerialdetails = data => {\n  return dispatch => {\n    return api.material.updatematerial(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  uom: {\n    getUomDetails: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n        .then(res => {\n          return res.data.uomlist;\n        });\n    }\n  },\n  transaction: {\n    addMasterItemType: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/transaction/addmasteritemtype`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getMasterItemType: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/transaction/getmasteritemtype`)\n        .then(res => {\n          return res.data.masteritemtypes;\n        });\n    },\n    updateMasterItemType: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/transaction/updatemasteritemtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  transactionMasterItemList: {\n    addMasterItemList: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/addmasteritemlist`,\n        method: \"POST\",\n        data: data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    getMasterItemList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/getmasteritemlist`\n        )\n        .then(res => {\n          return res.data.masteritemlist;\n        });\n    },\n    updatemasteritemlist: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/updatemasteritemlist?id=${data.id}`,\n        method: \"PATCH\",\n        data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    deletemasteritemlist: id => {\n      return axios\n      .delete(\n        `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/deletemasteritemlist?id=${id}`\n      )\n    }\n  },\n  purchaseorder: {\n    addPurchaseOrder: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/addpurchaseorder`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    updatePurchaseOrder: data =>{\n      console.log(data)\n      return axios\n      .post(\n        `${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res;\n      });\n    },\n    getPurchaseOrderList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorderrlist`\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    searchponumber: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/searchpurchaseorderrlist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.purchaseordervalue;\n        });\n    }\n  },\n  addorupdateitemsinlocation: {\n    addorupdateitemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/addorupdateitems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    additemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/additems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    getitemlistavaliable: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/getitemlistavaliable/?locationid=${data.locationid}&itemid=${data.itemid}`\n        )\n        .then(res => {\n          return res.data.totalitemlistvalues;\n        });\n    }\n  },\n  receipt: {\n    getReceiptList: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/receiptinfo/getreceiptinfolist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.receiptlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport {\n  MASTER_ITEM_TYPES,\n  MASTER_ITEM_LIST,\n  PURCHASE_ORDER_LIST,\n  PO_RECEIPT_LIST,\n  DELETE_MASTER_ITEM_LIST\n} from \"../Services/types\";\nimport {\n  masterItemTypeNameSchema,\n  masterItemTypeListSchema,\n  purchaseOrderListSchema,\n  receiptListSchema\n} from \"../Schemas/schemas\";\n\nexport const masterItemTypeNameFetched = MasterItemTypeName => {\n  return {\n    type: MASTER_ITEM_TYPES,\n    MasterItemTypeName\n  };\n};\n\nexport const masterItemTypeListFetched = MasterItemTypeList => {\n  return {\n    type: MASTER_ITEM_LIST,\n    MasterItemTypeList\n  };\n};\n\nexport const purchaseOrderListFetched = purchaseorderlistvalues => {\n  return {\n    type: PURCHASE_ORDER_LIST,\n    purchaseorderlistvalues\n  };\n};\n\nexport const ReceiptListFetched = receiptlistvalues => {\n  return {\n    type: PO_RECEIPT_LIST,\n    receiptlistvalues\n  };\n};\nexport const addMasterItemType = data => {\n  return dispatch => {\n    return api.transaction.addMasterItemType(data);\n  };\n};\n\nexport const updateMasterItemTypes = data => {\n  return dispatch => {\n    return api.transaction.updateMasterItemType(data);\n  };\n};\n\nexport const updatemasteritemlist = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.updatemasteritemlist(data);\n  };\n};\nexport const getMasterItemTypes = () => {\n  return dispatch => {\n    return api.transaction.getMasterItemType().then(masteritemtypes => {\n      const masteritemtypenamevalue = masteritemtypes.masteritemtypenamedata;\n      return dispatch(\n        masterItemTypeNameFetched(\n          normalize(masteritemtypenamevalue, [masterItemTypeNameSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const addMasterItemList = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.addMasterItemList(data);\n  };\n};\n\nexport const deleteMasterItemList = id => {\n  return dispatch => {\n    return api.transactionMasterItemList.deletemasteritemlist(id).then(deletedData => {\n      return dispatch({\n        type: DELETE_MASTER_ITEM_LIST,\n        payload: id\n     })\n    })\n  };\n}\n\nexport const getMasterItemList = () => {\n  return dispatch => {\n    return api.transactionMasterItemList\n      .getMasterItemList()\n      .then(masteritemlist => {\n        const masteritemtypelistvalues = masteritemlist.masteritemtypelistdata;\n        return dispatch(\n          masterItemTypeListFetched(\n            normalize(masteritemtypelistvalues, [masterItemTypeListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const addPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.addPurchaseOrder(data);\n  };\n};\n\n\nexport const updatePurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.updatePurchaseOrder(data);\n  };\n};\n\nexport const getPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.getPurchaseOrderList().then(purchaseorderlist => {\n      const purchaseorderlistvalues = purchaseorderlist.purchaseorderlistdata;\n      return dispatch(\n        purchaseOrderListFetched(\n          normalize(purchaseorderlistvalues, [purchaseOrderListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const searchPoNumber = data => {\n  return dispatch => {\n    return api.purchaseorder.searchponumber(data);\n  };\n};\n\nexport const addorupdateitemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.addorupdateitemsinlocation(data);\n  };\n};\n\nexport const additemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.additemsinlocation(data);\n  };\n};\n\nexport const getReceiptlist = data => {\n  return dispatch => {\n    return api.receipt.getReceiptList(data);\n    // .then(receiptlist => {\n    //   if (receiptlist.count > 0) {\n    //     const receiptlistvalues = receiptlist.receiptlist;\n    //     return dispatch(\n    //       ReceiptListFetched(normalize(receiptlistvalues, [receiptListSchema]))\n    //     );\n    //   }\n    //   return receiptlist;\n    // });\n  };\n};\nexport const totalitemvaluesearch = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.getitemlistavaliable(data);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    data: {\n      product: \"\",\n      profit: \"\",\n      qty: \"\",\n      labourcost: \"\"\n    },\n    productlistvalues: [],\n    errors: {},\n    materiallistvalues: {},\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    this.setState({ ...this.state, productlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const productlistvalues = Object.values(props.productlistvalues);\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const productlistvalues = this.state.productlistvalues;\n    const materiallistvalues = this.state.materiallistvalues;\n    productlistvalues\n      .map((option, i) => option)\n      .filter((option, i) => {\n        if (materiallistvalues[option.productname._id]) {\n          items.push(\n            <option key={i} value={option.id}>\n              {materiallistvalues[option.productname._id].masteritemdescription}\n            </option>\n          );\n        }\n      });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const data = this.props.submit(this.state.data);\n    console.log(data);\n    if (data) {\n      this.setState({ loading: false, errors: {}, success: true });\n    }\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Product Billing</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"product\">Product Id</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"product\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">Please select value</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"profit\">Profit %</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"profit\"\n                      type=\"text\"\n                      id=\"profit\"\n                      value={data.profit}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter profit value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"profit value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"qty\">Quantity</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"qty\"\n                      type=\"text\"\n                      id=\"qty\"\n                      value={data.qty}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter product quantity value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"quantity value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"labourcost\">Labour Cost</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"labourcost\"\n                      type=\"text\"\n                      id=\"labourcost\"\n                      value={data.labourcost}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter labour cost value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"labour cost value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{'textAlign':'center'}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductBilling);\n","import React from \"react\";\n\nclass BillingTable extends React.Component {\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.props;\n    const materialTotalCost =\n      selectedProduct.productMaterial\n        .map((productMaterialData, i) => {\n          return (\n            parseFloat(productMaterialData.productqty) *\n            // parseFloat(productMaterialData.product_id.materialrate) *\n            parseFloat(productMaterialData.product_id.masteritemcostperunit)\n          );\n        })\n        .reduce((a, b) => a + b, 0) * parseFloat(productformvalues.qty);\n    const subTotal =\n      materialTotalCost + parseFloat(productformvalues.labourcost);\n    const profit = (parseFloat(productformvalues.profit) / 100) * subTotal;\n    const grandTotal = subTotal + profit;\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th colSpan=\"4\">\n                {\n                  materiallistvalues[selectedProduct.productname._id]\n                    .masteritemdescription\n                }\n              </th>\n            </tr>\n            <tr>\n              <th>Item Name</th>\n              <th>UOM</th>\n              <th>Unit per Cost</th>\n              <th>Item Qty</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selectedProduct.productMaterial.map((productMaterialData, i) => {\n              return (\n                <tr>\n                  <td>{productMaterialData.product_id.masteritemname}</td>\n                  <td>\n                    {productMaterialData.product_id.masteritemuom.uomname}\n                  </td>\n                  <td>\n                    {productMaterialData.product_id.masteritemcostperunit}\n                  </td>\n                  <td>{productMaterialData.productqty}</td>\n                  <td>\n                    {parseFloat(productMaterialData.productqty).toFixed(2) *\n                      // parseFloat(productMaterialData.product_id.materialrate) *\n                      parseFloat(\n                        productMaterialData.product_id.masteritemcostperunit\n                      ).toFixed(2)}\n                  </td>\n                </tr>\n              );\n            })}\n            <tr>\n              <td colSpan=\"4\">Product Quantity</td>\n              <td>{parseFloat(productformvalues.qty)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Material Total Cost</td>\n              <td>{materialTotalCost}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Labour charge</td>\n              <td>{parseInt(productformvalues.labourcost)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Sub Total</td>\n              <td>{subTotal}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Profit % </td>\n              <td>{profit}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Grand Total</td>\n\n              <td>{grandTotal}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default BillingTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport BillingForm from \"./BillingForm/BillingForm\";\nimport BillingTable from \"./BillingTable\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    productformvalues: {},\n    productlistvalue: {},\n    materiallistvalues: {},\n    selectedProduct: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.props.getMasterItemList();\n  }\n  componentWillReceiveProps(props) {\n    const productlistvalues = props.productlistvalues;\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n  submit = productformvalues => {\n    const selectedProduct = this.props.productlistvalues[\n      productformvalues.product\n    ];\n    if (selectedProduct) {\n      this.setState({ ...this.state, productformvalues, selectedProduct });\n      return {\n        success: { gloabl: \"data exist\" }\n      };\n    } else {\n      return {\n        errors: { global: \"something went wrong\" }\n      };\n    }\n  };\n\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.state;\n\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Cost</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <BillingForm submit={this.submit} />\n        {!!selectedProduct && (\n          <BillingTable\n            selectedProduct={selectedProduct}\n            productformvalues={productformvalues}\n            materiallistvalues={materiallistvalues}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts, getMasterItemList }\n)(ProductBilling);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginForm.scss\";\n\nclass LoginForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    errors: {},\n    loading: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props.submit(this.state.data).catch(err => {\n      console.log(JSON.stringify(err))\n      this.setState({ errors: err.response.data.errors, loading: false });\n      this.props.error(false);\n    });\n  };\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading } = this.state;\n    return (\n      <div className=\"center login-form-parent mg-20\">\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <AvGroup>\n            <div>\n              {!!errors.global ? (\n                <Alert color=\"danger\">{errors.global}</Alert>\n              ) : null}\n\n              {!!errors.email ? (\n                <Alert color=\"danger\">{errors.email}</Alert>\n              ) : null}\n            </div>\n            <Label className='small-font-size' for=\"Email\">Email</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"email\"\n              id=\"Email\"\n              type=\"email\"\n              value={data.email}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a Email\"\n                },\n                pattern: {\n                  value:\n                    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                  errorMessage: \"Please enter valid Email\"\n                }\n              }}\n            />\n          </AvGroup>\n          <AvGroup>\n            <Label className='small-font-size' for=\"password\">Password</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a password\"\n                }\n              }}\n            />\n          </AvGroup>\n          <div style={{ textAlign: \"center\" }}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","export const Roles = {\n  ADMIN: 'management',\n  EMPLOYEE: 'employee',\n  ITADMIN: 'itadmin',\n  FINANCE: 'finance',\n  PURCHASE: 'purchase',\n  SALES: 'sales',\n  STORE: 'stores',\n  PRODUCTION:'production'\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginForm from './LoginForm/LoginForm';\nimport { login } from '../../actions/actions';\nimport { Roles } from '../../Services/Roles';\nimport CustomLoader from '../../Components/loader/loader';\nimport Alert2 from '../../Components/Alert/Alert';\n\nclass LoginPage extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.login(data).then(() => {\n\n      this.dataHandler(false);\n      console.log(this.props.role)\n      if (this.props.role === Roles.ADMIN) {\n        // return this.props.history.push(`/adduser`);\n        return this.props.history.push(`/admin_dashboard`);\n      } else if (this.props.role === Roles.ITADMIN) {\n        return this.props.history.push(`/adminlist`);\n      } else if (\n        this.props.role === Roles.FINANCE ||\n        this.props.role === Roles.PURCHASE ||\n        this.props.role === Roles.SALES ||\n        this.props.role === Roles.STORE ||\n        this.props.role === Roles.PRODUCTION\n      ) {\n        return this.props.history.push(`/transaction_page`);\n      } else {\n\n        return this.props.history.push(`/admin_dashboard`);\n      }\n    });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n\n        <LoginForm submit={this.submit} error={this.dataHandler} />\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  role: PropTypes.string.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  submit: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(LoginPage);\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass Alert2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  render() {\n    return (\n      <div>\n        {/* <Button color=\"danger\" onClick={this.toggle}>\n          {this.props.buttonLabel}\n        </Button> */}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Pondhan Scaffolding</ModalHeader>\n          <ModalBody>\n          {this.props.errormessage}\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"secondary\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Alert2;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass AddMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: null,\n      materialrate: null\n    },\n    materialoptionlistvalues: [],\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Material is added successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Itemname\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid Itemname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">Item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Please select value</option>\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemdescription\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">Item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                       \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                   \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddMaterialForm);\n","import React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./DataTable.css\";\n\nconst DatatablePage = props => {\n  let scroll = false;\n  if(props.scrollx) {\n    scroll = props.scrollx\n  }\n  const data = {\n    columns: props.columnvalue,\n    rows: props.rowvalues\n  };\n\n  return (\n    <MDBDataTable\n      scrollX={scroll}\n      striped\n      bordered\n      small\n      data={data}\n      className={props.className}\n    />\n  );\n};\n\nexport default DatatablePage;\n","import React from \"react\";\nimport AddMaterialForm from \"./MaterialForms/AddMaterialForm\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  addMaterial,\n  getMaterial,\n  getMaterialsTypes\n} from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\n\nclass AddMaterial extends React.Component {\n  state = {\n    materiallist: \"\",\n    count: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_material/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentWillReceiveProps(props) {\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    const materiallist = materiallistvalues.map((materialdata, i) => {\n      return {\n        materialtype: materialdata.materialtype.materialname,\n        materialname: materialdata.materialname,\n        materialdescription: materialdata.materialdescription,\n        materialuom: materialdata.materialuom,\n        materialrate: materialdata.materialrate,\n        costperunit: materialdata.costperunit,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            View / Edit\n          </Button>\n        )\n      };\n    });\n    const count = materiallistvalues.length;\n    this.setState({ ...this.state, materiallist, count });\n  }\n\n  submit = data => {\n    return this.props.addMaterial(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { count, materiallist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"material Type\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Name\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"materialdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"unit of measure\",\n        field: \"materialuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Rate\",\n        field: \"materialrate\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"cost per unit\",\n        field: \"costperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"view / Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Item</BreadcrumbItem>\n        </Breadcrumb>\n        <AddMaterialForm submit={this.submit} />\n        <div>\n          {count > 0 && (\n            <div className=\"container mg-20\">\n              <DataTable columnvalue={columnvalue} rowvalues={materiallist} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAddMaterial.propTypes = {\n  addMaterial: PropTypes.func.isRequired,\n  getMaterial: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMaterial, getMaterial, getMaterialsTypes }\n)(AddMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass AddMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            material:\"\"\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    handleValidSubmit = () => {\n        console.log(this.state.data);\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Material details is Added successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Material data already exist.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Add Item Type</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"material\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.option}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item\"\n                                            },\n                                   \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid materialname\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <AvGroup className=\"mg-20\">\n                                    <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                                        Submit\n                                        {/* {loading} */}\n                                    </Button>\n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nAddMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nexport default AddMaterialTypesForm;","import React from \"react\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport AddMaterialOptions from \"./MaterialForms/AddMaterialTypesForm\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport { addMaterialTypes, getMaterialsTypes } from \"../../actions/Product\";\n\nclass AddMaterialType extends React.Component {\n  state = {\n    count: \"\",\n    materialoptions: []\n  };\n  componentDidMount() {\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_itemtype/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const materialoptionslist = Object.values(props.materialoptions);\n    const materialoptions = materialoptionslist.map((materialdata, i) => {\n      return {\n        materialname: materialdata.materialname,\n        view: (\n          <MDBBtn\n            color=\"info\"\n            size=\"sm\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            view / Edit\n          </MDBBtn>\n        )\n      };\n    });\n    const count = materialoptions.length;\n    this.setState({ ...this.state, materialoptions, count });\n  }\n  submit = data => {\n    return this.props.addMaterialTypes(data).then(data => {\n      this.props.getMaterialsTypes();\n      return data;\n    });\n  };\n  render() {\n    const { count, materialoptions } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div>\n        <div className=\"container mg-20\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Inventory</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Add Item Type</BreadcrumbItem>\n          </Breadcrumb>\n\n          <AddMaterialOptions submit={this.submit} />\n        </div>\n        {count > 0 && (\n          <div className=\"container mg-20\">\n            <DataTable columnvalue={columnvalue} rowvalues={materialoptions} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAddMaterialType.propTypes = {\n  addMaterialTypes: PropTypes.func.isRequired,\n  getMaterialsTypes: PropTypes.func.isRequired,\n  materialoptions: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    materialname: PropTypes.string.isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptions: state.materialoption\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { addMaterialTypes, getMaterialsTypes }\n)(AddMaterialType);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UpdateMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: \"\",\n      materialrate: \"1\"\n    },\n\n    errors: {},\n    materialoptionlistvalues: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.materialvalues;\n    data.materialtype = props.materialvalues.materialtype._id;\n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Item is updated successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader>Add Material</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemname\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid materialname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                      value={data.materialtype}\n                    >\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                      value={data.materialuom}\n                    >\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"ea\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                      \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                 \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateMaterialForm);\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMaterialForm from \"./MaterialForms/UpdateMaterialForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatematerialdetails, getMaterial } from \"../../actions/Product\";\n\nclass updateMaterial extends React.Component {\n  state = {\n    materialvalues: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    const materialid = this.props.match.params.id;\n    const materialvalues = this.props.materiallistvalues[materialid];\n    this.setState({ materialvalues });\n  }\n\n  submit = data => {\n    return this.props.updatematerialdetails(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { materialvalues } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/additem\">Add Item</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <UpdateMaterialForm\n          submit={this.submit}\n          materialvalues={materialvalues}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updatematerialdetails, getMaterial }\n)(updateMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass UpdateMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            materialname:this.props.materialoption.materialname,\n            id:this.props.materialoption.id\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    componentWillReceiveProps(props){\n        const dataRecord = props.materialoption;\n        this.setState({...this.state.data, data:dataRecord});\n    }\n\n    handleValidSubmit = () => {\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            // this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        console.log(this.props);\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Item details is updated successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Item data already exist.</Alert>\n                ) : null}\n                {!!errors.global ? (\n                    <Alert color=\"danger\">Something went wrong,Please try again later.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Update Item</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"materialname\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.materialname}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item name\"\n                                            },\n                                      \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid item name\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                    <div className=\"mg-20\">\n                        <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                            update\n                            {/* {loading} */}\n                        </Button>\n                    </div>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nUpdateMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n      materialoptionobjectlist: state.materialoption\n    };\n}\n\nexport default connect(mapStateToProps,{})(UpdateMaterialTypesForm);","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport UpdateMaterialTypeForm from \"./MaterialForms/UpdateMaterialTypesForm\";\nimport { updateMaterialType,getMaterialsTypes } from \"../../actions/Product\";\n\nclass UpdateMaterialType extends React.Component{\n    state={\n        materialoption:''\n    }\n    \n    componentDidMount(){\n        const materialid = this.props.match.params.id;\n        const materialoption = this.props.materialoptions[materialid];\n        this.setState({materialoption});\n    }\n\n    submit = (data) => this.props.updateMaterialType(data);\n\n\n    render(){\n        const { materialoption } = this.state;\n        return(\n            <div className=\"container mg-20\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/inventory_page\">Inventory</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to=\"/add_itemtype\">Item type</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Item View/Edit</BreadcrumbItem>\n                </Breadcrumb>\n                <UpdateMaterialTypeForm materialoption={materialoption} submit={this.submit} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        materialoptions: state.materialoption\n    }\n}\n\nexport default connect(mapStateToProps,{updateMaterialType,getMaterialsTypes})(UpdateMaterialType);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nclass ProductForm extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      data: {\n        productname: \"\",\n        values: [\"\"],\n        products: [\"\"],\n        productsqty: [\"\"],\n        productsuom: [\"\"],\n        productsqtyinmeter: [\"\"],\n        productsweight: [\"\"]\n      },\n      materiallistvalues: [],\n      uomlistvalues:[],\n      materiallistvaluesObject: {},\n      loading: false,\n      errors: {},\n      success: false\n    };\n  }\n  componentDidMount() {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(this.props.materiallistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n    this.getUnitmeasures()\n  }\n\n  componentWillReceiveProps(props) {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    //const uomlistvalues = Object.values(props.uomlistvalues);\n    // console.log(uomlistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n  }\n\n\n\n  getUnitmeasures(){\n    \n    this.setState({ loading: true });\n \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n    .then(res => {\n      console.log(res.data)\n      if(res.data.uomlist.uomdata.length > 0){\n        this.setState({\n          uomlistvalues:res.data.uomlist.uomdata\n        });\n      }\n      this.setState({ loading: false });\n    },\n    error =>{\n      this.setState({ loading: false });\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n\n  createSelectItems3 = optionvalue => {\n\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues\n    uomlistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.uomname}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItems = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'id': '1',\n    //     'itemname': 'Props'\n    //   },\n    //   {\n    //     'id': '2',\n    //     'itemname': 'MS Span'\n    //   },\n    //   {\n    //     'id': '3',\n    //     'itemname': 'MS Centering sheet'\n    //   },\n    //   {\n    //     'id': '4',\n    //     'itemname': 'Cuplock Vertical'\n    //   },\n    //   {\n    //     'id': '5',\n    //     'itemname': 'Cuoplock horizontal'\n    //   },\n    //   {\n    //     'id': '6',\n    //     'itemname': 'H Frame Scaffolding'\n    //   },\n    //   {\n    //     'id': '7',\n    //     'itemname': 'U Jack/ Base Jack'\n    //   },\n    //   {\n    //     'id': '8',\n    //     'itemname': 'Spigot pins'\n    //   },\n    //   {\n    //     'id': '9',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '10',\n    //     'itemname': 'pressed right cuplers'\n    //   },\n    //   {\n    //     'id': '11',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '12',\n    //     'itemname': 'Shttering clamps'\n    //   }\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    console.log(\"__MATERIAL_LIST_VALUES___\");\n    console.log(materiallistvalues);\n    materiallistvalues.filter((option, i) => {\n      if(option.masteritemtypename != \"\"){\n        if(option.masteritemtypename.split('')[0] == \"3\"){\n          items.push(\n            <option key={i} value={option.masteritemdescription}>\n              {option.masteritemdescription}\n            </option>\n          );\n        }\n      }\n   \n    });\n    return items;\n  };\n\n\n  createSelectItems2 = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'itemname': '50 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '6 mm MS Plate'\n    //   },\n    //   {\n    //     'itemname': 'Prop nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R sheet'\n    //   },\n    //   {\n    //     'itemname': 'Dia10 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': '65mm*6mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '75mm*75mm*8mm L Angle'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS span Bolt'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS Hexagonal nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R. Sheet'\n    //   },\n    //   {\n    //     'itemname': '25mm*25mm*5mm L angle.'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Top cup'\n    //   },\n    //   {\n    //     'itemname': 'Bottom cup'\n    //   },\n    //   {\n    //     'itemname': 'Dia 8 mm Rod'\n    //   },\n    //   {\n    //     'itemname': '20 NB H.R Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Ledger blade'\n    //   },\n    //   {\n    //     'itemname': 'locking pins'\n    //   },\n    //   {\n    //     'itemname': 'Dia 32 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': 'MS pLate'\n    //   },\n    //   {\n    //     'itemname': 'Cup nuts'\n    //   },\n    //   {\n    //     'itemname': 'dia 38 OD pipe'\n    //   },\n    //   {\n    //     'itemname': '40mm*40mm'\n    //   },\n    //   {\n    //     'itemname': '40mm*50mm'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm Ms flat'\n    //   }\n\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.masteritemdescription}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectunfinishedItems = optionvalue => {\n    let items = [];\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      if (option.masteritemtype.masteritemtypename !== optionvalue) {\n        items.push(\n          <option key={i} value={option.id}>\n            {option.masteritemtypename}\n          </option>\n        );\n      }\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        products: [...this.state.data.products, \"\"],\n        productsqty: [...this.state.data.productsqty, \"\"],\n        productsuom: [...this.state.data.productsuom, \"\"],\n        productsqtyinmeter: [...this.state.data.productsqtyinmeter, \"\"]\n      }\n    });\n  };\n  handleChange = (e, index) => {\n    this.state.data.products[index] = e.target.value;\n    const materialuom = this.state.materiallistvaluesObject[\n      this.state.data.products[index]\n    ];\n    this.state.data.productsqty[index] = \"1\";\n    this.state.data.productsuom[index] = materialuom.masteritemuom.uomname;\n    this.state.data.productsqtyinmeter[index] = \"\"\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        products: this.state.data.products,\n        productsuom: this.state.data.productsuom,\n        productsqty: this.state.data.productsqty,\n        productsqtyinmeter: this.state.data.productsqtyinmeter\n      }\n    });\n  };\n\n  ProductqtyhandleChange = (e, index) => {\n    console.log(index);\n    let arr = this.state.materiallistvalues.filter((item) =>{\n      return item.masteritemdescription == e.target.value\n    })\n    console.log(arr)\n    this.state.data.productsqty[index] = e.target.value;\n    this.state.data.productsweight[index] = \n    arr.length > 0 ? (arr[0].masteritemunitwt != 'undefined' && arr[0].masteritemunitwt != 'null' && arr[0].masteritemunitwt != '' ? arr[0].masteritemunitwt : 0) : 0\n    \n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, \n        productsqty: this.state.data.productsqty,\n        productsweight: this.state.data.productsweight\n      }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  ProductuomhandleChange = (e, index) => {\n    console.log(index);\n    this.state.data.productsuom[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsuom: this.state.data.productsuom }\n    });\n  };\n  \n  ProductqtyinmeterhandleChange = (e, index) => {\n    console.log(e.target.value);\n    this.state.data.productsqtyinmeter[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsqtyinmeter: this.state.data.productsqtyinmeter }\n    });\n  };\n  \n  removeClick = (e, index) => {\n    const removeProduct = { ...this.state.data };\n    const products = removeProduct.products;\n    const productsqty = removeProduct.productsqty;\n    const productsuom = removeProduct.productsuom;\n    const productsqtyinmeter = removeProduct.productsqtyinmeter;\n    const values = removeProduct.values;\n    products.splice(index, 1);\n    productsqty.splice(index, 1);\n    productsuom.splice(index, 1);\n    productsqtyinmeter.splice(index, 1);\n    values.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products, productsqty, productsuom,productsqtyinmeter, values }\n    });\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(\"product form data\");\n    console.log(this.state.data);\n    const products = this.state.data.products;\n    const productsqty = this.state.data.productsqty;\n    console.log(productsqty)\n    let productMaterials = [];\n    products.forEach(function (v, i) {\n      var obj = {};\n      obj.product_id = v;\n      obj.productqty = productsqty[i];\n      productMaterials.push(obj);\n    });\n\n    const data = { ...this.state.data, productMaterials };\n    delete data.products;\n    delete data.productsqty;\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            productname: \"\",\n            values: [\"\"],\n            products: [\"\"],\n            productsqty: [\"\"],\n            productsuom: [\"\"],\n            productsqtyinmeter: [\"\"]\n          },\n          materiallistvalues: this.initialState.materiallistvalues,\n          materiallistvaluesObject: this.initialState.materiallistvaluesObject\n        });\n        this.myFormRef.reset();\n\n      })\n      .catch(err => {\n        alert(\"Same product sub assembly is already added.\")\n        window.location.reload()\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  toggelbutton = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,uomlistvalues } = this.state;\n    console.log(\"__STATE_VALUE___DATA_\");\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Product detail is added successfully.</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className='small-font-size-bold'>Subassembly</ModalHeader>\n            <ModalBody >Subassembly is added successfully.</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggelbutton}>\n                Ok\n              </Button>{\" \"}\n\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.productname ? (\n          <Alert Label color=\"danger\">Product Name must be unique id.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Product Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"productname\" Label>Product Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"productname\"\n                      id=\"productname\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">select</option>\n          \n                      {this.createSelectItems(\"FinishedGoods\")}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={12}>\n                  <div>\n                    <div className=\"mg-20\">\n                      <Button color=\"info\" onClick={this.handleClick}>\n                        Add Component\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n\n              {data.values.map((value, index) => {\n                return (<Row key={index}>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qty+${index}`}>\n                        Sub assembly\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n\n                      <AvField\n                        Label\n                        type=\"select\"\n                        name=\"material_qty\"\n                        id={`Material-qty+${index}`}\n                        value={data.productsqty[index] || null}\n                        onChange={e =>\n                          this.ProductqtyhandleChange(e, index)\n                        }\n                      >\n                        <option value=\"\">select</option>\n             \n                        {this.createSelectItems2(\"\")}\n                      </AvField>\n                    </AvGroup>\n\n\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qtymeter+${index}`}>\n                        Quantity\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"text\"\n                      name=\"Material-qtymeter\"\n                      id={`Material-qtymeter+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsqtyinmeter[index]}\n                      onChange={e =>\n                        this.ProductqtyinmeterhandleChange(e, index)\n                      }\n                    >\n                     \n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-uom+${index}`}>\n                        UOM\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"Material-uom\"\n                      id={`Material-uom+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsuom[index]}\n                      onChange={e =>\n                        this.ProductuomhandleChange(e, index)\n                      }\n                    >\n                      <option value=\"\">Select unit</option>\n          \n                      {this.createSelectItems3(\"FinishedGoods\")}\n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  \n                  <Col sm={2}>\n                    <AvGroup style={{ marginTop: \"28px\" }}>\n                      <Button\n                        Label\n                        Label\n                        color='danger'\n                        type=\"button\"\n                        onClick={e => this.removeClick(e, index)}\n                      >\n                        -\n                  </Button>\n\n                    </AvGroup>\n\n                  </Col>\n                </Row>)\n              })}\n              {/* <div>\n                                    <button onClick={this.handleSubmit}>submit</button>\n                                </div> */}\n\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{paddingLeft: 15, paddingTop: 10}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader small-font-size\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.masteritemlistvalues\n    // masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductForm);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport { UOM_LIST } from \"../Services/types\";\nimport { uomListSchema } from \"../Schemas/schemas\";\n\nfunction uomListFetched(uomlist) {\n  return {\n    type: UOM_LIST,\n    uomlist\n  };\n}\n\nexport const getUomList = () => {\n  return dispatch => {\n    return api.uom.getUomDetails().then(uomlist => {\n      const uomlistvalue = uomlist.uomdata;\n      return dispatch(uomListFetched(normalize(uomlistvalue, [uomListSchema])));\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProductForm from \"./ProductForm/ProductForm\";\nimport { addproduct } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport { getUomList } from \"../../actions/uom\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass Product extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    //this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addproduct(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem  Label>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem  Label active>Add Subassembly</BreadcrumbItem>\n        </Breadcrumb>\n        <ProductForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  addproduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addproduct, getMasterItemList,getUomList }\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport axios from \"axios\";\n\nclass ViewProduct extends React.Component {\n  state = {\n    productlistvalue: \"\",\n    productMaterialslist: [],\n    productname: \"\"\n  };\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/product/getproduct/${this.props.match.params.id}`)\n      .then(res => {\n\n        console.log(res)\n        if (res.data.productlist.productdata.length > 0) {\n          let product = res.data.productlist.productdata[0]\n          let obj = {}, arr = []\n          const productname = product.productname;\n\n          for (var i = 0; i < product.productMaterial.length; i++) {\n            obj = {}\n            obj['materialitemtype'] = product.productname;\n            obj['materialname'] = product.productMaterial[i].productqty;\n            obj['materialuom'] = product.productsuom[i];\n            obj['productqty'] = product.productsqtyinmeter[i]\n            arr.push(obj)\n          }\n\n          this.setState({ 'productname': productname, 'productMaterialslist': arr });\n        }\n\n      },\n        error => {\n\n          alert(\"Server error\")\n        });\n\n    /* const productid = this.props.match.params.id;\n     const productlistvalue = this.props.productlistvalues[productid];\n     const productname = productlistvalue.productname.masteritemdescription;\n     const productMaterialslist = productlistvalue.productMaterial.map(\n       productMaterialData => {\n         let totalcost =\n           parseFloat(productMaterialData.productqty) *\n           parseFloat(productMaterialData.product_id.masteritemcostperunit);\n         let materialcostperunit =\n           productMaterialData.product_id.masteritemcostperunit;\n         return {\n           materialitemtype:\n             productMaterialData.product_id.masteritemtype.masteritemtypename,\n           materialname: productMaterialData.product_id.masteritemname,\n \n           materialdescription:\n             productMaterialData.product_id.masteritemdescription,\n \n           materialuom: productMaterialData.product_id.masteritemuom.uomname,\n           materialcostperunit:\n             materialcostperunit !== \"null\" ? materialcostperunit : \" \",\n           materialqty: productMaterialData.productqty,\n           totalcost: isNaN(totalcost) ? \" \" : totalcost\n         };\n       }\n     );\n     this.setState({ ...this.state, productMaterialslist, productname });*/\n  }\n  render() {\n    const { productMaterialslist, productname } = this.state;\n    let product;\n    if (productMaterialslist.length) {\n      product = productMaterialslist[0].materialitemtype;\n    }\n\n    const tablerows = productMaterialslist.map((itemlist, i) => {\n      return (\n        <tr key={i}>\n          {/* <td>{itemlist.materialitemtype}</td> */}\n          <td style={{textAlign:'left'}}>{itemlist.materialname}</td>\n          <td style={{textAlign:'left'}}>{itemlist.materialuom}</td>\n          <td style={{textAlign:'left'}}>{itemlist.productqty}</td>\n          \n          {/* <td>{itemlist.materialcostperunit}</td>\n          <td>{itemlist.materialqty}</td>\n          <td>{itemlist.totalcost}</td> */}\n        </tr>\n      );\n    });\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/viewproductlist\">View subassembly</Link>\n            </BreadcrumbItem>\n\n          </Breadcrumb>\n        </div>\n        {/* <h5>Product Name: {productname}</h5> */}\n        {/* <DataTable columnvalue={columnvalue} rowvalues={productMaterialslist} /> */}\n        <div style={{\n              marginBottom: 16}}>\n          <span\n            style={{\n              fontSize: 12,\n              fontWeight: 900,\n              marginRight: 16\n            }}>Product</span>\n          <span\n            style={{\n              fontSize: 12\n            }}>{product ? product : ''}</span>\n        </div>\n        <Table bordered style={{'width':'40%'}}>\n          <thead>\n            <tr>\n              {/* <th>Product Type</th> */}\n              <th>Subassembly</th>\n\n              <th>UOM</th>\n              <th>Quantity</th>\n              {/* (Meter) */}\n              {/* <th>Unit Cost</th>\n              <th>Item QTY</th>\n              <th>Total cost</th> */}\n            </tr>\n          </thead>\n          <tbody>{tablerows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ViewProduct);\n","import React from \"react\";\nimport { Alert, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass ViewProductList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    productlistvalues: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.dataHandler(true);\n  }\n  updateButton = id => {\n    let path = `/viewproduct/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const productlist = Object.values(props.productlistvalues);\n    const productlistvalues = productlist.map((productdata, i) => {\n      console.log(productdata)\n      return {\n        materialname: productdata.productname,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(productdata.id);\n            }}\n          >\n            View Sub assembly\n          </Button>\n        )\n      };\n    });\n    const count = productlistvalues.length;\n    this.setState({ ...this.state, count, productlistvalues });\n    this.dataHandler(false);\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading, count, productlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Product Name\",\n        field: \"productname\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"View\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 10\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Products</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        {count > 0 ? (\n          <DataTable columnvalue={columnvalue} \n          rowvalues={productlistvalues}\n          className=\"viewproductlist\" />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts }\n)(ViewProductList);\n","import { AvField, AvForm, AvGroup } from 'availity-reactstrap-validation';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Alert, Button, Card,\n  CardBody,\n  CardHeader, Col, Label, Modal, ModalBody,\n  ModalFooter, ModalHeader, Row\n} from 'reactstrap';\n\nclass CustomerForm extends React.Component {\n  state = {\n    data: {\n      customernumber: '',\n      customername: '',\n      customercontactnumber: '',\n      customergstnumber: '',\n      customeraddress1: '',\n      customeraddress2: '',\n      city: '',\n      pincode: '',\n      state: '',\n      country: '',\n      codate: new Date().getTime(),\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    sameAsBilling: false,\n    suppliercontactlistvalue: []\n  };\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.keys(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customernumber = count ? 1001 + count : 1001;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customernumber\n      }\n    });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        deliveryAddress: {\n          ...this.state.data.deliveryAddress,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n  sameAsBilling = e => {\n    let val = e.target.value === 'false' ? true : false;\n    this.setState({ ...this.state, sameAsBilling: val });\n    if (val) {\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          deliveryAddress: {\n            address1: this.state.data.customeraddress1,\n            address2: this.state.data.customeraddress2,\n            city: this.state.data.city,\n            pincode: this.state.data.pincode,\n            state: this.state.data.state,\n            country: this.state.data.country\n          }\n        }\n      });\n    }\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const {\n      data,\n      errors,\n      loading,\n      success,\n      visible,\n      sameAsBilling\n    } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is added successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color='danger' isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      value={data.customernumber.toString()}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customername'\n                      type='text'\n                      id='customername'\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Name'\n                        }\n                    \n                        // pattern: {\n                        //   value: '^[a-zA-Z ]+$',\n                        //   errorMessage: 'Please enter valid Supplier Name'\n                        // }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customercontactnumber'>Contact Number </Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customercontactnumber'\n                      type='text'\n                      id='customercontactnumber'\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer contact number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GSTN </Label>\n                    <AvField\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Billing Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress1'>Address 1</Label>\n                        <AvField\n                          name='customeraddress1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                      \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress2'>Address 2</Label>\n                        <AvField\n                          name='customeraddress2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Delivery Address */}\n              <Card>\n                <CardHeader>\n                  Delivery Address ({' '}\n                  <input\n                    type='checkbox'\n                    className='same_checkbox'\n                    value={sameAsBilling}\n                    name='same'\n                    onChange={this.sameAsBilling}\n                  ></input>{' '}\n                  Same as billing address)\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                         \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain atleast 1 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              <div className='mg-20'>\n                <Button\n                  color='primary'\n                  disabled={loading}\n                  className='lgn-loader'\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{' '}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CustomerForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col\n} from \"reactstrap\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    data: {\n      searchcustomername: '',\n      searchfromdate: null,\n      searchtodate: null\n    },\n    count: 0,\n    customerlistvalues: [],\n    backupcustomerlistvalues: [],\n    fromdatetimestamp: '',\n    todatetimestamp: '',\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n  };\n\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        // id: customerdata.id,\n        // customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber != '' ? customerdata.customercontactnumber : '-',\n        codate: customerdata.codate != undefined ? customerdata.codate : '-',\n\n        Transaction: (\n          <Button\n            // style={{ fontSize: '0.8rem' }}\n            Label\n            color=\"primary\"\n            onClick={() => {\n              localStorage.setItem('customername', customerdata.customername)\n              this.getTransaction(customerdata.id);\n            }}\n          >\n            Transaction\n          </Button>\n        )\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, backupcustomerlistvalues: customervalues, count });\n    this.setState({ customerlistvalues: customervalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n\n  getTransaction = id => {\n    this.props.history.push(`/transaction/${id}`);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n\n  onChange = e => {\n    console.log(e)\n    this.setState({\n      //data: { ...this.state.data, [e.target.name]: e.target.value }\n      data: {\n        searchcustomername: e.target.value,\n        searchfromdate: null,\n        searchtodate: null\n      },\n      fromdatetimestamp: '',\n      todatetimestamp: ''\n    }, () => {\n      this.filterCustomer(this.state.data.searchcustomername)\n    });\n\n  };\n\n  getDateByMMDDYYYY(date) {\n    let searchdate = date != '-' ?\n      (new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n      + \"/\" +\n      (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n  handleDateChanges(dateName, dateValue) {\n\n    let { data, fromdatetimestamp, todatetimestamp } = this.state;\n    if (dateName === 'startDateTime') {\n      data.searchfromdate = dateValue;\n      fromdatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    } else {\n      data.searchtodate = dateValue;\n      todatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    }\n    data.searchcustomername = ''\n    this.setState({\n      data,\n      fromdatetimestamp,\n      todatetimestamp\n    }, () => {\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        this.filterBydates(this.state.fromdatetimestamp, this.state.todatetimestamp)\n      }\n      else {\n        this.initializeCustomers();\n      }\n    });\n  };\n\n  filterCustomer(ev) {\n    this.initializeCustomers();\n    setTimeout(() => {\n      const val = ev\n      if (val && val.trim() != '') {\n        let filtereddata = this.state.customerlistvalues.filter((item) => {\n          return (item.customername.toLowerCase().indexOf(val.toLowerCase()) > -1\n          )\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  filterBydates(date1, date2) {\n    this.initializeCustomers();\n    setTimeout(() => {\n\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        let filtereddata = this.state.customerlistvalues.filter((customer) => {\n          let comparedate =\n            (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1)\n            + \"/\" + (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate())\n            + \"/\" + new Date(parseInt(customer.codate)).getFullYear()\n\n          return (new Date(this.getDateByMMDDYYYY(comparedate)).getTime() >= date1 && new Date(this.getDateByMMDDYYYY(comparedate)).getTime() <= date2)\n\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  initializeCustomers() {\n    this.setState({\n      customerlistvalues: this.state.backupcustomerlistvalues\n    })\n  }\n\n\n  render() {\n    const { count, customerlistvalues, data, loading } = this.state;\n\n    const customerBlock = customerlistvalues.map(customer => {\n      customer['codate2'] = customer.codate != '-' ? (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate()) +\n        \"/\" + (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1) + \"/\" + new Date(parseInt(customer.codate)).getFullYear() : '-'\n      return (\n        <tr key={customer.customernumber}>\n\n          <td style={{'width' : '15%'}}>{customer.customername}</td>\n          {/* <td style={{ textAlign: 'center' }}>{customer.customernumber}</td> */}\n          <td style={{ textAlign: 'center','width' : '12%' }}>{customer.customercontactnumber}</td>\n\n          <td style={{ textAlign: 'center','width' : '8%' }}>{customer.Transaction}</td>\n        </tr>\n      )\n    });\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            {/* <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            /> */}\n\n            {/* <Card>\n           \n            <CardBody> */}\n            <Row>\n              <Col sm={3}>\n                <Label className='small-font-size' for=\"searchcustomername\">Search Customer Name</Label>\n\n\n                <input\n                  name=\"searchcustomername\"\n                  type=\"text\"\n                  id=\"searchcustomername\"\n                  className=\"form-control small-font-size\"\n                  value={data.searchcustomername}\n\n                  onChange={this.onChange}\n                />\n\n              </Col>\n\n\n\n              {/* <Col sm={3}>\n                  <Label for=\"searchfromdate\">Transaction from date</Label>\n                \n\n                     <DatePicker\n                    selected={data.searchfromdate}\n     \n                    onChange={date => this.handleDateChanges('startDateTime', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchfromdate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n                 <Col sm={3}>\n                  <Label for=\"searchtodate\">Transaction to date</Label>\n                 \n                  \n                  <DatePicker\n                    selected={data.searchtodate}\n                    onChange={date => this.handleDateChanges('endDateTime', date)}\n                    className=\"form-control\"\n                    isClearable={true}\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchtodate\"\n                  />\n                 \n                </Col> */}\n\n            </Row>\n            {/* </CardBody>\n                </Card> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{ 'marginTop': '10px','width': '40%' }}>\n              <thead>\n                <tr>\n\n                  <th style={{'width': '15%'}}>Customer Name</th>\n                  {/* <th>Customer Number</th> */}\n                  <th style={{'width': '12%'}}>Contact</th>\n                  <th style={{'width': '8%'}}>Transaction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerBlock}\n              </tbody>\n            </table>\n\n\n\n\n          </div>\n        ) : (\n            <div>\n              <Alert color=\"info\" Label>Loading Customer data</Alert>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import axios from \"axios\";\n\nexport default {\n  customer: {\n    addcustomer: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/customer/addcustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.customerdata;\n        });\n    },\n    getcustomer: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customer/getcustomer`)\n        .then(res => {\n          return res.data.customerlist;\n        });\n    },\n    updatecustomer: data => {\n      return axios\n        .patch(`${process.env.REACT_APP_BASE_URL}/customer/updatecustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  customerTransaction: {\n    getcustomerTransaction: (id) => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/${id}`)\n        .then(res => {\n          \n          return res.data.customerlist;\n        });\n    },\n  \n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/customerapi\";\nimport {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED,\n  CUSTOMERTRANSACTION_FETCHED\n} from \"../Services/types\";\nimport { customerListSchema,customerTransactionSchema } from \"../Schemas/schemas\";\n\nconst customerCreated = customerlist => {\n  return {\n    type: ADD_CUSTOMER_CONTACT,\n    customerlist\n  };\n};\n\nconst customerListFetched = customerlist => {\n\n  return {\n    type: CUSTOMER_CONTACT_FETCHED,\n    customerlist\n  };\n};\n\nconst customerTransactionFetched = customerlist => {\n\n  return {\n    type: CUSTOMERTRANSACTION_FETCHED,\n    customerlist\n  };\n};\n\nexport const addCustomerContact = data => {\n  return dispatch => {\n    return api.customer.addcustomer(data).then(customerlistvalues => {\n      return dispatch(\n        customerCreated(normalize(customerlistvalues, customerListSchema))\n      );\n    });\n  };\n};\n\nexport const getCustomerList = () => {\n  return dispatch => {\n    return api.customer.getcustomer().then(customerlist => {\n      const customerlistvalue = customerlist.customerdata;\n      return dispatch(\n        customerListFetched(normalize(customerlistvalue, [customerListSchema]))\n      );\n    });\n  };\n};\n\nexport const getCustomerTransaction = (id) => {\n  return dispatch => {\n    return api.customerTransaction.getcustomerTransaction(id).then(customerlist => {\n      const customertransationvalues = customerlist.customerdata;\n      console.log(customertransationvalues)\n      if(customertransationvalues.length != 0){\n        return dispatch(\n          customerTransactionFetched(normalize(customertransationvalues, [customerTransactionSchema]))\n        );\n      }\n      // console.log(normalize(customertransationvalues, [customerTransactionSchema]))\n\n    });\n  };\n};\n\nexport const updateCustomerContact = data => {\n  return dispatch => {\n    return api.customer.updatecustomer(data).then(customerlistvalues => {\n      return customerlistvalues;\n      // return dispatch(\n      //   customerCreated(normalize(customerlistvalues, customerListSchema))\n      // );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport AddCustomerForm from \"./AddCustomer/CustomerForm/CustomerForm\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass Customer extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddCustomerForm submit={this.submit} />\n        </div>\n        {/* <div>\n          <ViewCustomerList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n    getCustomerTransaction\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\n\n\nclass Transaction extends React.Component {\n  \n  state = {\n    data: {\n      enquirydate:null,\n      quotationdate:null,\n      podate:null\n    },\n    enquirytimestamp:null,\n    quotationtimestamp:null,\n    podatetimestamp:null,\n    userid : this.props.match.params.id,\n    loading: false,\n    count:0,\n    success: false,\n    message:'',\n    ponum:'',\n    podate:'',\n    customerName:localStorage.getItem('customername') !=null ? localStorage.getItem('customername') : '',\n    transactionID:'',\n    customertransationvalues:[],\n    backupcustomertransationvalues:[]\n  };\n  componentDidMount = () => {\n    // this.props.match.params.id\n    // 5d7245b928e146194b806e38\n    \n    this.getTransaction(this.props.match.params.id);\n  };\n\n  componentWillReceiveProps(props) {\n    let customervalues = Object.values(props.customertransationvalues).map(customerdata => {\n      return {\n        customerid: customerdata.customerid,\n        Transactionhistory: customerdata.Transactionhistory,\n        id:new Date().getTime()\n      };\n    });\n    if(customervalues.length > 0){\n      customervalues = customervalues.filter((item) =>{\n        return item.customerid == this.props.match.params.id\n      })\n      this.setState({ \n        customertransationvalues: customervalues,\n        backupcustomertransationvalues:customervalues,\n        count:customervalues.length\n      }, () => {\n        console.log(JSON.stringify(this.state.backupcustomertransationvalues))\n      })\n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  \n  initializeTransactions = () => {\n    this.setState({\n      customertransationvalues:this.state.backupcustomertransationvalues\n    },() =>{\n      console.log(this.state.backupcustomertransationvalues)\n    })\n  }\n\n  newEnquiry(){\n    localStorage.setItem('ids',this.state.userid)\n    this.setState({ success: true, message:'Are you sure want to add new enquiry' });\n  }\n\n  getTransaction(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n    .then(res => {\n      this.dataHandler(false)\n      if(res.data.customerlist.customerdata.length > 0){\n        let customervalues = res.data.customerlist.customerdata;\n        if(customervalues.length > 0){\n          customervalues = customervalues.filter((item) =>{\n            return item.customerid == this.props.match.params.id\n          })\n          this.setState({ customertransationvalues: customervalues,\n            backupcustomertransationvalues:customervalues,\n            count:customervalues.length}, () => {\n            console.log(JSON.stringify(this.state.customertransationvalues))\n          })\n        }\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  addenquiry(){\n    this.dataHandler(true)\n    let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) + \n    \"/\" + ( new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n     axios\n    .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`,\n    {\n      \"customerid\":this.state.userid,\n      \"enq_Date\" : date\n    })\n    .then(res => {\n      this.getTransaction(this.state.userid)\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  poreceived = value =>{\n    this.setState({\n      transactionID:value._id,\n      ponum:'',\n      podate:''\n    },() =>{\n      this.setState({ success: true, message:'update transaction' });\n    })\n  }\n\n  gotoPDF = value => {\n    console.log(\"the pdf page is\",  value)\n    this.props.history.push(value);\n  }\n\n  updatePO = () => {\n    if(this.state.ponum != '' && this.state.podate != ''){\n      let podates = this.state.podate.split('-')[2] + '/' + this.state.podate.split('-')[1] + '/' + this.state.podate.split('-')[0]\n      let obj = {}\n      obj['_id'] = this.state.transactionID\n      obj['po'] = podates\n      obj['ponum'] = this.state.ponum\n      this.dataHandler(true)\n      axios\n      .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n      .then(res => {\n        this.toggle()\n        this.getTransaction(this.state.userid)\n      },\n      error =>{\n        this.dataHandler(false)\n        this.toggle()\n        this.setState({ success: false, message:'Server error.' });\n      });\n    }\n    else\n      this.toggle()\n  }\n\n  onChange1 = e => {\n    this.setState({\n      'ponum' : e.target.value\n    });\n  }\n\n  onChange2 = e => {\n    console.log(e.target.value)\n    this.setState({\n      'podate' : e.target.value\n    });\n  }\n\n  getDateByMMDDYYYY(date){\n    let searchdate = date != '-' ? \n\n    (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" +\n    ( new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n    + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n    \n  handleDateChanges(dateName, dateValue) {\n\n    let { data,enquirytimestamp,quotationtimestamp,podatetimestamp } = this.state;\n    if (dateName === 'enquirydate') {\n      data.enquirydate = dateValue;\n      enquirytimestamp = this.getDateByMMDDYYYY(dateValue)\n    }\n    this.setState({\n      data,\n      enquirytimestamp\n    }, () => {\n      if (this.state.data.enquirydate != null) {\n        this.filterBydates()\n      }\n      else{\n        this.initializeTransactions();\n      }\n    });\n  };\n\n  filterBydates(){\n    this.initializeTransactions();\n    setTimeout(() => {\n        let filtereddata = this.state.customertransationvalues.filter((item) => {\n            return (this.state.enquirytimestamp != null && item.enq_Date == this.state.enquirytimestamp)\n            \n        })\n        this.setState({\n          customertransationvalues:filtereddata\n        })\n    })\n  }\n\n  render() {\n    let modaldata;\n\n    const { customertransationvalues,loading,count,success,message,data,customerName } = this.state;\n    if(message == 'update transaction' && success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Add customer PO</ModalHeader>\n        <ModalBody>\n          <input type=\"text\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.ponum} style={{'marginBottom': '15px'}} onChange={this.onChange1}/>\n          <input type=\"date\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.podate} onChange={this.onChange2}/>\n        </ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={this.updatePO}>\n            Update\n          </Button>\n        </ModalFooter>\n      </Modal>\n      )\n    }\n    else if(message == 'Server error.' && !success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Transaction</ModalHeader>\n        <ModalBody>{this.state.message}</ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n      )\n    }\n\n\n\n    const customerTransactionBlock = customertransationvalues.map((customer,index) => {\n      \n      let invoice = customer.invoice_link ? (<td style={{textAlign:'center'}}> \n      Invoice PDF<br/>\n      <Button color=\"primary\" onClick={() => this.gotoPDF(customer.invoice_link)} style={{fontSize: '12px'}}>\n       Print\n     </Button>\n </td>) : (<td style={{textAlign:'center'}}>---</td>);\n      let dc = customer.challan_link ? (\n      <td style={{textAlign:'center'}}>{customer.challan_link}</td>\n      ) : (\n        <td style={{textAlign:'center'}}>---</td>)\n      let enquiry = '',quote = '',PO=(<td style={{textAlign:'center'}}>---</td>)\n      enquiry = customer.enq_Date !=undefined ? (<td style={{textAlign:'center'}}> {customer.enq_Date}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      quote = customer.quotation !=undefined && customer.quotation != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.Qno} </b> <br/>{customer.quotation}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      PO = customer.po !=undefined && customer.po != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.ponum} </b> <br/> {customer.po}</td>) \n      : (<td style={{textAlign:'center'}}> \n           Customer PO not reveived<br/>\n           <Button color=\"primary\" onClick={() => this.poreceived(customer)} style={{fontSize: '12px'}}>\n            Add customer PO\n          </Button>\n      </td>)\n\n      if(customer.quotation == ''){\n        PO = (<td style={{textAlign:'center'}}>---</td>)\n      }\n\n      \n      return (\n        \n        <tr>\n          {/* <td></td>\n          {enquiry} */}\n          {quote}\n          {PO}\n          {invoice}\n          {dc}\n\n          </tr>\n             \n      )\n \n    })\n\n\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerlist\">CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{customerName}</BreadcrumbItem>\n        </Breadcrumb>\n     \n\n            {modaldata}\n \n        <h5 style={{ 'fontWeight': 'bold','margin': '15px'}}>{count} transaction found.</h5>\n        {customertransationvalues.length > 0 ?\n        (\n\n        <div>\n{/*           \n          <Row style={{ 'width': '75%','marginLeft': '9%'}}>\n                <Col sm={3} >\n                    <Label for=\"enquirydate\">Search enquiry date</Label>\n                    \n\n                      <DatePicker\n                    selected={data.enquirydate}\n\n                    onChange={date => this.handleDateChanges('enquirydate', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"enquirydate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n        \n\n                \n\n                </Row> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{'marginTop':'10px', 'width': '75%','marginLeft': '10%','background':'#fff'}}>\n\n              <tr>\n                {/* <th></th>\n                <th>Enquiry</th> */}\n                <th>Quotation</th>\n                <th>PO</th>\n                <th>Invoice</th>\n                <th>Delivary challan</th>\n                </tr>\n                {customerTransactionBlock}\n              </table>\n          </div>\n        ) : null\n       }\n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    customertransationvalues: state.customertransationvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getCustomerTransaction }\n)(Transaction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateCustomerForm extends React.Component {\n  state = {\n    data: {\n      id: \"\",\n      customernumber: \"\",\n      customername: \"\",\n      customercontactnumber: \"\",\n      customergstnumber: \"\",\n      customeraddress1: \"\",\n      customeraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    suppliercontactlistvalue: []\n  };\n  componentDidMount() {\n    const id = this.props.id;\n    const data = this.props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const data = props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({ ...this.state, data: {\n      ...this.state.data,\n      deliveryAddress:{\n        ...this.state.data.deliveryAddress,\n        [e.target.name] : e.target.value\n      }\n    } });\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success, visible } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is Updated successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color=\"danger\" isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customernumber\"\n                      type=\"number\"\n                      id=\"customernumber\"\n                      value={data.customernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Number\"\n                        },\n    \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customername\"\n                      type=\"text\"\n                      id=\"customername\"\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Name\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z ]+$\",\n                          errorMessage: \"Please enter valid Supplier Name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customercontactnumber\">Contact Number </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customercontactnumber\"\n                      type=\"text\"\n                      id=\"customercontactnumber\"\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer contact number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage:\n                            \"Your phone number must be composed only with numbers\"\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            \"Your phone number must be between 10 and 12 numbers\"\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            \"Your phone number be between 10 and 12 numbers\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GSTN </Label>\n                    <AvField\n                      name=\"customergstnumber\"\n                      type=\"text\"\n                      id=\"customergstnumber\"\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress1\">Address 1</Label>\n                        <AvField\n                          name=\"customeraddress1\"\n                          type=\"text\"\n                          id=\"customeraddress1\"\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress2\">Address 2</Label>\n                        <AvField\n                          name=\"customeraddress2\"\n                          type=\"text\"\n                          id=\"customeraddress2\"\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"city\">City</Label>\n                        <AvField\n                          name=\"city\"\n                          type=\"text\"\n                          id=\"city\"\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid city Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                        <AvField\n                          name=\"pincode\"\n                          type=\"text\"\n                          id=\"pincode\"\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                \"Pincode should contain atleast 6 characters\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                \"Pincode should contain between 6 to 10 characters\"\n                            },\n                            pattern: {\n                              value: \"^[0-9]+$\",\n                              errorMessage: \"Please enter valid PinCode\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"state\">State</Label>\n                        <AvField\n                          name=\"state\"\n                          type=\"text\"\n                          id=\"state\"\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid State Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"country\">Country</Label>\n                        <AvField\n                          name=\"country\"\n                          type=\"text\"\n                          id=\"country\"\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid Country Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                {/* Delivery Address */}\n                {/* Delivery Address */}\n              <Card>\n                <CardHeader>Delivery Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              </Card>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Update\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{\" \"}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateCustomerForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport UpdateCustomerForm from \"./UpdateCustomer/CustomerForm/UpdateCustomerForm\";\nimport {\n  updateCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader\n} from \"reactstrap\";\n\nclass Customer extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getCustomerList();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer List</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n\n          <UpdateCustomerForm submit={this.submit} id={id} />\n\n           \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\n\nclass ViewCustomerTable extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Link to=\"/crmlist\">CRM</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem active>Customer Transaction</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(ViewCustomerTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    count: 0,\n    customerlistvalues: []\n  };\n  componentWillReceiveProps(props) {\n    let customerlistvalues = Object.values(props.customerlistvalues);\n    //customerlistvalues= customerlistvalues.sort((a, b) => b.customernumber.toString().toLowerCase().localeCompare(a.customernumber.toString().toLowerCase()));\n    console.log(customerlistvalues)\n    customerlistvalues.sort(function(a, b){\n      return parseInt(b.customernumber) - parseInt(a.customernumber);\n    });\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber,\n        customergstnumber: customerdata.customergstnumber,\n        customeraddress1: customerdata.customeraddress1 != '' ? customerdata.customeraddress1 : '-',\n        customeraddress2: customerdata.customeraddress2 != '' ? customerdata.customeraddress2 : '-',\n        city: customerdata.city != '' ? customerdata.city : '-',\n        pincode: customerdata.pincode != '' ? customerdata.pincode : '-',\n        state: customerdata.state != '' ? customerdata.state : '-',\n        country: customerdata.country != '' ? customerdata.country : '-',\n        view: (\n          <Button\n            Label\n            // style={{ fontSize: '0.8rem' }}\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(customerdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, count });\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { count, customerlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Customer Number\",\n        field: \"customernumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Name\",\n        field: \"customername\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Contact\",\n        field: \"customercontactnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"GST Number\",\n        field: \"customergstnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address1\",\n        field: \"customeraddress1\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address2\",\n        field: \"customeraddress2\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"City\",\n        field: \"city\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Pincode\",\n        field: \"pincode\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"State\",\n        field: \"state\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Country\",\n        field: \"country\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n    return (\n      <div className=\"mg-t-20\">\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCustomerList } from \"../../../actions/customerContact\";\nimport ViewCustomerList from \"./ViewCustomerList\";\n\nclass CustomerInfo extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer Information</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(CustomerInfo);\n","import axios from \"axios\";\n\nexport default {\n  quotation: {\n    addquotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/addquotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    updatequotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/updatequotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    getquotation: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/quotation/getquotation`)\n        .then(res => {\n          return res.data.quotationlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/quotationapi\";\nimport { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\nimport { quotationListSchema } from \"../Schemas/schemas\";\n\nconst quotationCreated = quotationlist => {\n  return {\n    type: ADD_QUOTATION,\n    quotationlist\n  };\n};\n\nconst quotationFetched = quotationlist => {\n  return {\n    type: QUOTATION_FETCHED,\n    quotationlist\n  };\n};\n\nexport const addquotation = data => {\n  return dispatch => {\n    return api.quotation.addquotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\nexport const updatequotation = data => {\n  return dispatch => {\n    return api.quotation.updatequotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getquotation = () => {\n  return dispatch => {\n    return api.quotation.getquotation().then(quotationlist => {\n      const quotationlistvalues = quotationlist.quotationdata;\n      return dispatch(\n        quotationFetched(normalize(quotationlistvalues, [quotationListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { searchquotation } from \"../../../../actions/quotation\";\n\nclass CustomerQuotationList extends React.Component {\n  componentDidMount() {\n    const customerid = this.props.match.params.id;\n    this.props\n      .searchquotation(customerid)\n      .then(data => {})\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer list</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer status</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { searchquotation }\n)(CustomerQuotationList);\n","import { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Alert, Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nclass AddYearForm extends React.Component {\r\n  state = {\r\n    data: {\r\n      addyear: \"\",\r\n      updateyear: \"\",\r\n      updateid: \"\",\r\n    },\r\n    exists: false,\r\n    errors: {},\r\n    loading: false,\r\n    success: false,\r\n    visible: false,\r\n    updated: false,\r\n    suppliercontactlistvalue: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ loading: true });\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\r\n      (res) => {\r\n        if(res.data.year) {\r\n          this.setState({\r\n            ...this.state,\r\n            data: {\r\n              ...this.state.data,\r\n              updateid: res.data.year._id,\r\n              updateyear: res.data.year.currentyear\r\n            },\r\n          });\r\n          this.setState({ exists: true });\r\n        }\r\n        this.setState({ loading: false });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: {\r\n            ...this.state.errors,\r\n            error,\r\n          },\r\n          loading: false,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n  handleValidSubmit = () => {\r\n    this.setState({ loading: true });\r\n    const { data } = this.state;\r\n    console.log(JSON.stringify(data));\r\n    this.props\r\n      .submit(data)\r\n      .then((data) => {\r\n        this.setState({ success: true, loading: false, errors: {} });\r\n        this.onShowAlert();\r\n        this.myFormRef.reset();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ errors: err.response.data.errors, loading: false });\r\n        this.onShowAlert();\r\n      });\r\n  };\r\n\r\n  onShowAlert = () => {\r\n    this.setState({ visible: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ visible: false });\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ ...this.state, success: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, errors, loading, success, exists, visible } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {!!success ? (\r\n            // <Alert color=\"info\" isOpen={visible}>\r\n            //   Customer is added successfully.\r\n            // </Alert>\r\n            <Modal\r\n              isOpen={success}\r\n              toggle={this.toggle}\r\n              className={this.props.className}\r\n            >\r\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\r\n              <ModalBody>Year Added successfully</ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>\r\n                  Ok\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={(el) => (this.myFormRef = el)}\r\n        >\r\n          <div>\r\n            {!!errors.global ? (\r\n              <Alert color=\"danger\">{errors.global}</Alert>\r\n            ) : null}\r\n          </div>\r\n          {!!exists ? (\r\n            <Card>\r\n              <CardHeader>Update Year</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Update Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"updateyear\"\r\n                        type=\"text\"\r\n                        placeholder={data.updateyear.toString()}\r\n                        id=\"addyear\"\r\n                        value={data.updateyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>AddYear</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Add Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"addyear\"\r\n                        type=\"text\"\r\n                        placeholder=\"ex: 2020-21\"\r\n                        id=\"addyear\"\r\n                        value={data.addyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </AvForm>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(AddYearForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport {\r\n  addYear, updateYear\r\n} from \"../../../actions/financialYearAdd\";\r\nimport CustomLoader from \"../../../Components/loader/loader\";\r\nimport AddYearForm from \"./AddYear/AddYearForm/AddYearForm\";\r\n\r\nclass AddFinancialYear extends React.Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  submit = data => {\r\n    if(data.updateid !== \"\") {\r\n      this.dataHandler(true);\r\n    return this.props\r\n      .updateYear(data)\r\n      .then(data => {\r\n        this.dataHandler(false);\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        this.dataHandler(false);\r\n        throw err;\r\n      });    \r\n    }\r\n    else {\r\n      this.dataHandler(true);\r\n      return this.props\r\n        .addYear(data)\r\n        .then(data => {\r\n          this.dataHandler(false);\r\n          return data;\r\n        })\r\n        .catch(err => {\r\n          this.dataHandler(false);\r\n          throw err;\r\n        });\r\n    }\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"container mg-t-20\">\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/admin_dashboard\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/inventory_page\">Setup</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/financialYearAdd\">Add Year</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Add Year</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddYearForm submit={this.submit} />\r\n        </div>\r\n        {/* <div>\r\n          <ViewCustomerList />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { addYear,updateYear }\r\n)(AddFinancialYear);\r\n","import api from \"../Services/api\";\r\n\r\n\r\n export const addYear = data => {\r\n    return dispatch => {\r\n      return api.year.addyear(data);\r\n    }\r\n  }\r\n\r\n  export const updateYear = data => {\r\n    return dispatch => {\r\n      return api.year.updateyear(data);\r\n    }\r\n  }","import axios from 'axios';\n\nexport default {\n  challan: {\n    addchallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/addchallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    updatechallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/updatechallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    \n    getchallan: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n        .then(res => {\n          return res.data.challanlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport { challanListSchema } from \"../Schemas/schemas\";\nimport api from \"../Services/challanapi\";\nimport { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nconst challanCreated = challanlist => {\n  return {\n    type: ADD_CHALLAN,\n    challanlist\n  };\n};\n\nconst challanFetched = challanlist => {\n  return {\n    type: CHALLAN_FETCHED,\n    challanlist\n  };\n};\n\nexport const addChallan = data => {\n  return dispatch => {\n    return api.challan.addchallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\nexport const updateChallan = data => {\n  return dispatch => {\n    return api.challan.updatechallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getChallan = () => {\n  return dispatch => {\n    return api.challan.getchallan().then(challanlist => {\n      console.log(challanlist)\n      const challanlistvalues = challanlist.challandata;\n      console.log(challanlistvalues)\n      return dispatch(\n        challanFetched(normalize(challanlistvalues, [challanListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  invoice: {\n    addinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/addinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    updateinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/updateinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    \n    getinvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    getproformainvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/invoiceapi\";\nimport { ADD_INVOICE, INVOICE_FETCHED,PROFORMAINVOICE_FETCHED } from \"../Services/types\";\nimport { invoiceListSchema,proformainvoiceListSchema } from \"../Schemas/schemas\";\n\nconst invoiceCreated = invoicelist => {\n  return {\n    type: ADD_INVOICE,\n    invoicelist\n  };\n};\n\nconst invoiceFetched = invoicelist => {\n  return {\n    type: INVOICE_FETCHED,\n    invoicelist\n  };\n};\n\nconst proformainvoiceFetched = proformainvoicelist => {\n  return {\n    type: PROFORMAINVOICE_FETCHED,\n    proformainvoicelist\n  };\n};\n\nexport const addinvoice = data => {\n  return dispatch => {\n    return api.invoice.addinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\nexport const updateinvoice = data => {\n  return dispatch => {\n    return api.invoice.updateinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getinvoice = () => {\n  return dispatch => {\n    return api.invoice.getinvoice().then(invoicelist => {\n      const invoicelistvalues = invoicelist.invoicedata;\n      console.log(invoicelistvalues)\n      return dispatch(\n        invoiceFetched(normalize(invoicelistvalues, [invoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const getproformainvoice = () => {\n  return dispatch => {\n    return api.invoice.getproformainvoice().then(invoicelist => {\n      const proformainvoicelist = invoicelist.invoicedata;\n      console.log(proformainvoicelist)\n      return dispatch(\n        proformainvoiceFetched(normalize(proformainvoicelist, [proformainvoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass ChallanForm extends React.Component {\n  state = {\n    data: {\n      invoicenumber: null,\n      transactionid: null,\n      invoiceid: \"\",\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [],\n        itemlocation: [null],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      },\n      customerdetail: {\n        id: \"\",\n        customername: \"\",\n        customernumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      deliverychallanno: '',\n      toaddress: '',\n      mobilenumber: '',\n      site: '',\n      date: new Date(),\n      ponumber: '',\n      podate: new Date(),\n      vehiclenumber: '',\n      gstno: '',\n      otherreference: '',\n      values: ['']\n    },\n    errors: {},\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedInvoiceId: null,\n    selectedInvoiceNumber: null,\n    customerobjects: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    invoicelistvalues: [],\n    invoicelistselectedOptions: [],\n    itemlistSelectedOption: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    customerlistvalues: [],\n    customerlistSelect: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:'',\n    counts:1\n  };\n\n  componentDidMount() {\n  \n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const invoicelistvalues = Object.values(this.props.invoicelistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n\n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n      \n      let arrayInvoiceSet = [];\n      invoicelistvalues.map((option, i) => {\n        let objset = {\n          value: option._id, label: option.invoicenumber\n        }\n        arrayInvoiceSet.push(objset);\n      });\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        invoicelistvalues,\n        invoicelistselectedOptions: arrayInvoiceSet,\n        itemlistSelectedOption: newArraySet,\n        currencylistvalues,\n        locationlistvalue,\n        customerlistvalues,\n        customerobjects,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data\n        }\n      },() =>{\n        if (this.props.ID != undefined) {\n          this.getDCDetails(this.props.ID)\n        }\n        else{\n          //if(Object.keys(this.props.challanlistvalues).length == 0){\n            this.getChallandata()\n          //}\n        }\n      });\n    \n  }\n\n  getChallandata(){\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n      // if (res.data.challanlist.challandata.length > 0) {\n         \n        let deliverychallanno =\n        res.data.challanlist.challandata.length > 0 ? 1 + res.data.challanlist.challandata.length : 1;\n\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        });\n      //}\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n  getDCDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/challan/getsinglechallan/${id}`)\n      .then(res => {\n\n        console.log(res.data)\n         if (res.data.challanlist.challandata.length > 0) {\n           let founddata = res.data.challanlist.challandata;\n            console.log(founddata[0])\n           if(founddata[0].invoicenumber) {\n            this.handleInvoiceChange(founddata[0].invoiceid);\n           }\n           const newState = Object.assign({}, this.state);\n           newState.data.deliverychallanno = founddata[0].deliverychallanno;\n           newState.data.toaddress = founddata[0].toaddress;\n           newState.data.site = founddata[0].site;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.ponumber = founddata[0].ponumber;\n           newState.data.podate =  new Date(founddata[0].podate);\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.otherreference = founddata[0].otherreference;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.mobilenumber = founddata[0].mobilenumber ? founddata[0].mobilenumber : ''\n           newState.data.customerdetail.id = founddata[0].customerid ? founddata[0].customerid._id : '';\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n          \n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState);\n\n         \n         \n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.ID == undefined){\n      const materialoptionlistvalues = Object.values(\n        props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n      const masteritemlistvaluesobject = props.masteritemlistvalues;\n      const currencylistvalues = Object.values(props.currencylistvalues);\n      const invoicelistvalues = Object.values(this.props.invoicelistvalues);\n      const uomlistvalues = Object.values(props.uomlistvalues);\n      const locationlistvalue = Object.values(props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const challanlistvalues = Object.keys(this.props.challanlistvalues);\n      \n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      let arraySet = [];    \n      customerlistvalues.map((option, i) => {\n        let objset = {\n          value: option.id, label: option.customername\n        }\n        arraySet.push(objset);\n      });\n\n      let arrayInvoiceSet = [];\n      invoicelistvalues.map((option, i) => {\n        let objset = {\n          value: option._id, label: option.invoicenumber\n        }\n        arrayInvoiceSet.push(objset);\n      });\n      \n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n      \n\n      let deliverychallanno =\n        challanlistvalues.length > 0 ? 1 + challanlistvalues.length : 1;\n  \n        this.setState({\n          ...this.state,\n          masteritemlistvalues,\n          masteritemlistvaluesobject,\n          materialoptionlistvalues,\n          currencylistvalues,\n          invoicelistvalues,\n          invoicelistselectedOptions: arrayInvoiceSet,\n          locationlistvalue,\n          customerlistvalues,\n          itemlistSelectedOption: newArraySet,\n          customerlistSelect: arraySet,\n          customerobjects,\n          uom: uomlistvalues,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        },()=>{\n          console.log(this.state.customerlistvalues)\n        });\n    }\n \n    \n\n      \n \n  }\n\n\n  handleInvoiceChange = async(e) => {\n    console.log(e)\n    let selectedinvoice = e.value ? e.value : e\n    console.log(selectedinvoice)\n    const invoicelistvalues = this.state.invoicelistvalues;\n    let invoiceselected = invoicelistvalues.filter(\n      invoice => invoice._id === selectedinvoice || invoice.invoicenumber === selectedinvoice\n    );\n    console.log(\"invoice selected is\",invoiceselected)\n    if(invoiceselected && invoiceselected.length > 0){\n      invoiceselected = invoiceselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = invoiceselected.customerid ? invoiceselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let purchaseordernumber = invoiceselected.quotationnumber;\n      let transId = null;\n      const invoicenumber = invoiceselected.invoicenumber;\n      const invoiceid = selectedinvoice;\n      this.setState({ loading: true });\n      transId = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + invoiceselected.customerid)\n      .then(res => {\n        this.setState({ loading: false });\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            console.log(\"customer values is\", customervalues);\n            console.log(\"invoice selected is\", invoiceselected);\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == invoiceselected.quotationnumber\n            });\n            if(customervalues.length > 0)\n            {\n              return customervalues[0]['_id'];\n            }\n            else {\n              return \"\";\n            }\n          }\n        }\n      },\n      error =>{\n        this.setState({ loading: false });\n      });\n      let purchaseorderdate = new Date();\n      if(invoiceselected.purchaseorderdate) {\n        purchaseorderdate = new Date(invoiceselected.purchaseorderdate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      }\n      let values = invoiceselected.addeditemlist\n      if (invoiceselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < invoiceselected.addeditemlist.length; i++) {\n          invoiceselected.addeditemlist[i].itemdiscount = invoiceselected.addeditemlist[i].itemdiscount == null || invoiceselected.addeditemlist[i].itemdiscount == '' ?\n          invoiceselected.addeditemlist[i].itemdiscount = 0 : invoiceselected.addeditemlist[i].itemdiscount\n          invoiceselected.addeditemlist[i].itemdiscount = (invoiceselected.addeditemlist[i].itemdiscount).toString()\n\n\n          invoiceselected.addeditemlist[i].quantity = invoiceselected.addeditemlist[i].quantity == null || invoiceselected.addeditemlist[i].quantity == '' ?\n          invoiceselected.addeditemlist[i].quantity = 0 : invoiceselected.addeditemlist[i].quantity\n          invoiceselected.addeditemlist[i].quantity = (invoiceselected.addeditemlist[i].quantity).toString()\n\n          invoiceselected.addeditemlist[i].costperunit = invoiceselected.addeditemlist[i].costperunit == null || invoiceselected.addeditemlist[i].costperunit == '' ?\n          invoiceselected.addeditemlist[i].costperunit = 0 : invoiceselected.addeditemlist[i].costperunit\n          invoiceselected.addeditemlist[i].costperunit = (invoiceselected.addeditemlist[i].costperunit).toString()\n\n          invoiceselected.addeditemlist[i].totalcost = invoiceselected.addeditemlist[i].totalcost == null || invoiceselected.addeditemlist[i].totalcost == '' ?\n          invoiceselected.addeditemlist[i].totalcost = 0 : invoiceselected.addeditemlist[i].totalcost\n          invoiceselected.addeditemlist[i].totalcost = (invoiceselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(invoiceselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(invoiceselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(invoiceselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(invoiceselected.addeditemlist[i].itemdiscount)\n          selectedItemlist.remarks.push(\"\");\n          selectedItemlist.itemlocation.push(\"\");\n\n\n         \n          selectedItemlist.itemuom.push(invoiceselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(invoiceselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(invoiceselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(invoiceselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(invoiceselected.addeditemlist[i].id)\n\n        }\n      }\n\n      const mobilenumber = invoiceselected.customercontactnumber;\n      const toaddress = invoiceselected.billingaddress;\n      let vehiclenumber = this.state.vehiclenumber;\n      if(invoiceselected.vehiclenumber) {\n        vehiclenumber = invoiceselected.vehiclenumber\n      }\n      let gstno = this.state.gstno;\n      if(invoiceselected.customergstnumber) {\n        gstno = invoiceselected.customergstnumber;\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          invoicenumber,\n          transactionid: transId,\n          invoiceid,\n          selectedCustomerID: invoiceselected.customerid,\n          selectedCustomerName: invoiceselected.customername,\n          selectedInvoiceId: selectedinvoice,\n          selectedInvoiceNumber: invoiceselected.invoicenumber,\n          ponumber: purchaseordernumber,\n          podate: purchaseorderdate,\n          selectedItemlist,\n          mobilenumber,\n          toaddress,\n          gstno,\n          vehiclenumber,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            invoicenumber : invoicenumber,\n            invoiceid : invoiceid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (invoiceselected.addeditemlist.length > 0) {\n            invoiceselected.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          if(invoiceselected.customerid) {\n            this.handleChange2(invoiceselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: date\n      }\n    });\n  };\n\n  handlePODate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        podate: date\n      }\n    });\n  };\n\n  handleChange = e => {\n    console.log( e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChange2 = e => {\n\n    let selected_id = e.value ? e.value : e\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n\n    let toaddress = customerdetail ? customerdetail.customeraddress1 +\n    \" \" +\n    customerdetail.customeraddress2 +\n    \" \" +\n    customerdetail.city +\n    \" \" +\n    customerdetail.state +\n    \" \" +\n    customerdetail.country +\n    \" \" +\n    customerdetail.pincode : ''\n\n  \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail,\n        toaddress,\n      },\n      selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n    },()=>{\n      localStorage.setItem('custname',this.state.data.customerdetail.customername)\n      console.log(this.state.data.customerdetail)\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n\n  createSelectcustomer = () => {\n    let items = [];\n    let customerlistvalues = this.state.customerlistvalues;\n    console.log(this.state.customerlistvalues)\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.value ? e.value : e;\n    console.log(this.state.masteritemlistvaluesobject)\n    console.log(selected_id)\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //   : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        \n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        }\n  \n        this.setState({\n  \n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          this.totalValue();\n        });\n      }\n      \n      }\n\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    const remarks = removeItem.selectedItemlist.remarks;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    remarks.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks\n        }\n      }\n    },() =>{\n      console.log(this.state.data.selectedItemlist)\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    console.log(this.state.data.customerdetail)\n    const { supplierdetail, selectedItemlist,customerdetail } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    data['customerdetail'].customername = localStorage.getItem('custname')\n    \n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    \n\n    this.props\n      .submit(data)\n      .then(() => {\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n        }\n\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n\n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n          }\n        \n      });\n  };\n\n  \n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let SelINV;\n    if(this.state.selectedInvoiceId != undefined) {\n      SelINV = {\n        value: this.state.selectedInvoiceId, label: this.state.selectedInvoiceNumber\n      }\n    }\n    const customerID = this.state.selectedCustomerID ? (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n    //   value={data.customerdetail.id}\n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />    \n    ) : (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n  \n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />        \n    )\n\n    let invoiceDisp = this.state.selectedInvoiceId ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleInvoiceChange.bind(this)} styles={customStyles} required value={SelINV} options={this.state.invoicelistselectedOptions} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleInvoiceChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.invoicelistselectedOptions} />\n    )\n    return (\n      <div>\n\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Delivery Challan</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Delivery Challan</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallanno'>DC</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='deliverychallanno'\n                      type='text'\n                      id='deliverychallanno'\n                      value={data.deliverychallanno || null}\n                      onChange={this.handleChange}\n                 \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Invoice No</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {invoiceDisp}\n                  </AvGroup>\n                </Col>                \n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To address </Label>\n                    <AvField\n                      Label\n                      name='toaddress'\n                      type='text'\n                      id='toaddress'\n                      value={data.toaddress}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='site'>Site</Label>\n                  <AvField\n                    Label\n                    name='site'\n                    type='text'\n                    id='site'\n                    value={data.site || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='mobilenumber'>Mobile No</Label>\n                  <AvField\n                    Label\n                    name='mobilenumber'\n                    type='text'\n                    id='mobilenumber'\n                    value={data.mobilenumber || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='quotationno'>Date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChallanDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>PO no</Label>\n                    <AvField\n                      Label\n                      type='text'\n                      name='ponumber'\n                      id='ponumber'\n                      value={data.ponumber || null}\n                      onChange={e => this.handleChange(e)}\n                    ></AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='podate'>PO Date</Label>\n                  <DatePicker\n                    selected={data.podate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handlePODate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='podate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='vehiclenumber'>Vehicle Number</Label>\n                    <AvField\n                      Label\n                      name='vehiclenumber'\n                      type='text'\n                      id='vehiclenumber'\n                      value={data.vehiclenumber}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      Label\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='otherreference'>Other reference</Label>\n                    <AvField\n                      Label\n                      name='otherreference'\n                      type='text'\n                      id='otherreference'\n                      value={data.otherreference}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              {/* className='purchaseorder-item-row' */}\n              <div >\n                {data.values.map((values, index) => {\n                            let optionsel = \"\";\n                            let SelVal = {};\n                            if(values.id != undefined) {\n                              if(values.itemshortdescription) {\n                                optionsel = values.itemshortdescription;\n                              }\n                              else {\n                                optionsel = values.itemdescription;\n                              }\n                              SelVal = {\n                                value: values.id._id, label: optionsel\n                              }\n                            }\n                            const itemnameinfo = values.id != undefined ? (\n                              // <AvField\n                              //   type=\"select\"\n                              //   value={values.id._id}\n                              //   name={`selectitem${index}`}\n                              //   onChange={e => this.selectitemchange(e, index)}\n                              //   required={true}\n                              // >\n                              //   <option value=\"\">select Item</option>\n                              //   {this.createSelectItems()}\n                              // </AvField>\n                              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                              ) :\n                              (\n                                // <AvField\n                                //   type=\"select\"\n                                //   name={`selectitem${index}`}\n                                //   value={\n                                //     data.selectedItemlist.id[index]\n                                //   }\n                                //   onChange={e => this.selectitemchange(e, index)}\n                                //   required={true}\n                                // >\n                                //   <option value=\"\">select Item</option>\n                                //   {this.createSelectItems()}\n                                // </AvField>\n                                <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                              )\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                readOnly\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                \n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                            \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                readOnly\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] || null\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='remarks'>Remarks</Label>\n                              <AvField\n                                Label\n                                name='remarks'\n                                type='text'\n                                id='remarks'\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    invoicelistvalues: state.invoicelistvalues,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChallanForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addChallan } from '../../../../actions/challan';\nimport { getChallan } from '../../../../actions/challan';\nimport { updateChallan } from '../../../../actions/challan';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport axios from 'axios';\n\nimport ChallanForm from './ChallanForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddChallan extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    this.props.getinvoice();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n\n      return this.props\n      .updateChallan(data)\n      .then(submitdata => {\n        console.log(\"data received is \", data);\n        let obj = {};\n        obj['_id'] = data.transactionid;\n        obj['challan_link'] = data.deliverychallanno;\n        axios\n        .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n        .then(res => {\n          this.dataHandler(false);\n          return submitdata;\n        },\n        error =>{\n          this.dataHandler(false);\n          throw error;\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n        .addChallan(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['challan_link'] = data.deliverychallanno;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return submitdata;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n    }\n  \n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Challan</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ChallanForm submit={this.submit}  ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addChallan,\n    updateChallan,\n    getCustomerList,\n    getChallan,\n    getinvoice\n  }\n)(AddChallan);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getChallan } from '../../../../actions/challan';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nclass ViewChallan extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    challanlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    \n    console.log(this.props);\n    if (this.props.challanlistvalues) {\n      let quotationlist = Object.values(this.props.challanlistvalues);\n\n      quotationlist.sort(function(a, b){\n        return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n      });\n      const challanlistvalues = quotationlist.map(quotationvalue => {\n        return {\n          deliverychallanno: quotationvalue.deliverychallanno,\n          ponumber: quotationvalue.ponumber,\n          vehiclenumber: quotationvalue.vehiclenumber,\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, challanlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.challanlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.deliverychallanno.toLowerCase().localeCompare(a.deliverychallanno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n    });\n    const challanlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        deliverychallanno: quotationvalue.deliverychallanno,\n        ponumber: quotationvalue.ponumber,\n        vehiclenumber: quotationvalue.vehiclenumber,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, challanlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_challanpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  updatechallan(id) {\n    let path = `/editchallan/${id}`;\n    this.props.history.push(path);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, challanlistvalues } = this.state;\n    console.log(challanlistvalues)\n    const columnvalue = [\n      {\n        label: 'Delivery Challan',\n        field: 'deliverychallanno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'PO Number',\n        field: 'ponumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Vehicle Number',\n        field: 'vehiclenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={challanlistvalues} \n          columnvalue={columnvalue}\n          className=\"challanlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getChallan \n    }\n)(ViewChallan);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ challanlistvalues, data_cond }) => {\n  console.log(JSON.stringify(challanlistvalues));\n  const data = challanlistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = challanlistvalues.totalvalue\n    ? challanlistvalues.totalvalue\n    : '';\n  const taxableAmount = challanlistvalues.taxableamount;\n  const date = moment(challanlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(challanlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(challanlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = challanlistvalues.billingaddress;\n  const deliveryaddress = challanlistvalues.deliveryaddress;\n  const vendorcode = challanlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = challanlistvalues;\n\n  let {\n    deliverychallanno,\n    toaddress,\n    site,\n    ponumber,\n    vehiclenumber,\n    otherreference,\n    gstno,\n    customername\n  } = challanlistvalues;\n  let arr = [],toAD='',arr1 = [],siteAD='',customername1 = ''\n  let mobileno = challanlistvalues.mobilenumber ? challanlistvalues.mobilenumber : ''\n  // if(toaddress.indexOf(',') > -1){\n  //   arr = toaddress.split(',');\n  //   customername = arr[0]\n  //   if(arr.length > 2){\n  //     for(var i=1;i<arr.length;i++){\n  //       toAD = i > 1 ? toAD + ',' + arr[i] : toAD + arr[i]\n  //     }\n  //   }\n  // }\n  // else\n  //   toAD = toaddress\n\n\n    toAD = toaddress\n  \n    // if(site.indexOf(',') > -1){\n    //   arr1 = site.split(',');\n    //   customername1 = arr1[0]\n    //   if(arr1.length > 2){\n    //     for(var i=1;i<arr1.length;i++){\n    //       siteAD = i > 1 ? siteAD + ',' + arr1[i] : siteAD + arr1[i]\n    //     }\n    //   }\n    // }\n    // else\n    //   siteAD = site\n\n    \n\n\n  const purchaseordernumber = challanlistvalues.purchaseordernumber;\n  const tax = challanlistvalues.tax ? challanlistvalues.tax : '';\n  const taxpercentage = challanlistvalues.tax\n    ? challanlistvalues.tax / 100\n    : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = challanlistvalues.selectedcontactlist[0]\n  //     ? challanlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, { color: 'red', paddingLeft: 16 }]}>{deliverychallanno}</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{toAD}</Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={styles.dcaddress}>Site</Text>\n              <Text style={styles.dcaddress}>{site}</Text>\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={styles.header_tintext}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.weighteach}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.costperunit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.totalcost}</Text>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text>\n\n    \n\n        {/* <Text>{'\\n'}</Text> */}\n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, {\n                  color: 'red',\n                  paddingLeft: 16,\n                }]}>{deliverychallanno}/2020-21</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{toAD}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}> Phone no : {mobileno} </Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>Site</Text>\n              {/* <Text style={styles.dcaddress}>{site}</Text> */}\n              {/* <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername1}</Text> */}\n\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{site}</Text>\n\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Text>{'\\n'}</Text>\n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>REMARKS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getChallan } from '../../../../actions/challan';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewChallan';\n\nclass ViewChallanPdf extends React.Component {\n  state = {\n    challanlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getChallan();\n    const quotationid = this.props.match.params.id;\n    const challanlistvalues = this.props.challanlistvalues[quotationid];\n    challanlistvalues.requestdeliverydate = moment(\n      challanlistvalues.date\n    ).format('DD MMM, YYYY');\n    challanlistvalues.addeditemlist = challanlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          itemdiscount: 0,\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = challanlistvalues.customerid;\n    const customernumber = challanlistvalues.customernumber;\n    const customername = challanlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(challanlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        challanlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/challanlist');\n          }, 300);\n        });\n   \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, challanlistvalues, link } = this.state;\n    console.log(this.state);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                challanlistvalues={this.state.challanlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getChallan }\n)(ViewChallanPdf);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../../Components/loader/loader\";\nimport axios from \"axios\";\n\n\nclass EnquiryPage extends React.Component {\n  state = {\n    searchtodate: null,\n    count: null,\n    success: false,\n    update: false,\n    enquirylistvalues: [],\n    backupenquirylistvalues: [],\n    loading: false,\n    errorMsg: '',\n    data: {\n      eno: '',\n      company: '',\n      name: '',\n      phone: '',\n      email: '',\n      detail: '',\n      enquiryFrom: '',\n //   quoteno: '',\n      quotationCreated: false\n    }\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n    this.getEnquiries()\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  quotationCreated = e => {\n    const val = this.state.data.quotationCreated;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [\"quotationCreated\"]: !val }\n    })\n  }\n  updateButton = e => {\n    console.log(e);\n    if (!e.quotationCreated) { e.quotationCreated = false; }\n    this.setState({ ...this.state, success: true, update: true, data: e });\n  }\n  getEnquiries() {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/Enquiry/getenquiry`)\n      .then(res => {\n        this.dataHandler(false)\n        if (res.data.enquirylist.enquirydata.length > 0) {\n          let enquiryvalues = res.data.enquirylist.enquirydata;\n          if (enquiryvalues.length > 0) {\n            enquiryvalues = enquiryvalues.reverse()\n            enquiryvalues = enquiryvalues.map(enquiry => {\n              console.log(enquiry)\n              let created = \"No\"\n              if (enquiry.quotationCreated) {\n                created = \"Yes\"\n              }\n              return {\n                date: enquiry.date,\n                name: enquiry.name,\n                phone: enquiry.phone,\n                company: enquiry.company,\n                email: enquiry.email,\n                detail: enquiry.detail,\n                enquiryFrom: enquiry.enquiryFrom || null,\n            //    quoteno: enquiry.quoteno || null,\n                view: (\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(enquiry);\n                    }}\n                  >\n                    Edit\n                </Button>\n                )\n\n              };\n            });\n\n            this.setState({\n              enquirylistvalues: enquiryvalues,\n              count: enquiryvalues.length\n            }, () => {\n            })\n          }\n        }\n        else {\n          this.setState({ count: 0 })\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  addenquiry = () => {\n    this.setState({\n      success: true, update: false,\n      data: {\n        eno: '',\n        company: '',\n        name: '',\n        phone: '',\n        email: '',\n        detail: '',\n        enquiryFrom: '',\n   //   quoteno: '',\n        quotationCreated: false\n      }\n    });\n  }\n\n  addnewenquiry = () => {\n    const { data } = this.state;\n    if (data.company == '' || data.name == '' || data.phone == '' || data.email == '' || data.detail == '' || data.enquiryFrom == '') {\n      this.setState({ 'errorMsg': 'Fill all fields' });\n    }\n    else {\n      console.log(this.state.data)\n\n      this.dataHandler(true)\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      axios\n        .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/addenquiry`,\n          {\n            \"eno\": \"\",\n            \"company\": data.company,\n            \"name\": data.name,\n            \"phone\": data.phone,\n            \"email\": data.email,\n            \"detail\": data.detail,\n            \"date\": date,\n            \"enquiryFrom\": data.enquiryFrom,\n          //  \"quoteno\": data.quoteno,\n            \"quotationCreated\": data.quotationCreated\n          })\n        .then(res => {\n          this.getEnquiries()\n          this.toggle();\n        },\n          error => {\n            this.dataHandler(false)\n            this.setState({ success: false, message: 'Server error.' });\n          });\n    }\n  }\n\n  updateenquiry = () => {\n    const { data } = this.state;\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/updateenquiry`,\n        {\n          \"_id\": data._id,\n          \"eno\": \"\",\n          \"company\": data.company,\n          \"name\": data.name,\n          \"phone\": data.phone,\n          \"email\": data.email,\n          \"detail\": data.detail,\n          \"date\": data.date,\n          \"enquiryFrom\": data.enquiryFrom,\n        //  \"quoteno\": data.quoteno,\n          \"quotationCreated\": data.quotationCreated\n        })\n      .then(res => {\n        this.getEnquiries()\n        this.toggle();\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  }\n\n  render() {\n    const { count, enquirylistvalues, loading, success, data, errorMsg, update } = this.state;\n\n    const columnvalue = [\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Phone number\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Company name\",\n        field: \"company\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Item detail\",\n        field: \"detail\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Enquiry\",\n        field: \"enquiryFrom\",\n        sort: \"asc\",\n        width: 50\n      },\n      // {\n      //   label: \"Quotation created\",\n      //   field: \"quotationCreated\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Edit\",\n        field: \"edit\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n\n\n\n    let modaldata, errormessage;\n    errormessage = errorMsg != '' ? (<p style={{ 'textAlign': 'center', 'color': 'red' }}>{errorMsg}</p>) : null\n    if (success) {\n      modaldata = (\n        <Modal\n          isOpen={success}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Enquiry</ModalHeader>\n          <ModalBody>\n\n            <input type=\"text\" className=\"form-control\" placeholder=\"Company name\" name=\"company\" value={data.company} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Person name\" name=\"name\" value={data.name} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Mode of enquiry\" name=\"enquiryFrom\" value={data.enquiryFrom} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"number\" className=\"form-control\" placeholder=\"Phone number\" name=\"phone\" value={data.phone} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" value={data.email} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  />\n            <textarea type=\"text\" className=\"form-control\" placeholder=\"Item details\" name=\"detail\" value={data.detail} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  ></textarea>\n            {/* <input type=\"text\" className=\"form-control\" placeholder=\"Quotation Number\" name=\"quoteno\" value={data.quoteno} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} /> */}\n            {/* <input type=\"checkbox\" className=\"\" value={data.quotationCreated} onChange={this.quotationCreated} checked={data.quotationCreated} /> <span style={{position:'relative',top:'-12px'}}> Quotation created </span> */}\n            {errormessage}\n          </ModalBody>\n          <ModalFooter>\n            {update ? (\n              <Button\n                Label\n                style={{ float: 'right' }}\n                color=\"primary\"\n                onClick={this.updateenquiry}\n              >\n                Update\n          </Button>\n            ) : (\n                <div>\n                  <Button color=\"primary\" onClick={this.toggle} style={{ fontSize: '0.8rem' }}>\n                    Cancel\n          </Button>\n                  <Button\n                    Label\n                    style={{ float: 'right' }}\n                    color=\"primary\"\n                    onClick={this.addnewenquiry}\n                  >\n                    Submit\n        </Button>\n                </div>\n              )}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n \n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/crmlist\">CRM</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Enquiries</BreadcrumbItem>\n\n            </Breadcrumb>\n\n\n            <Button\n              Label\n              style={{ float: 'right' }}\n              color=\"primary\"\n              onClick={this.addenquiry}\n            >\n              Add Enquiry\n          </Button>\n\n            {modaldata}\n\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={enquirylistvalues}\n              className=\"customerlist\"\n            />\n\n          </div>\n         \n      </div>\n    );\n  }\n}\n\n\n\nexport default EnquiryPage\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass InvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        itemshortdescription: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      quotationnumber: '',\n      transactionid: null,\n      quotationid: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      advanceamountreceived:'',\n      values: ['']\n    },\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedQuotationId: null,\n    selectedQuotationNumber: null,\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    quotationlistvalues: [],\n    customerlistSelect: [],\n    quotationlistSelect: [],\n    itemlistSelectedOption: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    const quotationlistvalues = Object.values(this.props.quotationlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      quotationlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n      if(Object.keys(this.props.invoicelistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n         // if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          //}\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n      else{\n        const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n        this.setState({\n          data: {\n            ...this.state.data,\n            invoicenumber\n          }\n        })\n      }\n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/invoice/getsingleinvoice/${id}`)\n      .then(async (res) => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.customerID = founddata[0].customerid;\n           newState.selectedCustomerID = founddata[0].customerID;\n           newState.selectedCustomerName = founddata[0].customername;\n           newState.selectedQuotationId = founddata[0].quotationid;\n           newState.data.quotationid = founddata[0].quotationid;\n           newState.selectedQuotationNumber = founddata[0].quotationnumber;\n           newState.data.quotationnumber = founddata[0].quotationnumber;\n\n           const transactionid = await axios\n           .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + founddata[0].customerid)\n           .then(res => {\n             this.dataHandler(false)\n             if(res.data.customerlist.customerdata.length > 0){\n               let customervalues = res.data.customerlist.customerdata;\n               if(customervalues.length > 0){\n                 customervalues = customervalues.filter((item) =>{\n                   return item.Qno == founddata[0].quotationnumber\n                 });\n                 if(customervalues.length > 0)\n                 {\n                  console.log(\"customer values is\", customervalues)\n                   return customervalues[0]['_id'];\n                 }\n                 else {\n                   return \"\";\n                 }\n               }\n             }\n           },\n           error =>{\n             this.dataHandler(false);\n           });\n\n           newState.data.transactionid = transactionid;\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n              console.log(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          \n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const quotationlistvalues = Object.values(props.quotationlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      quotationlistvalues,\n      customerlistSelect: arraySet,\n      masteritemlistvalues,\n      itemlistSelectedOption: newArraySet,\n      quotationlistSelect: arrayQuotationSet,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        if(selected_item.masteritemshortdescription){\n          selectedItemlist.itemshortdescription[index] =\n          selected_item.masteritemshortdescription;\n        }\n          // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n          // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    },()=>{\n      this.totalValue();\n    });\n  \n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    console.log(\"customer id is\", selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    \n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }, selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            ''\n          ],          \n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemshortdescription = removeItem.selectedItemlist.itemshortdescription;    \n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      });\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleQuotationChange = async(e) => {\n    console.log(e)\n    let selectedquotation = e.value ? e.value : e\n    console.log(selectedquotation)\n    const quotationlistvalues = this.state.quotationlistvalues;\n    let quotationselected = quotationlistvalues.filter(\n      quotation => quotation._id === selectedquotation || quotation.quotationnumber === selectedquotation\n    );\n    console.log(quotationselected)\n    if(quotationselected && quotationselected.length > 0){\n      quotationselected = quotationselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = quotationselected.customerid ? quotationselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let transId = null;\n      const quotationnumber = quotationselected.quotationnumber;\n      const quotationid = selectedquotation;\n      this.dataHandler(true);\n      const purchaseordernumber = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + quotationselected.customerid)\n      .then(res => {\n        this.dataHandler(false)\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == quotationselected.quotationnumber\n            });\n            transId = customervalues[0]['_id'];\n            poDate = customervalues[0]['po'];\n            return customervalues[0]['ponum'];\n          }\n        }\n      },\n      error =>{\n        this.dataHandler(false);\n      });\n      const date = new Date(quotationselected.date);\n      let purchaseorderdate = new Date();\n      if(poDate) {\n        purchaseorderdate = new Date(poDate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = quotationselected.addeditemlist\n      if (quotationselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < quotationselected.addeditemlist.length; i++) {\n          quotationselected.addeditemlist[i].itemdiscount = quotationselected.addeditemlist[i].itemdiscount == null || quotationselected.addeditemlist[i].itemdiscount == '' ?\n          quotationselected.addeditemlist[i].itemdiscount = 0 : quotationselected.addeditemlist[i].itemdiscount\n          quotationselected.addeditemlist[i].itemdiscount = (quotationselected.addeditemlist[i].itemdiscount).toString()\n\n\n          quotationselected.addeditemlist[i].quantity = quotationselected.addeditemlist[i].quantity == null || quotationselected.addeditemlist[i].quantity == '' ?\n          quotationselected.addeditemlist[i].quantity = 0 : quotationselected.addeditemlist[i].quantity\n          quotationselected.addeditemlist[i].quantity = (quotationselected.addeditemlist[i].quantity).toString()\n\n          quotationselected.addeditemlist[i].costperunit = quotationselected.addeditemlist[i].costperunit == null || quotationselected.addeditemlist[i].costperunit == '' ?\n          quotationselected.addeditemlist[i].costperunit = 0 : quotationselected.addeditemlist[i].costperunit\n          quotationselected.addeditemlist[i].costperunit = (quotationselected.addeditemlist[i].costperunit).toString()\n\n          quotationselected.addeditemlist[i].totalcost = quotationselected.addeditemlist[i].totalcost == null || quotationselected.addeditemlist[i].totalcost == '' ?\n          quotationselected.addeditemlist[i].totalcost = 0 : quotationselected.addeditemlist[i].totalcost\n          quotationselected.addeditemlist[i].totalcost = (quotationselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(quotationselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(quotationselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(quotationselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(quotationselected.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(quotationselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(quotationselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(quotationselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(quotationselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(quotationselected.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          quotationnumber,\n          transactionid: transId,\n          quotationid,\n          selectedCustomerID: quotationselected.customerid,\n          selectedCustomerName: quotationselected.customername,\n          selectedQuotationId: selectedquotation,\n          selectedQuotationNumber: quotationselected.quotationnumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            quotationnumber : quotationnumber,\n            quotationid : quotationid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (quotationselected.addeditemlist.length > 0) {\n            quotationselected.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(quotationselected.customerid) {\n            this.handleChange(quotationselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      \n\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(selectedChallan.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n\n      \n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(selectedChallan.customerid) {\n            this.handleChange(selectedChallan.customerid._id);\n          }\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let customerDisp = this.state.selectedCustomerID != undefined ? (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />\n    ) : (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    );\n    let SelQuota;\n    if(this.state.selectedQuotationId) {\n      SelQuota = {\n        value: this.state.selectedQuotationId, label: this.state.selectedQuotationNumber\n      }\n    }\n    let quotationdisp = this.state.selectedQuotationId != undefined ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required value={SelQuota} options={this.state.quotationlistSelect} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required defaultValue={data.deliverychallannumber} options={this.state.quotationlistSelect} />\n    );\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n               \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Quotation No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  {/* <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField> */}\n                  {quotationdisp}\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Quotation date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n\n                {/* <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> */}\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n         \n                   <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    required\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerDisp}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n              {/* <Row>\n                <div className='mg-t-20' style={{ 'marginLeft': '15px','fontSize': '16px','fontWeight': 'bold'}}>\n                   For Proforma Invoice:\n                </div>\n              </Row>\n              \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Despath </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n              </Row> */}\n\n\n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                let optionsel = \"\";\n                let SelVal = {};\n                if(values.id != undefined) {\n                  if(values.itemshortdescription) {\n                    optionsel = values.itemshortdescription;\n                  }\n                  else {\n                    optionsel = values.itemdescription;\n                  }\n                  SelVal = {\n                    value: values.id._id, label: optionsel\n                  }\n                }                  \n\n                const itemnameinfo = values.id != undefined ? (\n                  // <AvField\n                  //   type=\"select\"\n                  //   value={values.id._id}\n                  //   name={`selectitem${index}`}\n                  //   onChange={e => this.selectitemchange(e, index)}\n                  //   required={true}\n                  // >\n                  //   <option value=\"\">select Item</option>\n                  //   {this.createSelectItems()}\n                  // </AvField>\n                  <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                  ) :\n                  (\n                    // <AvField\n                    //   type=\"select\"\n                    //   name={`selectitem${index}`}\n                    //   value={\n                    //     data.selectedItemlist.id[index]\n                    //   }\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                  )\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n           \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(InvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport { getquotation } from \"../../../../actions/quotation\";\nimport InvoiceForm from \"./InvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport axios from 'axios';\n\nclass AddInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n    this.props.getquotation();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n  submit = data => {\n    console.log(data)\n    this.dataHandler(true);\n      if(this.props.match.params.id != undefined){\n        data['_id'] = this.props.match.params.id;\n        return this.props\n        .updateinvoice(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['invoice_link'] = \"/view_invoicepdf/\"+submitdata.invoicelist.result;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n      else{\n        return this.props\n        .addinvoice(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['invoice_link'] = \"/view_invoicepdf/\"+submitdata.invoicelist.result;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return submitdata;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <InvoiceForm submit={this.submit} ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan,\n    getquotation\n  }\n)(AddInvoice);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ProformaInvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    proformainvoicelist: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemshortdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      quotationnumber: '',\n      transactionid: null,\n      quotationid: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      transportationgst:'',\n      advanceamountreceived:'',\n      transportchargerequired: 'Yes',\n      values: ['']\n    },\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedQuotationId: null,\n    selectedQuotationNumber: null,\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    quotationlistvalues: [],\n    customerlistSelect: [],\n    quotationlistSelect: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    itemlistSelectedOption: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const quotationlistvalues = Object.values(this.props.quotationlistvalues);\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      quotationlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          }\n          else{\n            const invoicenumber = 1\n            this.setState({\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            })\n          }\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n    \n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getsingleproformainvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.transportationgst = founddata[0].transportationgst ?  founddata[0].transportationgst : ''\n           \n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.data.transportchargerequired = founddata[0].transportchargerequired ? founddata[0].transportchargerequired : ''\n           \n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const quotationlistvalues = Object.values(props.quotationlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    console.log(\"quotation values is \", quotationlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerlistSelect: arraySet,\n      customerobjects,\n      quotationlistvalues,\n      masteritemlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      quotationlistSelect: arrayQuotationSet,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    console.log(e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }, selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            ''\n          ],                    \n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemshortdescription = removeItem.selectedItemlist.itemshortdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n\n    if (this.props.ID != undefined) {\n      data['_id'] = this.props.ID;\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/updateproformainvoice`, {\n        data\n      })\n      .then(res => {\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      },(err) =>{\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      });\n    }\n\n    else{\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/addproformainvoice`, {\n        data\n      })\n      .then(res => {\n        \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      },(err) =>{\n \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n\n  handleQuotationChange = async(e) => {\n    console.log(e)\n    let selectedquotation = e.value ? e.value : e\n    console.log(selectedquotation)\n    const quotationlistvalues = this.state.quotationlistvalues;\n    console.log(\"quotation list values \", quotationlistvalues);\n    let quotationselected = quotationlistvalues.filter(\n      quotation => quotation._id === selectedquotation || quotation.quotationnumber === selectedquotation\n    );\n    console.log(quotationselected)\n    if(quotationselected && quotationselected.length > 0){\n      quotationselected = quotationselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = quotationselected.customerid ? quotationselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let transId = null;\n      const quotationnumber = quotationselected.quotationnumber;\n      const quotationid = selectedquotation;\n      this.dataHandler(true);\n      const purchaseordernumber = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + quotationselected.customerid)\n      .then(res => {\n        this.dataHandler(false)\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == quotationselected.quotationnumber\n            });\n            if(customervalues.length > 0) {\n              transId = customervalues[0]['_id'];\n              poDate = customervalues[0]['po'];\n              return customervalues[0]['ponum'];\n            }\n            else {\n              transId = \"\";\n              poDate = \"\";\n              return \"\";\n            }\n          }\n        }\n      },\n      error =>{\n        this.dataHandler(false);\n      });\n      const date = new Date(quotationselected.date);\n      let purchaseorderdate = new Date();\n      if(poDate) {\n        purchaseorderdate = new Date(poDate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = quotationselected.addeditemlist\n      if (quotationselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < quotationselected.addeditemlist.length; i++) {\n          quotationselected.addeditemlist[i].itemdiscount = quotationselected.addeditemlist[i].itemdiscount == null || quotationselected.addeditemlist[i].itemdiscount == '' ?\n          quotationselected.addeditemlist[i].itemdiscount = 0 : quotationselected.addeditemlist[i].itemdiscount\n          quotationselected.addeditemlist[i].itemdiscount = (quotationselected.addeditemlist[i].itemdiscount).toString()\n\n\n          quotationselected.addeditemlist[i].quantity = quotationselected.addeditemlist[i].quantity == null || quotationselected.addeditemlist[i].quantity == '' ?\n          quotationselected.addeditemlist[i].quantity = 0 : quotationselected.addeditemlist[i].quantity\n          quotationselected.addeditemlist[i].quantity = (quotationselected.addeditemlist[i].quantity).toString()\n\n          quotationselected.addeditemlist[i].costperunit = quotationselected.addeditemlist[i].costperunit == null || quotationselected.addeditemlist[i].costperunit == '' ?\n          quotationselected.addeditemlist[i].costperunit = 0 : quotationselected.addeditemlist[i].costperunit\n          quotationselected.addeditemlist[i].costperunit = (quotationselected.addeditemlist[i].costperunit).toString()\n\n          quotationselected.addeditemlist[i].totalcost = quotationselected.addeditemlist[i].totalcost == null || quotationselected.addeditemlist[i].totalcost == '' ?\n          quotationselected.addeditemlist[i].totalcost = 0 : quotationselected.addeditemlist[i].totalcost\n          quotationselected.addeditemlist[i].totalcost = (quotationselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(quotationselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(quotationselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(quotationselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(quotationselected.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(quotationselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(quotationselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(quotationselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(quotationselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(quotationselected.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          quotationnumber,\n          transactionid: transId,\n          quotationid,\n          selectedCustomerID: quotationselected.customerid,\n          selectedCustomerName: quotationselected.customername,\n          selectedQuotationId: selectedquotation,\n          selectedQuotationNumber: quotationselected.quotationnumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            quotationnumber : quotationnumber,\n            quotationid : quotationid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (quotationselected.addeditemlist.length > 0) {\n            quotationselected.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(quotationselected.customerid) {\n            this.handleChange(quotationselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      this.setState(newState);\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n      let addeditemlist = selectedChallan.addeditemlist;\n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(selectedChallan.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n       \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n          this.handleChange(selectedChallan._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let customerDisp = this.state.selectedCustomerID != undefined ? (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />\n    ) : (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    );\n    let SelQuota;\n    if(this.state.selectedQuotationId) {\n      SelQuota = {\n        value: this.state.selectedQuotationId, label: this.state.selectedQuotationNumber\n      }\n    }\n    let quotationdisp = this.state.selectedQuotationId != undefined ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required value={SelQuota} options={this.state.quotationlistSelect} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required defaultValue={data.deliverychallannumber} options={this.state.quotationlistSelect} />\n    );\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Proforma Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Proforma Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Proforma Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n              \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Quotation No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  {/* <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField> */}\n                  {quotationdisp}\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Quotation date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n               \n\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n           \n\n                 <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    required\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> \n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerDisp}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n            \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Dispatch </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationgst'>Transportation GST </Label>\n                    <AvField\n                      Label\n                      name='transportationgst'\n                      type='text'\n                      id='transportationgst'\n                      value={data.transportationgst}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportchargerequired'>GST required for Transport charge </Label>\n                    <AvField\n                      Label\n                      name='transportchargerequired'\n                      type='select'\n                      id='transportchargerequired'\n                      value={data.transportchargerequired}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    >\n                    <option value='Yes'>Yes</option>\n                    <option value='No'>No</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n\n             \n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                let optionsel = \"\";\n                let SelVal = {};\n                if(values.id != undefined) {\n                  if(values.itemshortdescription) {\n                    optionsel = values.itemshortdescription;\n                  }\n                  else {\n                    optionsel = values.itemdescription;\n                  }\n                  SelVal = {\n                    value: values.id._id, label: optionsel\n                  }\n                }  \n\n                const itemnameinfo = values.id != undefined ? (\n                  // <AvField\n                  //   type=\"select\"\n                  //   value={values.id._id}\n                  //   name={`selectitem${index}`}\n                  //   onChange={e => this.selectitemchange(e, index)}\n                  //   required={true}\n                  // >\n                  //   <option value=\"\">select Item</option>\n                  //   {this.createSelectItems()}\n                  // </AvField>\n                  <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                  ) :\n                  (\n                    // <AvField\n                    //   type=\"select\"\n                    //   name={`selectitem${index}`}\n                    //   value={\n                    //     data.selectedItemlist.id[index]\n                    //   }\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                  )\n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}                              \n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n         \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProformaInvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport ProformaInvoiceForm from \"./ProformaInvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddProformaInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n    this.props.getquotation();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Proforma Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProformaInvoiceForm ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan,\n    getquotation\n  }\n)(AddProformaInvoice);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n\n    console.log(this.props);\n    if (this.props.invoicelistvalues) {\n      let quotationlist = Object.values(this.props.invoicelistvalues);\n      quotationlist.sort(function(a, b){\n        return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n      });\n      const invoicelistvalues = quotationlist.map(quotationvalue => {\n        return {\n          invoicenumber: quotationvalue.invoicenumber,\n          customername: quotationvalue.customername,\n          customernumber: quotationvalue.customernumber,\n          customercontactnumber: quotationvalue.customercontactnumber,\n\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, invoicelistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.invoicelistvalues);\n    console.log(quotationlist)\n    //quotationlist= quotationlist.sort((a, b) => b.invoicenumber.toString().toLowerCase().localeCompare(a.invoicenumber.toString().toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n    });\n    const invoicelistvalues = quotationlist.map(quotationvalue => {\n      return {\n        invoicenumber: quotationvalue.invoicenumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, invoicelistvalues });\n    this.dataHandler(false);\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = id => {\n    let path = `/view_invoicepdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editinvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, invoicelistvalues,success } = this.state;\n    console.log(invoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={invoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(ViewInvoice);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport './ViewInvoice.scss';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  padding1: {\n    paddingTop: 6\n  },\n  pagepadding: {\n   padding:5,\n   paddingLeft:10,\n   paddingRight:10,\n\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n    border: 'none',\n    boxShadow: 'none',\n    border: '30px solid green',\n    background:'#000'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  nobordertable: {\n    borderWidth: 0, borderRightWidth: 0, borderBottomWidth: 0\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument = ({ invoicelistvalues, data_cond }) => {\n  const financialYear = invoicelistvalues.financialyear;\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = invoicelistvalues.taxableamount;\n  taxableAmount = parseFloat(taxableAmount)\n  taxableAmount = taxableAmount.toFixed(2)\n  console.log(taxableAmount)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername\n  } = invoicelistvalues;\n  let purchaseordernumber = invoicelistvalues.purchaseordernumber;\n\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n   \n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n\n\n\n\n  freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n  freightcharges = freightcharges.toFixed(2)\n  subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n  subtotal = parseFloat(subtotal)\n  subtotal = subtotal.toFixed(2)\n  \n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n\n\n  total = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total = total.toFixed(2)\n\n  roundoffamount = roundoffamount != '' && roundoffamount != null ? parseFloat(roundoffamount) : 0\n  roundoffamount = roundoffamount.toFixed(2)\n\n  grandtotal = parseFloat(total) + parseFloat(roundoffamount)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 2 && data.length < 4) {\n      return ( <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n            <Text style={styles.headerwidth}>INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n           \n           \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/ {financialYear}\n                 \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}/2020-21\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table styles={{'borderWidth':'0'}}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n               \n                  {deliveryaddress} \n                </Text>\n              </TableCell>\n\n              <TableCell weighting={0.5} >\n                <Table style={styles.section} style={{borderWidth: 0}}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                {/* style={styles.headerfont} */}\n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n              {/* <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell> */}\n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            */}\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n          \n          {/* Two */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n      \n              </TableCell>\n            </TableHeader>\n          </Table> */}\n          {/* Three */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                {amountinwords}\n                </Text>\n              </TableCell>\n   \n            </TableHeader>\n          </Table> */}\n          {/* ends here */}\n          <Text> {'\\n'}</Text>\n          </Page> )\n    }\n    else if(i == 0 && i <= 8 && data.length < 9) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      return ( \n      <>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <View style={styles.invoice_header}>\n        <Image style={styles.logo} src={logo} />\n        <View style={{ flex: 1, paddingLeft: 25 }}>\n          <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n          <Text style={styles.headerwidth}>INVOICE</Text>\n          <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n         \n         \n        </View>\n      </View>\n      {/* <View style={styles.section}>\n        <Text style={styles.headerwidth}></Text>\n\n        <Text style={styles.headerwidthdate}>\n          Date:{invoicelistvalues.requestdeliverydate}\n        </Text>\n      </View> */}\n      <View>\n        {/*  style={styles.section} */}\n        <Table>\n          <TableHeader>\n            <TableCell weighting={0.9}>\n              <Text style={styles.descriptionText}>\n              Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n              <Image style={styles.seal} src={seal} />\n            </TableCell>\n          </TableHeader>\n        </Table>\n        {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n          <Text>Hello World!</Text>\n        </View> */}\n        \n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                Invoice No: {invoicenumber}/{financialYear}\n               \n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n              <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                {invoicedate}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        \n        <Text> {'\\n'}</Text>\n        <Table>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              {/* <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    \n                  </TableCell>\n                </TableHeader>\n              </Table> */}\n              <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                Billing To\n              </Text>\n              <Text style={[styles.billingaddress]}>\n                {customername}  {'\\n'}\n                {billingaddress} {'\\n'}\n                GST No: {customergstnumber}\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Delivery Challan No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {deliverychallannumber}/2020-21\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>{date}</Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Purchase Order No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {purchaseordernumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Purchase Order Date:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {podate}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n\n              \n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Vendor Code No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {vendorcode}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>Date:</Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {purchaseorderdate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Text> {'\\n'}</Text>\n        <Table styles={{'borderWidth':'0'}}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              {/* <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    \n                  </TableCell>\n                </TableHeader>\n              </Table> */}\n              <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                Delivery To\n              </Text>\n              <Text style={[styles.shippingaddress]}>\n             \n                {deliveryaddress} \n              </Text>\n            </TableCell>\n\n            <TableCell weighting={0.5} >\n              <Table style={styles.section} style={{borderWidth: 0}}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>Vehicle No:</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {vehiclenumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>HSN Code</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>{hsncode}</Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>SAC Code:</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {saccode}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Time of invoice:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}></Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Date of invoice:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {invoicedate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Description of Excisible Goods:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {goodsDescription}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Text> {'\\n'}</Text>\n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={firstDat}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ backgroundColor: 'tomato' }}\n          >\n            <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n              <Small>SL No</Small>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              {/* style={styles.headerfont} */}\n              <Description >Description</Description>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>UOM</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Qty</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Rate</Small>\n            </TableCell>\n            {/* <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>\n                After Dist Rate/Each{'\\n'}Rs\n              </Text>\n            </TableCell> */}\n\n            <TableCell weighting={0.2}>\n              <Small>Amount</Small>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n            <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n          */}\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        </View>\n        </Page>\n        <Page style={styles.pagepadding} wrap>\n         <View> \n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={secondDat}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ backgroundColor: 'tomato' }}\n          >\n            <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n              <Small>SL No</Small>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              {/* style={styles.headerfont} */}\n              <Description >Description</Description>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>UOM</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Qty</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Rate</Small>\n            </TableCell>\n            {/* <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>\n                After Dist Rate/Each{'\\n'}Rs\n              </Text>\n            </TableCell> */}\n\n            <TableCell weighting={0.2}>\n              <Small>Amount</Small>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n            <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n          */}\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>        \n        <Text> {'\\n'}</Text>\n        {/* Three divs for remarks, tax details and amount */}\n        </View>\n        \n        {/* Two */}\n        {/* <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              <Text style={styles.headerfont3}>\n                {'\\n'}\n                {'\\n'}\n\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n    \n            </TableCell>\n          </TableHeader>\n        </Table> */}\n        {/* Three */}\n        {/* <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              <Text style={styles.headerfont3}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n \n          </TableHeader>\n        </Table> */}\n        {/* ends here */}\n        <Text> {'\\n'}</Text>\n        </Page> \n        </>\n         )\n    }\n  })\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader style={styles.section}>\n              <TableCell weighting={1.087} style={styles.section}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13} style={styles.section}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n          \n                      GST No: {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                      GST No. {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              \n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            \n         \n\n\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n          {dispDyn}\n          <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={[styles.section,styles.nobordertable]}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  Remarks:\n                  {'\\n'}\n                  {'\\n'}\n                  {remarks}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n                <Text style={styles.headerfont3}>{amountinwords}</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.087}>\n                        <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                      </TableCell>\n                      <TableCell weighting={0.45}>\n                        <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                      <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n            \n              </TableCell>\n            </TableHeader>\n          </Table>            \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n          \n            </View>\n\n       \n\n          </View>\n\n          <View style={styles.main}>\n            \n              <View>\n              <Text style={styles.brandname} > Note:</Text>\n          \n              <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n              <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n              <Text style={styles.padding1}>3, Delivery Schedule: 8 to 10 days after confirmation.</Text>\n              <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n              <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n              <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n              <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n              <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n              <Text style={styles.padding1}>9, Any Legal matter will be under \"Bangalore Jurisdiction\".</Text>          \n              </View>\n            \n          </View>\n          </Page>\n\n     \n     \n    </Document >\n  );\n};\n\nexport default MyDocument;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport axios from \"axios\";\nimport \"./ViewInvoice\";\n\nclass ViewInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\",\n    text: null,\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    const invoicelistvalues = this.props.invoicelistvalues[quotationid];\n    console.log(\"invoice list values is\", invoicelistvalues);\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        invoicelistvalues,\n        status: true,\n        text: quotationid.toString()+customername.toString()+\".pdf\"\n      });\n    },2000);\n   \n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.goBack();\n          }, 300);\n        });\n  \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link,text } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewInvoicePdf);\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproformainvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport axios from 'axios';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewProformaInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.getProformaInvoice();\n    this.props.getChallan();\n  }\n\n\n  getProformaInvoice(){\n     axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n         console.log(res)\n         this.dataHandler(false);\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let invoicelist = res.data.invoicelist.invoicedata;\n           //invoicelist= invoicelist.sort((a, b) => b.invoicenumber.toLowerCase().localeCompare(a.invoicenumber.toLowerCase()));\n           invoicelist.sort(function(a, b){\n            return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n          });\n          const proformainvoicelistvalues = invoicelist.map(quotationvalue => {\n            return {\n              invoicenumber: quotationvalue.invoicenumber,\n              customername: quotationvalue.customername,\n              customernumber: quotationvalue.customernumber,\n              customercontactnumber: quotationvalue.customercontactnumber,\n      \n              view: (\n                <div className=\"actionbuttons\">\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(quotationvalue);\n                    }}\n                  >\n                    Print\n                  </Button>\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateinvoice(quotationvalue._id);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  </div>\n              )\n            };\n          });\n          this.setState({ ...this.state, proformainvoicelistvalues });\n         }\n        },error =>{\n          this.dataHandler(false)\n         \n        });\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = obj => {\n    sessionStorage.setItem(\"pformadata\",JSON.stringify(obj))\n    let path = `/view_proformainvoicepdf/123`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editproformainvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, proformainvoicelistvalues,success } = this.state;\n    console.log(proformainvoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={proformainvoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    proformainvoicelistvalues: state.proformainvoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getproformainvoice,\n    getChallan\n  }\n)(ViewProformaInvoice);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport moment from 'moment';\nimport React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\nimport './ViewInvoice.scss';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  \n  pagepadding: {\n    padding:5,\n    paddingLeft:10,\n    paddingRight:10,\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  padding1: {\n    paddingTop: 6\n  },\n  section: {\n    // position: 'relative',\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument2 = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  const financialYear = invoicelistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = parseFloat(invoicelistvalues.taxableamount)\n  taxableAmount = taxableAmount.toFixed(2)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  let workorderdate = invoicelistvalues.workorderdate != '' ? moment(invoicelistvalues.workorderdate).format('DD MMM, YYYY') : '';\n  let despathdate = invoicelistvalues.despathdate != '' ? moment(invoicelistvalues.despathdate).format('DD MMM, YYYY') : '-';\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername,\n    deliverychallandata,\n    workorderno,\n    removaltime,\n    transportationcharge,\n    transportationgst,\n    advanceamountreceived,\n    transportchargerequired\n  } = invoicelistvalues;\n  deliverychallannumber = deliverychallannumber && deliverychallannumber != '' ? deliverychallannumber.toString() + '/2020-21': ''\n  let purchaseordernumber = deliverychallannumber && deliverychallannumber != '' ? invoicelistvalues.purchaseordernumber : ''\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n\n\n  \n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n   freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n   freightcharges = freightcharges.toFixed(2)\n   subtotal = 0;\n   subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n   subtotal = parseFloat(subtotal)\n   subtotal = subtotal.toFixed(2)\n  // total = parseFloat(total)\n  // total = total.toFixed(2)\n\n\n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n  let total2 = 0\n  total2 = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total2 = parseFloat(total2)\n  total2 = total2.toFixed(2)\n  let transportationgstper=0;\n  transportationgst = transportationgst && transportationgst != '' ? parseFloat(transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n  transportationcharge = transportationcharge != '' && transportationcharge != null ? parseFloat(transportationcharge) : 0\n  transportationcharge = transportationcharge.toFixed(2)\n  let transportationchargegst = transportationcharge * transportationgst\n  transportationchargegst = transportationchargegst.toFixed(2)\n  transportationchargegst = transportchargerequired != '' && transportchargerequired == 'No' ? 0.00 : transportationchargegst\n  let totalaftertransportcharge = parseFloat(total2) + parseFloat(transportationchargegst) + parseFloat(transportationcharge)\n  totalaftertransportcharge = parseFloat(totalaftertransportcharge)\n  totalaftertransportcharge = totalaftertransportcharge.toFixed(2)\n\n\n  advanceamountreceived = advanceamountreceived != '' && advanceamountreceived != null ? parseFloat(advanceamountreceived) : 0\n  advanceamountreceived = advanceamountreceived.toFixed(2)\n  grandtotal = parseFloat(totalaftertransportcharge) - parseFloat(advanceamountreceived)\n  grandtotal = parseFloat(grandtotal)\n  grandtotal = grandtotal.toFixed(2)\n\n  \n  RsPaise(grandtotal)\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 2 && data.length < 4) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n            <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n            \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Proforma Invoice No: {invoicenumber}/{financialYear}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Dispatch Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {despathdate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n         \n                  {deliveryaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n        </Page>\n      )\n    }\n    else if(i == 0 && i <= 8 && data.length < 10) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n            <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n            \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Proforma Invoice No: {invoicenumber}/{financialYear}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Dispatch Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {despathdate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n         \n                  {deliveryaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={firstDat}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n        </Page>\n        <Page  size='A4' style={styles.pagepadding} wrap>\n          <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={secondDat}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          </View>\n        </Page>\n        </>\n      )\n    }\n  })\n\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n        {dispDyn}\n        <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n   \n                   <Text style={styles.headerfont3}>\n                  {amountinwords}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges </Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {subtotal}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n              \n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                     <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total2}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation Charge</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation @ {transportationgstper}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationchargegst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalaftertransportcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Advance Received</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {advanceamountreceived}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Balance Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n          {'\\n'}\n          {'\\n'}\n            {'\\n'}\n          </Text> \n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.0}>\n                <Text style={styles.headerfont3}>\n                 \n                  \n                  Our Bank details:-  {'\\n'} {'\\n'}\n                  Company Name : Pondhan Scaffolding Pvt Ltd  {'\\n'}\n                  Bank : Bank Of Baroda, Branch: Byatarayanapura, Bangalore-92  {'\\n'}\n                  A/c No: 73690500000003 Transportation {'\\n'}\n                  IFSC Code: BARBOVJBYAT\n                </Text>\n              </TableCell>\n             \n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* Three */}\n\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                  {'\\n'}{'\\n'}{'\\n'}{'\\n'}\n                </Text>\n\n                <View style={{fontSize: '10'}}>\n              <Text style={styles.brandname} > Note:</Text>\n          \n              <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n              <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n              <Text style={styles.padding1}>3, Delivery Schedule: 8 to 10 days after confirmation.</Text>\n              <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n              <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n              <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n              <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n              <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n              <Text style={styles.padding1}>9, Any Legal matter will be under \"Bangalore Jurisdiction\".</Text>          \n              </View>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                \n         \n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n              \n                      <View style={{ flexDirection: 'row', justifyContent: 'center', padding: 5  }}>\n                        <Image style={{ width: 53, height: 53 }} src={sign} />\n                        <Image style={{ width: 53, height: 53 }} src={seal} />\n                      </View>\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                   \n                  </TableCell>\n                </TableHeader>\n               \n              </Table>\n          \n            </View>\n\n       \n            \n          </View>\n          </Page>\n    </Document >\n  );\n};\n\nexport default MyDocument2;","import { PDFViewer } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport logo from \"../../../../Images/logo.png\";\nimport MyDocument2 from \"./Component2\";\nimport \"./ViewInvoice\";\n\nclass ViewProformaInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\",\n    text: null\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    let invoicelistvalues = JSON.parse(sessionStorage.getItem('pformadata'))\n    console.log(\"invoice list iss\", invoicelistvalues);\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.invoicelistvalues,\n        invoicelistvalues,\n        status: true,\n        text: invoicelistvalues._id.toString()+customername.toString()+\".pdf\"\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/proformainvoicelist\");\n          }, 300);\n        });\n       \n      }\n    } else {\n    }\n  }\n  \n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link, text } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument2\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewProformaInvoicePdf);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass AddItemListForm extends React.Component {\n  state = {\n    data: {\n      masteritemtype: '',\n      masteritemname: null,\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      costperunit: null,\n      masteritemrate: null,\n      masteritemunitwt: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null,\n      masteritemimagefile: null\n    },\n    materialoptionlistvalues: [],\n    masteritemlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    filename:''\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  onItemTypeChange = e => {\n    const selecteditemtype = e.target.value;\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    const masteritemlistvalues = this.state.masteritemlistvalues;\n    const selecteditemtypevalue = materialoptionlistvalues.filter(\n      (option, i) => {\n        if (option.id === selecteditemtype) {\n          return option;\n        }\n      }\n    );\n    const selectitemid = selecteditemtypevalue[0].id;\n    if (selectitemid) {\n      const selecteditemvalues = masteritemlistvalues.filter(item => {\n        if (item.masteritemtype._id == selectitemid) {\n          return item;\n        }\n      });\n      console.log(selecteditemtypevalue);\n      console.log(selecteditemvalues);\n      const count = selecteditemvalues.length;\n      if ((selectitemid === '5d263475917f5e27146d9ee4' || selectitemid === '5df361a6f57a6f7c679da493' || selectitemid === '5f0830f14d38d207245a37eb')) {\n        const itemname = count > 0 ? 1002 + count : 1001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d263480917f5e27146d9ee5' || selectitemid == '5df361e1f57a6f7c679da494'  || selectitemid === '5f0831104d38d207245a37ec')) {\n        const itemname = count > 0 ? 2002 + count : 2001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d270f30136e660798dce139' || selectitemid == '5df361eaf57a6f7c679da495'  || selectitemid === '5f0831204d38d207245a37ed')) {\n        const itemname = count > 0 ? 3002 + count : 3001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n\n      if ((selectitemid === '5d5e206ea24f1806712491b7' || selectitemid == '5df361f3f57a6f7c679da496'  || selectitemid === '5f08312c4d38d207245a37ee')) {\n        const itemname = count > 0 ? 4002 + count : 4001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n    }\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleValidSubmit = () => {\n    let { data } = this.state;\n    this.setState({ loading: true });\n    let formdata = new FormData();\n    console.log(data)\n    formdata.append('imagefile', data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    formdata.append('itemName', data.itemName);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('costperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n        })\n        .catch(err => {\n          this.props.error(false);\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(this.state.data)\n    console.log('invalid submit');\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is added successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is added successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>{' '}\n             \n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onItemTypeChange}\n                      required={true}\n                      Label\n                    >\n                      <option value=''>select</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='Number'\n                      id='masteritemname'\n                      value={data.masteritemname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Code'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=''>Please select value</option>\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit Cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      Label\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className=\"required-label\">*</span> */}\n        \n\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader small-font-size'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddItemListForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert, Modal,ModalHeader,ModalBody,ModalFooter } from \"reactstrap\";\nimport { getMasterItemList } from \"../../../../actions/Transaction\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { deleteMasterItemList } from \"../../../../actions/Transaction\";\n\nclass ViewMasterItemList extends React.Component {\n  state = {\n    loading: false,\n    showModal: false,\n    setDeleteId: '',\n    masteritemlist: [],\n    count: 0\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemList();\n    console.log(\"master item list\", this.props);\n    if(this.props.masteritemlistvalues) {\n      let masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n      const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n        return {\n          masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n          masteritemtypename: masteritemdata.masteritemtypename,\n          masteritemdescription: masteritemdata.masteritemdescription,\n          masteritemshortdescription:masteritemdata.masteritemshortdescription,\n          masteritemuom: masteritemdata.masteritemuom.uomname,\n          // masteritemrate: masteritemdata.masteritemrate,\n          masteritemcostperunit: masteritemdata.masteritemcostperunit,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(masteritemdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          ),\n          delete: (\n            <Button\n            color=\"danger\"\n            onClick={() => {\n              this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n            }}\n          >\n            Delete\n          </Button>\n          )        \n        };\n      });\n      const count = masteritemlistvalues.length;\n      this.setState({ ...this.state, masteritemlist, count });\n      this.dataHandler(false);    \n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, showModal: false });\n  };\n\n  componentWillReceiveProps(props) {\n    console.log(\"master item list in props\", this.props);\n    let masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n    const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n      return {\n        masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n        masteritemtypename: masteritemdata.masteritemtypename,\n        masteritemdescription: masteritemdata.masteritemdescription,\n        masteritemshortdescription:masteritemdata.masteritemshortdescription,\n        masteritemuom: masteritemdata.masteritemuom.uomname,\n        // masteritemrate: masteritemdata.masteritemrate,\n        masteritemcostperunit: masteritemdata.masteritemcostperunit,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(masteritemdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n          }}\n        >\n          Delete\n        </Button>\n        )        \n      };\n    });\n    const count = masteritemlistvalues.length;\n    this.setState({ ...this.state, masteritemlist, count });\n    this.dataHandler(false);\n  }\n\n  deleteItem = () => {\n    return this.props.deleteMasterItemList(this.state.setDeleteId)\n    .then((data) => {\n      this.props.getMasterItemList();\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  };\n\n  updateButton = id => {\n    let path = `/m_updateitemlist/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { loading, count, masteritemlist, showModal } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"masteritemtype\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Code\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"masteritemdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Short Description\",\n        field: \"masteritemshortdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"UOM\",\n        field: \"masteritemuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      // {\n      //   label: \"Item Rate\",\n      //   field: \"masteritemrate\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Unit Cost\",\n        field: \"masteritemcostperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        {showModal ? (\n                      <Modal\n                      isOpen={showModal}\n                      className={this.props.className}\n                    >\n                      <ModalHeader toggle={this.toggle}>Delete</ModalHeader>\n                      <ModalBody>Do you want to delete this product?</ModalBody>\n                      <ModalFooter>\n                        <Button color='primary' onClick={this.deleteItem}>\n                          Yes\n                        </Button>\n                        <Button color='primary' onClick={this.toggle}>\n                          No\n                        </Button>                        \n                      </ModalFooter>\n                    </Modal>\n        ) : null\n        }\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={masteritemlist}\n              className=\"masteritemlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getMasterItemList, deleteMasterItemList }\n  )(ViewMasterItemList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddmasterItemList extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemList(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemList();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemListForm submit={this.submit} error={this.errorHandler}/>\n        </div>\n        {loading ? (\n        <CustomLoader/>\n        ) : null}\n        {/* <div>\n          <ViewMasterItemList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nAddmasterItemList.propTypes = {\n  addMasterItemList: PropTypes.func.isRequired,\n  getMasterItemList: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addMasterItemList, getMasterItemList, getUomList, getMasterItemTypes }\n)(AddmasterItemList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\n\nclass MasterItemListValues extends React.Component {\n  render() {\n    return (\n      <div class=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <ViewMasterItemList />\n      </div>\n    );\n  }\n}\n\nexport default MasterItemListValues;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass UpdateItemListForm extends React.Component {\n  state = {\n    data: {\n      id: null,\n      masteritemtype: '',\n      masteritemname: '',\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      itemImage: '',\n      costperunit: null,\n      // masteritemrate: null,\n      masteritemunitwt: null,\n      masteritemimagefile: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null\n    },\n    materialoptionlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    imageChanged: false,\n    filename:''\n  };\n\n  componentDidMount() {\n    const id = this.props.id;\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const masteritemlistvalues = props.masteritemlistvalues[id];\n    console.log(masteritemlistvalues)\n    const data = {};\n    data.id = masteritemlistvalues.id;\n\n    data.masteritemname = masteritemlistvalues.masteritemtypename;\n    data.masteritemdescription = masteritemlistvalues.masteritemdescription;\n    data.masteritemshortdescription = masteritemlistvalues.masteritemshortdescription;\n    data.itemName = masteritemlistvalues.itemName;\n    \n    data.permeter = masteritemlistvalues.permeter;\n    data.masteritemunitwt = masteritemlistvalues.masteritemunitwt;\n\n    data.perfeet =  masteritemlistvalues.permeter / 3.2808.toFixed(2)\n    data.perinch =  masteritemlistvalues.permeter / 39.3701.toFixed(2)\n    data.itemImage = masteritemlistvalues.masteritemimage != undefined && \n                     masteritemlistvalues.masteritemimage != null &&\n                     masteritemlistvalues.masteritemimage != '' ? `${process.env.REACT_APP_IMAGE_BASE_URL}` + '/' + masteritemlistvalues.masteritemimage : ''\n    \n    console.log(data.itemImage)\n    data.masteritemtype = masteritemlistvalues.masteritemtype._id;\n    data.masteritemuom = masteritemlistvalues.masteritemuom._id;\n    data.costperunit = masteritemlistvalues.masteritemcostperunit != undefined && \n                       masteritemlistvalues.masteritemcostperunit != null ? \n                      masteritemlistvalues.masteritemcostperunit.toString() : 0\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      data\n    });\n  }\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      ...this.state,\n      imageChanged: true,\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleInvalidSubmit = () =>{\n    console.log(this.state.data)\n  }\n\n  handleValidSubmit = () => {\n\n    const { data, imageChanged } = this.state;\n    this.setState({ loading: true });\n    const formdata = new FormData();\n    if (imageChanged) {\n      formdata.append('imagefile', data.masteritemimagefile);\n    }\n    // formdata.append(\"imagefile\", data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('id', data.id);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('masteritemcostperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    const itemimg = this.state.data.itemImage != '' ?\n    (<img src={data.itemImage} style={{'maxWidth': '150px','maxHeight' : '130px'}}/>) : ''\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is Updated successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemtype || null}\n                    >\n                      <option value=''>select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='text'\n                      id='masteritemname'\n                      value={data.masteritemname || null}\n                      readOnly\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription || null}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n\n                {/* <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemrate\">Item Rate</Label>\n                    <AvField\n                      name=\"masteritemrate\"\n                      type=\"text\"\n                      id=\"masteritemrate\"\n                      value={data.masteritemrate}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        maxLength: {\n                          value: 150,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Item Rate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col> */}\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemuom || null}\n                    >\n                      <option value=''>Please select value</option>\n                      {/* <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option> */}\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      className='small-font-size'\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      \n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className='required-label'>*</span> */}\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n                  </AvGroup>\n                </Col>\n\n                 <Col sm={6}>\n                {itemimg}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport UpdateMasterItemListForm from \"../Form/ItemList/UpdateItemListForm\";\nimport { updatemasteritemlist } from \"../../../../actions/Transaction\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateMasterItemList extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updatemasteritemlist(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/mitemlistvalues\">Item List</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Update Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <UpdateMasterItemListForm id={id} submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    updatemasteritemlist,\n    addMasterItemList,\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList\n  }\n)(UpdateMasterItemList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass MasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      itemtype: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type data is Added successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Added successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item Type data already exist.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item Type</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"itemtype\"\n                      type=\"text\"\n                      id=\"masteritemtype\"\n                      value={data.option}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item Type\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid Item Type name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup className=\"mg-20\">\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader\"\n                    >\n                      Submit\n                      {/* {loading} */}\n                    </Button>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default MasterItemTypeForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport MasterItemTypeForm from \"../Form/MasterItemTypeForm\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass MasterItemType extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemType(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemTypes();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Type</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemTypeForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(MasterItemType);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nclass ItemMasterTypeList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    masteritemtypesvalues: []\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemTypes();\n  }\n  componentWillReceiveProps(props) {\n    const masteritemtypenamevaluelist = Object.values(\n      props.masteritemtypenamevalue\n    );\n    const masteritemtypesvalues = masteritemtypenamevaluelist.map(\n      (masteritemtypedata, i) => {\n        return {\n          masteritemtypename: masteritemtypedata.masteritemtypename,\n          view: (\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                this.updateButton(masteritemtypedata.id);\n              }}\n            >\n              view / Edit\n            </MDBBtn>\n          )\n        };\n      }\n    );\n    const count = masteritemtypesvalues.length;\n    this.setState({ ...this.state, masteritemtypesvalues, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/update_mitemtype/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { loading, count, masteritemtypesvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 && (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={masteritemtypesvalues}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(ItemMasterTypeList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateMasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      id: this.props.masteritemtypenamevalue.id,\n      masteritemtypename: this.props.masteritemtypenamevalue.masteritemtypename\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const dataRecord = props.masteritemtypenamevalue;\n    this.setState({ ...this.state.data, data: dataRecord });\n  }\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type is updated successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Updated successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>{\" \"}\n         \n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item data already exist.</Alert>\n        ) : null}\n        {!!errors.global ? (\n          <Alert color=\"danger\">\n            Something went wrong,Please try again later.\n          </Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Update Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"item\">Item</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"masteritemtypename\"\n                      type=\"text\"\n                      id=\"item\"\n                      value={data.masteritemtypename}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item name\"\n                        },\n                   \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid item name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalueobjectlist: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateMasterItemTypeForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMasterItemTypeForm from \"../Form/UpdateMasterItemTypeForm\";\nimport {\n  getMasterItemTypes,\n  updateMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateItemMasterType extends React.Component {\n  state = {\n    loading: false,\n    masteritemtypenamevalue: {}\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    const masteritemid = this.props.match.params.id;\n    const masteritemtypenamevalue = this.props.masteritemtypenamevalue[\n      masteritemid\n    ];\n    this.setState({ masteritemtypenamevalue });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updateMasterItemTypes(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { loading, masteritemtypenamevalue } = this.state;\n\n    return (\n      <div className=\"mg-t-20 container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/masteritemtypelist\">Item Type</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <UpdateMasterItemTypeForm\n            submit={this.submit}\n            masteritemtypenamevalue={masteritemtypenamevalue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMasterItemTypes, updateMasterItemTypes }\n)(UpdateItemMasterType);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../loader/loader\";\n\nclass EditTable extends React.Component {\n  state = {\n    data: {\n      poid: null,\n      ponumber: null,\n      poitemid: [],\n      itemid: [],\n      itemuom: [],\n      itemquantity: [],\n      receivedqty: [],\n      recevingqty: [],\n      itemlocation: [],\n      totalqty: [],\n      date: []\n    },\n    receiptnumber: null,\n    selectedItem: [],\n    locationlistvalue: [],\n    sucess: false,\n    errors: {},\n    uomlistvalues: [],\n    loading: false,\n    loadingvalue: false,\n    visible: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const ponumber = this.props.ponumber;\n    const poid = this.props.poid;\n    const selectedItemlistvalues = this.props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const poid = props.poid;\n    const ponumber = props.ponumber;\n    const selectedItemlistvalues = props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const itemlocation = [...this.state.data.itemlocation];\n    itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        itemlocation\n      }\n    });\n  };\n  quantityChange = (e, index) => {\n    const selected_qty = e.target.value;\n    const recevingqty = [...this.state.data.recevingqty];\n    const totalqty = [...this.state.data.totalqty];\n    const receivedqty = [...this.state.data.receivedqty];\n    recevingqty[index] = selected_qty;\n    totalqty[index] =\n      parseFloat(receivedqty[index]) + parseFloat(recevingqty[index]);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        recevingqty,\n        totalqty\n      }\n    });\n  };\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n  handleValidSubmit = () => {\n    this.dataHandler(true);\n    let data = {};\n    let AddedIteminfo = [];\n    const {\n      poid,\n      ponumber,\n      poitemid,\n      itemid,\n      itemuom,\n      itemquantity,\n      receivedqty,\n      recevingqty,\n      itemlocation,\n      totalqty,\n      date\n    } = this.state.data;\n    data.ponumber = ponumber;\n    data.poid = poid;\n    itemid.forEach(function(id, i) {\n      let obj = {};\n      obj.poitemid = poitemid[i];\n      obj.itemid = itemid[i];\n      obj.itemuom = itemuom[i];\n      obj.itemquantity = itemquantity[i];\n      obj.receivedqty = receivedqty[i];\n      obj.recevingqty = recevingqty[i];\n      obj.itemlocation = itemlocation[i];\n      obj.totalqty = totalqty[i];\n      AddedIteminfo.push(obj);\n    });\n    data.iteminfo = AddedIteminfo;\n    this.props\n      .itemlistsubmit(data)\n      .then(data => {\n        this.onShowAlert();\n        this.dataHandler(false);\n        this.setState({\n          success: true,\n          loading: false,\n          receiptnumber: data.receiptnumber\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ errors: err.response.data.error, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  dataHandler = value => {\n    this.setState({ loadingvalue: value });\n  };\n\n  render() {\n    // const { selectedItem } = this.props;\n    const {\n      loading,\n      data,\n      success,\n      errors,\n      selectedItem,\n      receiptnumber,\n      visible,\n      loadingvalue\n    } = this.state;\n    const tableBody = selectedItem.map((itemlist, i) => {\n      let nowDate = new Date();\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={itemlist.poitemid}>\n          <td>{i + 1}</td>\n          <td>{itemlist.itemname}</td>\n          <td>{itemlist.itemdescription}</td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`uom${i}`}\n              onChange={this.onChange}\n              required={true}\n              value={itemlist.itemuom || \" \"}\n            >\n              <option value=\"\">uom</option>\n              {this.createSelectUomItems()}\n            </AvField>\n          </td>\n          <td>{itemlist.quantity}</td>\n          <td>{itemlist.receivedqty}</td>\n          <td>\n            <AvField\n              name={`quantity${i}`}\n              type=\"number\"\n              id={`quantity${i}`}\n              value={itemlist.recevingqty.toString() || null}\n              min={0}\n              max={itemlist.recevingqty}\n              onChange={e => this.quantityChange(e, i)}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter Item Quantity\"\n                },\n                minLength: {\n                  value: 1,\n                  errorMessage: \"quantity value is required\"\n                },\n                pattern: {\n                  value: \"^[0-9.]*$\",\n                  errorMessage: \"Please enter valid quantity\"\n                }\n              }}\n            />\n          </td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`location${i}`}\n              onChange={e => this.locationChange(e, i)}\n              required={true}\n              value={itemlist.itemlocation}\n            >\n              {this.createSelectLocationItems()}\n            </AvField>\n          </td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loadingvalue ? <CustomLoader /> : null}\n        {success && (\n          // <Alert color=\"info\" isOpen={visible}>\n          //   Receipt {receiptnumber} created Successfully\n          // </Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Receipt {receiptnumber} created Successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        )}\n        {!!errors.global ? <Alert color=\"danger\">{errors.global}</Alert> : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>SI No</th>\n                    <th>Item Name</th>\n                    <th>Item Description</th>\n                    <th>UOM</th>\n                    <th>PO Qty</th>\n                    <th>Received Qty</th>\n                    <th>Receiving Qty</th>\n                    <th>location</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>{tableBody}</tbody>\n              </table>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    uomlistvalues: state.uomlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditTable);\n","import axios from \"axios\";\n\nexport default {\n  location: {\n    getLocationList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/location/getlocation`)\n        .then(res => {\n          return res.data.locationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/locationapi\";\nimport { Location_LIST } from \"../Services/types\";\nimport { locationListSchema } from \"../Schemas/schemas\";\n\nfunction locationListFetched(locationlist) {\n  return {\n    type: Location_LIST,\n    locationlist\n  };\n}\n\nexport const getLocationList = () => {\n  return dispatch => {\n    return api.location.getLocationList().then(locationlist => {\n      const locationlistvalue = locationlist.locationdata;\n      return dispatch(\n        locationListFetched(normalize(locationlistvalue, [locationListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert\n} from \"reactstrap\";\n\nclass ReceiptScreenForm extends React.Component {\n  state = {\n    data: {\n      ponumber: null\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onhandleChange = e => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        // eslint-disable-next-line prettier/prettier\n        this.setState({ errors: err.response.data.errors, loading: false, success: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Receipt Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    {!!errors.global ? (\n                      <Alert color=\"danger\" Label>Result Not Found</Alert>\n                    ) : null}\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\" Label>PO Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"ponumber\"\n                        type=\"number\"\n                        id=\"ponumber\"\n                        value={data.ponumber}\n                        onChange={this.onChange}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader small-font-size\"\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      Find\n                      {/* {loading} */}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptScreenForm;\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\n\nclass ReceiptTable extends React.Component {\n  state = {\n    receiptlistitems: []\n  };\n  componentDidMount() {\n    const receiptlistitems = this.props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const receiptlistitems = props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n  render() {\n    const { receiptlistitems } = this.state;\n    const receiptlisttable = receiptlistitems.map((receiptvalue, i) => {\n      let loc = receiptvalue.itemlocation ? receiptvalue.itemlocation.locationname : '-'\n      let nowDate = new Date(receiptvalue.date);\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={receiptvalue.id}>\n          <td>{i + 1}</td>\n          <td>{receiptvalue.itemid.masteritemname}</td>\n          <td>{receiptvalue.itemid.masteritemdescription}</td>\n          <td>{receiptvalue.itemuom.uomname}</td>\n          <td>{receiptvalue.itemquantity}</td>\n          <td>{receiptvalue.recevingqty}</td>\n          <td>{loc}</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>SI No</th>\n              <th>Item Name</th>\n              <th>Item Description</th>\n              <th>UOM</th>\n              <th>PO Qty</th>\n              <th>Received Qty</th>\n              <th>location</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>{receiptlisttable}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport async from \"async\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Button\n} from \"reactstrap\";\nimport EditTable from \"../../../../Components/EditTable/EditTable\";\nimport {\n  getPurchaseOrder,\n  searchPoNumber,\n  addorupdateitemsinlocation,\n  getReceiptlist\n} from \"../../../../actions/Transaction\";\nimport { getLocationList } from \"../../../../actions/Location\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport ReceiptScreenForm from \"./ReceiptScreenForm/ReceiptScreenForm\";\nimport ReceiptTable from \"./ReceiptScreenForm/ReceiptTable\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ReceiptScreen extends React.Component {\n  state = {\n    count: 0,\n    poid: null,\n    ponumber: null,\n    selectedItem: [],\n    success: false,\n    receiptlistitems: [],\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getLocationList();\n    this.props.getUomList();\n    const purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  componentWillReceiveProps(props) {\n    const purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  submit = data => {\n    this.dataHandler(true);\n    this.props.getReceiptlist(data).then(receiptlist => {\n      this.dataHandler(false);\n      const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n        return receiptvalue;\n      });\n      this.setState({\n        ...this.state,\n        receiptlistitems: receiptlistitems\n      });\n    });\n\n    return this.props\n      .searchPoNumber(data)\n      .then(podata => {\n        this.dataHandler(false);\n        const selectedItem = podata.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n        const ponumber = data.ponumber;\n        const poid = podata._id;\n        this.setState({\n          ...this.state,\n          selectedItem,\n          ponumber,\n          poid,\n          success: true\n        });\n        return podata;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ ...this.state, success: false });\n        throw err;\n      });\n  };\n\n  itemlistsubmit = data => {\n    const datavalue = {};\n    datavalue.ponumber = data.ponumber;\n    this.dataHandler(true);\n    this.props.getReceiptlist(datavalue).then(receiptlist => {\n      this.dataHandler(false);\n      if (receiptlist) {\n        const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n          return receiptvalue;\n        });\n        this.setState({\n          ...this.state,\n          receiptlistitems: receiptlistitems\n        });\n      }\n    });\n\n    return this.props\n      .addorupdateitemsinlocation(data)\n      .then(async data => {\n        this.dataHandler(false);\n        const receiptlist = await this.props.getReceiptlist(datavalue);\n        const searchporesult = await this.props.searchPoNumber(datavalue);\n        data = {\n          searchdata: data,\n          receiptlist: receiptlist,\n          searchporesult: searchporesult\n        };\n        return data;\n      })\n      .then(data => {\n        console.log(data);\n        const receiptlistitems = data.receiptlist.receiptlist.map(\n          receiptvalue => {\n            return receiptvalue;\n          }\n        );\n\n        const selectedItem = data.searchporesult.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n\n        this.setState({\n          ...this.state,\n          receiptlistitems,\n          selectedItem\n        });\n\n        return data.searchdata;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  savereport = value => {\n    sessionStorage.setItem(\"Receipt\",JSON.stringify(value))\n    let path = `/viewreceipt`;\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      poid,\n      ponumber,\n      count,\n      success,\n      selectedItem,\n      receiptlistitems,\n      loading\n    } = this.state;\n\n    const receiptlisttable = receiptlistitems.map(receiptvalue => {\n      return (\n        <div className=\"container mg-t-20\" key={receiptvalue.id}>\n          {loading ? <CustomLoader /> : null}\n          <Card>\n            <CardHeader>\n              <span> Receipt No : {receiptvalue.receiptnumber} </span>\n              <span> || </span>\n              <span> PO Number : {receiptvalue.ponumber} </span>\n              <div style={{ 'float':'right','marginTop': '-8px','marginBottom':'-5px'}}>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        this.savereport(receiptvalue);\n                      }}\n                      className=\"lgn-loader small-font-size\"\n                      \n                    >\n                      Save Report\n                     \n                    </Button>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <ReceiptTable itemlist={receiptvalue.itemlist} />\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Receipt Screen</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <ReceiptScreenForm submit={this.submit} />\n              {success && (\n                <EditTable\n                  selectedItem={selectedItem}\n                  ponumber={ponumber}\n                  poid={poid}\n                  itemlistsubmit={this.itemlistsubmit}\n                />\n              )}\n              {receiptlistitems.length > 0 && receiptlisttable}\n            </div>\n          ) : (\n              <Alert color=\"info\" Label>Please Add purchase order </Alert>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPurchaseOrder,\n    searchPoNumber,\n    addorupdateitemsinlocation,\n    getReceiptlist,\n    getLocationList,\n    getUomList\n  }\n)(ReceiptScreen);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 50,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height:50,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n\nconst today = new Date().getDate() + '/' +  (new Date().getMonth()+1) + '/' + new Date().getFullYear()\nconst data = orderlistvalues.addeditemlist;\n  const {\n    ponumber,\n    receiptnumber\n  } = orderlistvalues;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small>\n              </View>\n       \n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : 40 & 41 (corner) Road,no.5, Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>Off: +91 080 23339150, Mob: +91 9900069150</Bold>\n    \n        </Text>\n        <Text> {'\\n'}</Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black',textAlign:'center' }]}>\n          <Bold>Goods Received Note</Bold>\n        </Text>\n\n        \n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>GRN No. </Text>\n                <Text style={[styles.dcaddress, {\n                \n                  paddingLeft: 16,\n                }]}>{receiptnumber}/2019-20 \n                {'\\n'}\n                </Text>\n              </View>\n            \n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>PO No.</Text>\n                <Text style={[styles.dcaddress, {\n                    paddingLeft: 16,\n                    wordWrap: 'break-word'\n                }]}> PSPL/2019-20/{ponumber}\n                {'\\n'}\n                </Text>\n             </View>\n            </View>\n           \n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {today}\n                  {'\\n'}\n                </Text>\n              </View>\n            </View>\n            <Text>{'\\n'}</Text> \n          </View>\n          <Text>{'\\n'}</Text> \n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>UOM</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>PO Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Received Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>Received Date</Text>\n              </TableCell>\n              \n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Remaining Qty</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemuom}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.poqty}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receivedqty}</Text>} />\n            <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receiptDate}</Text>} />\n                \n                <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.availqty}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             Authorised : Yes {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspection Required : Yes {'\\n'}\n             \n            </Text>\n          </View>\n          <Text>{'\\n'}</Text> \n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             EDP Prepared by {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Store incharge {'\\n'}\n             \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspected By {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Manager {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Accounts Department {'\\n'}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\n//import './ViewOrder';\n\nclass ViewReceiptPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    let data = JSON.parse(sessionStorage.getItem(\"Receipt\"))\n    let receipts = JSON.parse(sessionStorage.getItem(\"SelectedItem\"))\n    receipts.map((item)=>{\n      for(var j=0;j<data.itemlist.length;j++){\n        if( data.itemlist[j].itemid.masteritemname == item.itemname){\n          data.itemlist[j]['TotalRecQty'] = item.recevingqty;break\n        }\n      }\n    })\n    let poreceiptvalues = {}\n    poreceiptvalues['ponumber'] = data['ponumber']\n    poreceiptvalues['receiptnumber'] = data['receiptnumber']\n    console.log(data.itemlist)\n    poreceiptvalues['addeditemlist'] = data.itemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemid.masteritemdescription ? itemlist.itemid.masteritemdescription : '',\n          itemcode: itemlist.itemid.masteritemname ? itemlist.itemid.masteritemname : '',\n          itemuom: itemlist.itemuom.uomname ? itemlist.itemuom.uomname : '',\n          poqty: itemlist.itemquantity ? itemlist.itemquantity.toString() : '',\n          receivedqty: itemlist.recevingqty ? itemlist.recevingqty.toString() : '',\n          receiptDate:  itemlist.date ? new Date(itemlist.date).getDate() + \"/\" + (new Date(itemlist.date).getMonth() + 1) + \"/\" + new Date(itemlist.date).getFullYear() : '',\n          availqty: itemlist.TotalRecQty ? itemlist.TotalRecQty : 0\n        };\n      }\n    );\n\n    setTimeout(() => {\n      this.setState({\n        orderlistvalues : poreceiptvalues,\n        status: true\n      },()=>{\n        console.log(this.state.orderlistvalues)\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 6000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/receipt_screen');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n           {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )} \n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps\n)(ViewReceiptPdf);\n","import axios from 'axios';\n\nexport default {\n  moveorder: {\n    addmoveorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/moveorder/addmoveorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.moveorderdata;\n        });\n    },\n    getmoveorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n        .then(res => {\n          return res.data.moveorderlist;\n        });\n    },\n    getItemsMoveOrder: (id) => {\n      return axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getItemsMoveOrder/`+id)\n      .then(res => {\n        return res.data.itemlist;\n      });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/moveorderapi';\nimport { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\nimport { moveorderListSchema } from '../Schemas/schemas';\n\nconst moveorderCreated = moverorderlist => {\n  return {\n    type: ADD_MOVEORDER,\n    moverorderlist\n  };\n};\n\nconst moveorderFetched = moverorderlist => {\n  return {\n    type: MOVEORDER_FETCHED,\n    moverorderlist\n  };\n};\n\nexport const addMoveOrder = data => {\n  return dispatch => {\n    return api.moveorder.addmoveorder(data).then(moverorderlistvalues => {\n      return dispatch(\n        moveorderCreated(normalize(moverorderlistvalues, moveorderListSchema))\n      );\n    });\n  };\n};\n\nexport const getMoveOrder = () => {\n  return dispatch => {\n    return api.moveorder.getmoveorder().then(moverorderlist => {\n      console.log(moverorderlist);\n      const moverorderlistvalues = moverorderlist.moveorderdata;\n      console.log(moverorderlistvalues);\n      return dispatch(\n        moveorderFetched(normalize(moverorderlistvalues, [moveorderListSchema]))\n      );\n    });\n  };\n};\n\nexport const getItemsMoveOrder = (id) => {\n    return api.moveorder.getItemsMoveOrder(id).then(itemorderlist => {\n      console.log(itemorderlist);\n      const itemorderlistvalues = itemorderlist.itemdata;\n      console.log(itemorderlistvalues);\n      return itemorderlistvalues;\n    });\n}\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass MoveOrderScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        availableQuantity: [null],\n        totalcost: [null],\n        remarks: [null]\n      },\n      moveorderno: '1',\n      fromaddress: '',\n      toaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const moveorderlistvalues = Object.keys(this.props.moveorderlistvalues);\n    const moveorderno =\n      moveorderlistvalues.length > 0 ? 1 + moveorderlistvalues.length : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        moveorderno\n      }\n    },()=>{\n      if(moveorderlistvalues.length == 0)\n        this.getMovedata()\n    });\n  }\n\n  getMovedata(){\n    if(Object.keys(this.props.moveorderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n      .then(res => {\n         //if (res.data.moveorderlist.moveorderdata.length > 0) {\n           \n          let moveorderno =\n          res.data.moveorderlist.moveorderdata.length > 0 ? 1 + res.data.moveorderlist.moveorderdata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              moveorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    console.log(this.state.masteritemlistvalues)\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      let itemdesc = ''\n      this.state.masteritemlistvalues.map((item) =>{\n        if(item.masteritemtypename == selected_item.itemname)\n          itemdesc = item.masteritemshortdescription != '' ? item.masteritemshortdescription : item.masteritemdescription\n       })\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc;\n  \n      // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n      // : selected_item.masteritemshortdescription\n      // selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      // selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      // selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n      // selectedItemlist.itemlocation[index] = null;\n      // selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      selectedItemlist.quantity[index] = selected_item.itemquantity;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity;\n      // selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(\n      item => item.id !== e.target.value\n    );\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n      const itemlist = data.itemlist.map(item => {\n        return {\n          id: item.id,\n          locationname: item.locationname,\n          itemid:item.itemid,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'itemname')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          availableQuantity: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n    \n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    availableQuantity.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          availableQuantity,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n\n   \n \n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    if(Number(e.target.value) > selectedItemlist.availableQuantity[index]){\n      window.alert('Move quantity cannot be greater than available quantity')\n      console.log(this.state.data.selectedItemlist.quantity)\n      selectedItemlist.quantity[index] = '0'\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n    else{\n      selectedItemlist.quantity[index] = e.target.value;\n      const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n      this.totalValue();\n    }\n\n\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>Order moved successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Move Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='moveorderno'>Move Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='moveorderno'\n                      type='text'\n                      id='moveorderno'\n                      value={data.moveorderno || null}\n                      onChange={this.handleChange}\n    \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Move Order No'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>From location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To location </Label>\n                    <AvField\n                      type='select'\n                      name='toaddress'\n                      onChange={this.onhandlerToChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createToLocationList()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Name</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Available quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                disabled='true'\n                                value={\n                                  data.selectedItemlist.availableQuantity[\n                                    index\n                                  ]\n                                }\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`movequantity${index}`}>\n                                Move quantity\n                              </Label>\n                              <AvField\n                                name={`movequantity${index}`}\n                                type='number'\n                                id={`movequantity${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.quantity[\n                                    index\n                                  ]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { totalitemvaluesearch }\n)(MoveOrderScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport MoveOrderScreenForm from './MoveOrderScreenForm/MoveOrderScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\n\nclass MoveOrderScreen extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addMoveOrder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Move</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <MoveOrderScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList\n  }\n)(MoveOrderScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getMoveOrder } from '../../../../actions/moveorder';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewProduction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    moveorderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getMoveOrder();\n    // console.log(this.props);\n    // if (this.props.moveorderlistvalues) {\n    //   const quotationlist = Object.values(this.props.moveorderlistvalues);\n    //   const moveorderlistvalues = quotationlist.map(quotationvalue => {\n    //     return {\n    //       moveorderno: quotationvalue.moveorderno,\n    //       fromaddress: quotationvalue.fromaddress,\n    //       toaddress: quotationvalue.toaddress\n    //     };\n    //   });\n    //   this.setState({ ...this.state, moveorderlistvalues });\n    //   this.dataHandler(false);\n    // }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.moveorderlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\n    });\n    const moveorderlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        moveorderno: quotationvalue.moveorderno,\n        fromaddress: quotationvalue.fromaddress,\n        toaddress: quotationvalue.toaddress,\n        view: (\n          <Button\n          color=\"primary\"\n          onClick={() => {\n            let path = `/view_ItemsOrder/${quotationvalue._id}`;\n            this.props.history.push(path);\n          }}\n        >\n          View Items\n        </Button>\n        )\n      };\n    });\n    this.setState({ ...this.state, moveorderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_invoicepdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, moveorderlistvalues } = this.state;\n    console.log(moveorderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Move Order No',\n        field: 'moveorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'From Address',\n        field: 'fromaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'To Address',\n        field: 'toaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'view',\n        width: 100,\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={moveorderlistvalues}\n            columnvalue={columnvalue}\n            className=\"moveorderlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMoveOrder }\n)(ViewProduction);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItemsMoveOrder } from '../../../../actions/moveorder';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewMoveOrderProduction extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    itemorderlistvalues: []\r\n  };\r\n  async componentDidMount() {\r\n    const moveorderid = this.props.match.params.id;\r\n    let receivedData = await getItemsMoveOrder(moveorderid);\r\n    console.log(\"itemorder list values\", receivedData);\r\n    let quotationlist = Object.values(receivedData);\r\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\r\n    quotationlist.sort(function(a, b){\r\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\r\n    });\r\n    const itemorderlistvalues = quotationlist.map(quotationvalue => {\r\n      return {\r\n        itemname: quotationvalue.itemname,\r\n        itemdescription: quotationvalue.itemdescription,\r\n        quantity: quotationvalue.quantity\r\n      };\r\n    });\r\n    this.setState({ ...this.state, itemorderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n  async componentWillReceiveProps(props) {\r\n    const moveorderid = this.props.match.params.id;\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_invoicepdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, itemorderlistvalues } = this.state;\r\n    console.log(itemorderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Item Name',\r\n        field: 'itemname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Item Description',\r\n        field: 'itemdescription',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'quantity',\r\n        field: 'quantity',\r\n        sort: 'asc',\r\n        width: 40\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/move-order'>Move Order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/moveorderlist'>Move Order List</Link>\r\n          </BreadcrumbItem>          \r\n          <BreadcrumbItem active>Items</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable\r\n            rowvalues={itemorderlistvalues}\r\n            columnvalue={columnvalue}\r\n            className=\"moveorderlist\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    moveorderlistvalues: state.moveorderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getItemsMoveOrder }\r\n)(ViewMoveOrderProduction);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch, getMasterItemList } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass AddOnHandScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemlocation: [null],\n        quantity: [null],\n        availableQuantity: [null],\n      },\n      fromaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false,\n    masterItemList: []\n  };\n\n  componentDidMount() {\n    // this.props.getLocationList();\n    this.props.getMasterItemList().then((result) => {\n      console.log('result..............................');\n      console.log(result);\n\n      let items = [];\n      //MasterItemTypeList.entities.masteritemtypelistvalues\n      for (let key in result.MasterItemTypeList.result) {\n        const data = result.MasterItemTypeList.entities.masteritemtypelistvalues[result.MasterItemTypeList.result[key]];\n        console.log(data);\n        items.push({\n          id: data['id'],\n          itemid: data['id'],\n          itemname: data['masteritemtypename'],\n          itemdescription: data['masteritemshortdescription'] != '' ? data['masteritemshortdescription'] : data['masteritemdescription'],\n          quantity: 0,\n          availableQuantity: 0\n        });\n      }\n\n      console.log('UUUUUUUUUUUUUUUUUUUUUUUU');\n      console.log(items);\n      this.setState({\n        masterItemList: items\n      });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data\n      }\n    }, () => {\n\n    });\n  }\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      console.log(this.state.masterItemList)\n      let itemdesc = ''\n      this.state.masterItemList.map((item) =>{\n        if(item.itemname == selected_item.itemname)\n          itemdesc = item.itemdescription\n      })\n\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc != '' ? itemdesc : selected_item.itemdescription;\n      selectedItemlist.quantity[index] = selected_item.itemquantity || 0;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity || 0;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(item => item.id !== e.target.value);\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    let location = e.target.value;\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n\n\n      const isAdded = [];\n      const itemlist = [];\n      data.itemlist.forEach(item => {\n        if (item['itemname']) {\n          itemlist.push({\n            id: item.id,\n            locationname: item.locationname,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n\n      itemlist.forEach(data => {\n        if (data['itemname']) {\n          isAdded.push(data['itemname'])\n        }\n      });\n\n      console.log('Before Adding Remaining');\n      console.log(itemlist);\n\n      const allItems = this.state.masterItemList;\n      allItems.forEach((item, index) => {\n        if (!(isAdded.indexOf(item.itemname) > -1)) {\n          itemlist.push({\n            id: item.id,\n            locationname: location,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n      console.log('After Adding Remaining');\n      console.log(itemlist);\n\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    console.log('###################################');\n    console.log(masteritemlistvalues);\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues, 'itemname');\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues = masteritemlistvalues.sort((a,b)=>{return a['itemname'].toLowerCase().localeCompare(b['itemname'].toLowerCase())})\n    \n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          availableQuantity: [...this.state.data.selectedItemlist.quantity, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemlocation.splice(index, 1);\n    quantity.splice(index, 1);\n    availableQuantity.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemlocation,\n          availableQuantity,\n          quantity\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n\n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    selectedItemlist.quantity[index] = e.target.value;\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let iteminfo = [];\n    const { supplierdetail, selectedItemlist, fromaddress } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    // const itemlocation = selectedItemlist.itemlocation;\n    const quantity = selectedItemlist.quantity;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemid = id[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemlocation = fromaddress;//itemlocation[i] || null;\n      obj.recevingqty = quantity[i] || null;\n      iteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['iteminfo'] = iteminfo;\n    this.setState({ loading: true });\n    // console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            selectedItemlist: {\n              id: [null],\n              itemname: [null],\n              itemdescription: [null],\n              itemlocation: [null],\n              quantity: [null],\n              availableQuantity: [null],\n            },\n            fromaddress: '',\n            values: ['']\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>On Hand Updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>On Hand</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>Select location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={data.selectedItemlist.availableQuantity[index]}\n                                disabled={true}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`newquantity${index}`}>\n                                New Quantity\n                              </Label>\n                              <AvField\n                                name={`newquantity${index}`}\n                                type='number'\n                                id={`newquantity${index}`}\n                                value={data.selectedItemlist.quantity[index]}\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    totalitemvaluesearch,\n    // getLocationList,\n    getMasterItemList\n  }\n)(AddOnHandScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport AddOnHandScreenForm from './AddOnHandScreenForm/AddOnHandScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\nimport { additemsinlocation } from '../../../actions/Transaction';\n\nclass AddOnHand extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .additemsinlocation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add On Hand</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddOnHandScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList,\n    additemsinlocation\n  }\n)(AddOnHand);","import axios from 'axios';\n\nexport default {\n  production: {\n    addproduction: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/production/addproduction`, {\n          data\n        })\n        .then(res => {\n          return res.data.productiondata;\n        });\n    },\n    getproduction: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n        .then(res => {\n          return res.data.productionlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/productionapi';\nimport { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\nimport { productionListSchema } from '../Schemas/schemas';\n\nconst productionCreated = productionlist => {\n  return {\n    type: ADD_PRODUCTION,\n    productionlist\n  };\n};\n\nconst productionFetched = productionlist => {\n  return {\n    type: PRODUCTION_FETCHED,\n    productionlist\n  };\n};\n\nexport const addproduction = data => {\n  return dispatch => {\n    return api.production.addproduction(data).then(productionlistvalues => {\n      return dispatch(\n        productionCreated(normalize(productionlistvalues, productionListSchema))\n      );\n    });\n  };\n};\n\nexport const getproduction = () => {\n  return dispatch => {\n    return api.production.getproduction().then(productionlist => {\n      const productionlistvalues = productionlist.productiondata;\n      console.log(productionlistvalues);\n      return dispatch(\n        productionFetched(\n          normalize(productionlistvalues, [productionListSchema])\n        )\n      );\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass ProductionForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        totalcost: [null],\n        remarks: [null],\n        totalweight: [null],\n        readystock: [null],\n        firstround: [null],\n        secondround: [null],\n        thirdround: [null]\n      },\n      products: [],\n      productionorderno: '',\n      customerid: '',\n      item: '',\n      date: new Date(),\n      quantity: '',\n      subAssembly: [],\n      values: ['']\n    },\n    errors: {},\n    itemname:'',\n    materialoptionlistvalues: [],\n    productMaterial: [],\n    customerlistvalues: [],\n    productlistvalues: [],\n    supplierdetaillistvalue: [],\n    itemlistSelectedOption: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    customerlistSelect: [],\n    loading: false,\n    success: false\n  };\n  dummyProductMapping = {\n    props: [\n      { assembly: '50 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '40 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '6 mm MS Plate', unit: 'Kgs' },\n      { assembly: 'Prop nut', unit: 'Kgs' }\n    ]\n  };\n\n \n\n  componentWillReceiveProps(props) {\n   \n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    console.log(productlistvalues)\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const productionlistvalues = Object.keys(this.props.productionlistvalues);\n    const productionorderno =\n      productionlistvalues.length > 0\n        ? 1 + productionlistvalues.length\n        : 1;\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      customerlistvalues,\n      productlistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      customerlistSelect: arraySet,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        productionorderno\n      }\n    },()=>{\n      if(productionlistvalues.length == 0)\n        this.getProddata()\n    });\n  }\n\n  getProddata(){\n    if(Object.keys(this.props.productionlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n      .then(res => {\n         //if (res.data.productionlist.productiondata.length > 0) {\n           \n          let productionorderno =\n          res.data.productionlist.productiondata.length > 0 ? 1 + res.data.productionlist.productiondata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              productionorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChangeCust = (e,index) => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, customerid:  e.value}\n    });\n  }\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let products2 = this.state.data.products;\n    console.log(products2[index].quantity)\n\n    let item = e.label;\n    console.log(item)\n    const selected_id = e.value ? e.value : e;\n    console.log(selected_id)\n    let productMaterial2 = [],found=0;\n    let obj = {},arr = []\n    productMaterial2.push(this.props.masteritemlistvalues[selected_id])\n    let itemname = productMaterial2[0].masteritemtypename\n    console.log(productMaterial2)\n \n    for(var i=0;i<this.state.productlistvalues.length;i++){\n      if(this.state.productlistvalues[i].productname.toString().trim().toLowerCase() == productMaterial2[0].masteritemdescription.toString().trim().toLowerCase()){\n        found = 1;\n        break;\n      }\n    }\n    if(found == 1){\n      if(this.state.productlistvalues[i].productMaterial != null && this.state.productlistvalues[i].productMaterial.length > 0){\n        this.state.productlistvalues[i].productMaterial.map((item,index) =>{\n          console.log(item)\n          obj = {}\n          obj['masteritemdescription'] = item.productqty\n          obj['masteritemuom'] = new Object()\n          obj['permeter'] = this.state.productlistvalues[i].permeter\n          obj['perfeet'] = this.state.productlistvalues[i].perfeet\n          obj['perinch'] = this.state.productlistvalues[i].perinch\n          obj['quantityPerMeter'] = this.state.productlistvalues[i].productsqtyinmeter[index] ? this.state.productlistvalues[i].productsqtyinmeter[index] : 0\n          obj['quantityPerKg'] = this.state.productlistvalues[i].productsweight[index] ? this.state.productlistvalues[i].productsweight[index] : 0\n          obj['masteritemuom']['uomname'] =  this.state.productlistvalues[i].productsuom[index]\n          arr.push(obj)\n        })\n      }\n      productMaterial2 = arr\n    }\n    console.log(arr)\n    let subAssembly = [];\n    console.log(productMaterial2)\n    let calculationArray = [];\n    productMaterial2.map(product => {\n\n      let calculationdata = { permeter: null, perfeet: null, perinch: null };\n      product.quantityPerMeter = parseInt(product.quantityPerMeter)\n      product.quantityPerKg = parseInt(product.quantityPerKg)\n      product.quantityPerMeter = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) : product.quantityPerMeter\n      product.quantityPerKg = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) * product.quantityPerKg : product.quantityPerMeter * product.quantityPerKg\n\n      subAssembly.push({\n        name: product.masteritemdescription,\n        unit: product.masteritemuom.uomname,\n        thickness: 0,\n        quantity: 0,\n        quantityPerMeter:product.quantityPerMeter,\n        quantityPerKg: product.quantityPerKg,\n        total: 0\n      });\n      if (product.permeter && product.permeter !== null) {\n        calculationdata.permeter = Number(product.permeter);\n      }\n\n      if (product.perfeet && product.perfeet !== null) {\n        calculationdata.perfeet = Number(product.perfeet);\n      }\n\n      if (product.perinch && product.perinch !== null) {\n        calculationdata.perinch = Number(product.perinch);\n      }\n      calculationArray.push(calculationdata);\n    });\n    console.log(this.state.data.products)\n    let products = this.state.data.products;\n    products[index].subAssembly = subAssembly;\n    products[index].item = item;\n    products[index].calculationArray = calculationArray;\n    console.log(\"item selected is \",item);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, item, subAssembly, products },\n      itemname: 'Item code: ' + '\\n' + itemname,\n      productMaterial2\n    });\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    let productlistvalues = this.state.masteritemlistvalues;\n    console.log(productlistvalues)\n    productlistvalues = productlistvalues.filter((item) =>{\n      return item.masteritemtype.masteritemtypename == 'FinishedGoods'\n    })\n    productlistvalues.map((option, i) => {\n     option['masteritemdescription2'] = option.masteritemshortdescription != '' ?  option.masteritemshortdescription : option.masteritemdescription\n      \n     items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            products: [],\n            subAssembly: []\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggelreload = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  onthicknessChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['thickness'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onQuantityChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantity'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // METER\n  onQuantityChangeMeter = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerMeter'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) / Number(calc.permeter);\n      subAssembly[index]['quantityPerKg'] = kg;\n    }\n\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // KG\n  onQuantityChangeKg = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerKg'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) * Number(calc.permeter);\n      subAssembly[index]['quantityPerMeter'] = kg;\n    }\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onTotalChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['total'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  addItemComp = () => {\n    let products = this.state.data.products;\n    let items = { item: '', quantity: 0, subAssembly: [] };\n    products.push(items);\n    this.setState({\n      ...this.state.data,\n      products\n    });\n  };\n  changeQuantity = (e, index) => {\n    let products = this.state.data.products;\n    products[index].quantity = e.target.value;\n    console.log(products[index])\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, productMaterial,itemname } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Production</ModalHeader>\n              <ModalBody>Production order is generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggelreload}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>\n              Production\n              <Button\n                color='primary'\n                disabled={loading}\n                className='lgn-loader'\n                style={{ float: 'right' }}\n              >\n                Submit\n                {/* {loading} */}\n              </Button>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='productionorderno'>Production No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='productionorderno'\n                      type='text'\n                      id='productionorderno'\n                      value={data.productionorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter production order no'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customerid'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      type='select'\n                      name={`customerid`}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    <Select name={`customerid`} classNamePrefix=\"select\" onChange={this.handleChangeCust.bind(this)} styles={customStyles} defaultValue={this.state.customerlistSelect[0]} options={this.state.customerlistSelect} />\n                  </AvGroup>\n                </Col>\n              </Row>\n              {data.products &&\n                data.products.map((item, maninindex) => {\n                  let optionsel = \"\";\n                  let SelVal = {};\n                  if(item.id != undefined) {\n                    if(item.itemshortdescription) {\n                      optionsel = item.itemshortdescription;\n                    }\n                    else {\n                      optionsel = item.itemdescription;\n                    }\n                    SelVal = {\n                      value: item.id._id, label: optionsel\n                    }\n                  }\n                  const itemnameinfo = item.id != undefined ? (\n                    // <AvField\n                    //   type=\"select\"\n                    //   value={values.id._id}\n                    //   name={`selectitem${index}`}\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${maninindex}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, maninindex)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                    ) :\n                    (\n                      // <AvField\n                      //   type=\"select\"\n                      //   name={`selectitem${index}`}\n                      //   value={\n                      //     data.selectedItemlist.id[index]\n                      //   }\n                      //   onChange={e => this.selectitemchange(e, index)}\n                      //   required={true}\n                      // >\n                      //   <option value=\"\">select Item</option>\n                      //   {this.createSelectItems()}\n                      // </AvField>\n                      <Select name={`selectitem${maninindex}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, maninindex)} styles={customStyles} required defaultValue={data.selectedItemlist.id[maninindex]} options={this.state.itemlistSelectedOption} />\n                    )\n                  return (\n                    <div>\n                      <Row>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='item'>Item</Label>\n                          {/* <AvField\n                            type='select'\n                            name='item'\n                          \n                            onChange={e => this.selectitemchange(e, maninindex)}\n                            //required={true}\n                          >\n                            <option value=''>select Item</option>\n                            {this.createSelectItems()}\n                          </AvField> */}\n                          {itemnameinfo}\n                          <div style={{'color':'#707070','fontSize':'12px','fontWeight':'bold'}}>{itemname}</div>\n                        </Col>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='quantity'>Quantity</Label>\n                          <AvField\n                            name='quantity'\n                            type='number'\n                            id='quantity'\n                            value={data.quantity || ' ' || null}\n                            onChange={e => this.changeQuantity(e, maninindex)}\n                          />\n                        </Col>\n                      </Row>\n                      {/* Get table based on selected value */}\n                      {data.products[maninindex].subAssembly.length > 0 && (\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>Sub Assembly</th>\n                              <th>UOM</th>\n                              <th>Thickness</th>\n                              <th>Quantity (in meters)</th>\n                              <th>Quantity (in Kgs)</th>\n                              {/* <th>Total</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data.products[maninindex].subAssembly.map(\n                              (product, index) => {\n                                return (\n                                  <tr>\n                                    <td>{product.name}</td>\n                                    <td>{product.unit}</td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`thickness${index}`}\n                                          type='number'\n                                          id={`thickness${index}`}\n                                          placeholder='thickness'\n                                          onChange={e =>\n                                            this.onthicknessChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In meterts'\n                                          onChange={e =>\n                                            this.onQuantityChangeMeter(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerMeter}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In Kgs'\n                                          onChange={e =>\n                                            this.onQuantityChangeKg(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerKg}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    {/* <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`total${index}`}\n                                          type='number'\n                                          id={`total${index}`}\n                                          placeholder='total'\n                                          onChange={e =>\n                                            this.onTotalChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td> */}\n                                  </tr>\n                                );\n                              }\n                            )}\n                          </tbody>\n                        </Table>\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                    onClick={e => this.addItemComp()}\n                  >\n                    Add item\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    productionlistvalues: state.productionlistvalues,\n    customerlistvalues: state.customerlistvalues,\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductionForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addproduction } from '../../../../actions/Production';\nimport { getproduction } from '../../../../actions/Production';\nimport { getproducts } from '../../../../actions/Product';\nimport ProductionForm from './ProductionForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddProduction extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getproduction();\n    this.props.getproducts();\n  }\n  componentWillReceiveProps() {\n    \n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addproduction(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Production</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProductionForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getproduction,\n    getCustomerList,\n    addproduction,\n    getproducts\n  }\n)(AddProduction);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Modal,\n  Label,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproduction } from '../../../../actions/Production';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nclass ViewProudction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success: false,\n    quantity : '',\n    productiondate:'',\n    description:'',\n    id:'',\n    qtyAvaillength:0,\n    isViewList:false,\n    productionTodayList: [],\n    productionlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getproduction();\n    console.log(this.props);\n\n    if (this.props.productionlistvalues) {\n      let quotationlist = Object.values(this.props.productionlistvalues);\n      //quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n      quotationlist.sort(function(a, b){\n        return parseInt(b.productionorderno) - parseInt(a.productionorderno);\n      });\n      let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            obj['items'].push(subitem.item)\n          })\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n        \n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n          \n        };\n      });\n      this.setState({ ...this.state, productionlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.productionlistvalues);\n    quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n    let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            if(parseInt(subitem.quantity) > 0)\n              obj['items'].push(subitem.item)\n\n          })\n        }\n        if(obj['items'].length > 0){\n          obj['items'] = obj['items'].join(\", \")\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n\n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n        };\n      });\n    this.setState({ ...this.state, productionlistvalues });\n    this.dataHandler(false);\n  }\n\n  viewTransaction(arr){\n    this.setState({\n      isViewList:true,\n      productionTodayList : arr\n    })\n  }\n  addTransaction(data,totalqty){\n    console.log(data)\n    let usedqty = 0\n    if(data.transactionHistrory && data.transactionHistrory.length > 0){\n      data.transactionHistrory.map((item) =>{\n        usedqty = usedqty + parseInt(item.qty)\n      })\n    }\n    this.setState({success:true,id:data._id,quantity:'',productiondate:'',description:'',qtyAvaillength: totalqty - usedqty},() =>{\n      console.log(this.state.qtyAvaillength)\n    })\n  }\n\n  updateTransaction = () => {\n    // updateproductionqty\n    if(this.state.quantity == '' || this.state.productiondate == ''){\n      window.alert('All fields are manditory.')\n      return\n    }\n    if(parseInt(this.state.quantity) > this.state.qtyAvaillength){\n      window.alert('Quantity should be less than or equal to : ' + this.state.qtyAvaillength)\n      return\n    }\n    console.log(this.state.id)\n    let data = {}\n    data['_id'] = this.state.id\n    data['transactionHistrory'] = [{'qty' : this.state.quantity,\n              'productiondate' : this.state.productiondate,\n              'description' : this.state.description}]\n\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/production/updateproductionqty`, {\n      data\n      })\n      .then(res => {\n          this.toggle();\n          this.props.getproduction();\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggle2 = () => {\n    this.setState({ ...this.state, isViewList: false });\n  };\n  \n  onhandlerChange = e => { \n    this.setState({\n      quantity : e.target.value\n    });\n  };\n\n  onhandlerChange2 = e => { \n    this.setState({\n      description : e.target.value\n    });\n  };\n\n  \n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      productiondate : date\n    });\n  };\n\n  render() {\n    const { loading, count, isViewList,productionlistvalues,success,quantity,productiondate,description,qtyAvaillength,productionTodayList } = this.state;\n    console.log(\"productionlistvalues is \",productionlistvalues);\n    let headerBlock = '',contentBlock = ''\n    if(isViewList){\n      headerBlock = \n      (\n      <div className=\"row meetingspace\">\n        <div className=\"col split1\">Quantity</div>\n        <div className=\"col split1\">Date</div>\n        <div className=\"col split1\">Remarks</div>\n      </div>\n    )\n\n\n    contentBlock = productionTodayList.map((value,index) => {\n    value['description'] = value.description ? value.description : '-'\n    value.productiondate = \n    (new Date(value.productiondate).getDate() < 10 ? ('0' + new Date(value.productiondate).getDate()) : new Date(value.productiondate).getDate()) + '/' +\n    (new Date(value.productiondate).getMonth()+1 < 10 ? ('0' + (new Date(value.productiondate).getMonth()+1) ) : (new Date(value.productiondate).getMonth()+1)) + '/' + new Date(value.productiondate).getFullYear()\n    return (\n      <div key={index} className=\"row meetingspace\">\n        <div className=\"col split2\">{value.qty}</div>\n        <div className=\"col split2\" >{value.productiondate}</div>\n        <div className=\"col split2\" >{value.description}</div>\n\n      </div>\n    )\n  });\n\n  }\n\n\n\n\n    const columnvalue = [\n      {\n        label: 'Production no',\n        field: 'productionorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'item',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Quantity',\n        field: 'quantity',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: \"View Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      },\n      {\n        label: \"Add Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n\n         {!!isViewList ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={isViewList}\n              toggle={this.toggle2}\n              className={this.props.className}\n            >\n              <ModalHeader toggle2={this.toggle2}>View transaction <br/>\n              \n              </ModalHeader>\n              <ModalBody style={{'margin': '10px'}}>\n                {headerBlock}\n                {contentBlock}\n               \n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle2}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Add transaction <br/>\n              <span style={{ 'fontSize': '14px','fontWeight': 'bold'}}>Note: Available quantity is {qtyAvaillength}</span>\n              </ModalHeader>\n              <ModalBody>\n                \n                 <Label className='small-font-size' for=\"Quantity\">Quantity(*)</Label>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Quantity\" name=\"Quantity\" value={quantity} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n                 \n                  <Label className='small-font-size' for=\"productiondate\">Production Date(*)</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={productiondate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"productiondate\"\n                  />\n\n                 <Label className='small-font-size' for=\"description\">Remarks</Label>\n                  <textarea className=\"form-control\" placeholder=\"Remarks\" name=\"description\" value={description} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange2} ></textarea>\n                 \n\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.updateTransaction}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={productionlistvalues}\n            columnvalue={columnvalue}\n            className=\"productionlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productionlistvalues: state.productionlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproduction }\n)(ViewProudction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./purchaseorder.css\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass PurchaseOrderForm extends React.Component {\n  \n  state = {\n    data: {\n      isEditdone:false,\n      supplierdetail: {\n        id: null,\n        suppliernumber: \"\",\n        suppliername: \"\",\n        supplieraddress1: \"\",\n        supplieraddress2: \"\",\n        suppliercontactlistvalue: [],\n        city: \"\",\n        pincode: \"\",\n        state: \"\",\n        country: \"\",\n        suppliergstnumber: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      ponumber: \"\",\n      refno: \"\",\n      subject: \"\",\n      requestdeliverydate: \"\",\n      suppliercontactid: \"\",\n      values: [\"\"],\n      quotationno: null,\n      currency: \"5d3437e21c9d4400008624b7\",\n      totalvalue: null,\n      gst: null,\n      cgst:'',\n      sgst:'',\n      igst:'',\n      scheduledays:'',\n      schedulepayment:''\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:''\n   \n  };\n  \n  componentDidMount(){\n    console.log( Object.keys(this.props.purchaseorderlistvalues))\n    if(this.props.ID != undefined){\n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const supplierdetaillistvalue = Object.values(\n        this.props.supplierdetaillistvalue\n      );\n      const supplierdetaillistvalueobject = this.props.supplierdetaillistvalue;\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n\n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n  \n\n      this.setState({\n        ...this.state,\n        supplierdetaillistvalue,\n        supplierdetaillistvalueobject,\n        masteritemlistvalues,\n        itemlistSelectedOption: newArraySet,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      },()=>{\n        this.getPODetails(this.props.ID)\n      });\n    }\n    else{\n      \n\n      if(Object.keys(this.props.purchaseorderlistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder//getpurchaseorderrlist`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n     \n            const purchaseorderlistlength =\n\n            res.data.purchaseorderlist.purchaseorderlistdata.length > 0 ? res.data.purchaseorderlist.purchaseorderlistdata.length : 0;\n      \n            let ponumber = (1 + purchaseorderlistlength).toString();\n       \n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                ponumber\n              }\n            });\n          \n            \n          }\n        \n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n    }\n\n  }\n\n  getPODetails(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorder/${id}`)\n    .then(res => {\n\n      this.dataHandler(false)\n      if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n        let founddata = res.data.purchaseorderlist.purchaseorderlistdata;\n        let podetail = {...this.state.data}\n \n         podetail.supplierdetail.suppliername = founddata[0].suppliername;\n         podetail.supplierdetail.supplierid = founddata[0].supplierid;\n        \n        const newState = Object.assign({}, this.state);\n        newState.data.ponumber = founddata[0].ponumber;\n        newState.data.refno = founddata[0].referenceno;\n        newState.data.values = founddata[0].addeditemlist;\n        newState.data.subject = founddata[0].subject;\n        newState.data.requestdeliverydate = new Date(founddata[0].requestdeliverydate);\n        newState.data.currency = founddata[0].currencyid;\n        newState.data.totalvalue =  founddata[0].totalvalue;\n        newState.data.gst = '0';\n        newState.data.cgst = founddata[0].cgst;\n        newState.data.sgst = founddata[0].sgst;\n        newState.data.igst = founddata[0].igst;\n        newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n        newState.data.schedulepayment = founddata[0].schedulepayment ? founddata[0].schedulepayment : \"\";\n        \n        newState.data.suppliercontactid = founddata[0].suppliercontactid;\n        if(founddata[0].addeditemlist.length > 0){\n          \n          for(var i=0;i<founddata[0].addeditemlist.length;i++){\n            newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n            newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom)\n            newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n            newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n            newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n            newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n            newState.data.selectedItemlist.itemlocation.push(founddata[0].addeditemlist[i].itemlocation)\n          }\n        }\n\n\n        this.setState(newState);\n      \n        console.log(this.state)\n      }\n      else{\n        this.setState({count:0})\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    \n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const purchaseorderlistlength =\n      purchaseorderlist.length > 0 ? purchaseorderlist.length : 0;\n\n    let ponumber = (1 + purchaseorderlistlength).toString();\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n    if(this.props.ID != undefined){\n      ponumber = this.state.data.ponumber\n    }\n    this.setState({\n      ...this.state,\n      supplierdetaillistvalue,\n      supplierdetaillistvalueobject,\n      masteritemlistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        ponumber\n      }\n    });\n\n    if(this.state.data.supplierdetail.supplierid && this.state.data.supplierdetail.supplierid != '' && this.props.ID != undefined && !this.state.isEditdone){\n        this.setState({isEditdone:true},()=>{\n          this.handleChange2(this.state.data.supplierdetail.supplierid)\n        })\n    }\n    //console.log(props.supplierdetaillistvalue)\n    \n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    \n    const selected_id = e.target.value;\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        supplierdetail\n      }\n    });\n\n  };\n\n  handleChange2 = e => {\n    const selected_id = e\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    console.log(supplierdetail)\n    \n    if(supplierdetail != undefined){\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          supplierdetail\n        }\n      });\n    }\n \n    \n\n  };\n\n  totalValue = () => {\n    // const { totalcost } = this.state.data.selectedItemlist;\n    // if (totalcost.length > 0) {\n    //   let totalvalue = totalcost\n    //     .map((value, i) => {\n    //       if (value) {\n    //         return parseFloat(value);\n    //       } else {\n    //         return 0;\n    //       }\n    //     })\n    //     .reduce((a, b) => {\n    //       return a + b;\n    //     });\n    //   // Check if tax exists and handle tax  \n    //   let {gst} = this.state.data;\n    //   if(gst !== null) {\n    //     gst = parseFloat(gst).toFixed(2);\n    //   let per = (gst * totalvalue) / 100;\n    //   totalvalue = parseFloat(Number(per)+Number(totalvalue)).toFixed(2);\n    //   }\n    //   this.setState({\n    //     ...this.state.data,\n    //     data: {\n    //       ...this.state.data,\n    //       totalvalue\n    //     }\n    //   });\n    // }\n    this.calculatePercentageAmount()\n  };\n\n\n\n  calculatePercentageAmount = () => {\n\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n\n            // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(totalvalue)\n      ? Number(parseFloat(totalvalue).toFixed(2))\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n      console.log(cgst)\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['totalvalue']: grandtotal\n      }\n    });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        console.log(selected_item)\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        //  selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //                                                                                           : selected_item.masteritemshortdescription\n        selectedItemlist.itemdescription[index] = selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },() =>{\n          this.totalValue();\n        });\n\n      }\n    \n      }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  createSelectSupplier = () => {\n    let items = [];\n    const supplierdetaillistvalue = this.state.supplierdetaillistvalue;\n    supplierdetaillistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.suppliername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      this.totalValue()\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectSupplierContact = () => {\n    let items = [];\n    const suppliercontactlistvalues = this.state.data.supplierdetail\n      .suppliercontactlistvalue;\n    suppliercontactlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option._id}>\n          {option.suppliercontactname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    },()=>{\n      console.log(this.state.data.values)\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    console.log(values)\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    },()=>{\n      this.totalValue()\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || \"\";\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const {\n      values,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      totalvalue,\n      ponumber,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const data = {\n      supplierdetail,\n      AddedIteminfo,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      ponumber,\n      totalvalue,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        \n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order edited successfully' });\n          }\n         \n      \n        \n   \n      })\n      .catch(err => {\n        \n          this.setState({ errors: err.response.data.errors, loading: false });\n        \n        \n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  \n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Purchase Order</ModalHeader>\n              <ModalBody>{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Purchase Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">PO Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"ponumber\"\n                      type=\"number\"\n                      id=\"ponumber\"\n  \n                      value={data.ponumber || null}\n                      onChange={this.onChange}\n                      \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter PO Number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"refno\">Reference No </Label>\n                   \n                    <AvField\n                      name=\"refno\"\n                      type=\"text\"\n                      id=\"refno\"\n                      value={data.refno}\n                      onChange={e => this.onhandlerChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"totalcost\">Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"currency\">Currency</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`currency`}\n                      required={true}\n                      value={data.currency || null}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select currency</option>\n                      {this.createSelectCurrencyItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"quotationno\">Request Delivery Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.requestdeliverydate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"schedulepayment\">Payment Schedule</Label>\n                  <AvField\n                      name=\"schedulepayment\"\n                      type=\"text\"\n                      id=\"schedulepayment\"\n                      value={data.schedulepayment || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                \n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`suppliername`}\n                      value={data.supplierdetail.supplierid}\n                      //required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select supplier name</option>\n                      {this.createSelectSupplier()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliernumber\"\n                      type=\"number\"\n                      readOnly\n                      id=\"suppliernumber\"\n                      value={data.supplierdetail.suppliernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier Number\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GST </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliergstnumber\"\n                      type=\"text\"\n                      readOnly\n                      id=\"suppliergstnumber\"\n                      value={data.supplierdetail.suppliergstnumber}\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier GST Number\"\n                        },\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliercontactinfo\">\n                      Supplier Contact Name\n                    </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      \n                      name={`suppliercontactid`}\n                      value={data.suppliercontactid}\n                      required={true}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select contact</option>\n                      {this.createSelectSupplierContact()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"supplieraddress\">Supplier Address</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"supplieraddress\"\n                      type=\"text\"\n                      id=\"supplieraddress\"\n                      readOnly\n                      value={\n                        data.supplierdetail.supplieraddress1 ||\n                        \"\" + \" \" + data.supplierdetail.supplieraddress2 ||\n                        \"\" + \" \" + data.supplierdetail.city ||\n                        \"\" + \" \" + data.supplierdetail.state ||\n                        \"\" + \" \" + data.supplierdetail.country ||\n                        \"\" + \" \" + data.supplierdetail.pincode ||\n                        \"\"\n                      }\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                  <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>  \n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                \n                    <AvField\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                 \n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"cgst\">CGST(%)</Label>\n                    \n                    <AvField\n                      name=\"cgst\"\n                      type=\"text\"\n                      id=\"cgst\"\n                      value={data.cgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"sgst\">SGST(%)</Label>\n                    \n                    <AvField\n                      name=\"sgst\"\n                      type=\"text\"\n                      id=\"sgst\"\n                      value={data.sgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"igst\">IGST(%)</Label>\n                    \n                    <AvField\n                      name=\"igst\"\n                      type=\"text\"\n                      id=\"igst\"\n                      value={data.igst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className=\"purchaseorder-item-row\">\n                {data.values.map((values, index) => {\n                  \n                  let optionsel = \"\";\n                  let SelVal = {};\n                  if(values.id != undefined) {\n                    if(values.itemshortdescription) {\n                      optionsel = values.itemshortdescription;\n                    }\n                    else {\n                      optionsel = values.itemdescription;\n                    }\n                    SelVal = {\n                      value: values.id._id, label: optionsel\n                    }\n                  }\n                  const itemnameinfo = values.id != undefined ? (\n                    // <AvField\n                    //   type=\"select\"\n                    //   value={values.id._id}\n                    //   name={`selectitem${index}`}\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                    ) :\n                    (\n                      // <AvField\n                      //   type=\"select\"\n                      //   name={`selectitem${index}`}\n                      //   value={\n                      //     data.selectedItemlist.id[index]\n                      //   }\n                      //   onChange={e => this.selectitemchange(e, index)}\n                      //   required={true}\n                      // >\n                      //   <option value=\"\">select Item</option>\n                      //   {this.createSelectItems()}\n                      // </AvField>\n                      <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={values.id} options={this.state.itemlistSelectedOption} />\n                    )\n                  \n        // const itemnameinfo = values.id != undefined ? (   \n        //   <AvField\n        //   type=\"select\"\n        //   value={values.id}\n        //   name={`selectitem${index}`}\n        //   onChange={e => this.selectitemchange(e, index)}\n        //   required={true}\n        // >\n        //   <option value=\"\">select Item</option>\n        //   {this.createSelectItems()}\n        // </AvField>\n  \n        // ) : \n        //   (\n        //        <AvField\n        //        type=\"select\"\n        //        name={`selectitem${index}`}\n        //        value={\n        //         data.selectedItemlist.id[index]\n        //       }\n        //        onChange={e => this.selectitemchange(e, index)}\n        //        required={true}\n        //      >\n        //        <option value=\"\">select Item</option>\n        //        {this.createSelectItems()}\n        //      </AvField>\n             \n        //   )\n\n\n\n                  return (\n                    <div key={index}>\n                      <div className=\"purchaseorder-table\">\n                      \n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for=\"selectitem\">Item Code</Label>\n                              <span className=\"required-label\">*</span>\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type=\"text\"\n                                readOnly\n                                id=\"masteritemdescription\"\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      \"Please enter Item Description\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                style={{ width: \"150px\" }}\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] \n                                }\n                              >\n                                <option value=\"\">select</option>\n                                {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] \n                                }\n                              >\n                                <option value=\"\">uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`location${index}`}>\n                                Delivery Location\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                name={`location${index}`}\n                                onChange={e => this.locationChange(e, index)}\n                                \n                                 value={data.selectedItemlist.itemlocation[index]}\n                              >\n                                <option value=\"\">select location</option>\n                                {this.createSelectLocationItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                name={`costperunit${index}`}\n                                type=\"number\"\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index] \n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage:\n                                      \"Please enter valid costperunit\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type=\"number\"\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: \"Please enter Item Quantity\"\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage: \"Please enter valid quantity\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                name={`totalcost${index}`}\n                                type=\"number\"\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : \" \"\n                                }\n                                onChange={e => this.onChange(e, index)}\n                                // validate={{\n                                //   minLength: {\n                                //     value: 1,\n                                //     errorMessage: \"Total Cost value is required\"\n                                //   }\n                                // }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type=\"button\"\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: \"30px\" }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PurchaseOrderForm);\n","import axios from \"axios\";\n\nexport default {\n  suppliercontact: {\n    addSupplierContact: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/addsuppliercontact`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.supplierContactdata;\n        });\n    },\n    getSupplierContact: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/getsuppliercontact`\n        )\n        .then(res => {\n          return res.data.suppliercontactlist;\n        });\n    }\n  },\n  supplierdetail: {\n    addsupplierdetails: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/addsupplierdetail`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getSupplierDetails: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/getSupplierdetail`\n        )\n        .then(res => {\n          return res.data.supplierdetaillist;\n        });\n    },\n    updateSupplierContact: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/updateSupplierdetail?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/supplierapi\";\nimport { SUPPLIER_CONTACT_LIST, SUPPLIER_DETAIL_LIST } from \"../Services/types\";\nimport {\n  supplierContactListSchema,\n  supplierDetailListSchema\n} from \"../Schemas/schemas\";\n\nexport const suppplierContactListFetched = suppliercontactlistvalue => {\n  return {\n    type: SUPPLIER_CONTACT_LIST,\n    suppliercontactlistvalue\n  };\n};\n\nexport const suppplierDetailListFetched = supplierdetaillistvalue => {\n  return {\n    type: SUPPLIER_DETAIL_LIST,\n    supplierdetaillistvalue\n  };\n};\nexport const addSupplierContact = data => {\n  return dispatch => {\n    return api.suppliercontact.addSupplierContact(data);\n  };\n};\n\nexport const addSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.addsupplierdetails(data);\n  };\n};\n\nexport const getSupplierContact = () => {\n  return dispatch => {\n    return api.suppliercontact\n      .getSupplierContact()\n      .then(suppliercontactlist => {\n        const suppliercontactlistvalue =\n          suppliercontactlist.suppliercontactlistdata;\n        return dispatch(\n          suppplierContactListFetched(\n            normalize(suppliercontactlistvalue, [supplierContactListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const getSupplierDetails = () => {\n  return dispatch => {\n    return api.supplierdetail.getSupplierDetails().then(supplierdetaillist => {\n      const supplierdetaillistvalue = supplierdetaillist.supplierdetaillistdata;\n      return dispatch(\n        suppplierDetailListFetched(\n          normalize(supplierdetaillistvalue, [supplierDetailListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const updateSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.updateSupplierContact(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  currency: {\n    getCurrencyList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/currency/getcurrency`)\n        .then(res => {\n          return res.data.currencylist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/currency\";\nimport { CURRENCY_LIST } from \"../Services/types\";\nimport { currencyListSchema } from \"../Schemas/schemas\";\n\nfunction currencyListFetched(currencylist) {\n  return {\n    type: CURRENCY_LIST,\n    currencylist\n  };\n}\n\nexport const getCurrencyList = () => {\n  return dispatch => {\n    return api.currency.getCurrencyList().then(currencylist => {\n      const currencylistvalue = currencylist.currencydata;\n      return dispatch(\n        currencyListFetched(normalize(currencylistvalue, [currencyListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport PurchaseOrderForm from \"./PurchaseOrderForm/PurchaseOrderForm\";\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  addPurchaseOrder,\n  updatePurchaseOrder,\n  getPurchaseOrder,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport axios from \"axios\";\nclass purchaseOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n    \n    \n  }\n  submit = data => {\n\n    this.dataHandler(true);\n    if(this.props.match.params.id != undefined){\n      \n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatePurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n      \n      // axios\n      // .post(`${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,{\n      //   data\n      // })\n      // .then(res => {\n  \n      //   this.dataHandler(false)\n      //   if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n  \n      //   }\n      //   else{\n      //     this.setState({count:0})\n      //   }\n      // },\n      // error =>{\n      //   this.dataHandler(false)\n      //   this.setState({ success: false, message:'Server error.' });\n      // });\n\n      \n    }\n    else{\n      return this.props\n      .addPurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/view_purchaseorderlist\">Purchase Order</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <PurchaseOrderForm submit={this.submit} ID={ID} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    addPurchaseOrder,\n    updatePurchaseOrder,\n    getPurchaseOrder,\n    getMasterItemTypes\n  }\n)(purchaseOrder);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getPurchaseOrder } from \"../../../actions/Transaction\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\n\nclass ViewPurchaseOrderlist extends React.Component {\n  state = {\n    loading: true,\n    purchaseorderlistvalues: [],\n    count: 0\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  componentDidMount() {\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n\n    this.props.getPurchaseOrder();\n    \n    let purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.supplierstate +\n            \"\" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    // this.dataHandler(false);\n  }\n\n  componentWillReceiveProps(props) {\n    let purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    console.log(purchaseorderlist)\n    //purchaseorderlist= purchaseorderlist.sort((a, b) => b.ponumber.toString().toLowerCase().localeCompare(a.ponumber.toString().toLowerCase()));\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\" style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updatePO(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/view_purchaseorderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updatePO = id => {\n    let path = `/purchase_order_update/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { count, purchaseorderlistvalues, loading } = this.state;\n    const columnvalue = [\n\n      {\n        label: \"PO Number\",\n        field: \"ponumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Reference Number\",\n        field: \"referenceno\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Address\",\n        field: \"address\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Action\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Purchase Order List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {loading ? <CustomLoader /> : null}\n          <div className=\"container mg-20\">\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={purchaseorderlistvalues}\n                className=\"viewpurchaseorder\"\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    getMasterItemTypes,\n    getPurchaseOrder }\n)(ViewPurchaseOrderlist);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport React from 'react';\nimport client from '../../../Images/client.png';\nimport logo from '../../../Images/logo.png';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: '6px',\n    paddingRight: 20,\n    backgroundColor: 'white'\n  },\n  columnSection: {\n    paddingRight: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  padd6: {\n    paddingTop: '6px',\n    paddingBottom: '6px'\n  },\n  padding2: {\n    padding: 5\n  },\n\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: '100%',\n    paddingTop: 20,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  headerwidthNew: {\n    width: 140,\n    padding: 20\n  },\n  headerwidthdate: {\n    fontSize: 12,\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 210,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  fontsize18bold: {\n    fontSize: 10,\n    fontWeight: 900,\n    paddingBottom: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, textAlign: 'left', paddingLeft: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ purchaseorderlistvalue, data_cond }) => {\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n  const ponumber = purchaseorderlistvalue.ponumber.toString();\n  const financialYear = purchaseorderlistvalue.financialyear.toString();\n  const data = purchaseorderlistvalue.addeditemlist;\n  let totaleachitem = 0\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n\n\n\n  let totalrs = purchaseorderlistvalue.totalvalue\n    ? purchaseorderlistvalue.totalvalue\n    : '';\n    RsPaise(totalrs)\n  const tax = purchaseorderlistvalue.cgst ? purchaseorderlistvalue.cgst : '';\n  let cgst = purchaseorderlistvalue.cgst && purchaseorderlistvalue.cgst != '' ? purchaseorderlistvalue.cgst : 0\n  cgst = parseFloat(cgst)\n  let cgstval = parseFloat(totaleachitem) * (cgst/100)\n  cgstval = parseFloat(cgstval)\n  cgstval = cgstval.toFixed(2)\n\n  let sgst = purchaseorderlistvalue.sgst && purchaseorderlistvalue.sgst != '' ? purchaseorderlistvalue.sgst : 0\n  sgst = parseFloat(sgst)\n  let sgstval = parseFloat(totaleachitem) * (sgst/100)\n  sgstval = parseFloat(sgstval)\n  sgstval = sgstval.toFixed(2)\n\n  let igst = purchaseorderlistvalue.igst && purchaseorderlistvalue.igst != '' ? purchaseorderlistvalue.igst : 0\n  igst = parseFloat(igst)\n  let igstval = parseFloat(totaleachitem) * (igst/100)\n  igstval = parseFloat(igstval)\n  igstval = igstval.toFixed(2)\n\n  console.log(purchaseorderlistvalue.scheduledays)\n\n  let scheduledays = purchaseorderlistvalue.scheduledays ? purchaseorderlistvalue.scheduledays : ''\n  let schedulepayment = purchaseorderlistvalue.schedulepayment ? purchaseorderlistvalue.schedulepayment : ''\n  const taxpercentage = purchaseorderlistvalue.gst\n    ? purchaseorderlistvalue.gst / 100\n    : '';\n  const grandtotal =  totalrs+igstval+cgstval+sgstval;\n  const selectecontactlist = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactname\n    : '';\n  const suppliercontactnumber = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactnumber\n    : '';\n  const cond_data = data_cond;\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          {/* <Text style={styles.logo}></Text> */}\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works:</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            visit us: www.pondhan.com\n          </Text>\n        </View> */}\n        <Text style={styles.headerwidth}><Header>Purchase Order</Header> \n        \n        \n        \n        </Text>\n\n        <View style={[styles.section, { paddingBottom: 15, marginTop: 8 }]}>\n        \n        <Text style={styles.refstyle}>\n            PO No. PSPL/{financialYear}/{ponumber}\n          </Text>\n          {/* <Text style={styles.refstyle}>\n            Ref No.{purchaseorderlistvalue.referenceno}\n          </Text> */}\n          <Text style={styles.headerwidthdate}>\n            Date:{purchaseorderlistvalue.requestdeliverydate}\n          </Text>\n        </View>\n\n        <View style={styles.columnSection}>\n          <View>\n            <View>\n              <Text style={styles.fontsize18bold}>Vendor Address:</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>M/S {purchaseorderlistvalue.suppliername}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.supplieraddress1}{' '}\n                {purchaseorderlistvalue.supplieraddress2}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.suppliercity}{' '}\n                {purchaseorderlistvalue.supplierstate}{' '}\n                {purchaseorderlistvalue.supplierpincode}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>{purchaseorderlistvalue.suppliercountry}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>Mobile: {suppliercontactnumber}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>GSTIN No: {purchaseorderlistvalue.suppliergstnumber}</Text>\n            </View>\n          </View>\n          <View>\n            <Text style={styles.fontsize18}>Billing & Delivery Address: {'\\n'}{'\\n'}\n              Pondhan Scaffolding Pvt Ltd.{'\\n'}\n              Plot No : 40&41, Rd. No 5{'\\n'}\n              3rd Phase, KIADB- Obadenahalli{'\\n'}\n              Industrial Area, Doddabalapura,{'\\n'}\n              Bangalore Rural- 561203{'\\n'}\n              GSTIN No : 29AAGCP4018E1ZJ{'\\n'}\n              Contact Number : 8971769150 / 9900069150\n\n      </Text>\n          </View>\n        </View>\n        <View >\n          <Text style={styles.kindattend}>Kind Attn:{selectecontactlist}</Text>\n        </View>\n  \n        <View >\n          <Text style={styles.kindattend}>{'\\n'}</Text>\n        </View>\n        <View>\n          <Text style={styles.main}>Dear Sir,</Text>\n        </View>\n        <View>\n          <Text style={[styles.main, styles.padd6]}>\n            With ref to the discussions we had with you, we are pleased to place our order for the below mentioned\n  material as per the rates quoted by you and as per the T&C given below. ( Ref No ({purchaseorderlistvalue.referenceno}))\n          </Text>\n        </View>\n        <Table style={(styles.section, styles.padding)} data={data}>\n          <TableHeader textAlign={'center'}>\n            <TableCell weighting={0.08}>\n              <Text style={styles.headerfont}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.headerfont}>Material Description</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Rate</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              \n              weighting={0.08}\n              getContent={r => <Small>{r.slno}</Small>}\n            />\n            <DataTableCell\n              style={{ maxWidth: 200, wordWrap: 'break-word' }}\n              weighting={0.6}\n              getContent={r => <Description>{r.itemname}</Description>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.itemdescription}</Small>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Total.</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>CGST@{cgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{cgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>SGST@{sgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{sgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>IGST@{igst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{igstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>\n                {totalrs}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>        \n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n      \n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n     \n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View> */}\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}>Terms & conditions:</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>1. Payment Schedule: {schedulepayment} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>2. Delivery Schedule: {scheduledays} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            3. Unloading : Exclusive . (M/S Pondhan’s Scope)\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            4. Painting of material : If applicable\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            5. The weight mentioned above will be subject to toleranc of +/-\n            0.5%. Difference in weight beyond tolerance limit will not be\n            accepted and any shortfall in weight will be deducted from your\n            Invoice as applicable.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            6. All material shall be as per IS standard and acceptable quality.\n            You will take rejected material back at your cost.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            7. Weighing slip shall be sent along with each supply.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            8. Please specify the order No on challan & Bills.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            9. All your bills must contain our PO number, receipt along with the\n            bill, failing which the same will not be passed for the payment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            10. In the event you fail to mention GST number & HSN code of\n            purchaser and seller on the Invoice, the GST component will be\n            released only after the compliance of the same. (mandatory as per\n            the provision of GST ACT.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            11. Please ensure your GST Invoice is submitted to us immediately\n            after supply of materials, which should contain our GST number also.\n            Our GST no is : 29AAGCP4018E1ZJ & PAN is AAGCP4018E.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            12. We will recover the GST amount in case of mismatch of GST credit\n            with the GST return filed by the vendor.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            13. Above price is inclusive of loading but excludes transportation\n            charges & unloading comes under the perview of Pondhan Scaffolding\n            Pvt Ltd.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            14. The Transport Vehicle must have fitness certificate, emission\n            certificate, Inscurance, RC documents and all statutory vehicle\n            documents & Driver should have valid driving Liscenceas well as\n            driver alongwith unloaders compulsory to wear safety helmets,\n            reflection jackets and Shoes also.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            15. Special Terms : Relevant Eway bill has to be attached alongwith\n            each and every consignment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            16. Special Note : Relevant manufacturer test certificate has to be\n            submittedalongwith the material. (if applicable).\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            17. Special Note : Please ensure to put up your signature alongwith\n            your company seal, on TAX INVOICE without fail.\n          </Text>\n        </View>\n        <View >\n          <Text>{'\\n'}</Text>\n        </View>\n\n        <View>\n          <Text style={styles.main}>Note: {purchaseorderlistvalue.subject}</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            Kindly sign and return the duplicate copy of this PO as a token of\n            acceptance. {'\\n'} Thanking you, {'\\n'} {'\\n'} For Pondhan\n            Scaffolding Pvt Ltd. {'\\n'} {'\\n'} Authorised Signatory {'\\n'}\n          </Text>\n        </View>\n        <View style={styles.row}>\n          <Text style={styles.main}>Prepared By:</Text>\n          <Text style={styles.main}>Checked By:</Text>\n        </View>\n\n        <View>\n        <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getSupplierDetails } from '../../../actions/Supplier';\nimport { getPurchaseOrder } from '../../../actions/Transaction';\nimport logo from '../../../Images/logo.png';\nimport MyDocument from './Component';\nimport './ViewPurchaseOrder.scss';\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    purchaseorderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getSupplierDetails();\n    const purchaseorderid = this.props.match.params.id;\n    const purchaseorderlistvalues = this.props.purchaseorderlistvalues[\n      purchaseorderid\n    ];\n    console.log(purchaseorderlistvalues)\n    purchaseorderlistvalues.requestdeliverydate = moment(\n      purchaseorderlistvalues.requestdeliverydate\n    ).format('DD MMM, YYYY');\n    purchaseorderlistvalues.addeditemlist = purchaseorderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          itemdescription: itemlist.quantity\n            ? itemlist.quantity.toString()\n            : '',\n          quantity: itemlist.costperunit ? itemlist.costperunit.toString() : '',\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : ''\n        };\n      }\n    );\n    const supplierid = purchaseorderlistvalues.supplierid;\n    const suppliercontactid = purchaseorderlistvalues.suppliercontactid;\n    const supplierlistvalue = this.props.supplierdetaillistvalue[supplierid];\n    const selectedcontact = supplierlistvalue.suppliercontactlistvalue.filter(\n      contactid => {\n        if (contactid._id == suppliercontactid) {\n          return contactid;\n        }\n      }\n    );\n    console.log('__SELECTED_CONTACT_LIST____');\n    console.log(selectedcontact);\n    purchaseorderlistvalues.selectedcontactlist = selectedcontact;\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          purchaseorderlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          purchaseorderlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        purchaseorderlistvalues.financialyear = \"2020-21\";\n      }\n    );\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        purchaseorderlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/view_purchaseorderlist');\n          }, 300);\n        });\n      \n      }\n    } else {\n    }\n  }\n\n  render() {\n    //const link = \"blob:http://localhost:3000/0ef925bb-e930-4ea4-b861-2621aa6447ad\"\n\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                purchaseorderlistvalue={this.state.purchaseorderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getPurchaseOrder, getSupplierDetails }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport client from '../../../../../Images/client.png';\nimport CustomLoader from \"../../../../../Components/loader/loader\";\nclass QuotationForm extends React.Component {\n\n  state = {\n    customerID: null,\n    isRemovedCalled: false,\n    isVisible: true,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: \"\",\n        customernumber: \"\",\n        customergstnumber: \"\",\n        customercontactnumber: \"\",\n        customeraddress1: \"\",\n        customeraddress2: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\",\n        pincode: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemdiscountamount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      quotationnumber: null,\n      subject: \"\",\n      gst: null,\n      totalvalue: \"\",\n      values: [],\n      tcharge: \"\",\n      transportationgst: \"\",\n      transitinsurance:\"\",\n      ws: \"\",\n      loadingcharge: \"\",\n      scheduledays:\"\",\n      date: new Date()\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    uom: [],\n    customerlistSelect: [],\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: true,\n    success: false,\n    visible: false\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getQuotationDetails(id) {\n    this.dataHandler(true)\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/quotation/getsinglequotation/${id}`)\n      .then(res => {\n\n\n        if (res.data.quotationlist.quotationdata.length > 0) {\n          let founddata = res.data.quotationlist.quotationdata;\n\n          const newState = Object.assign({}, this.state);\n          newState.data.customerdetail.id = founddata[0].customerid;\n\n          newState.data.values = founddata[0].addeditemlist;\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n\n\n          newState.data.subject = founddata[0].subject;\n          newState.data.date = new Date(founddata[0].date);\n          newState.data.quotationnumber = founddata[0].quotationnumber;\n          localStorage.setItem('QTno', founddata[0].quotationnumber)\n          newState.data.totalvalue = founddata[0].totalvalue;\n          newState.data.gst = founddata[0].tax;\n          newState.data.ws = founddata[0].ws != undefined && founddata[0].ws != null ? founddata[0].ws : '';\n          newState.data.tcharge = founddata[0].tcharge != undefined && founddata[0].tcharge != null ? founddata[0].tcharge : '';\n          newState.data.transportationgst = founddata[0].transportationgst != undefined && founddata[0].transportationgst != null ? founddata[0].transportationgst : '';\n          \n          newState.data.transitinsurance = founddata[0].transitinsurance != undefined && founddata[0].transitinsurance != null ? founddata[0].transitinsurance : '';\n          \n          newState.data.loadingcharge = founddata[0].loadingcharge != undefined && founddata[0].loadingcharge != null ? founddata[0].loadingcharge : '';\n          newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].itemdiscountamount = founddata[0].addeditemlist[i].itemdiscountamount == null || founddata[0].addeditemlist[i].itemdiscountamount == '' ?\n                founddata[0].addeditemlist[i].itemdiscountamount = 0 : founddata[0].addeditemlist[i].itemdiscountamount\n              founddata[0].addeditemlist[i].itemdiscountamount = (founddata[0].addeditemlist[i].itemdiscountamount).toString()\n\n\n\n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n              newState.data.selectedItemlist.itemdiscountamount.push(founddata[0].addeditemlist[i].itemdiscountamount)\n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.ID != undefined) {\n      this.getQuotationDetails(this.props.ID)\n    }\n    else{\n      setTimeout(() =>{\n        this.dataHandler(false)\n      },100)\n      // quotation/getquotation\n    }\n      \n    const quotationlistvalues = Object.keys(this.props.quotationlistvalues);\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n\n\n    if (this.props.ID == undefined) {\n\n      let quotationnumber = '';\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n      this.setState({\n        data: {\n          ...this.state.data,\n          quotationnumber\n        }\n      })\n\n    }\n    // else{\n    //   alert(this.state.data.quotationnumber)\n    // }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    //this.dataHandler(false)\n  }\n\n  componentWillReceiveProps(props) {\n    const quotationlistvalues = Object.keys(props.quotationlistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n    let quotationnumber = ''\n    if (this.props.ID == undefined) {\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n    }\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemtypelistvaluesobject,\n      customerlistSelect: arraySet,\n      uom,\n      data: {\n        ...this.state.data,\n        quotationnumber\n      }\n    });\n  }\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      if (name === 'gst') {\n        this.totalValue();\n      }\n    });\n  };\n\n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onSubjectHandler = e => {\n\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },()=>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange2 = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      }, () => {\n        console.log(this.state.data.values)\n      });\n    }\n  }\n\n  selectitemchange = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        if(selected_item.masteritemshortdescription){\n          selectedItemlist.itemshortdescription[index] =\n          selected_item.masteritemshortdescription;\n        }\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate._id;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n  \n        if (this.props.ID == undefined) {\n          selectedItemlist.itemdiscount[index] = \"0\";\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n          selectedItemlist.quantity[index] = (1).toString();\n          selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n        }\n  \n  \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        }, () => {\n          this.totalValue();\n        });\n      }\n     \n    }\n   \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || \"\";\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : \"\";\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    console.log(unitcost)\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      //   selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost) - (parseFloat(unitcost) * discount) / 100).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(selectedItemlist.costperunit[index]) -\n        (parseFloat(selectedItemlist.costperunit[index]) * selectedItemlist.itemdiscount[index]) / 100).toFixed(2);\n\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n\n  /*itemdiscountChange = (e, index) => {\n    \n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n    \n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n        selectedItemlist.itemdiscountamount[index] = null;\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };*/\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      // Check if tax exists and handle tax  \n      let { gst } = this.state.data;\n      if (gst !== null) {\n        gst = parseFloat(gst).toFixed(2);\n        let per = (gst * totalvalue) / 100;\n        totalvalue = parseFloat(Number(per) + Number(totalvalue)).toFixed(2);\n      }\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail\n      }\n    });\n\n  };\n\n  handleClick = e => {\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, [\"\"]],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, \"0\"],\n          itemdiscountamount: [...this.state.data.selectedItemlist.itemdiscountamount, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"1\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    }, () => {\n      console.log(this.state.data.values)\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    console.log(index)\n\n    let removeItem = { ...this.state.data };\n    console.log(removeItem.selectedItemlist)\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemshortdescription = removeItem.selectedItemlist.itemshortdescription;    \n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n    let itemdiscountamount = removeItem.selectedItemlist.itemdiscountamount;\n\n    values.splice(index, 1);\n\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n\n    costperunit.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    quantity.splice(index, 1);\n    itemdiscountamount.splice(index, 1);\n\n    totalcost.splice(index, 1);\n\n    console.log(removeItem.selectedItemlist)\n\n\n\n    //setTimeout(() =>{\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          itemdiscountamount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      },\n      isVisible: false,\n      isRemovedCalled: true\n    }, () => {\n      // setTimeout(() =>{\n      this.setState({\n        'isVisible': true\n      })\n      console.log(this.state.data.values)\n      console.log(this.state.data.selectedItemlist)\n      if (this.state.data.selectedItemlist.id.length > 0) {\n        this.state.data.selectedItemlist.id.filter((item, index) => {\n          if (typeof item == 'string' && item != '') {\n\n            this.selectitemchange2(item, index)\n          }\n\n        })\n\n      }\n      // },200)\n\n      this.totalValue();\n\n    });\n    //},200)\n\n\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const {\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const itemdiscountamount = selectedItemlist.itemdiscountamount;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.itemdiscountamount = itemdiscountamount[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    let data = {\n      customerdetail,\n      AddedIteminfo,\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    };\n    console.log(transportationgst)\n    data['quotationnumber'] = data['quotationnumber'] == '' ? localStorage.getItem('QTno') : data['quotationnumber']\n    data['customeraddress'] = document.getElementById('customeraddress').value ? document.getElementById('customeraddress').value : ''\n\n    this.setState({ loading: true });\n\n    if (localStorage.getItem('customerId') != null) {\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      let obj = {}\n      obj['customerid'] = localStorage.getItem('customerId')\n      obj['Qno'] = this.state.data.quotationnumber\n      obj['quotation'] = date\n\n\n\n      if (this.props.ID != undefined) {\n        console.log(data)\n        this.props\n          .submit(data)\n          .then(() => {\n            this.dataHandler(false)\n            this.setState({ loading: false, errors: {}, success: true });\n            this.onShowAlert();\n          })\n          .catch(err => {\n            this.setState({ loading: false, errors: {}, success: true });\n            if (err.response) {\n              this.setState({ errors: err.response.data.errors, loading: false });\n              this.onShowAlert();\n            }\n\n          });\n\n      }\n      else {\n        axios\n          .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`, obj)\n          .then(res => {\n            this.props\n              .submit(data)\n              .then(() => {\n                this.setState({ loading: false, errors: {}, success: true });\n                this.myFormRef.reset();\n                this.onShowAlert();\n              })\n              .catch(err => {\n                this.setState({ errors: err.response.data.errors, loading: false });\n                this.onShowAlert();\n              });\n          },\n            error => {\n              this.setState({ errors: error.response.data.errors, loading: false });\n              this.onShowAlert();\n            });\n      }\n    }\n    else {\n      this.props\n        .submit(data)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n          this.onShowAlert();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n          this.onShowAlert();\n        });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id)\n      // this.setState({ loading: true,transaction:[] });\n      // axios\n      // .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n      // .then(res => {\n      //   this.setState({ loading: false });\n      //   if(res.data.customerlist.customerdata.length > 0){\n      //     let customervalues = res.data.customerlist.customerdata;\n      //     if(customervalues.length > 0){\n      //       customervalues = customervalues.filter((item,index) =>{\n      //         return index == customervalues.length-1\n      //       })\n      //       if(customervalues.length == 1){\n      //         this.setState({ transaction: customervalues },() =>{\n      //           console.log(this.state.transaction)\n      //         });\n      //       }\n      //     }\n      //   }\n      // },\n      // error =>{\n      //   this.setState({ loading: false });\n      // });\n    }\n\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible, isVisible } = this.state;\n    const successmsg = this.props.ID != undefined ? 'Quotation is updated successfully' : 'Quotation is added successfully'\n    const customerID = data.customerdetail ? (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n    //   value={data.customerdetail.id}\n    //   required={true}\n    //   onChange={e => this.handleChange(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    ) : (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n  \n    //   required={true}\n    //   onChange={e => this.handleChange(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />    \n    )\n\n    const customerNumber = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      value={data.customerdetail.customernumber}\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerGST = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" readOnly\n      id=\"customergstnumber\"\n      value={data.customerdetail.customergstnumber}\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" \n      readOnly\n      id=\"customergstnumber\"\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerAddress = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n      value={\n        data.customerdetail.customeraddress1 +\n        \" \" +\n        data.customerdetail.customeraddress2 +\n        \" \" +\n        data.customerdetail.city +\n        \" \" +\n        data.customerdetail.state +\n        \" \" +\n        data.customerdetail.country +\n        \" \" +\n        data.customerdetail.pincode\n      }\n      onChange={this.onCustomerChange}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n\n      onChange={this.onCustomerChange}\n    />\n    )\n\n\n\n\n\n    const dataelem = isVisible ? (\n\n      <div className=\"purchaseorder-item-row\">\n        {data.values.map((values, index) => {\n          \n          let optionsel = \"\";\n          let SelVal = {};\n          if(values.id != undefined) {\n            if(values.itemshortdescription) {\n              optionsel = values.itemshortdescription;\n            }\n            else {\n              optionsel = values.itemdescription;\n            }\n            SelVal = {\n              value: values.id._id, label: optionsel\n            }\n          }\n          const itemnameinfo = values.id != undefined ? (\n            // <AvField\n            //   type=\"select\"\n            //   value={values.id._id}\n            //   name={`selectitem${index}`}\n            //   onChange={e => this.selectitemchange(e, index)}\n            //   required={true}\n            // >\n            //   <option value=\"\">select Item</option>\n            //   {this.createSelectItems()}\n            // </AvField>\n            <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n            ) :\n            (\n              // <AvField\n              //   type=\"select\"\n              //   name={`selectitem${index}`}\n              //   value={\n              //     data.selectedItemlist.id[index]\n              //   }\n              //   onChange={e => this.selectitemchange(e, index)}\n              //   required={true}\n              // >\n              //   <option value=\"\">select Item</option>\n              //   {this.createSelectItems()}\n              // </AvField>\n              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n            )\n          return (\n            <div key={index}>\n\n              <div className=\"purchaseorder-table\">\n                <Row key={index}>\n                  <Col sm={2}>\n\n                    <AvGroup>\n\n                      <Label for=\"selectitem\">Item Code</Label>\n                      <span className=\"required-label\">*</span>\n                      {itemnameinfo}\n\n\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label for={`masteritemdescription${index}`}>\n                        Description\n                    </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`masteritemdescription${index}`}\n                        type=\"text\"\n                        readOnly\n                        id=\"masteritemdescription\"\n                        value={\n                          data.selectedItemlist.itemdescription[index]\n                        }\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              \"Please enter Item Description\"\n                          }\n\n\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemtype${index}`}>Type</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        style={{ width: \"150px\" }}\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemtype${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemtype[index]\n                        }\n                      >\n                        <option value=\"\">select</option>\n                        {this.createSelectItemTypes()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemuom${index}`}>UOM</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemuom${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemuom[index]\n                        }\n                      >\n                        <option value=\"\">uom</option>\n                        {this.createSelectUomItems()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`discount${index}`}>Discount %</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`itemdiscount${index}`}\n                        type=\"number\"\n                        id={`itemdiscount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscount[index]\n                        }\n                        onChange={e =>\n                          this.itemdiscountChange(e, index)\n                        }\n                        validate={{\n                          minLength: {\n                            value: 1,\n                            errorMessage:\n                              \"item Discount value is required\"\n                          },\n                          maxLength: { value: 100 },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid value\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`quantity${index}`}>Quantity</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`quantity${index}`}\n                        type=\"number\"\n                        id={`quantity${index}`}\n                        value={\n                          data.selectedItemlist.quantity[index]\n                        }\n                        onChange={e => this.quantityChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Item Quantity\"\n                          },\n                          minLength: {\n                            value: 1,\n                            errorMessage: \"quantity value is required\"\n                          },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid quantity\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`costperunit${index}`}>\n                        MRP Cost\n                    </Label>\n                      <AvField\n                        name={`costperunit${index}`}\n                        type=\"number\"\n                        id={`costperunit${index}`}\n                        value={\n                          data.selectedItemlist.costperunit[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Please enter cost'\n                          },\n\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage:\n                              \"Please enter valid costperunit\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`itemdiscountamount${index}`}>\n                        Discount Cost\n                    </Label>\n                      <AvField\n                        name={`itemdiscountamount${index}`}\n                        type=\"number\"\n                        id={`itemdiscountamount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscountamount[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`totalcost${index}`}>\n                        Total Cost\n                    </Label>\n                      <AvField\n                        name={`totalcost${index}`}\n                        type=\"number\"\n                        id={`totalcost${index}`}\n                        value={\n                          data.selectedItemlist.totalcost[index]\n                            ? data.selectedItemlist.totalcost[index]\n                            : \" \"\n                        }\n                        onChange={e => this.onChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <Button\n                      type=\"button\"\n                      onClick={e => this.removeClick(e, index)}\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      -\n                  </Button>\n                  </Col>\n                </Row>\n              </div>\n\n\n            </div>\n          );\n        })}\n      </div>\n\n\n    ) : null\n\n\n\n    return (\n      <div>\n        <div>\n\n          {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Quotation</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert color=\"danger\" isOpen={visible} Label>\n              Quotation number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Quotation</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">Quotation Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"quotationnumber\"\n                      type=\"number\"\n                      id=\"quotationnumber\"\n                      value={data.quotationnumber || null}\n                      onChange={this.onhandlerChange}\n\n                      validate={{\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"totalcost\" Label>Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"date\">Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.date}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control small-font-size\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label F\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    {customerNumber}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GST </Label>\n                    {customerGST}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customeraddress\">Customer Address</Label>\n                    {customerAddress}\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n              <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={this.onSubjectHandler}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                  \n                    <AvField\n                      Label\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                  \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"loadingcharge\">\n                      Loading and Handling Charges </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"loadingcharge\"\n                      type=\"number\"\n                      id=\"loadingcharge\"\n                      value={data.loadingcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Loading and Handling Charges\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ws\">\n                      W.S</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"ws\"\n                      type=\"number\"\n                      id=\"ws\"\n                      value={data.ws || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter W.S\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transitinsurance\">\n                    Transit Insurance</Label>\n     \n                    <AvField\n                      Label\n                      name=\"transitinsurance\"\n                      type=\"number\"\n                      id=\"transitinsurance\"\n                      value={data.transitinsurance || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />  \n                  </AvGroup>\n                </Col>\n\n                \n\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"tcharge\">\n                      Transportation Charges</Label>\n     \n                    <AvField\n                      Label\n                      name=\"tcharge\"\n                      type=\"number\"\n                      id=\"tcharge\"\n                      value={data.tcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transportationgst\">Transportation GST(%) </Label>\n                    <AvField\n                      Label\n                      name=\"transportationgst\"\n                      type=\"number\"\n                      id=\"transportationgst\"\n                      value={data.transportationgst || \"\"} \n                      onChange={this.onSubjectHandler}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n\n              {dataelem}\n\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(QuotationForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addquotation } from \"../../../../actions/quotation\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updatequotation } from \"../../../../actions/quotation\";\n\nimport QuotationForm from \"./QuotationForm/QuotationForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddQuotation extends React.Component {\n\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  }\n\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    \n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatequotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      \n      return this.props\n      .addquotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n          <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <QuotationForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addquotation,\n    updatequotation,\n    getCustomerList,\n    getquotation\n  }\n)(AddQuotation);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getquotation } from '../../../../actions/quotation';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\nclass ViewQuotation extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    quotationlistvalues: []\n  };\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n\n    let quotationlist = Object.values(this.props.quotationlistvalues);\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n  \n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              // style={{ 'fontSize': '0.8rem' }}\n              Label\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              Label\n              // style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.quotationlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.quotationnumber.toLowerCase().localeCompare(a.quotationnumber.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateQuotation(id) {\n    let path = `/editquotation/${id}`;\n    this.props.history.push(path);\n  }\n\n  updateButton = id => {\n    let path = `/view_quotationpdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, quotationlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: 'Quotation Number',\n        field: 'quotationnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n    \n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Action',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n       \n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <DataTable\n            rowvalues={quotationlistvalues}\n            columnvalue={columnvalue}\n            className=\"quotationlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getquotation \n  }\n)(ViewQuotation);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport justDial from '../../../../Images/js.jpg';\nimport makeInIdia from '../../../../Images/mk.jpg';\nimport proud from '../../../../Images/proud.jpg';\nimport scaff from '../../../../Images/scaff.jpg';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\n\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n\n  pagepadding: {\n    padding: 35\n  },\n  section: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  tableHeader: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    // backgroundColor: '#548DD4',\n    // width: '100%',\n    // height: 40,\n    // color: 'white',\n    // textAlign: 'center',\n    // padding: 5\n  },\n  refno: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  cutoff: {\n    // overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n    // width:'150px',\n    //wordBreak: 'break-all'\n\n    'whiteSpace': 'normal',\n    'wordBreak': 'breakAll',\n\n  },\n\n  bgblue: {\n    backgroundColor: '#000'\n  },\n  padding5: {\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  fontbold: {\n    fontWeight: 'bolder'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  smallicon: {\n    width: 25\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 300,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n\n  padding1: {\n    paddingTop: 6\n  },\n\n  kindattend: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  padding: {\n    padding: 0\n  },\n  main: {\n    fontSize: 10\n  },\n  flexview: {\n    fontSize: 10,\n    display: 'flex'\n  },\n  tableheaderbgcolor: {\n    backgroundColor: '#000',\n    color: 'red',\n    background: '#000'\n  },\n  footerfixed: {\n    // position: 'absolute',\n    // bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst RedBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'red'}}>{children}</Text>\n  )\n}\n\nconst BlackBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'black'}}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ quotationlistvalues, data_cond }) => {\n  console.log(quotationlistvalues)\n\n  let amountinwords = ''\n  const financialYear = quotationlistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n\n  const data = quotationlistvalues.addeditemlist;\n  let totaleachitem = 0;\n  console.log('data');\n  console.log(data);\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n  // const data = [\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   }\n  // ];\n  console.log(quotationlistvalues)\n\n  let customeraddress = quotationlistvalues.customeraddress ? quotationlistvalues.customeraddress : ''\n  let loadingcharges = quotationlistvalues.loadingcharge != undefined\n    && quotationlistvalues.loadingcharge != null ?\n    parseFloat(quotationlistvalues.loadingcharge) : 0.00\n\n  let ws = quotationlistvalues.ws != undefined\n    && quotationlistvalues.ws != null ?\n    parseFloat(quotationlistvalues.ws) : 0.00\n\n  let transitinsurance = quotationlistvalues.transitinsurance != undefined\n    && quotationlistvalues.transitinsurance != null ?\n    parseFloat(quotationlistvalues.transitinsurance) : 0.00\n\n    \n\n  let tcharge = quotationlistvalues.tcharge != undefined\n    && quotationlistvalues.tcharge != null ?\n    parseFloat(quotationlistvalues.tcharge) : 0.00\n\n\n  loadingcharges = loadingcharges.toFixed(2)\n  let tchargegst = 0.00\n  ws = ws.toFixed(2)\n  transitinsurance = transitinsurance.toFixed(2)\n  tcharge = tcharge.toFixed(2)\n  let subtotal = parseFloat(totaleachitem) + parseFloat(loadingcharges) + parseFloat(ws) + parseFloat(transitinsurance)\n  subtotal = subtotal.toFixed(2)\n  let subtotalgst = parseFloat(subtotal * 0.18)\n  subtotalgst = subtotalgst.toFixed(2)\n  let totalincludegst = parseFloat(subtotal) + parseFloat(subtotalgst)\n  totalincludegst = totalincludegst.toFixed(2)\n\n  let transportationgstper=0,transportationgst;\n  transportationgst = quotationlistvalues.transportationgst && quotationlistvalues.transportationgst != '' ? parseFloat(quotationlistvalues.transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n\n  tchargegst = tcharge * transportationgst\n  tchargegst = tchargegst.toFixed(2)\n  let grandtotal = parseFloat(tcharge) + parseFloat(totalincludegst) + parseFloat(tchargegst)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  let scheduledays = quotationlistvalues.scheduledays ? quotationlistvalues.scheduledays + ' days' : ''\n\n  const totalrs = quotationlistvalues.totalvalue\n    ? quotationlistvalues.totalvalue\n    : '';\n  const tax = quotationlistvalues.tax ? quotationlistvalues.tax : '';\n  const taxpercentage = quotationlistvalues.tax\n    ? quotationlistvalues.tax / 100\n    : '';\n  //const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = quotationlistvalues.selectedcontactlist[0]\n  //     ? quotationlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n\n  const refno = 'Quotation no:PSPL/Quote/' + quotationlistvalues.quotationnumber + '/'+financialYear;\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 2 && data.length < 4) {\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={data}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      </>\n      );\n    }\n    else if(i == 0 && i <= 5 && data.length < 7) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 5) {\n          secondDat.push(data[i])\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      </>\n      );\n    }\n    else if(i == 0 && i <= 8 && data.length < 10) {\n      let firstDat = [];\n      let secondDat = [];\n      let thirdDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>    \n      </>\n      );\n    }\n  })\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: '#000' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n         {dispDyn}\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Loading and Handling Charges per ton Rs185.00 x (No of tons)</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{loadingcharges}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>W.S</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{ws}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}> Transit Insurance</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transitinsurance}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Sub Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@18%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotalgst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalincludegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Transportation Charges</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@{transportationgstper}%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tchargegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                {grandtotal}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n{/* \n        <Text style={[styles.headerfont, { textAlign: 'right' }]}>\n        {'\\n'} \n            {amountinwords}\n        </Text> */}\n\n       \n\n        {/* <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View> */}\n        {/* <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View> */}\n\n        <View style={[styles.section]}>\n          <Text style={{fontSize: '10'}}>We hope the rates quoted are reasonable and looking forward for your kind orders.</Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} >Thanking you </Text>\n          <Text style={styles.padding1}>Yours truly,</Text>\n          <View style={[styles.section]}>\n            <Text style={styles.brandname}>For PONDHAN SCAFFOLING PVT LTD</Text>\n            <Text style={{fontSize: \"12\", fontWeight: \"600\", paddingTop: \"10\", paddingBottom: \"10\"}}>Sales Team Contact:</Text>\n          </View>\n        </View>\n\n\n\n        <View style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\n          <Image style={{ width: 70, height: 70 }} src={sign} />\n          <Image style={{ width: 70, height: 70 }} src={seal} />\n          <View style={{ paddingLeft: '300' }}>\n          <Text style={{fontSize: \"12\", fontWeight: \"600\", paddingTop: \"10\", paddingBottom: \"10\"}}>9900069150</Text>\n          </View>\n        </View>\n\n        <View>\n          {/* <Image src={seal} style={styles.smallicon} />\n          <Image src={sign} style={styles.smallicon} /> */}\n          <Text style={styles.brandname}>A.B. Ponnappa {'\\n'}\n            Managing Director\n          </Text>\n          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} > Note:</Text>\n          <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n          <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n          <Text style={styles.padding1}>3, Delivery Schedule: 8 to 10 days after confirmation.</Text>\n          <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n          <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n          <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n          <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n          <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} > Bank Details:-</Text>\n          <Text style={styles.padding1}>Name: Pondhan scaffolding Pvt ltd.</Text>\n          <Text style={styles.padding1}>Bank: Bank Of Baroda Branch: Byatarayanapura</Text>\n          <Text style={styles.padding1}>City: Bangalore-560092</Text>\n          <Text style={styles.padding1}>A/C No: 73690500000003.</Text>\n          <Text style={styles.padding1}>IFSC: Code: BARBOVJBYAT.</Text>\n        </View>\n\n        <View>\n            <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={[styles.footerfixed]}>\n          <Image src={client} />\n        </View>\n\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport axios from \"axios\";\nimport \"./ViewQuotation.scss\";\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    quotationlistvalues: {},\n    status: false,\n    text: null\n  };\n  async componentDidMount() {\n    this.props.getquotation();\n\n    const quotationid = this.props.match.params.id;\n    const quotationlistvalues = this.props.quotationlistvalues[quotationid];\n    quotationlistvalues.requestdeliverydate = moment(\n      quotationlistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    quotationlistvalues.addeditemlist = quotationlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        console.log(itemlist)\n        itemlist.itemdiscountamount = parseFloat(itemlist.itemdiscountamount)\n        itemlist.itemdiscountamount = itemlist.itemdiscountamount.toFixed(2)\n        itemlist.quantity = parseInt(itemlist.quantity)\n        if(itemlist.itemdiscountamount != '0.00' && itemlist.itemdiscountamount != 'NaN' && itemlist.itemdiscountamount != null) {\n          itemlist.totalcost = parseFloat(itemlist.itemdiscountamount) * parseInt(itemlist.quantity);\n        }\n        else {\n          itemlist.totalcost = parseFloat(itemlist.totalcost) * parseInt(itemlist.quantity);  \n        }\n  \n        itemlist.totalcost = parseFloat(itemlist.totalcost)\n        itemlist.totalcost = itemlist.totalcost.toFixed(2)\n\n        if(itemlist.itemdiscountamount == '0.00' || itemlist.itemdiscountamount == 'NaN' || itemlist.itemdiscountamount == null) {\n          itemlist.itemdiscountamount = \"0\";\n        }\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.id.masteritemunitwt && itemlist.id.masteritemunitwt != \"undefined\" && \n          itemlist.id.masteritemunitwt != \"null\"\n            ? itemlist.id.masteritemunitwt\n            : \"-\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n          itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n            itemdiscountamount:itemlist.itemdiscountamount\n            ? itemlist.itemdiscountamount\n            : \"0\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost\n            : \"\"\n        };\n      }\n    );\n    const customerid = quotationlistvalues.customerid;\n    const customernumber = quotationlistvalues.customernumber;\n    const customername = quotationlistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          quotationlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          quotationlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        quotationlistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(quotationlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        quotationlistvalues,\n        status: true,\n        text: quotationid.toString()+customername.toString()\n      });\n    }, 2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        });\n\n        setTimeout(() => {\n          document.getElementById(\"D1\").click();\n          this.props.history.push(\"/quotationlist\");\n        }, 200);\n    \n      }\n    } else {\n    }\n  }\n\n\n\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, quotationlistvalues,link,text } = this.state;\n    return (\n      <div>\n        <div className=\"pdf-class\">\n        Downloading file.Please wait.\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                \n                quotationlistvalues={this.state.quotationlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getquotation }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass SupplierContactForm extends React.Component {\n  state = {\n    data: {\n      suppliercontactname: \"\",\n      suppliercontactnumber: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Supplier Contact is added Successfully</Alert>\n          ) : null}\n          {!!errors.suppliercontactnumber ? (\n            <Alert color=\"danger\">Supplier Contact Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\">Full Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliercontactname\"\n                        type=\"text\"\n                        id=\"fullname\"\n                        value={data.suppliercontactname}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Your Name\"\n                          },\n                      \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"phone\">Phone</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"text\"\n                        name=\"suppliercontactnumber\"\n                        id=\"phone\"\n                        value={data.suppliercontactnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter your phone number\"\n                          },\n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage:\n                              \"Your phone number must be composed only with numbers\"\n                          },\n                          minLength: {\n                            value: 10,\n                            errorMessage:\n                              \"Your phone number must be between 10 and 12 numbers\"\n                          },\n                          maxLength: {\n                            value: 12,\n                            errorMessage:\n                              \"Your phone number be between 10 and 12 numbers\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierContactForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierContactForm from \"../SupplierForm/SupplierContact\";\nimport {\n  addSupplierContact,\n  getSupplierContact\n} from \"../../../../actions/Supplier\";\n\nclass SupplierContact extends React.Component {\n  componentDidMount() {\n    this.props.getSupplierContact();\n  }\n  submit = data => {\n    return this.props.addSupplierContact(data);\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Admin Dashboard</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/transaction_page\">Transaction</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/supplier\">Supplier</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Supplier Contact</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div>\n          <SupplierContactForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierContact.propTypes = {\n  addSupplierContact: PropTypes.func.isRequired,\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addSupplierContact, getSupplierContact }\n)(SupplierContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [\"\"],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const suppliercontactlistvalue = Object.values(\n      props.suppliercontactlistvalue\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const count = supplierdetaillistvalue.length;\n    const suppliernumber = count > 0 ? 10001 + count : 10001;\n    this.setState({\n      ...this.state,\n      suppliercontactlistvalue,\n      data: { ...this.state.data, suppliernumber }\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function (value, i) {\n      var obj = {};\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is added successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody >Supplier data is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>{\" \"}\n               \n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert Label color=\"danger\">Supplier Number alreadt exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert Label color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString()}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                        \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                          minLength: {\n                            value: 3,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          maxLength: {\n                            value: 300,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader Label>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader Label>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            designation{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              maxLength: {\n                                value: 100,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          Label\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                  <AvGroup>\n                                    <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                    <span className=\"required-label\">*</span>\n                                    <AvField\n                                      type=\"select\"\n                                      name=\"contactnumber\"\n                                      onChange={this.onChange}\n                                      required={true}\n                                      disabled={true}\n                                    >\n                                      <option value=\"\">123</option>\n                                      <option value=\"\">345</option>\n                                      <option value=\"\"></option>\n                                      {this.createSelectNumbers()}\n                                    </AvField>\n                                  </AvGroup>\n                                </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    suppliercontactlistvalue: state.suppliercontactlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(SupplierDetail);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailForm from \"../SupplierForm/SupplierDetail\";\nimport {\n  getSupplierContact,\n  addSupplierDetails,\n  getSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierContact();\n    this.props.getSupplierDetails();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetail.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { getSupplierContact, addSupplierDetails, getSupplierDetails }\n)(SupplierDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetailUpdateForm extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [null],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"],\n      mongoid: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.supplierdetaillistvalue;\n    const suppliercontactname = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactname\n    );\n\n    const mongoid = data.suppliercontactlistvalue.map(obj => obj._id);\n    const suppliercontactnumber = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactnumber\n    );\n\n    const suppliercontactdesignation = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactdesignation\n    );\n\n    const suppliercontactemail = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactemail\n    );\n    data.mongoid = mongoid;\n    data.values = suppliercontactname;\n    data.suppliercontactnamelist = suppliercontactname;\n    data.suppliercontactdesignation = suppliercontactdesignation;\n    data.suppliercontactnumber = suppliercontactnumber.map((item, i) => {\n      return item ? item.toString() : item;\n    });\n    data.suppliercontactemail = suppliercontactemail;\n    this.setState({ ...this.state.data, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactid = this.state.data.mongoid;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function(value, i) {\n      var obj = {};\n      obj.id = suppliercontactid[i] || null;\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is updated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody>Supplier data is updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert color=\"danger\">Supplier Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString() || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                  \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                       \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            Contact designation{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact designation name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact designation name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                      <AvGroup>\n                                        <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                        <span className=\"required-label\">*</span>\n                                        <AvField\n                                          type=\"select\"\n                                          name=\"contactnumber\"\n                                          onChange={this.onChange}\n                                          required={true}\n                                          disabled={true}\n                                        >\n                                          <option value=\"\">123</option>\n                                          <option value=\"\">345</option>\n                                          <option value=\"\"></option>\n                                          {this.createSelectNumbers()}\n                                        </AvField>\n                                      </AvGroup>\n                                    </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(SupplierDetailUpdateForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailUpdateForm from \"../SupplierForm/SupplierDetailUpdate\";\nimport {\n  getSupplierDetails,\n  updateSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetailUpdate extends React.Component {\n  state = {\n    supplierdetaillistvalue: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierDetails();\n    const supplierdetailid = this.props.match.params.id;\n    const supplierdetaillistvalue = this.props.supplierdetaillistvalue[\n      supplierdetailid\n    ];\n    this.setState({ supplierdetaillistvalue });\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, supplierdetaillistvalue } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Set Up</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail Update</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailUpdateForm\n            supplierdetaillistvalue={supplierdetaillistvalue}\n            submit={this.submit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetailUpdate.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails, updateSupplierDetails }\n)(SupplierDetailUpdate);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem, Button, Alert } from \"reactstrap\";\nimport { getSupplierDetails } from \"../../../../actions/Supplier\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass Supplierlist extends React.Component {\n  state = {\n    supplierdetaillist: [],\n    count: 0,\n    loading: false\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getSupplierDetails();\n  }\n  componentWillReceiveProps(props) {\n    let supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    //supplierdetaillistvalue= supplierdetaillistvalue.sort((a, b) => b.suppliernumber.toString().toLowerCase().localeCompare(a.suppliernumber.toString().toLowerCase()));\n\n    supplierdetaillistvalue.sort(function(a, b){\n      return parseInt(b.suppliernumber) - parseInt(a.suppliernumber);\n    });\n    const count = supplierdetaillistvalue.length;\n    const supplierdetaillist = supplierdetaillistvalue.map(\n      (supplierdata, i) => {\n        return {\n          suppliernumber: supplierdata.suppliernumber,\n          suppliername: supplierdata.suppliername,\n          suppliergstnumber: supplierdata.suppliergstnumber,\n          supplierAddress:\n            supplierdata.supplieraddress1 +\n            \" \" +\n            supplierdata.supplieraddress2 +\n            \" \" +\n            supplierdata.city +\n            \" \" +\n            supplierdata.state +\n            \" \" +\n            supplierdata.country +\n            \" \" +\n            supplierdata.pincode,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(supplierdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          )\n        };\n      }\n    );\n    this.setState({ supplierdetaillist, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/supplierdetail_update/${id}`;\n    this.props.history.push(path);\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { supplierdetaillist, count, loading } = this.state;\n    const columnvalue = [\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier GST\",\n        field: \"suppliergstnumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Address\",\n        field: \"supplierAddress\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier list</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={supplierdetaillist}\n                className=\"supplierlist\"\n              />\n            </div>\n          ) : (\n              <div>\n                <Alert color=\"info\">Please add Supplier details</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails }\n)(Supplierlist);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass ItemQuantitySearch extends React.Component {\n  state = {\n    data: {\n      locationid: \"\",\n      itemid: \"\"\n    },\n    locationlistvalue: [],\n    masteritemlistvalues: [],\n    loading: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    console.log('XXXXXXXXXXXXX');\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n  selectitemchange = () => { };\n  \n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          ...this.state,\n          loading: false\n        });\n      })\n      .catch(err => { });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Search Item Quantity</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>location</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"locationid\"\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>Item</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name={`itemid`}\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select Item</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    type=\"submit\"\n                    onClick={this.submit}\n                    style={{ marginTop: \"30px\" }}\n                  >\n                    Find\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ItemQuantitySearch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Alert } from \"reactstrap\";\nimport ItemSearch from \"./TotalQuantityForm/ItemQuantitySearch\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport {\n  totalitemvaluesearch,\n  getMasterItemList\n} from \"../../../actions/Transaction\";\nimport { ar } from \"date-fns/locale\";\n\nclass TotalQuantity extends React.Component {\n  state = {\n    itemlist: [],\n    success: false\n  };\n  componentDidMount() {\n    this.props.getLocationList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    return this.props.totalitemvaluesearch(data).then(data => {\n   \n       //console.log(itemsArray)\n      // var i=0,j,arr = [],count=0,isAllDuplicate=false;\n      // for(i=0;i<data.itemlist.length;i++){\n      //   j=i;\n      //   j = j + 1;\n      //   console.log(data.itemlist[i].itemquantity)\n      //   if(j < data.itemlist.length){\n      //     if(data.itemlist[i].itemname == data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[i].itemquantity)\n      //       isAllDuplicate = true;\n      //     }\n      //     else if(data.itemlist[i].itemname != data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[j].itemquantity)\n      //       if(count > 0)\n      //         data.itemlist[i].itemquantity = count\n      //       arr.push(data.itemlist[i])\n      //       count=0;\n      //       isAllDuplicate=false;\n      //     }\n      //   }\n      //   else if(j == data.itemlist.length){\n      //     console.log(data.itemlist[i].itemquantity)\n      //      if(count > 0)\n      //          data.itemlist[i].itemquantity = data.itemlist[i].itemquantity + count\n      //   }\n\n        \n      // }\n\n      // //console.log(count)\n      // //console.log(i)\n      // if(isAllDuplicate){\n      //   i > data.itemlist.length - 1 ?  arr.push(data.itemlist[i-1]) : arr.push(data.itemlist[i])\n      // }\n        \n\n      // console.log(arr)\n\n      // data.itemlist = arr;\n      \n      \n      const itemlist = data.itemlist.map(item => {\n        return {\n          // locationname: item.locationname,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist,\n        success: true\n      });\n   \n    });\n  };\n  render() {\n    const { success, itemlist } = this.state;\n    const columnvalue = [\n      // {\n      //   label: \"location\",\n      //   field: \"locationname\",\n      //   sort: \"asc\",\n      //   width: 40\n      // },\n      {\n        label: \"Item Code\",\n        field: \"itemname\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Item Description\",\n        field: \"itemdescription\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Quantity\",\n        field: \"itemquantity\",\n        sort: \"asc\",\n        width: 40\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transaction</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Total Item Quantity</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ItemSearch submit={this.submit} />\n        </div>\n        <div className=\"mg-t-20\">\n          {itemlist.length > 0 ? (\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={itemlist}\n              className=\"totalquantity\"\n            />\n          ) : (\n              <div>\n                <Alert color=\"info\" Label>Result Not Found.</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getLocationList, totalitemvaluesearch, getMasterItemList }\n)(TotalQuantity);\n","import axios from 'axios';\n\nexport default {\n  order: {\n    addorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/addorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    updateaddorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/updateworkorder`, {\n          data\n        })\n        .then(res => {\n          return true;\n        });\n    },\n\n    getorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n        .then(res => {\n          return res.data.orderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/order';\nimport { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\nimport { orderListSchema } from '../Schemas/schemas';\n\nconst orderCreated = orderlist => {\n  return {\n    type: ADD_ORDER,\n    orderlist\n  };\n};\n\nconst orderFetched = orderlist => {\n  return {\n    type: ORDER_FETCHED,\n    orderlist\n  };\n};\n\nexport const addorder = data => {\n  return dispatch => {\n    return api.order.addorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\nexport const updateaddorder = data => {\n  return dispatch => {\n    return api.order.updateaddorder(data).then(orderlistvalues => {\n      return true\n    });\n  };\n};\n\n\n\nexport const getorder = () => {\n  return dispatch => {\n    return api.order.getorder().then(orderlist => {\n      console.log(orderlist);\n      const orderlistvalues = orderlist.orderdata;\n      console.log(orderlistvalues);\n      return dispatch(\n        orderFetched(normalize(orderlistvalues, [orderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass OrderForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: [],\n        totalweight: [],\n        readystock: [],\n        firstround: [],\n        secondround: [],\n        thirdround: []\n      },\n      workorderno: '',\n      companydetails: '',\n      contactperson: '',\n      date: new Date(),\n      officeno: '',\n      deliveryschedule: new Date(),\n      orderdate: new Date(),\n      deliveryaddress: '',\n      distance: '',\n      sitecontactperson: '',\n      gstno: '',\n      pono: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    itemlistSelectedOption: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n\n    if (this.props.ID != undefined) {\n      this.getWorkorderDetails(this.props.ID)\n    }\n  }\n\n  getWorkorderDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getsingleworkorder/${id}`)\n      .then(res => {\n\n         if (res.data.orderlist.orderdata.length > 0) {\n           let founddata = res.data.orderlist.orderdata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.workorderno = founddata[0].workorderno;\n           newState.data.companydetails = founddata[0].companydetails;\n           newState.data.contactperson = founddata[0].contactperson;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.officeno = founddata[0].officeno;\n           newState.data.deliveryschedule =  new Date(founddata[0].deliveryschedule);\n           newState.data.orderdate =  new Date(founddata[0].orderdate);\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.distance = founddata[0].distance;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.pono = founddata[0].pono\n           newState.data.sitecontactperson = founddata[0].sitecontactperson\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n               \n              newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.totalweight.push(founddata[0].addeditemlist[i].totalweight)\n              newState.data.selectedItemlist.readystock.push(founddata[0].addeditemlist[i].readystock)\n              newState.data.selectedItemlist.firstround.push(founddata[0].addeditemlist[i].firstround)\n              newState.data.selectedItemlist.secondround.push(founddata[0].addeditemlist[i].secondround)\n              newState.data.selectedItemlist.thirdround.push(founddata[0].addeditemlist[i].thirdround)\n   \n\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState,()=>{\n              console.log(this.state.data.selectedItemlist)\n            });\n\n         \n         \n          // if (founddata[0].addeditemlist.length > 0) {\n          //   founddata[0].addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index);\n          //   })\n          // }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  componentWillReceiveProps(props) {\n\n    console.log(this.props.orderlistvalues);\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const orderlistvalues = Object.keys(this.props.orderlistvalues);\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n    if (this.props.ID == undefined) {\n      const workorderno =\n      orderlistvalues.length > 0 ? 1 + orderlistvalues.length : 1;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        itemlistSelectedOption: newArraySet,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data,\n          workorderno\n        }\n      },() =>{\n        if(orderlistvalues.length == 0)\n          this.getOrderData()\n      });\n    }\n    else{\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        itemlistSelectedOption: newArraySet,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      });\n    }\n\n  }\n\n  getOrderData(){\n    if(Object.keys(this.props.orderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n      .then(res => {\n        console.log(res.data.orderlist.orderdata)\n         //if (res.data.orderlist.orderdata.length > 0) {\n           \n          let workorderno =\n          res.data.orderlist.orderdata.length > 0 ? 1 + res.data.orderlist.orderdata.length : 1;\n\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              workorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChangeDeliveryschedule = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        deliveryschedule: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n      // selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        : selected_item.masteritemshortdescription\n\n      selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n     // selectedItemlist.itemlocation[index] = null;\n\n\n\n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n\n          selectedItemlist.totalweight[index] = \n          selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n          selected_item.masteritemunitwt != \"\" ? (1 * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n          \n        } \n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 1],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, ''],\n          totalweight: [...this.state.data.selectedItemlist.totalweight, ''],\n          readystock: [...this.state.data.selectedItemlist.readystock, ''],\n          firstround: [...this.state.data.selectedItemlist.firstround, ''],\n          secondround: [...this.state.data.selectedItemlist.secondround, ''],\n          thirdround: [...this.state.data.selectedItemlist.thirdround, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    let removeItem = { ...this.state.data };\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemlocation = removeItem.selectedItemlist.itemlocation;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n\n    let remarks = removeItem.selectedItemlist.remarks;\n    let totalweight = removeItem.selectedItemlist.totalweight;\n    let readystock = removeItem.selectedItemlist.readystock;\n    let firstround = removeItem.selectedItemlist.firstround;\n    let secondround = removeItem.selectedItemlist.secondround;\n    let thirdround = removeItem.selectedItemlist.thirdround;\n\n\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n    remarks.splice(index, 1);\n    totalweight.splice(index, 1);\n    readystock.splice(index, 1);\n    firstround.splice(index, 1);\n    secondround.splice(index, 1);\n    thirdround.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks,\n          totalweight,\n          readystock,\n          firstround,\n          secondround,\n          thirdround\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    console.log(selectedItemlist)\n    \n    const selected_item = this.state.masteritemlistvaluesobject[selectedItemlist.id[index]];\n    console.log(selected_item)\n\n\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    const wtperunit = selectedItemlist.totalweight[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit  \n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue ? parseFloat(totalValue).toFixed(2)\n      : '';\n\n\n    selectedItemlist.totalweight[index] = \n    selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n    selected_item.masteritemunitwt != \"\" ? (e.target.value * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n\n    const totalweight = selectedItemlist.totalweight;\n    const readystock = selectedItemlist.readystock;\n    const firstround = selectedItemlist.firstround;\n    const secondround = selectedItemlist.secondround;\n    const thirdround = selectedItemlist.thirdround;\n\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      obj.totalweight = totalweight[i] || null;\n      obj.readystock = readystock[i] || null;\n      obj.firstround = firstround[i] || null;\n      obj.secondround = secondround[i] || null;\n      obj.thirdround = thirdround[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Work Order</ModalHeader>\n              <ModalBody>Work order is edited/generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Work order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='companydetails'>Company Name & address </Label>\n                    <AvField\n                      name='companydetails'\n                      type='text'\n                      id='companydetails'\n                      value={data.companydetails}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='contactperson'>Contact Person</Label>\n                  <AvField\n                    name='contactperson'\n                    type='text'\n                    id='contactperson'\n                    value={data.contactperson || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='officeno'>Office Number</Label>\n                  <AvField\n                    name='officeno'\n                    type='number'\n                    id='officeno'\n                    value={data.officeno || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryschedule'>Delivery Schedule</Label>\n                    <DatePicker\n                    autoComplete=\"new-password\"\n                      selected={data.deliveryschedule}\n                      onChange={this.handleChangeDeliveryschedule}\n                      className='form-control'\n                      autoComplete=\"new-password\"\n                      dateFormat='dd/MM/yyyy'\n                      id='deliveryschedule'\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='orderdate'>Order Date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.orderdate}\n                    onChange={this.handleChangeDeliveryDate}\n                    className='form-control'\n                    autoComplete=\"new-password\"\n                    dateFormat='dd/MM/yyyy'\n                    id='orderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      value={data.deliveryaddress}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='distance'>Distance(KM)</Label>\n                    <AvField\n                      name='distance'\n                      type='text'\n                      id='distance'\n                      value={data.distance}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sitecontactperson'>Site contact person</Label>\n                    <AvField\n                      name='sitecontactperson'\n                      type='text'\n                      id='sitecontactperson'\n                      value={data.sitecontactperson}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='pono'>PO NO</Label>\n                    <AvField\n                      name='pono'\n                      type='number'\n                      id='pono'\n                      value={data.pono}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                            let optionsel = \"\";\n                            let SelVal = {};\n                            if(values.id != undefined) {\n                              if(values.itemshortdescription) {\n                                optionsel = values.itemshortdescription;\n                              }\n                              else {\n                                optionsel = values.itemdescription;\n                              }\n                              SelVal = {\n                                value: values.id._id, label: optionsel\n                              }\n                            }\n                            const itemnameinfo = values.id != undefined ? (\n                              // <AvField\n                              //   type=\"select\"\n                              //   value={values.id._id}\n                              //   name={`selectitem${index}`}\n                              //   onChange={e => this.selectitemchange(e, index)}\n                              //   required={true}\n                              // >\n                              //   <option value=\"\">select Item</option>\n                              //   {this.createSelectItems()}\n                              // </AvField>\n                              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                              ) :\n                              (\n                                // <AvField\n                                //   type=\"select\"\n                                //   name={`selectitem${index}`}\n                                //   value={\n                                //     data.selectedItemlist.id[index]\n                                //   }\n                                //   onChange={e => this.selectitemchange(e, index)}\n                                //   required={true}\n                                // >\n                                //   <option value=\"\">select Item</option>\n                                //   {this.createSelectItems()}\n                                // </AvField>\n                                <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                              )\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={data.selectedItemlist.id[index]}\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalweight${index}`}>Total weight</Label>\n                              <AvField\n                                name={`totalweight${index}`}\n                                type='text'\n                                id={`totalweight${index}`}\n                                value={\n                                  data.selectedItemlist.totalweight[index] \n                                \n                                }\n                                onChange={e => this.weightChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`readystock${index}`}>Ready stock</Label>\n                              <AvField\n                                name={`readystock${index}`}\n                                type='text'\n                                id={`readystock${index}`}\n                                value={\n                                  data.selectedItemlist.readystock[index]\n                                }\n                                onChange={e => this.stockChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`firstround${index}`} >1st round</Label>\n                              <AvField\n                                name={`firstround${index}`}\n                                type='text'\n                                id={`firstround${index}`}\n                                value={\n                                  data.selectedItemlist.firstround[index]\n                                }\n                                onChange={e => this.firstChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`secondround${index}`}>2nd round</Label>\n                              <AvField\n                                name={`secondround${index}`}\n                                type='text'\n                                id={`secondround${index}`}\n                                value={\n                                  data.selectedItemlist.secondround[index]\n                                }\n                                onChange={e => this.secondChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`thirdround${index}`}>3rd round</Label>\n                              <AvField\n                                name={`thirdround${index}`}\n                                type='text'\n                                id={`thirdround${index}`}\n                                value={\n                                  data.selectedItemlist.thirdround[index]\n                                }\n                                onChange={e => this.thirdChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`remarks${index}`}>Remarks</Label>\n                              <AvField\n                                name={`remarks${index}`}\n                                type='text'\n                                id={`remarks${index}`}\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OrderForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { getorder } from '../../../../actions/order';\nimport OrderForm from './OrderForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getorder();\n  }\n  \n  componentWillReceiveProps() {\n    \n  }\n\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      return this.props\n      .updateaddorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n      .addorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Work order</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <OrderForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getorder,\n    getCustomerList,\n    addorder,\n    updateaddorder\n  }\n)(AddOrder);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewOrder extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    orderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getorder();\n    console.log(this.props);\n    if (this.props.orderlistvalues) {\n      let orderlist = Object.values(this.props.orderlistvalues);\n      orderlist.sort(function(a, b){\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\n      });\n      const orderlistvalues = orderlist.map(quotationvalue => {\n        if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n          const DateNow = new Date();\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\n          return {\n            workorderno: quotationvalue.workorderno,\n            companyname: quotationvalue.companydetails,\n            contactperson: quotationvalue.contactperson,\n            officeno: quotationvalue.officeno,\n            view: (\n              <div className=\"actionbuttons\">\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateButton(quotationvalue._id);\n                  }}\n                >\n                  Print\n                </Button>\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateworkorder(quotationvalue._id);\n                  }}\n                >\n                  Edit\n                </Button>\n                </div>\n            ),\n            complete: deliveryDate.getTime() < DateNow.getTime() ? (\n              <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Complete\n            </Button>\n            ) : null\n          };\n        }\n      });  \n      this.setState({ ...this.state, orderlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let orderlist = Object.values(props.orderlistvalues);\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\n    orderlist.sort(function(a, b){\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\n    });\n    console.log(props);\n    const orderlistvalues = orderlist.map(quotationvalue => {\n      if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n      const DateNow = new Date();\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\n      return {\n        workorderno: quotationvalue.workorderno,\n        companyname: quotationvalue.companydetails,\n        contactperson: quotationvalue.contactperson,\n        officeno: quotationvalue.officeno,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        ),\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\n          <Button\n          Label\n          color='primary'\n          onClick={() => {\n            this.updateCompleteOrder(quotationvalue._id);\n          }}\n        >\n          Complete\n        </Button>\n        ) : null        \n      };\n    }\n    });\n    this.setState({ ...this.state, orderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_orderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updateCompleteOrder = id => {\n    let data = this.props.orderlistvalues[id];\n    data['_id'] = id;\n    data['AddedIteminfo'] = data.addeditemlist;\n    data['completed'] = \"yes\";\n    return this.props\n    .updateaddorder(data)\n    .then(data => {\n      this.dataHandler(false);\n      this.props.getorder();\n      window.location.reload(true);\n    })\n    .catch(err => {\n      this.dataHandler(false);\n      throw err;\n    });\n  };\n\n\n  updateworkorder= id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editworkorder/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, orderlistvalues } = this.state;\n    console.log(orderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Work order',\n        field: 'workorderno',\n        sort: 'asc',\n        width: 20\n      },\n      {\n        label: 'Company Name',\n        field: 'companyname',\n        sort: 'asc',\n        width: 30\n      },\n      {\n        label: 'Contact Person',\n        field: 'contactperson',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Office Number',\n        field: 'officeno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Complete',\n        field: 'complete',\n        sort: 'asc',\n        width: 20\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          scrollx=\"true\"\n          rowvalues={orderlistvalues} \n          columnvalue={columnvalue}\n          className=\"orderlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getorder, updateaddorder }\n)(ViewOrder);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getorder } from '../../../../actions/order';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewCompletedOrder extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    orderlistvalues: []\r\n  };\r\n  componentDidMount() {\r\n    this.props.getorder();\r\n    console.log(this.props);\r\n    if (this.props.orderlistvalues) {\r\n      let orderlist = Object.values(this.props.orderlistvalues);\r\n      orderlist.sort(function(a, b){\r\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n      });\r\n      const orderlistvalues = orderlist.map(quotationvalue => {\r\n        if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n          const DateNow = new Date();\r\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n          return {\r\n            workorderno: quotationvalue.workorderno,\r\n            companyname: quotationvalue.companydetails,\r\n            contactperson: quotationvalue.contactperson,\r\n            officeno: quotationvalue.officeno,\r\n            view: (\r\n              <div className=\"actionbuttons\">\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateButton(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Print\r\n                </Button>\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateworkorder(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                </div>\r\n            )\r\n          };\r\n        }\r\n      });  \r\n      this.setState({ ...this.state, orderlistvalues });\r\n      this.dataHandler(false);\r\n    }\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    let orderlist = Object.values(props.orderlistvalues);\r\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\r\n    orderlist.sort(function(a, b){\r\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n    });\r\n    console.log(props);\r\n    const orderlistvalues = orderlist.map(quotationvalue => {\r\n      if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n      const DateNow = new Date();\r\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n      return {\r\n        workorderno: quotationvalue.workorderno,\r\n        companyname: quotationvalue.companydetails,\r\n        contactperson: quotationvalue.contactperson,\r\n        officeno: quotationvalue.officeno,\r\n        view: (\r\n          <div className=\"actionbuttons\">\r\n            <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateButton(quotationvalue._id);\r\n              }}\r\n            >\r\n              Print\r\n            </Button>\r\n            {/* <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateworkorder(quotationvalue._id);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button> */}\r\n            </div>\r\n        ),\r\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\r\n          <Button\r\n          Label\r\n          color='primary'\r\n          onClick={() => {\r\n            this.updateCompleteOrder(quotationvalue._id);\r\n          }}\r\n        >\r\n          Complete\r\n        </Button>\r\n        ) : null        \r\n      };\r\n    }\r\n    });\r\n    this.setState({ ...this.state, orderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_orderpdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n\r\n  updateworkorder= id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/editworkorder/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, orderlistvalues } = this.state;\r\n    console.log(orderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Work order',\r\n        field: 'workorderno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Company Name',\r\n        field: 'companyname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Contact Person',\r\n        field: 'contactperson',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Office Number',\r\n        field: 'officeno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Print',\r\n        field: 'view',\r\n        sort: 'asc',\r\n        width: 20\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/work-order'>Work order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>List</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable \r\n          rowvalues={orderlistvalues} \r\n          columnvalue={columnvalue}\r\n          className=\"orderlist\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    orderlistvalues: state.orderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getorder }\r\n)(ViewCompletedOrder);\r\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  headerfont3: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  headerfont4: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold'\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 10\n  },\n  dcaddress_left: {\n    fontSize: 10\n  },\n  view_border: {\n    border: '1pt solid #000',\n    flexGrow: 1,\n    height: 100\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingLeft: 100\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 10,\n    fontWeight: 'bolder',\n    textAlign: 'center'\n  },\n  header_tintext: {\n    fontSize: 10,\n    fontWeight: 900\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, textAlign: 'left', wordWrap: 'break-word' }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n  console.log(JSON.stringify(orderlistvalues));\n  let data = orderlistvalues.addeditemlist;\n  let totalwt = 0\n  if(data.length > 0){\n   \n    for(var i=0;i<data.length;i++){\n      totalwt += parseFloat(data[i].totalweight)\n    }\n  }\n  console.log('data');\n  console.log(totalwt);\n  totalwt = parseFloat(totalwt)\n  totalwt = totalwt.toFixed(2)\n  const totalrs = orderlistvalues.totalvalue ? orderlistvalues.totalvalue : '';\n  const taxableAmount = orderlistvalues.taxableamount;\n  const date = moment(orderlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(orderlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(orderlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = orderlistvalues.billingaddress;\n  const vendorcode = orderlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = orderlistvalues;\n\n  let {\n    workorderno,\n    companydetails,\n    contactperson,\n    officeno,\n    deliveryschedule,\n    orderdate,\n    gstno,\n    deliveryaddress,\n    distance,\n    sitecontactperson,\n    pono\n  } = orderlistvalues;\n  //orderdate = new Date(orderdate)\n  const purchaseordernumber = orderlistvalues.purchaseordernumber;\n\n  const tax = orderlistvalues.tax ? orderlistvalues.tax : '';\n  const taxpercentage = orderlistvalues.tax ? orderlistvalues.tax / 100 : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = orderlistvalues.selectedcontactlist[0]\n  //     ? orderlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>PO No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{pono}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => r.itemname}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.totalweight} />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.readystock} />\n              <DataTableCell weighting={0.2} getContent={r => r.firstround} />\n              <DataTableCell weighting={0.2} getContent={r => r.secondround} />\n              <DataTableCell weighting={0.2} getContent={r => r.thirdround} />\n              <DataTableCell weighting={0.4} getContent={r => r.remarks} />\n            </TableBody>\n          </Table>\n          \n          <Text>{'\\n'}</Text>\n          \n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        <Text style={{ fontSize: 14, fontWeight: 900, textAlign: 'center', margin: 8 }}>WORK ORDER</Text>\n        <Text style={{ fontSize: 12, fontWeight: 500, textAlign: 'right', margin: 8 }}>Workorder Date : {orderdate}</Text>\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{workorderno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder Date</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{orderdate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table> */}\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>9</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Distance</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{distance} Km</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text>{'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont3}>SL</Text>\n              </TableCell>\n              <TableCell weighting={0.7}>\n                <Text style={styles.headerfont3}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n               \n                getContent={r => <Text style={styles.headerfont4}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                \n                weighting={0.7}\n                getContent={r => <Text style={styles.headerfont4}>{r.itemname}</Text>}\n              />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.totalweight}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.quantity}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.readystock}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.firstround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.secondround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.thirdround}</Text>} />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Text style={styles.headerfont4}>Total Weight : {totalwt}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getorder } from '../../../../actions/order';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewOrder';\n\nclass ViewOrderPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getorder();\n    const quotationid = this.props.match.params.id;\n    console.log(this.props.orderlistvalues);\n    const orderlistvalues = this.props.orderlistvalues[quotationid];\n    orderlistvalues.requestdeliverydate = moment(orderlistvalues.date).format(\n      'DD MMM, YYYY'\n    );\n    orderlistvalues.deliveryschedule = moment(\n      orderlistvalues.deliveryschedule\n    ).format('DD MMM, YYYY');\n    \n    orderlistvalues.orderdate = moment(\n      orderlistvalues.orderdate\n    ).format('DD MMM, YYYY');\n\n    orderlistvalues.addeditemlist = orderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          // itemdiscount: itemlist.itemdiscount.toString()\n          //   ? itemlist.itemdiscount\n          //   : \"0\",\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          totalweight: itemlist.totalweight\n            ? itemlist.totalweight.toString()\n            : '',\n          readystock: itemlist.readystock ? itemlist.readystock.toString() : '',\n          firstround: itemlist.firstround ? itemlist.firstround.toString() : '',\n          secondround: itemlist.secondround\n            ? itemlist.secondround.toString()\n            : '',\n          thirdround: itemlist.thirdround ? itemlist.thirdround.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = orderlistvalues.customerid;\n    const customernumber = orderlistvalues.customernumber;\n    const customername = orderlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(orderlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        orderlistvalues,\n        status: true\n      });\n    },5000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 4000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/orderlist');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    console.log(this.state.orderlistvalues);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrderPdf);\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../../actions/actions\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport moment from \"moment\";\nimport { deleteUser } from \"../../actions/actions\";\n\nclass AdminRole extends React.Component {\n  state = {\n    count: \"\",\n    userdata: []\n  };\n\n  updateButton = id => {\n    let path = `/updateuser/${id}`;\n    this.props.history.push(path);\n  };\n\n  deleteButton = id => {\n    this.props.deleteUser(id)\n    .then((data) => {\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  }\n\n  componentDidMount() {\n    this.props.getUser().catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const userlist = Object.values(props.userlist);\n    const userdata = userlist.map((userdata, i) => {\n      return {\n        title: userdata.title,\n        name: `${userdata.firstname} ${userdata.lastname}`,\n        email: userdata.email,\n        phone: userdata.phone,\n        startdat: moment(userdata.startdate).format(\"DD MMM, YYYY\"),\n        enddate: userdata.enddate ? moment(userdata.enddate).format(\"DD MMM, YYYY\"):\" \",\n        persontype: userdata.persontype,\n        department: userdata.department,\n        job: userdata.job,\n        location: userdata.location,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(userdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.deleteButton(userdata.id);\n          }}\n        >\n          Delete\n        </Button>\n        )\n      };\n    });\n    this.setState({ userdata });\n  }\n  render() {\n    const columnvalue = [\n      {\n        label: \"Title\",\n        field: \"title\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Full Name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 270\n      },\n      {\n        label: \"Phone\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 200\n      },\n      {\n        label: \"Start date\",\n        field: \"startdate\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"End date\",\n        field: \"enddate\",\n        sort: \"asc\",\n        width: 150\n      },\n      {\n        label: \"Person type\",\n        field: \"persontype\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Department\",\n        field: \"department\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Job\",\n        field: \"job\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Location\",\n        field: \"location\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100        \n      }\n    ];\n    return (\n      <div style={{ overflow: \"hidden\" }} className=\"mg-t-20\">\n        <DataTable columnvalue={columnvalue} rowvalues={this.state.userdata} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUser,deleteUser }\n)(AdminRole);\n","import React from \"react\";\n\nclass EmployeeRole extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h6>Employee List</h6>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeRole;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass BOMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>BOM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/addproduct\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/viewproductlist\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BOMPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ChallanPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Delivery challan</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addchallan'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Challan</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/challanlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Challan List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ChallanPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass CRMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>CRM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n          \n\n            <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/enquiry'>\n                    <i className='fas fa-envelope fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>New Enquiry</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                     \n                <li className='bg-color-lg-blue'>\n                  <div className='icon-eleme'>\n                    <Link to='/quotationpage'>\n                      <i className='fas fa-credit-card fa-3x'></i>\n                      <div style={{ paddingTop: '5px' }}>\n                        <span>Quotations</span>\n                      </div>\n                    </Link>\n                  </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/customerlist'>\n                    <i className='fas fa-users fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Customer Transaction</span>\n                    </div>\n                    </Link>\n                </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CRMPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass CustomerPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div class=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/AddCustomer\">\n                  <i class=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Add Customer</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n    \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customerinfo\">\n                  <i class=\"fas fa-list fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Customer List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass InventoryPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Setup</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\" style={{'top': '55%', 'width': '55%'}}>\n          <ul className=\"clearfix\">\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemtype\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/masteritemtypelist\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* \n             */}\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/itemspage\">\n                  <i className=\"fas fa-cart-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Items</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n          {/* <li className='bg-colo-lg-red'>\n            <div className='icon-eleme'>\n              <Link to='/productbilling'>\n                <i className='fas fa-kaaba fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                  <span>Item Cost</span>\n                </div>\n              </Link>\n            </div>\n          </li> */}\n\n      \n\n             <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/bomproductlist\">\n                  <i className=\"fa fa-cog fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n            \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Suppliers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customer\">\n                  <i className=\"fas fa-users fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Customers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/financialYearAdd\">\n                  <i className=\"fas fa-calendar-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add/Update FinancialYear</span>\n                  </div>\n                </Link>\n              </div>\n            </li>            \n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InventoryPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice1'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Normal Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice2'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage1 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addinvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n           \n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage1;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage2 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Proforma Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n      \n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addproformainvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/proformainvoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage2;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass ItemsPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Items</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n          <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/madditem\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Item</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemlistvalues\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ItemsPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ManufacturingPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Manufacturing</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n            <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/work-order'>\n              <i className='fas fa-shopping-cart fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Work Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/production'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Production</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ManufacturingPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass MoveOrder extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Move Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/move'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Move Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/moveorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Move Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveOrder;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass OnHandPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/quantitypage'>Quantity</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>On Hand</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addonhand'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Update On Hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>View On hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default OnHandPage;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ProductionPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n            <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Production</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/add-production'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Production</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/productionlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Production list</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProductionPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass PurchaceOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/purchase_order'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>Purchase Order</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/view_purchaseorderlist'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>View Purchase Order List</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PurchaceOrderPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuantityPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quantity</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/receipt_screen'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>PO receipts</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/onhand'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                {/* <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand Old</span>\n                    </div>\n                    </Link>\n                </div>\n                </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuantityPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuotationPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/crmlist'>CRM</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quotation</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addquotation'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Add Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/quotationlist'>\n                    <i className='fas fa-list fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>List Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuotationPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass SupplierPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Supplier</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_detail\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Supplier</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_list\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Supplier List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass TransactionPage extends React.Component {\n  render() {\n    const adminMenu = (\n      <React.Fragment>\n     \n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        {/*  */}\n        \n        {/*  */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-cart-arrow-down fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Inventory</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        \n   \n        \n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/addquotation'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Add Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quotationlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n      \n\n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n          <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const financeMenu = (\n      <React.Fragment>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const purchaseMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_order'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/view_purchaseorderlist'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const salesMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/enquiry'>\n              <i className='fas fa-envelope fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>New Enquiry</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const storeMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/receipt_screen'>\n              <i className='fas fa-dolly-flatbed fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Receive quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/totalitemquantity'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>On hand quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n         <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-folder fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      </React.Fragment>\n    );\n    const productionMenu = (\n      <React.Fragment>\n        \n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    return (\n      <div className='container mg-20'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Transactions</BreadcrumbItem>\n        </Breadcrumb>\n        <div className='admin-dashboard-icons' style={{'top': '55%','width': '55%'}}>\n          <ul className='clearfix'>\n            {this.props.role === 'management'\n              ? adminMenu\n              : this.props.role === 'finance'\n              ? financeMenu\n              : this.props.role === 'purchase'\n              ? purchaseMenu\n              : this.props.role === 'sales'\n              ? salesMenu\n              : this.props.role === 'stores'\n              ? storeMenu\n              : this.props.role === 'production'\n              ? productionMenu\n              : ''}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\nexport default connect(mapStateToProps)(TransactionPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass WorkOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Work order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addorder'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Work Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/orderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Current Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/completedorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Completed Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>              \n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default WorkOrderPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst GuestRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\n    }\n  />\n);\n\nGuestRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GuestRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst UserRoute = ({\n  isAuthenticated,\n  roles,\n  role,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      // return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      if (!isAuthenticated) {\n        return <Redirect to='/login' />;\n      }\n      if (typeof roles === 'string') {\n        if (!(role === roles)) {\n          return <Redirect to='/' />;\n        }\n      } else if (!roles.includes(role)) {\n        return <Redirect to='/' />;\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\n\nUserRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  // role: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token,\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UserRoute);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport AddUser from './Containers/AddUser/AddUser';\nimport UpdateUser from './Containers/AddUser/UpdateUser';\nimport AdminDashboard from './Containers/Admin/AdminDashboard';\nimport ProductBilling from './Containers/Billing/ProductBilling';\nimport LoginPage from './Containers/LoginPage/LoginPage';\nimport AddMaterial from './Containers/Material/AddMaterial';\nimport AddMaterialType from './Containers/Material/AddMaterialType';\nimport UpdateMaterial from './Containers/Material/UpdateMaterial';\nimport UpdateMaterialType from './Containers/Material/UpdateMaterialType';\nimport ProductList from './Containers/Product/Product';\nimport ViewProduct from './Containers/Product/ViewProduct';\nimport ViewProductList from './Containers/Product/ViewProductList';\nimport AddCustomer from './Containers/SetUp/Customer/Customer';\nimport Transaction from './Containers/SetUp/Customer/Transaction';\nimport UpdateCustomer from './Containers/SetUp/Customer/UpdateCustomer';\nimport ViewCustomerTable from './Containers/SetUp/Customer/ViewCustomerTable';\nimport CustomerInfo from './Containers/SetUp/CustomerInfo/CustomerInfo';\nimport CustomerQuotationList from './Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList';\nimport AddFinancialYear from './Containers/SetUp/FinancialYear/AddFinancialYear';\nimport AddChalan from './Containers/Transaction/Challan/Challan/AddChalan';\nimport ViewChallan from './Containers/Transaction/Challan/View/ViewChallan';\nimport ViewChallanPdf from './Containers/Transaction/Challan/View/ViewChallanPdf';\nimport EnquiryPage from './Containers/Transaction/Enquiry';\nimport AddInvoice from './Containers/Transaction/Invoice/Invoice/AddInvoice';\nimport AddProformaInvoice from './Containers/Transaction/Invoice/Invoice/AddProformaInvoice';\nimport ViewInvoice from './Containers/Transaction/Invoice/View/ViewInvoice';\nimport ViewInvoicePdf from './Containers/Transaction/Invoice/View/ViewInvoicePdf';\nimport ViewProformaInvoice from './Containers/Transaction/Invoice/View/ViewProformaInvoice';\nimport ViewProformaInvoicePdf from './Containers/Transaction/Invoice/View/ViewProformaInvoicePdf';\nimport AddMasterItemList from './Containers/Transaction/Item/ItemList/AddMasterItemList';\nimport MasterItemList from './Containers/Transaction/Item/ItemList/MasterItemListValues';\nimport UpdateMasterItemList from './Containers/Transaction/Item/ItemList/UpdateMasterItemList';\nimport MasterItemType from './Containers/Transaction/Item/ItemType/ItemMasterType';\nimport MasterItemTypeList from './Containers/Transaction/Item/ItemType/ItemMasterTypeList';\nimport UpdateMasterItemType from './Containers/Transaction/Item/ItemType/UpdateItemMasterType';\nimport ReceiptScreen from './Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen';\nimport ViewReceiptPdf from './Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt';\nimport MoveOrderScreen from './Containers/Transaction/MoveOrder/MoveOrderScreen';\nimport ViewMoveOrder from './Containers/Transaction/MoveOrder/View/ViewMoveOrder';\nimport ViewItemsMoveOrder from './Containers/Transaction/MoveOrder/View/viewOrderItems';\nimport AddOnHand from './Containers/Transaction/OnHand/AddOnHand';\nimport AddProduction from './Containers/Transaction/ProductionScreen/Production/AddProduction';\nimport ViewProudction from './Containers/Transaction/ProductionScreen/View/ViewProudction';\nimport PurchaseOrder from './Containers/Transaction/PurchaseOrder/PurchaseOrder';\nimport ViewPurchaseOrderList from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList';\nimport ViewPurchaseOrderPdf from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf';\nimport AddQuotation from './Containers/Transaction/Quotation/Quotation/AddQuotation';\nimport ViewQuotation from './Containers/Transaction/Quotation/View/ViewQuotation';\nimport ViewQuotationPdf from './Containers/Transaction/Quotation/View/ViewQuotationPdf';\nimport SupplierContact from './Containers/Transaction/Supplier/SupplierContact/SupplierContact';\nimport SupplierDetail from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetail';\nimport SupplierDetailUpdate from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate';\nimport SupplierList from './Containers/Transaction/Supplier/SupplierDetail/Supplierlist';\nimport TotalQuantity from './Containers/Transaction/TotalQuantityScreen/TotalQuantity';\nimport AddOrder from './Containers/Transaction/WorkOrder/Order/AddOrder';\nimport ViewOrder from './Containers/Transaction/WorkOrder/View/ViewOrder';\nimport ViewCompletedOrder from './Containers/Transaction/WorkOrder/View/ViewCompletedOrder';\nimport ViewOrderPdf from './Containers/Transaction/WorkOrder/View/ViewOrderPdf';\nimport ViewAdmin from './Containers/View/AdminRole';\nimport ViewEmployee from './Containers/View/EmployeeRole';\nimport './global/global.scss';\nimport BOMPage from './Pages/BOMPage';\nimport ChallanPage from './Pages/Challan';\nimport CRMPage from './Pages/CRMPage';\nimport CustomerPage from './Pages/CustomerPage';\nimport InventoryPage from './Pages/InventoryPage';\nimport InvoicePage from './Pages/InvoicePage';\nimport InvoicePage1 from './Pages/InvoicePage1';\nimport InvoicePage2 from './Pages/InvoicePage2';\nimport ItemsPage from './Pages/ItemsPage';\nimport ManufacturingPage from './Pages/ManufacturingPage';\nimport MoveOrder from './Pages/MoveOrder';\nimport OnHandPage from './Pages/OnHandPage';\nimport ProductionPage from './Pages/Production';\nimport PurchaceOrderPage from './Pages/PurchaceOrderPage';\nimport QuantityPage from './Pages/QuantityPage';\nimport QuotationPage from './Pages/QuotationPage';\nimport SupplierPage from './Pages/SupplierPage';\nimport TransactionPage from './Pages/TransactionPage';\nimport WorkOrderPage from './Pages/WorkOrder';\nimport GuestRoute from './Routes/GuestRoute';\nimport UserRoute from './Routes/UserRoute';\nimport { Roles } from './Services/Roles';\n\n\n\n\n\n\n\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route path='/' exact component={LoginPage} />\n        <GuestRoute path='/login' exact component={LoginPage} />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/admin_dashboard'\n          exact\n          component={AdminDashboard}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adduser'\n          exact\n          component={AddUser}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adminlist'\n          exact\n          component={ViewAdmin}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/employeelist'\n          exact\n          component={ViewEmployee}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/updateuser/:id'\n          exact\n          component={UpdateUser}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/enquiry'\n          exact\n          component={EnquiryPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addproduct'\n          exact\n          component={ProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproductlist'\n          exact\n          component={ViewProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/bomproductlist'\n          exact\n          component={BOMPage}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproduct/:id'\n          exact\n          component={ViewProduct}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/add_itemtype'\n          exact\n          component={AddMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_itemtype/:id'\n          exact\n          component={UpdateMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/additem'\n          exact\n          component={AddMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_material/:id'\n          exact\n          component={UpdateMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productbilling'\n          exact\n          component={ProductBilling}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/inventory_page'\n          exact\n          component={InventoryPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[\n            Roles.ADMIN,\n            Roles.FINANCE,\n            Roles.PURCHASE,\n            Roles.SALES,\n            Roles.STORE,\n            Roles.PRODUCTION\n          ]}\n          path='/transaction_page'\n          exact\n          component={TransactionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice'\n          exact\n          component={InvoicePage}\n        />\n          <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice1'\n          exact\n          component={InvoicePage1}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice2'\n          exact\n          component={InvoicePage2}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/delivery-challan'\n          exact\n          component={ChallanPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addonhand'\n          exact\n          component={AddOnHand}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move-order'\n          exact\n          component={MoveOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move'\n          exact\n          component={MoveOrderScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/moveorderlist'\n          exact\n          component={ViewMoveOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_ItemsOrder/:id'\n          exact\n          component={ViewItemsMoveOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/work-order'\n          exact\n          component={WorkOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/editworkorder/:id'\n          exact\n          component={AddOrder}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/manufacturing'\n          exact\n          component={ManufacturingPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customer'\n          exact\n          component={CustomerPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/financialYearAdd'\n          exact\n          component={AddFinancialYear}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/transaction/:id'\n          exact\n          component={Transaction}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier'\n          exact\n          component={SupplierPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/quotationpage'\n          exact\n          component={QuotationPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/quantitypage'\n          exact\n          component={QuantityPage}\n        />\n\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/itemspage'\n          exact\n          component={ItemsPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtype'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtypelist'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/masteritemtypelist'\n          exact\n          component={MasterItemTypeList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/madditem'\n          exact\n          component={AddMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemlistvalues'\n          exact\n          component={MasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/m_updateitemlist/:id'\n          exact\n          component={UpdateMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_mitemtype/:id'\n          exact\n          component={UpdateMasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order'\n          exact\n          component={PurchaseOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_orderpage'\n          exact\n          component={PurchaceOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderpdf/:id'\n          exact\n          component={ViewPurchaseOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderlist'\n          exact\n          component={ViewPurchaseOrderList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_detail'\n          exact\n          component={SupplierDetail}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_contact'\n          exact\n          component={SupplierContact}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order_update/:id'\n          exact\n          component={PurchaseOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplierdetail_update/:id'\n          exact\n          component={SupplierDetailUpdate}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_list'\n          exact\n          component={SupplierList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/receipt_screen'\n          exact\n          component={ReceiptScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/viewreceipt'\n          exact\n          component={ViewReceiptPdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/totalitemquantity'\n          exact\n          component={TotalQuantity}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/onhand'\n          exact\n          component={OnHandPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/AddCustomer'\n          exact\n          component={AddCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/customerlist'\n          exact\n          component={ViewCustomerTable}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/crmlist'\n          exact\n          component={CRMPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/updatecustomer/:id'\n          exact\n          component={UpdateCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerinfo'\n          exact\n          component={CustomerInfo}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/addquotation'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/editquotation/:id'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/quotationlist'\n          exact\n          component={ViewQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/view_quotationpdf/:id'\n          exact\n          component={ViewQuotationPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerquotationlist/:id'\n          exact\n          component={CustomerQuotationList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addinvoice'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addproformainvoice'\n          exact\n          component={AddProformaInvoice}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editinvoice/:id'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editproformainvoice/:id'\n          exact\n          component={AddProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addchallan'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editchallan/:id'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addorder'\n          exact\n          component={AddOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/orderlist'\n          exact\n          component={ViewOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/completedorderlist'\n          exact\n          component={ViewCompletedOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoicelist'\n          exact\n          component={ViewInvoice}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/proformainvoicelist'\n          exact\n          component={ViewProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/challanlist'\n          exact\n          component={ViewChallan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productionlist'\n          exact\n          component={ViewProudction}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_invoicepdf/:id'\n          exact\n          component={ViewInvoicePdf}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_proformainvoicepdf/:id'\n          exact\n          component={ViewProformaInvoicePdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_orderpdf/:id'\n          exact\n          component={ViewOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_challanpdf/:id'\n          exact\n          component={ViewChallanPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/production'\n          exact\n          component={ProductionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/add-production'\n          exact\n          component={AddProduction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport user from '../reducer/user';\nimport userlist from '../reducer/userlist';\nimport materialoptionlist from '../reducer/materialoptionlist';\nimport materiallistvalues from '../reducer/materiallistvalues';\nimport productlistvalues from '../reducer/productlistvalues';\nimport masteritemtypenamevalue from '../reducer/masteritemtypenamevalue';\nimport masteritemtypelistvalues from '../reducer/masteritemlistnamevalue';\nimport suppliercontactlistvalue from '../reducer/suppliercontactlistvalue';\nimport supplierdetaillistvalue from '../reducer/supplierdetaillistvalue';\nimport uomlistvalue from '../reducer/uomlistvalue';\nimport currencylistvalue from '../reducer/currencylistvalue';\nimport locationlistvalue from '../reducer/locationlistvalue';\nimport purchaseorderlistvalue from '../reducer/purchaseorderlistvalue';\nimport receiptlistvalues from '../reducer/receiptlistvalues';\nimport customerlistvalues from '../reducer/customerlistvalues';\nimport quotationlistvalues from '../reducer/quotationlistvalues';\nimport invoicelistvalues from '../reducer/invoicelistvalues';\nimport proformainvoicelistvalues from '../reducer/proformainvoicelistvalues';\n\nimport challanlistvalues from '../reducer/challanlistvalues';\nimport orderlistvalues from '../reducer/orderlistvalues';\nimport productionlistvalues from '../reducer/productionlistvalues';\nimport moveorderlistvalues from '../reducer/moveorderlistvalues';\nimport customertransationvalues from '../reducer/customertransationvalues';\n\nimport { USER_LOGGED_OUT } from '../Services/types';\n\nconst appReducer = combineReducers({\n  user: user,\n  userlist: userlist,\n  materialoption: materialoptionlist,\n  materiallistvalues: materiallistvalues,\n  productlistvalues: productlistvalues,\n  masteritemtypenamevalue: masteritemtypenamevalue,\n  masteritemlistvalues: masteritemtypelistvalues,\n  suppliercontactlistvalue: suppliercontactlistvalue,\n  supplierdetaillistvalue: supplierdetaillistvalue,\n  uomlistvalue: uomlistvalue,\n  currencylistvalue: currencylistvalue,\n  locationlistvalue: locationlistvalue,\n  purchaseorderlistvalue: purchaseorderlistvalue,\n  receiptlistvalues: receiptlistvalues,\n  customerlistvalues: customerlistvalues,\n  customertransationvalues: customertransationvalues,\n  quotationlistvalues: quotationlistvalues,\n  invoicelistvalues: invoicelistvalues,\n  proformainvoicelistvalues: proformainvoicelistvalues,\n  challanlistvalues: challanlistvalues,\n  orderlistvalues: orderlistvalues,\n  productionlistvalues: productionlistvalues,\n  moveorderlistvalues: moveorderlistvalues\n});\n\nconst rootReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGGED_OUT:\n      state = {};\n      storage.removeItem('persist:root');\n      return {};\n    default:\n      return appReducer(state, action);\n  }\n};\n\nexport default rootReducer;\n","import storage from \"redux-persist/lib/storage\";\nimport { USER_LOGGED_IN } from \"../Services/types\";\nimport { USER_LOGGED_OUT } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return action.user;\n    case USER_LOGGED_OUT:\n      storage.removeItem(\"persist:root\");\n      return {};\n    default:\n      return state;\n  }\n}\n","import { USER_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_FETCHED:\n      return { ...state, ...action.userlist.entities.users };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_OPTIONS } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_OPTIONS:\n      return {\n        ...state,\n        ...action.materialoption.entities.materialoptions\n      };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.materialsvalues.entities.materialslistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PRODUCT_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCT_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.productlistvalues.entities.productlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_TYPES } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_TYPES:\n      return {\n        ...state,\n        ...action.MasterItemTypeName.entities.masteritemtypenamevalue\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_LIST,DELETE_MASTER_ITEM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_LIST:\n      return {\n        ...state,\n        ...action.MasterItemTypeList.entities.masteritemtypelistvalues\n      };\n    case DELETE_MASTER_ITEM_LIST  : \n      let arrayData = [];\n      Object.keys(state).forEach(function(key, index) {\n        arrayData.push(state[key]);\n      });\n      let fileteredData = arrayData.filter((item, id) => item.id !== action.payload);\n      let obj = {};\n      fileteredData.map((data,ind) => {\n        obj[data.id] = data;\n      });\n      return obj;\n    default:\n      return state;\n  }\n}","import { SUPPLIER_CONTACT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_CONTACT_LIST:\n      return {\n        ...state,\n        ...action.suppliercontactlistvalue.entities.suppliercontactlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_DETAIL_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_DETAIL_LIST:\n      return {\n        ...state,\n        ...action.supplierdetaillistvalue.entities.supplierdetaillistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { UOM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UOM_LIST:\n      return {\n        ...state,\n        ...action.uomlist.entities.uomlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { CURRENCY_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case CURRENCY_LIST:\n      return {\n        ...state,\n        ...action.currencylist.entities.currencylistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { Location_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case Location_LIST:\n      return {\n        ...state,\n        ...action.locationlist.entities.locationlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PURCHASE_ORDER_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PURCHASE_ORDER_LIST:\n      return {\n        ...state,\n        ...action.purchaseorderlistvalues.entities.purchaseorderlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PO_RECEIPT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PO_RECEIPT_LIST:\n      return {\n        ...state,\n        ...action.receiptlistvalues.entities.receiptlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED\n} from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(state)\n  switch (action.type) {\n    case CUSTOMER_CONTACT_FETCHED:\n    \n    case ADD_CUSTOMER_CONTACT:\n      return {\n        ...state,\n        ...action.customerlist.entities.customerlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    CUSTOMERTRANSACTION_FETCHED,\n    ADD_CUSTOMER_TRANSACTION\n  } from \"../Services/types\";\n  \n  export default function(state = {}, action) {\n    console.log(action)\n    switch (action.type) {\n      case CUSTOMERTRANSACTION_FETCHED:\n      return {\n        ...state,\n        ...action.customerlist.entities.customertransationvalues\n      };\n      case ADD_CUSTOMER_TRANSACTION:\n        return {\n          ...state,\n          ...action.customerlist.entities.customertransationvalues\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case QUOTATION_FETCHED:\n    case ADD_QUOTATION:\n      return {\n        ...state,\n        ...action.quotationlist.entities.quotationlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_INVOICE, INVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case INVOICE_FETCHED:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    case ADD_INVOICE:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","\n\nimport { ADD_PROFORMA_INVOICE, PROFORMAINVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PROFORMAINVOICE_FETCHED:\n    case ADD_PROFORMA_INVOICE:\n      return {\n        ...state,\n        ...action.proformainvoicelist.entities.proformainvoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(action)\n  switch (action.type) {\n    case CHALLAN_FETCHED:\n    case ADD_CHALLAN:\n      return {\n        ...state,\n        ...action.challanlist.entities.challanlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ADD_ORDER:\n    case ORDER_FETCHED:\n      return {\n        ...state,\n        ...action.orderlist.entities.orderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCTION_FETCHED:\n    case ADD_PRODUCTION:\n      return {\n        ...state,\n        ...action.productionlist.entities.productionlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MOVEORDER_FETCHED:\n    case ADD_MOVEORDER:\n      return {\n        ...state,\n        ...action.moverorderlist.entities.moveorderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport LocalStorage from \"redux-persist/lib/storage\";\nimport localforage from \"localforage\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   storage: LocalStorage\n// };\n\nconst persistConfig = {\n  key: 'root',\n  storage: localforage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n);\n\nexport default store;\n","import { persistStore } from \"redux-persist\";\nimport store from \"./store\";\n\nexport default persistStore(store);\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCalendarPlus, faCube, faDollyFlatbed, faHome, faKaaba, faUser, faUserFriends, faUsers, faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport jwtDecode from \"jwt-decode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { userLoggedIn } from \"./actions/actions\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport persistor from \"./Store/persistStore\";\nimport store from \"./Store/store\";\nimport setAuthorizationHeader from \"./utils/setAuthorizationHeader\";\n\nlibrary.add(\n  faHome,\n  faDollyFlatbed,\n  faCube,\n  faKaaba,\n  faUsers,\n  faUser,\n  faUsersCog,\n  faUserFriends,\n  faCalendarPlus\n);\n\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n\nif (localStorage.Mob_JWT) {\n  const token = localStorage.Mob_JWT;\n  setAuthorizationHeader(token);\n  var decoded = jwtDecode(localStorage.Mob_JWT);\n  const userinfo = {\n    email: decoded.email,\n    role: decoded.role,\n    token: localStorage.Mob_JWT\n  };\n  store.dispatch(userLoggedIn(userinfo));\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App component={App} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}