{"version":3,"sources":["Images/sign.jpg","Images/js.jpg","Images/mk.jpg","Images/proud.jpg","Images/scaff.jpg","Images/logo.png","fonts/Times New Roman.ttf","Images/seal.jpg","Images/client.png","Services/api.js","utils/setAuthorizationHeader.js","Services/types.js","Schemas/schemas.js","actions/actions.js","Components/Header/Header.js","Containers/AddUser/AddUserForm/AddUserForm.js","Containers/AddUser/AddUser.js","Components/loader/loader.js","Containers/AddUser/AddUserForm/UpdateUserForm.js","Containers/AddUser/UpdateUser.js","Containers/Admin/AdminDashboard.js","actions/Product.js","Services/transactionapi.js","actions/Transaction.js","Containers/Billing/BillingForm/BillingForm.js","Containers/Billing/BillingTable.js","Containers/Billing/ProductBilling.js","Containers/LoginPage/LoginForm/LoginForm.js","Services/Roles.js","Containers/LoginPage/LoginPage.js","Components/Alert/Alert.js","Containers/Material/MaterialForms/AddMaterialForm.js","Components/Table/DatatablePage.js","Containers/Material/AddMaterial.js","Containers/Material/MaterialForms/AddMaterialTypesForm.js","Containers/Material/AddMaterialType.js","Containers/Material/MaterialForms/UpdateMaterialForm.js","Containers/Material/UpdateMaterial.js","Containers/Material/MaterialForms/UpdateMaterialTypesForm.js","Containers/Material/UpdateMaterialType.js","Containers/Product/ProductForm/ProductForm.js","actions/uom.js","Containers/Product/Product.js","Containers/Product/ProductForm/UpdateForm.js","Containers/Product/UpdateProduct.js","Containers/Product/ViewProduct.js","Containers/Product/ViewProductList.js","Containers/SetUp/Customer/AddCustomer/CustomerForm/CustomerForm.js","Containers/SetUp/Customer/ViewCustomerList.js","Services/customerapi.js","actions/customerContact.js","Containers/SetUp/Customer/Customer.js","Containers/SetUp/Customer/Transaction.js","Containers/SetUp/Customer/UpdateCustomer/CustomerForm/UpdateCustomerForm.js","Containers/SetUp/Customer/UpdateCustomer.js","Containers/SetUp/Customer/ViewCustomerTable.js","Containers/SetUp/CustomerInfo/ViewCustomerList.js","Containers/SetUp/CustomerInfo/CustomerInfo.js","Services/quotationapi.js","actions/quotation.js","Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList.js","Containers/SetUp/FinancialYear/AddYear/AddYearForm/AddYearForm.js","Containers/SetUp/FinancialYear/AddFinancialYear.js","actions/financialYearAdd.js","Services/challanapi.js","actions/challan.js","Services/invoiceapi.js","actions/Invoice.js","Containers/Transaction/Challan/Challan/ChallanForm.js","Containers/Transaction/Challan/Challan/AddChalan.js","Containers/Transaction/Challan/View/ViewChallan.js","Containers/Transaction/Challan/View/Component.js","Containers/Transaction/Challan/View/ViewChallanPdf.js","Containers/Transaction/Enquiry.js","Containers/Transaction/Invoice/Invoice/InvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddInvoice.js","Containers/Transaction/Invoice/Invoice/ProformaInvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddProformaInvoice.js","Containers/Transaction/Invoice/View/ViewInvoice.js","Containers/Transaction/Invoice/View/Component.js","Containers/Transaction/Invoice/View/ViewInvoicePdf.js","Containers/Transaction/Invoice/View/ViewProformaInvoice.js","Containers/Transaction/Invoice/View/Component2.js","Containers/Transaction/Invoice/View/ViewProformaInvoicePdf.js","Containers/Transaction/Item/Form/ItemList/AddItemListForm.js","Containers/Transaction/Item/ItemList/ViewMasterItemList.js","Containers/Transaction/Item/ItemList/AddMasterItemList.js","Containers/Transaction/Item/ItemList/MasterItemListValues.js","Containers/Transaction/Item/Form/ItemList/UpdateItemListForm.js","Containers/Transaction/Item/ItemList/UpdateMasterItemList.js","Containers/Transaction/Item/Form/MasterItemTypeForm.js","Containers/Transaction/Item/ItemType/ItemMasterType.js","Containers/Transaction/Item/ItemType/ItemMasterTypeList.js","Containers/Transaction/Item/Form/UpdateMasterItemTypeForm.js","Containers/Transaction/Item/ItemType/UpdateItemMasterType.js","Components/EditTable/EditTable.js","Services/locationapi.js","actions/Location.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptScreenForm.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptTable.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen.js","Containers/Transaction/ItemScreening/ReceiptScreen/Component.js","Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt.js","Services/moveorderapi.js","actions/moveorder.js","Containers/Transaction/MoveOrder/MoveOrderScreenForm/MoveOrderScreenForm.js","Containers/Transaction/MoveOrder/MoveOrderScreen.js","Containers/Transaction/MoveOrder/View/ViewMoveOrder.js","Containers/Transaction/MoveOrder/View/viewOrderItems.js","Containers/Transaction/OnHand/AddOnHandScreenForm/AddOnHandScreenForm.js","Containers/Transaction/OnHand/AddOnHand.js","Services/productionapi.js","actions/Production.js","Containers/Transaction/ProductionScreen/Production/ProductionForm.js","Containers/Transaction/ProductionScreen/Production/AddProduction.js","Containers/Transaction/ProductionScreen/View/ViewProudction.js","Containers/Transaction/PurchaseOrder/PurchaseOrderForm/PurchaseOrderForm.js","Services/supplierapi.js","actions/Supplier.js","Services/currency.js","actions/Currency.js","Containers/Transaction/PurchaseOrder/PurchaseOrder.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList.js","Containers/Transaction/PurchaseOrder/Component.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf.js","Containers/Transaction/Quotation/Quotation/QuotationForm/QuotationForm.js","Containers/Transaction/Quotation/Quotation/AddQuotation.js","Containers/Transaction/Quotation/View/ViewQuotation.js","Containers/Transaction/Quotation/View/viewQuotationListTest.js","Containers/Transaction/Quotation/View/Component.js","Containers/Transaction/Quotation/View/ViewQuotationPdf.js","Containers/Transaction/Quotation/View/ViewNewPDFQuuotation.js","Containers/Transaction/Supplier/SupplierForm/SupplierContact.js","Containers/Transaction/Supplier/SupplierContact/SupplierContact.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetail.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetail.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/Supplierlist.js","Containers/Transaction/TotalQuantityScreen/TotalQuantityForm/ItemQuantitySearch.js","Containers/Transaction/TotalQuantityScreen/TotalQuantity.js","Containers/Transaction/Logs/LogsForm/LogsForm.js","Containers/Transaction/Logs/Logs.js","Services/order.js","actions/order.js","Containers/Transaction/WorkOrder/Order/OrderForm.js","Containers/Transaction/WorkOrder/Order/AddOrder.js","Containers/Transaction/WorkOrder/View/ViewOrder.js","Containers/Transaction/WorkOrder/View/ViewCompletedOrder.js","Containers/Transaction/WorkOrder/View/Component.js","Containers/Transaction/WorkOrder/View/ViewOrderPdf.js","Containers/View/AdminRole.js","Containers/View/EmployeeRole.js","Pages/BOMPage.js","Pages/Challan.js","Pages/CRMPage.js","Pages/CustomerPage.js","Pages/InventoryPage.js","Pages/InvoicePage.js","Pages/InvoicePage1.js","Pages/InvoicePage2.js","Pages/ItemsPage.js","Pages/ManufacturingPage.js","Pages/MoveOrder.js","Pages/OnHandPage.js","Pages/Production.js","Pages/PurchaceOrderPage.js","Pages/QuantityPage.js","Pages/QuotationPage.js","Pages/SupplierPage.js","Pages/TransactionPage.js","Pages/WorkOrder.js","Routes/GuestRoute.js","Routes/UserRoute.js","App.js","serviceWorker.js","Store/rootReducer.js","reducer/user.js","reducer/userlist.js","reducer/materialoptionlist.js","reducer/materiallistvalues.js","reducer/productlistvalues.js","reducer/masteritemtypenamevalue.js","reducer/masteritemlistnamevalue.js","reducer/suppliercontactlistvalue.js","reducer/supplierdetaillistvalue.js","reducer/uomlistvalue.js","reducer/currencylistvalue.js","reducer/locationlistvalue.js","reducer/purchaseorderlistvalue.js","reducer/receiptlistvalues.js","reducer/customerlistvalues.js","reducer/customertransationvalues.js","reducer/quotationlistvalues.js","reducer/invoicelistvalues.js","reducer/proformainvoicelistvalues.js","reducer/challanlistvalues.js","reducer/orderlistvalues.js","reducer/productionlistvalues.js","reducer/moveorderlistvalues.js","Store/store.js","Store/persistStore.js","index.js"],"names":["module","exports","__webpack_require__","p","api","userRegister","userRegisterdata","axios","post","concat","process","then","res","data","userRecord","login","credentials","user","getUser","get","userdata","getUserbyid","id","userRecordData","updateUser","patch","success","deleteUser","delete","addmaterialtype","materialdata","getmaterialstype","materiallist","updatematerialtype","addmaterial","getmaterial","updatematerial","addproduct","getproducts","productlist","updateproduct","deleteproduct","addyear","checkexists","year","updateyear","updateid","catch","err","error","setAuthorizationHeader","token","arguments","length","undefined","defaults","headers","common","authorization","UOM_LIST","CURRENCY_LIST","Location_LIST","userSchema","schema","Entity","idAttribute","uomListSchema","materialOptionSchema","materialListSchema","productListSchema","masterItemTypeNameSchema","masterItemTypeListSchema","supplierContactListSchema","supplierDetailListSchema","currencyListSchema","locationListSchema","purchaseOrderListSchema","customerListSchema","customerTransactionSchema","quotationListSchema","invoiceListSchema","proformainvoiceListSchema","challanListSchema","orderListSchema","productionListSchema","moveorderListSchema","userLoggedIn","type","Header","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","logout","window","location","reload","history","push","toggle","bind","_assertThisInitialized","state","isOpen","isAuthenticated","_createClass","key","value","setState","React","createElement","Navbar","expand","className","NavbarBrand","tag","Link","to","src","logo","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","role","NavItem","NavLink","second_role","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Component","withRouter","connect","e","dispatch","localStorage","removeItem","AddUserForm","_len","args","Array","_key","apply","title","firstname","lastname","email","phone","startdate","Date","enddate","username","password","repassword","active","persontype","second_persontype","department","job","errors","loading","onChange","_objectSpread","_defineProperty","target","name","handleValidSubmit","console","log","submit","myFormRef","reset","response","handleChangeStartDate","date","selectedDate","formattedDate","getDate","getMonth","getFullYear","handleChangeEndDate","handleInvalidSubmit","_this2","_this$state","Alert","color","AvForm","onValidSubmit","onInvalidSubmit","ref","el","Card","CardHeader","CardBody","Row","Col","sm","AvGroup","Label","for","AvField","validate","required","errorMessage","pattern","minLength","maxLength","DatePicker","selected","autoComplete","minDate","dateFormat","maxDate","match","Button","disabled","AddUser","CustomLoader","Loader","height","UpdateUserForm","count","userRecordModified","dateEnd","userlist","UpdateUser","userid","params","AdminDashboard","paddingTop","productlistvalues","productdata","productvalueFetched","normalize","getMaterialsTypes","materialsvalue","materialsdata","materialoption","getMaterial","materialslistvalue","materialsvalues","transactionapi","getUomDetails","uomlist","addMasterItemType","masterItemType","getMasterItemType","masteritemtypes","updateMasterItemType","addMasterItemList","url","method","Accept","Content-Type","masterItemList","getMasterItemList","masteritemlist","updatemasteritemlist","deletemasteritemlist","addPurchaseOrder","purchaseorderlist","updatePurchaseOrder","getPurchaseOrderList","searchponumber","ponumber","purchaseordervalue","addorupdateitemsinlocation","additemsinlocation","getitemlistavaliable","locationid","itemid","totalitemlistvalues","getReceiptList","receiptlist","getMasterItemTypes","masteritemtypenamevalue","masteritemtypenamedata","MasterItemTypeName","masteritemtypelistvalues","masteritemtypelistdata","MasterItemTypeList","getPurchaseOrder","purchaseorderlistvalues","purchaseorderlistdata","purchaseOrderListFetched","totalitemvaluesearch","ProductBilling","product","profit","qty","labourcost","materiallistvalues","createSelectItems","items","map","option","i","filter","productname","_id","masteritemdescription","Object","values","textAlign","masteritemlistvalues","BillingTable","_this$props","selectedProduct","productformvalues","materialTotalCost","productMaterial","productMaterialData","parseFloat","productqty","product_id","masteritemcostperunit","reduce","a","b","subTotal","grandTotal","colSpan","masteritemname","masteritemuom","uomname","toFixed","parseInt","productlistvalue","gloabl","global","Breadcrumb","BreadcrumbItem","BillingForm","LoginForm","JSON","stringify","Roles","ADMIN","EMPLOYEE","ITADMIN","FINANCE","PURCHASE","SALES","STORE","PRODUCTION","LoginPage","dataHandler","Mob_JWT","decoded","jwtDecode","userinfo","AddMaterialForm","materialtype","materialname","materialdescription","materialuom","costperunit","materialrate","materialoptionlistvalues","DatatablePage","scroll","scrollx","columns","columnvalue","rows","rowvalues","MDBDataTable","scrollX","striped","bordered","small","AddMaterial","updateButton","path","addMaterial","view","DataTable","label","field","sort","AddMaterialTypesForm","material","AddMaterialType","materialoptions","addMaterialTypes","MDBBtn","size","AddMaterialOptions","UpdateMaterialForm","materialvalues","updateMaterial","updatematerialdetails","materialid","UpdateMaterialTypesForm","dataRecord","materialoptionobjectlist","UpdateMaterialType","updateMaterialType","UpdateMaterialTypeForm","ProductForm","initialState","createSelectItems3","optionvalue","uomlistvalues","masteritemtypename","split","createSelectItems2","createSelectunfinishedItems","masteritemtype","handleClick","_toConsumableArray","products","productsqty","productsuom","productsqtyinmeter","handleChange","index","materiallistvaluesObject","ProductqtyhandleChange","arr","item","productsweight","masteritemunitwt","ProductuomhandleChange","ProductqtyinmeterhandleChange","removeClick","removeProduct","splice","productMaterials","forEach","v","obj","alert","toggelbutton","getUnitmeasures","uomdata","message","_this3","Modal","ModalHeader","ModalBody","ModalFooter","_React$createElement3","marginTop","paddingLeft","getUomList","uomlistvalue","uomListFetched","Product","propTypes","PropTypes","func","isRequired","UpdateForm","weight","qtyinmeter","uom","UpdateProduct","productvalues","productid","ViewProduct","productMaterialslist","materialitemtype","tablerows","itemlist","marginBottom","fontSize","fontWeight","marginRight","Table","ViewProductList","showModal","setDeleteId","editButton","deleteItem","deleteProduct","setTimeout","edit","deletedData","payload","CustomerForm","customernumber","customername","customercontactnumber","customergstnumber","customeraddress1","customeraddress2","city","pincode","country","codate","getTime","deliveryAddress","address1","address2","visible","sameAsBilling","suppliercontactlistvalue","onDeliveryAddressChange","val","onShowAlert","keys","customerlistvalues","toString","ViewCustomerList","searchcustomername","searchfromdate","searchtodate","backupcustomerlistvalues","fromdatetimestamp","todatetimestamp","componentDidMount","getTransaction","filterCustomer","customervalues","customerdata","Transaction","setItem","dateName","dateValue","getDateByMMDDYYYY","filterBydates","initializeCustomers","ev","_this4","trim","filtereddata","toLowerCase","indexOf","date1","date2","_this5","customer","comparedate","_this$state2","customerBlock","customerapi","addcustomer","getcustomer","customerlist","updatecustomer","getcustomerTransaction","getCustomerList","customerlistvalue","customerListFetched","Customer","addCustomerContact","AddCustomerForm","enquirydate","quotationdate","podate","enquirytimestamp","quotationtimestamp","podatetimestamp","ponum","customerName","getItem","transactionID","customertransationvalues","backupcustomertransationvalues","initializeTransactions","poreceived","gotoPDF","updatePO","podates","put","onChange1","onChange2","customerid","Transactionhistory","enq_Date","_this6","modaldata","_this7","placeholder","customerTransactionBlock","quote","invoice","invoice_link","dc","challan_link","PO","quotation","Qno","po","margin","marginLeft","background","getCustomerTransaction","customerTransactionFetched","UpdateCustomerForm","updateCustomerContact","ViewCustomerTable","CustomerInfo","quotationapi","addquotation","quotationdata","updatequotation","getquotation","quotationlist","searchquotation","customerquotationlist","quotationCreated","quotationlistvalues","quotationFetched","CustomerQuotationList","AddYearForm","exists","updated","currentyear","AddFinancialYear","updateYear","addYear","challanapi","challan","addchallan","challandata","updatechallan","getchallan","challanlist","challanCreated","getChallan","challanlistvalues","challanFetched","invoiceapi","addinvoice","invoicedata","updateinvoice","getinvoice","invoicelist","getproformainvoice","invoiceCreated","invoicelistvalues","invoiceFetched","proformainvoicelist","proformainvoiceFetched","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","ChallanForm","invoicenumber","transactionid","invoiceid","selectedItemlist","itemname","itemdescription","itemtype","itemrate","itemuom","itemlocation","quantity","totalcost","remarks","customerdetail","deliverychallanno","toaddress","mobilenumber","site","vehiclenumber","gstno","otherreference","selectedCustomerID","selectedCustomerName","selectedInvoiceId","selectedInvoiceNumber","customerobjects","supplierdetaillistvalue","supplierdetaillistvalueobject","invoicelistselectedOptions","itemlistSelectedOption","masteritemlistvaluesobject","currencylistvalues","customerlistSelect","locationlistvalue","successmsg","counts","handleInvoiceChange","_ref","_asyncToGenerator","_callee","selectedinvoice","invoiceselected","purchaseordernumber","transId","purchaseorderdate","totalvalue","_context","assign","quotationnumber","itemshortdescription","itemdiscount","addeditemlist","billingaddress","handleChange2","_x","handleChallanDate","handlePODate","selected_id","totalValue","createSelectcustomer","selectitemchange","selected_item","masteritemrate","ID","locationChange","selected_location","onhandlerChange","onSubjectHandler","filterItems","createSelectItemTypes","createSelectCurrencyItems","currencyname","createSelectUomItems","createSelectLocationItems","locationname","quantityChange","remarkChange","unitChange","AddedIteminfo","_this$state$data","supplierdetail","newArraySet","masteritemshortdescription","objset","arrayInvoiceSet","getDCDetails","getChallandata","founddata","newState","arraySet","itemarray","localeCompare","SelVal","SelINV","customStyles","control","base","minHeight","valueContainer","provided","padding","input","indicatorSeparator","display","indicatorsContainer","customerID","Select","classNamePrefix","styles","options","invoiceDisp","defaultValue","optionsel","itemnameinfo","selectedOption","readOnly","currencylistvalue","purchaseorderlistvalue","AddChallan","updateChallan","submitdata","addChallan","ViewChallan","quotationvalue","StyleSheet","textcenter","textright","textleft","paddingleft","pagepadding","section","position","flexDirection","overflow","section_column","myHeight","headerfont","descriptionText","headerfont2","headerfontleft","shippingaddress","row","justifyContent","dcaddress","dcaddress_left","view_border","border","flexGrow","view_border_left","borderLeft","borderTop","borderBottom","view_border_right","borderRight","column","headerwidth","headerwidthdate","headerwidthlogo","header_name","header_sub_name","paddingHorizontal","header_sub_name_phone","header_tintext","header_sub_name3","header_sub_nameB","flex","header_sub_nameA","headerwidthAddress","refstyle","paddingBottom","headerpadding","flexgrow","fontsize18","kindattend","yourref","main","tableheaderbgcolor","backgroundColor","footerfixed","bottom","dc_header","dc_gst","Small","children","Text","Medium","_ref3","textDecorationLine","Bold","_ref5","_ref6","MyDocument","_ref7","financialYear","data_cond","financialyear","toAD","totalrs","taxableAmount","taxableamount","moment","format","grandtotal","deliveryaddress","vendorcode","freightcharges","subtotal","cgst","sgst","igst","total","deliverychallannumber","goodsDescription","roundoffamount","mobileno","pageoneTable","pagetwoTable","pagethreeTable","tax","pageone","pageTwo","pageThree","ele","pageonedata","TableHeader","TableCell","weighting","TableBody","DataTableCell","getContent","r","slno","unit","pagetwodata","Page","View","Image","stye","paddingRight","pagethreedata","tableComponentTwo","datalength","itemimage","weighteach","Document","wordWrap","ViewChallanPdf","status","link","_componentDidMount","quotationid","requestdeliverydate","totalSpacerequired","spaces","repeat","masteritemimage","dynamicClick","document","getElementsByClassName","getElementById","click","href","download","PDFViewer","EnquiryPage","update","enquirylistvalues","backupenquirylistvalues","errorMsg","eno","company","detail","enquiryFrom","getEnquiries","addenquiry","addnewenquiry","updateenquiry","enquirylist","enquirydata","enquiryvalues","enquiry","errormessage","float","InvoiceForm","_customerdetail","_data","transaction","user_email","hsncode","saccode","tcs","tcsamount","selectedQuotationId","selectedQuotationNumber","quotationlistSelect","masteritemtypelistvaluesobject","_objectSpread2","sub","taxable","Number","calculatePercentageAmount","ttl","gst","gt","roa","calculateRoundoffTotal","_objectSpread10","onCustomerChange","onRemarksChange","handleDate","handleWorkorderDate","handleDespathdate","purchaseDate","invocieDate","bool","discountpercentagevalue","discountvalue","totalvaluecost","itemdiscountChange","discount","unitcost","particularindextotalvalue","_objectSpread18","updateQuotation","saveDynamicPonum","createChallanList","handleQuotationChange","selectedquotation","quotationselected","poDate","arrDate","newDate","transportcharge","transportgst","ws","loadingcharges","totalFreight","cgstamount","sgstamount","tcharge","transportationgst","loadingcharge","handleChallanChange","selecteddeliveryChallan","selectedChallan","arrayQuotationSet","getInvoiceDetails","_ref2","_callee2","_context2","lastIndexOf","invoicedate","deliverychallandata","workorderno","workorderdate","despathdate","removaltime","transportationcharge","advanceamountreceived","_x2","_componentWillReceiveProps","_callee3","_context3","_x3","SelQuota","customerDisp","quotationdisp","AddInvoice","valid","ProformaInvoiceForm","itemdiscountcost","totaldiscountcost","itemdiscountamount","transportchargerequired","_objectSpread19","_React$createElement","AddProformaInvoice","ViewInvoice","originalInvoice","profomaInvoice","brandname","padding1","_pagepadding","boxShadow","headerfont4","headerfont5","headerfont3","seal","invoice_header","nobordertable","borderWidth","borderRightWidth","borderBottomWidth","Description","SmallBold","_ref4","amountinwords","Rs","amount","words","number","join","n_length","words_string","n_array","received_n_array","substr","j","cgstval","sgstval","igstval","tcsval","n","op","nums","whole","substring","fraction","RsPaise","discountamount","dispDyn","datanew","firstDat","secondDat","element","Fragment","alignItems","ViewInvoicePdf","text","disc","goBack","ViewProformaInvoice","proformainvoicelistvalues","sessionStorage","getProformaInvoice","MyDocument2","total2","transportationgstper","transportationchargegst","totalaftertransportcharge","sign","ViewProformaInvoicePdf","parse","AddItemListForm","itemName","permeter","perfeet","perinch","masteritemimagefile","masteritemsecondimagefile","filename","secondfilename","onNameChange","_objectSpread3","_objectSpread4","onItemTypeChange","selecteditemtype","selecteditemtypevalue","selectitemid","selecteditemvalues","highestNo","fileSelectedHandler","files","file_size","file_name","file_type","filesize","hasExtension","fileSelectedSecondHandler","formdata","FormData","append","fileName","exts","RegExp","replace","test","encType","accept","cursor","ViewMasterItemList","deleteMasterItemList","masteritemdata","AddmasterItemList","MasterItemListForm","errorHandler","MasterItemListValues","class","UpdateItemListForm","itemImage","itemsecondImage","imageChanged","secondimageChanged","masteritemsecondimage","itemimg","maxWidth","maxHeight","itemsecondimg","UpdateMasterItemList","UpdateMasterItemListForm","MasterItemTypeForm","MasterItemTypename","MasterItemType","ItemMasterTypeList","masteritemtypesvalues","masteritemtypedata","UpdateMasterItemTypeForm","masteritemtypenamevalueobjectlist","UpdateItemMasterType","updateMasterItemTypes","masteritemid","EditTable","poid","poitemid","itemquantity","receivedqty","recevingqty","totalqty","receiptnumber","selectedItem","sucess","loadingvalue","selected_qty","iteminfo","itemlistsubmit","selectedItemlistvalues","tableBody","nowDate","min","max","locationapi","getLocationList","locationlist","locationdata","locationListFetched","ReceiptScreenForm","onhandleChange","ReceiptTable","receiptlistitems","receiptlisttable","receiptvalue","ReceiptScreen","getReceiptlist","searchPoNumber","podata","poItem","datavalue","searchporesult","searchdata","savereport","orderlistvalues","today","poqty","receiptDate","availqty","ViewReceiptPdf","poreceiptvalues","itemcode","TotalRecQty","moveorderapi","moveorder","addmoveorder","moveorderdata","getmoveorder","moveorderlist","getItemsMoveOrder","addMoveOrder","moverorderlistvalues","moverorderlist","getMoveOrder","moveorderFetched","itemorderlist","itemorderlistvalues","itemdata","MoveOrderScreenForm","availableQuantity","moveorderno","fromaddress","tolocationlist","handleChangeDeliveryDate","it","itemdesc","onhandlerFromChange","onhandlerToChange","createToLocationList","moveorderlistvalues","getMovedata","overflowX","MoveOrderScreen","ViewProduction","ViewMoveOrderProduction","moveorderid","receivedData","AddOnHandScreenForm","isAdded","entities","AddOnHand","productionapi","addproduction","productiondata","getproduction","productionlist","productionlistvalues","productionFetched","ProductionForm","totalweight","readystock","firstround","secondround","thirdround","productionorderno","productiondate","subAssembly","dummyProductMapping","assembly","handleChangeCust","products2","productMaterial2","found","calculationArray","calculationdata","quantityPerMeter","quantityPerKg","thickness","weightChange","stockChange","secondChange","firstChange","thirdChange","toggelreload","onthicknessChange","mainindex","onQuantityChange","onQuantityChangeMeter","calc","kg","onQuantityChangeKg","onTotalChange","addItemComp","changeQuantity","getProddata","maninindex","AddProduction","ViewProudction","description","qtyAvaillength","isViewList","productionTodayList","updateTransaction","toggle2","onhandlerChange2","subitem","usedqty","transactionHistrory","time","created_date","month","getHours","getMinutes","getSeconds","view2","viewTransaction","addTransaction","headerBlock","contentBlock","PurchaseOrderForm","isEditdone","suppliernumber","suppliername","supplieraddress1","supplieraddress2","suppliergstnumber","refno","subject","suppliercontactid","quotationno","currency","weighttons","scheduledays","schedulepayment","createSelectSupplier","createSelectSupplierContact","suppliercontactname","onChangePO","_this$state$data2","getPODetails","podetail","supplierid","referenceno","currencyid","supplierapi","addSupplierContact","supplierContactdata","getSupplierContact","suppliercontactlist","addsupplierdetails","getSupplierDetails","supplierdetaillist","updateSupplierContact","suppliercontactlistdata","suppplierContactListFetched","supplierdetaillistdata","suppplierDetailListFetched","getCurrencyList","currencylist","currencydata","currencyListFetched","purchaseOrder","ViewPurchaseOrderlist","purchaseorder","address","suppliercity","supplierstate","supplierpincode","suppliercountry","columnSection","padd6","padding2","headerwidthNew","fontsize18bold","totaleachitem","dateNew","currentMonth","monthString","currentDate","formatDate","created_at","selectecontactlist","selectedcontactlist","suppliercontactnumber","client","ViewPurchaseOrderPdf","purchaseorderid","selectedcontact","contactid","QuotationForm","isRemovedCalled","isVisible","itemsecondimage","transitinsurance","tcshecked","onhandletcsChange","_objectSpread6","onTcsChange","selectitemchange2","getQuotationDetails","quoteno","selCustVal","customerNumber","customerGST","customerAddress","dataelem","F","AddQuotation","ViewQuotation","viewQuotationListTest","Font","register","family","TimesNewRoman","tableHeader","cutoff","whiteSpace","wordBreak","bgblue","padding5","fontbold","smallicon","flexview","fontFamily","BigBold","RedBold","BlackBold","customeraddress","tchargegst","subtotalgst","totalincludegst","proud","makeInIdia","justDial","scaff","thirdDat","fourthDat","fifthDat","schedule","SupplierContactForm","SupplierContact","SupplierDetail","suppliercontactnamelist","suppliercontactdesignation","suppliercontactemail","supplierContacthandleChange","removeContact","contactnameChange","contactdesignationChange","contactnumberChange","contactemailChange","supplierContactinfo","suppliercontactarray","suppliercontactdesignationarray","suppliercontactnumberarray","suppliercontactemailarray","addSupplierDetails","SupplierDetailForm","SupplierDetailUpdateForm","mongoid","SupplierDetailUpdate","updateSupplierDetails","supplierdetailid","Supplierlist","supplierdata","supplierAddress","ItemQuantitySearch","TotalQuantity","ItemSearch","LogsForm","handledate","newQuotation","quot","selDate","quotationDate","newInvoiceList","newProformainvoice","Logs","logslist","order","addorder","orderdata","updateaddorder","getorder","orderlist","orderFetched","OrderForm","companydetails","contactperson","officeno","deliveryschedule","orderdate","distance","sitecontactperson","pono","handleChangeDeliveryschedule","getWorkorderDetails","orderno","getOrderData","_React$createElement2","AddOrder","ViewOrder","updateCompleteOrder","updateworkorder","completed","DateNow","deliveryDate","companyname","ViewCompletedOrder","totalwt","ViewOrderPdf","AdminRole","deleteButton","startdat","userlistvalue","userFetched","EmployeeRole","BOMPage","_Component","ChallanPage","padding-top","CRMPage","CustomerPage","InventoryPage","top","InvoicePage","InvoicePage1","InvoicePage2","ItemsPage","ManufacturingPage","MoveOrder","OnHandPage","ProductionPage","PurchaceOrderPage","QuantityPage","QuotationPage","SupplierPage","TransactionPage","adminMenu","financeMenu","purchaseMenu","salesMenu","storeMenu","productionMenu","WorkOrderPage","component","rest","_objectWithoutProperties","_excluded","Route","render","Redirect","roles","includes","App","exact","GuestRoute","UserRoute","ViewAdmin","ViewEmployee","ProductList","ProductUpdate","UpdateMaterial","ViewMoveOrder","ViewItemsMoveOrder","AddMasterItemList","MasterItemList","UpdateMasterItemType","PurchaseOrder","ViewPurchaseOrderList","SupplierList","AddCustomer","UpdateCustomer","ViewQuotationPdf","ViewNewPDFQuuotation","AddChalan","Boolean","hostname","appReducer","combineReducers","action","storage","users","arrayData","fileteredData","ind","receiptlistvalues","rootReducer","persistConfig","localforage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","persistStore","library","add","faHome","faDollyFlatbed","faCube","faKaaba","faUsers","faUser","faUsersCog","faUserFriends","faCalendarPlus","sexond_role","ReactDOM","BrowserRouter","Provider","PersistGate","persistor","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caea9559.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sign.83a51cee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/js.15986e52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mk.e7f890af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proud.b1a70432.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scaff.184bf216.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd12c247.png\";","module.exports = __webpack_public_path__ + \"static/media/Times New Roman.32441506.ttf\";","module.exports = __webpack_public_path__ + \"static/media/seal.0511c619.jpg\";","module.exports = __webpack_public_path__ + \"static/media/client.e1af59ba.png\";","import axios from \"axios\";\n\nexport default {\n  user: {\n    userRegister: userRegisterdata => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/auth`, {\n          userRegisterdata\n        })\n        .then(res => {\n          return res.data.userRecord;\n        });\n    },\n    login: credentials => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/login`, {\n          credentials\n        })\n        .then(res => {\n          return res.data.user;\n        });\n    },\n    getUser: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuser`)\n        .then(res => {\n          return res.data.userdata;\n        });\n    },\n    getUserbyid: id => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuserbyid?id=${id}`)\n        .then(res => {\n          return res.data.userRecordData;\n        });\n    },\n    updateUser: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/api/updateuser?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    deleteUser: id => {\n      return axios\n      .delete(`${process.env.REACT_APP_BASE_URL}/api/deleteUser?id=${id}`)\n    }\n  },\n  material: {\n    addmaterialtype: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/materialtype/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterialstype: data => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/materialtype/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerialtype: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/materialtype/updatematerialtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    addmaterial: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/material/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterial: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/material/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerial: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/material/updatematerial?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  product: {\n    addproduct: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/product/addproduct`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getproducts: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/product/getproducts`)\n        .then(res => {\n          return res.data.productlist;\n        });\n    },\n    updateproduct: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/product/updateproduct?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    deleteproduct: id => {\n      return axios\n      .delete(\n        `${process.env.REACT_APP_BASE_URL}/product/deleteproduct?id=${id}`\n      )\n    }\n  },\n  year: {\n    addyear: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/year/addyear`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    checkexists: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/year/getyear`)\n        .then(res => {\n          return res.data.year;\n        });\n    },\n    updateyear: data => {\n      return axios\n      .patch(\n        `${process.env.REACT_APP_BASE_URL}/year/updateyear?id=${data.updateid}`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res.data.success;\n      })\n      .catch(err => {\n        return err.data.error;\n      });\n    }\n  }\n};\n","import axios from \"axios\";\nexport default (token = null) => {\n  if (token) {\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.headers.common.authorization;\n  }\n};\n","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\nexport const USER_FETCHED = 'USER_FETCHED';\nexport const MATERIAL_OPTIONS = 'MATERIAL_OPTIONS';\nexport const MATERIAL_VALUES_FETCHED = 'MATERIAL_VALUES_FETCHED';\nexport const PRODUCT_VALUES_FETCHED = 'PRODUCT_VALUES_FETCHED';\nexport const PRODUCT_VALUES_DELETED = 'PRODUCT_VALUES_DELETED';\nexport const MASTER_ITEM_TYPES = 'MASTER_ITEM_TYPES';\nexport const MASTER_ITEM_LIST = 'MASTER_ITEM_LIST';\nexport const DELETE_MASTER_ITEM_LIST = 'DELETE_MASTER_ITEM_LIST';\nexport const SUPPLIER_CONTACT_LIST = 'SUPPLIER_CONTACT_LIST';\nexport const SUPPLIER_DETAIL_LIST = 'SUPPLIER_DETAIL_LIST';\nexport const UOM_LIST = 'UOM_LIST';\nexport const CURRENCY_LIST = 'CURRENCY_LIST';\nexport const Location_LIST = 'LOCATION_LIST';\nexport const PURCHASE_ORDER_LIST = 'PURCHASE_ORDER_LIST';\nexport const PO_RECEIPT_LIST = 'PO_RECEIPT_LIST';\nexport const ADD_CUSTOMER_CONTACT = 'ADD_CUSTOMER_CONTACT';\nexport const CUSTOMER_CONTACT_FETCHED = 'CUSTOMER_CONTACT_FETCHED';\nexport const CUSTOMERTRANSACTION_FETCHED = 'CUSTOMERTRANSACTION_FETCHED';\nexport const ADD_CUSTOMER_TRANSACTION = 'ADD_CUSTOMER_TRANSACTION';\n\nexport const QUOTATION_FETCHED = 'QUOTATION_FETCHED';\nexport const ADD_QUOTATION = 'ADD_QUOTATION';\n\nexport const INVOICE_FETCHED = 'INVOICE_FETCHED';\nexport const PROFORMAINVOICE_FETCHED = 'PROFORMAINVOICE_FETCHED';\nexport const ADD_PROFORMA_INVOICE = 'ADD_PROFORMA_INVOICE';\n\nexport const ADD_INVOICE = 'ADD_INVOICE';\n\nexport const CHALLAN_FETCHED = 'CHALLAN_FETCHED';\nexport const ADD_CHALLAN = 'ADD_CHALAN';\n\nexport const ORDER_FETCHED = 'ORDER_FETCHED';\nexport const ADD_ORDER = 'ADD_ORDER';\n\nexport const PRODUCTION_FETCHED = 'PRODUCTION_FETCHED';\nexport const ADD_PRODUCTION = 'ADD_PRODUCTION';\n\nexport const MOVEORDER_FETCHED = 'MOVEORDER_FETCHED';\nexport const ADD_MOVEORDER = 'ADD_MOVEORDER';\n","import { schema } from 'normalizr';\n\nexport const userSchema = new schema.Entity('users', {}, { idAttribute: 'id' });\n\nexport const uomListSchema = new schema.Entity(\n  'uomlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialOptionSchema = new schema.Entity(\n  'materialoptions',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialListSchema = new schema.Entity(\n  'materialslistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const productListSchema = new schema.Entity(\n  'productlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeNameSchema = new schema.Entity(\n  'masteritemtypenamevalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeListSchema = new schema.Entity(\n  'masteritemtypelistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierContactListSchema = new schema.Entity(\n  'suppliercontactlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierDetailListSchema = new schema.Entity(\n  'supplierdetaillistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const currencyListSchema = new schema.Entity(\n  'currencylistvalue',\n  {},\n  { idAttribute: 'id' }\n);\nexport const locationListSchema = new schema.Entity(\n  'locationlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const purchaseOrderListSchema = new schema.Entity(\n  'purchaseorderlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const receiptListSchema = new schema.Entity(\n  'receiptlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerListSchema = new schema.Entity(\n  'customerlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerTransactionSchema = new schema.Entity(\n  'customertransationvalues',\n  {},\n  { idAttribute: 'customerid' }\n);\n\nexport const quotationListSchema = new schema.Entity(\n  'quotationlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const invoiceListSchema = new schema.Entity(\n  'invoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const proformainvoiceListSchema = new schema.Entity(\n  'proformainvoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const challanListSchema = new schema.Entity(\n  'challanlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const orderListSchema = new schema.Entity(\n  'orderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const productionListSchema = new schema.Entity(\n  'productionlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const moveorderListSchema = new schema.Entity(\n  'moveorderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport setAuthorizationHeader from \"../utils/setAuthorizationHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  USER_FETCHED\n} from \"../Services/types\";\nimport { userSchema } from \"../Schemas/schemas\";\n\nexport const userLoggedIn = user => {\n  return {\n    type: USER_LOGGED_IN,\n    user: user\n  };\n};\n\nexport const userLoggedOut = () => {\n  return {\n    type: USER_LOGGED_OUT,\n    user: {}\n  };\n};\n\nexport const userFetched = userlist => {\n  return {\n    type: USER_FETCHED,\n    userlist\n  };\n};\n\nexport const userRegister = data => {\n  return dispatch => {\n    return api.user.userRegister(data);\n  };\n};\n\nexport const getUser = () => {\n  console.log(\"dispatch action calling\");\n  return dispatch => {\n    return api.user.getUser().then(userlist => {\n      const userlistvalue = userlist.userdata;\n      return dispatch(userFetched(normalize(userlistvalue, [userSchema])));\n    });\n  };\n};\n\nexport const updateUser = data => {\n  return dispatch => {\n    return api.user.updateUser(data);\n  };\n};\n\nexport const deleteUser = id => {\n  return dispatch => {\n    return api.user.deleteUser(id);\n  }\n}\n\nexport const login = credentials => {\n  return dispatch => {\n    return api.user.login(credentials).then(user => {\n      localStorage.Mob_JWT = user.token;\n      setAuthorizationHeader(user.token);\n      var decoded = jwtDecode(localStorage.Mob_JWT);\n      console.log(\"Decoded \", decoded)\n      const userinfo = {\n        email: decoded.email,\n        role: decoded.role,\n        second_role: decoded.second_role,\n        token: localStorage.Mob_JWT\n      };\n      dispatch(userLoggedIn(userinfo));\n    });\n  };\n};\n\nexport const logout = e => {\n  return dispatch => {\n    localStorage.removeItem(\"Mob_JWT\");\n    dispatch(userLoggedOut());\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/actions';\nimport logo from '../../Images/logo.png';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      isAuthenticated: this.props.isAuthenticated\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logout = () => {\n    this.props.logout();\n    window.location.reload();\n    this.props.history.push('/login');\n  };\n  render() {\n    return (\n      <div>\n        <Navbar  expand='md'>\n          <div className='container'>\n            <NavbarBrand tag={Link} to='/'>\n              <div>\n                <img src={logo} alt='scaffolding' style={{ width: '90px' }} />\n              </div>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'admin'\n                ) && (\n                  <NavItem>\n                    <NavLink tag={Link} to='/admin_dashboard'>\n                      <i className='fas fa-home fa-2x'></i>\n                    </NavLink>\n                  </NavItem>\n                )}\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'management' || this.props.role == 'itadmin' || this.props.second_role == 'management' || this.props.second_role == 'itadmin'\n                ) && (\n                  <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                      Users\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem tag={Link} to='/adduser'>\n                        Add User\n                      </DropdownItem>\n                      <DropdownItem tag={Link} to='/adminlist'>\n                        Registered user details\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                )}\n                {/* {!!(this.props.isAuthenticated && this.props.role == \"admin\") &&\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Material & product\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag={Link} to=\"/addmaterialtype\">\n                    Add MaterialTypes \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addmaterial\">\n                    Add Material \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addproduct\">\n                    Add Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/viewproductlist\">\n                    View Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/productbilling\">\n                    Product Billing \n                  </DropdownItem>  \n                </DropdownMenu>\n              </UncontrolledDropdown>\n              } */}\n                {this.props.isAuthenticated ? (\n                  <NavItem>\n                    <NavLink tag={Link} onClick={this.logout}>\n                      Logout\n                    </NavLink>\n                  </NavItem>\n                ) : (\n                  <NavItem>\n                    <NavLink tag={Link} to='/login'>\n                      Login\n                    </NavLink>\n                  </NavItem>\n                )}\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  if (state && state.user) {\n    return {\n      isAuthenticated: !!state.user.token,\n      role: state.user.role,\n      second_role: state.user.second_role\n    };\n  } else {\n    return {\n      isAuthenticated: false,\n      role: 'admin'\n    };\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { logout }\n  )(Header)\n);\n","import React from 'react';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass AddUserForm extends React.Component {\n  state = {\n    data: {\n      title: 'Mr',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: null,\n      username: 'nA',\n      password: '',\n      repassword: '',\n      active: '1',\n      persontype: 'admin',\n      second_persontype: '',\n      department: '1',\n      job: '1',\n      location: '1'\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? <Alert color='info'>user is added</Alert> : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='second_persontype'>Second Role Role</Label>\n                    <span className='required-label'></span>\n                    <AvField\n                      type='select'\n                      name='second_persontype'\n                      id='second_persontype'\n                      onChange={this.onChange}\n                      value={data.second_persontype}\n                    >\n                      <option value=''>Select Second</option>\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>                  \n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='password'\n                      type='password'\n                      id='password'\n                      value={data.password}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                       \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Re Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='repassword'\n                      type='password'\n                      id='re-password'\n                      value={data.repassword}\n                      onChange={this.onChange}\n                      validate={{\n                        match: { value: 'password' },\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                      \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {loading}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default AddUserForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { userRegister } from \"../../actions/actions\";\nimport AddUserForm from \"./AddUserForm/AddUserForm\";\n\nclass AddUser extends React.Component {\n  submit = data => this.props.userRegister(data);\n\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <AddUserForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nAddUser.propTypes = {\n  userRegister: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { userRegister }\n)(AddUser);\n","import React from \"react\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport \"./loader.css\";\nclass CustomLoader extends React.Component {\n    render() {\n        return(\n         <Loader className=\"loaderposition\"\n            type=\"ThreeDots\"\n            color=\"#ed272f\"\n            height=\"100\"\n            width=\"100\"\n         />\n        );\n       }\n}\n\nexport default CustomLoader;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\nimport CustomLoader from '../../../Components/loader/loader';\n\nclass UpdateUserForm extends React.Component {\n  state = {\n    data: {\n      id: '',\n      title: '',\n      firstname: this.props.firstname,\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: '',\n      username: '',\n      password: '',\n      repassword: '',\n      active: '',\n      persontype: '',\n      second_persontype: '',\n      department: '',\n      job: '',\n      location: ''\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    count: ''\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const userRecord = props.userRecord;\n    const userRecordModified = userRecord;\n    userRecordModified.startdate = new Date(userRecord.startdate);\n    // userRecordModified.enddate = new Date(userRecord.enddate);\n    let dateEnd = new Date();\n    try {\n     dateEnd = new Date(userRecordModified.enddate);\n     if(dateEnd == \"Invalid Date\") {\n      dateEnd = null;\n     }\n    }\n    catch (errors) {\n      dateEnd = null;\n    }\n    userRecordModified.enddate = dateEnd;\n    this.setState({ ...this.state.data, data: userRecordModified });\n  }\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(data => {\n        console.log('updateuserform page');\n        console.log(data);\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          {!!success ? (\n            <Alert color='info'>User details is updated successfully</Alert>\n          ) : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                      value={data.title}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n            \n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        disabled={true}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='second_persontype'>Second Role</Label>\n                    <span className='required-label'></span>\n                    <AvField\n                      type='select'\n                      name='second_persontype'\n                      id='second_persontype'\n                      onChange={this.onChange}\n                      value={data.second_persontype}\n                    >\n                      <option value=''>Select Second Role</option>\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>                  \n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                        {data.enddate && data.enddate !== '' ? (\n                        <DatePicker\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />                        \n                      ): null}\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\nUpdateUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateUserForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport UpdateUserForm from \"./AddUserForm/UpdateUserForm\";\n// import api from \"../api\";\nimport { updateUser } from \"../../actions/actions\";\n\nclass UpdateUser extends React.Component {\n  state = {\n    userRecord: \"\"\n  };\n\n  componentDidMount() {\n    const userid = this.props.match.params.id;\n    const userRecord = this.props.userlist[userid];\n    this.setState({ userRecord });\n    // api.user.getUserbyid(userid)\n    // .then((userRecord)=>{\n    //     this.setState({userRecord});\n    // })\n    // .catch((err)=>{\n    //     console.log(\"updateuserfile err\");\n    //     console.log(err);\n    // });\n  }\n\n  submit = data => this.props.updateUser(data);\n\n  render() {\n    const { userRecord, userid } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <UpdateUserForm userRecord={userRecord} submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nUpdateUser.propTypes = {\n  userlist: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  userRecord: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    firstname: PropTypes.string.isRequired,\n    lastname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    startdate: PropTypes.string.isRequired,\n    enddate: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    persontype: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    job: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updateUser }\n)(UpdateUser);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AdminDashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/inventory_page\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Setup</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/transaction_page\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Transactions</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n            {/* <li className=\"bg-color-lg-pk\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-user fa-3x\"></i>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-org\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-users-cog fa-3x\"></i>\n                </Link>\n              </div>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport {\n  MATERIAL_OPTIONS,\n  MATERIAL_VALUES_FETCHED,\n  PRODUCT_VALUES_FETCHED,\n  PRODUCT_VALUES_DELETED\n} from \"../Services/types\";\nimport {\n  materialOptionSchema,\n  materialListSchema,\n  productListSchema\n} from \"../Schemas/schemas\";\n\nexport const productvalueFetched = productlistvalues => {\n  return {\n    type: PRODUCT_VALUES_FETCHED,\n    productlistvalues\n  };\n};\nexport const materialoptionFetched = materialoption => {\n  return {\n    type: MATERIAL_OPTIONS,\n    materialoption\n  };\n};\n\nexport const materialsFetched = materialsvalues => {\n  return {\n    type: MATERIAL_VALUES_FETCHED,\n    materialsvalues\n  };\n};\n\nexport const addproduct = data => {\n  return dispatch => {\n    return api.product.addproduct(data);\n  };\n};\n\nexport const getproducts = data => {\n  return dispatch => {\n    return api.product.getproducts(data).then(data => {\n      const productlistvalues = data.productdata;\n      return dispatch(\n        productvalueFetched(normalize(productlistvalues, [productListSchema]))\n      );\n    });\n  };\n};\n\nexport const deleteProduct = id => {\n  return dispatch => {\n    return api.product.deleteproduct(id).then(deletedData => {\n      return dispatch({\n        type: PRODUCT_VALUES_DELETED,\n        payload: id\n     })\n    })\n  };\n}\n\n\nexport const updateproduct = data => {\n  return dispatch => {\n    return api.product.updateproduct(data);\n  };\n};\n\nexport const addMaterialTypes = data => {\n  return dispatch => {\n    return api.material.addmaterialtype(data);\n  };\n};\n\nexport const updateMaterialType = data => {\n  return dispatch => {\n    return api.material.updatematerialtype(data);\n  };\n};\n\nexport const getMaterialsTypes = () => {\n  return dispatch => {\n    return api.material.getmaterialstype().then(materiallist => {\n      const materialsvalue = materiallist.materialsdata;\n      return dispatch(\n        materialoptionFetched(normalize(materialsvalue, [materialOptionSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterial = data => {\n  return dispatch => {\n    return api.material.addmaterial(data);\n  };\n};\n\nexport const getMaterial = () => {\n  return dispatch => {\n    return api.material.getmaterial().then(materiallist => {\n      const materialslistvalue = materiallist.materialsdata;\n      return dispatch(\n        materialsFetched(normalize(materialslistvalue, [materialListSchema]))\n      );\n    });\n  };\n};\n\nexport const updatematerialdetails = data => {\n  return dispatch => {\n    return api.material.updatematerial(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  uom: {\n    getUomDetails: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n        .then(res => {\n          return res.data.uomlist;\n        });\n    }\n  },\n  transaction: {\n    addMasterItemType: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/transaction/addmasteritemtype`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getMasterItemType: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/transaction/getmasteritemtype`)\n        .then(res => {\n          return res.data.masteritemtypes;\n        });\n    },\n    updateMasterItemType: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/transaction/updatemasteritemtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  transactionMasterItemList: {\n    addMasterItemList: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/addmasteritemlist`,\n        method: \"POST\",\n        data: data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    getMasterItemList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/getmasteritemlist`\n        )\n        .then(res => {\n          return res.data.masteritemlist;\n        });\n    },\n    updatemasteritemlist: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/updatemasteritemlist?id=${data.id}`,\n        method: \"PATCH\",\n        data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    deletemasteritemlist: id => {\n      return axios\n      .delete(\n        `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/deletemasteritemlist?id=${id}`\n      )\n    }\n  },\n  purchaseorder: {\n    addPurchaseOrder: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/addpurchaseorder`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    updatePurchaseOrder: data =>{\n      console.log(data)\n      return axios\n      .post(\n        `${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res;\n      });\n    },\n    getPurchaseOrderList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorderrlist`\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    searchponumber: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/searchpurchaseorderrlist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.purchaseordervalue;\n        });\n    }\n  },\n  addorupdateitemsinlocation: {\n    addorupdateitemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/addorupdateitems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    additemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/additems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    getitemlistavaliable: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/getitemlistavaliable/?locationid=${data.locationid}&itemid=${data.itemid}`\n        )\n        .then(res => {\n          return res.data.totalitemlistvalues;\n        });\n    }\n  },\n  receipt: {\n    getReceiptList: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/receiptinfo/getreceiptinfolist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.receiptlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport {\n  MASTER_ITEM_TYPES,\n  MASTER_ITEM_LIST,\n  PURCHASE_ORDER_LIST,\n  PO_RECEIPT_LIST,\n  DELETE_MASTER_ITEM_LIST\n} from \"../Services/types\";\nimport {\n  masterItemTypeNameSchema,\n  masterItemTypeListSchema,\n  purchaseOrderListSchema,\n  receiptListSchema\n} from \"../Schemas/schemas\";\n\nexport const masterItemTypeNameFetched = MasterItemTypeName => {\n  return {\n    type: MASTER_ITEM_TYPES,\n    MasterItemTypeName\n  };\n};\n\nexport const masterItemTypeListFetched = MasterItemTypeList => {\n  return {\n    type: MASTER_ITEM_LIST,\n    MasterItemTypeList\n  };\n};\n\nexport const purchaseOrderListFetched = purchaseorderlistvalues => {\n  return {\n    type: PURCHASE_ORDER_LIST,\n    purchaseorderlistvalues\n  };\n};\n\nexport const ReceiptListFetched = receiptlistvalues => {\n  return {\n    type: PO_RECEIPT_LIST,\n    receiptlistvalues\n  };\n};\nexport const addMasterItemType = data => {\n  return dispatch => {\n    return api.transaction.addMasterItemType(data);\n  };\n};\n\nexport const updateMasterItemTypes = data => {\n  return dispatch => {\n    return api.transaction.updateMasterItemType(data);\n  };\n};\n\nexport const updatemasteritemlist = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.updatemasteritemlist(data);\n  };\n};\nexport const getMasterItemTypes = () => {\n  return dispatch => {\n    return api.transaction.getMasterItemType().then(masteritemtypes => {\n      const masteritemtypenamevalue = masteritemtypes.masteritemtypenamedata;\n      return dispatch(\n        masterItemTypeNameFetched(\n          normalize(masteritemtypenamevalue, [masterItemTypeNameSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const addMasterItemList = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.addMasterItemList(data);\n  };\n};\n\nexport const deleteMasterItemList = id => {\n  return dispatch => {\n    return api.transactionMasterItemList.deletemasteritemlist(id).then(deletedData => {\n      return dispatch({\n        type: DELETE_MASTER_ITEM_LIST,\n        payload: id\n     })\n    })\n  };\n}\n\nexport const getMasterItemList = () => {\n  return dispatch => {\n    return api.transactionMasterItemList\n      .getMasterItemList()\n      .then(masteritemlist => {\n        const masteritemtypelistvalues = masteritemlist.masteritemtypelistdata;\n        return dispatch(\n          masterItemTypeListFetched(\n            normalize(masteritemtypelistvalues, [masterItemTypeListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const addPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.addPurchaseOrder(data);\n  };\n};\n\n\nexport const updatePurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.updatePurchaseOrder(data);\n  };\n};\n\nexport const getPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.getPurchaseOrderList().then(purchaseorderlist => {\n      const purchaseorderlistvalues = purchaseorderlist.purchaseorderlistdata;\n      return dispatch(\n        purchaseOrderListFetched(\n          normalize(purchaseorderlistvalues, [purchaseOrderListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const searchPoNumber = data => {\n  return dispatch => {\n    return api.purchaseorder.searchponumber(data);\n  };\n};\n\nexport const addorupdateitemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.addorupdateitemsinlocation(data);\n  };\n};\n\nexport const additemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.additemsinlocation(data);\n  };\n};\n\nexport const getReceiptlist = data => {\n  return dispatch => {\n    return api.receipt.getReceiptList(data);\n    // .then(receiptlist => {\n    //   if (receiptlist.count > 0) {\n    //     const receiptlistvalues = receiptlist.receiptlist;\n    //     return dispatch(\n    //       ReceiptListFetched(normalize(receiptlistvalues, [receiptListSchema]))\n    //     );\n    //   }\n    //   return receiptlist;\n    // });\n  };\n};\nexport const totalitemvaluesearch = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.getitemlistavaliable(data);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    data: {\n      product: \"\",\n      profit: \"\",\n      qty: \"\",\n      labourcost: \"\"\n    },\n    productlistvalues: [],\n    errors: {},\n    materiallistvalues: {},\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    this.setState({ ...this.state, productlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const productlistvalues = Object.values(props.productlistvalues);\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const productlistvalues = this.state.productlistvalues;\n    const materiallistvalues = this.state.materiallistvalues;\n    productlistvalues\n      .map((option, i) => option)\n      .filter((option, i) => {\n        if (materiallistvalues[option.productname._id]) {\n          items.push(\n            <option key={i} value={option.id}>\n              {materiallistvalues[option.productname._id].masteritemdescription}\n            </option>\n          );\n        }\n      });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const data = this.props.submit(this.state.data);\n    console.log(data);\n    if (data) {\n      this.setState({ loading: false, errors: {}, success: true });\n    }\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Product Billing</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"product\">Product Id</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"product\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">Please select value</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"profit\">Profit %</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"profit\"\n                      type=\"text\"\n                      id=\"profit\"\n                      value={data.profit}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter profit value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"profit value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"qty\">Quantity</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"qty\"\n                      type=\"text\"\n                      id=\"qty\"\n                      value={data.qty}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter product quantity value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"quantity value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"labourcost\">Labour Cost</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"labourcost\"\n                      type=\"text\"\n                      id=\"labourcost\"\n                      value={data.labourcost}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter labour cost value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"labour cost value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{'textAlign':'center'}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductBilling);\n","import React from \"react\";\n\nclass BillingTable extends React.Component {\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.props;\n    const materialTotalCost =\n      selectedProduct.productMaterial\n        .map((productMaterialData, i) => {\n          return (\n            parseFloat(productMaterialData.productqty) *\n            // parseFloat(productMaterialData.product_id.materialrate) *\n            parseFloat(productMaterialData.product_id.masteritemcostperunit)\n          );\n        })\n        .reduce((a, b) => a + b, 0) * parseFloat(productformvalues.qty);\n    const subTotal =\n      materialTotalCost + parseFloat(productformvalues.labourcost);\n    const profit = (parseFloat(productformvalues.profit) / 100) * subTotal;\n    const grandTotal = subTotal + profit;\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th colSpan=\"4\">\n                {\n                  materiallistvalues[selectedProduct.productname._id]\n                    .masteritemdescription\n                }\n              </th>\n            </tr>\n            <tr>\n              <th>Item Name</th>\n              <th>UOM</th>\n              <th>Unit per Cost</th>\n              <th>Item Qty</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selectedProduct.productMaterial.map((productMaterialData, i) => {\n              return (\n                <tr>\n                  <td>{productMaterialData.product_id.masteritemname}</td>\n                  <td>\n                    {productMaterialData.product_id.masteritemuom.uomname}\n                  </td>\n                  <td>\n                    {productMaterialData.product_id.masteritemcostperunit}\n                  </td>\n                  <td>{productMaterialData.productqty}</td>\n                  <td>\n                    {parseFloat(productMaterialData.productqty).toFixed(2) *\n                      // parseFloat(productMaterialData.product_id.materialrate) *\n                      parseFloat(\n                        productMaterialData.product_id.masteritemcostperunit\n                      ).toFixed(2)}\n                  </td>\n                </tr>\n              );\n            })}\n            <tr>\n              <td colSpan=\"4\">Product Quantity</td>\n              <td>{parseFloat(productformvalues.qty)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Material Total Cost</td>\n              <td>{materialTotalCost}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Labour charge</td>\n              <td>{parseInt(productformvalues.labourcost)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Sub Total</td>\n              <td>{subTotal}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Profit % </td>\n              <td>{profit}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Grand Total</td>\n\n              <td>{grandTotal}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default BillingTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport BillingForm from \"./BillingForm/BillingForm\";\nimport BillingTable from \"./BillingTable\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    productformvalues: {},\n    productlistvalue: {},\n    materiallistvalues: {},\n    selectedProduct: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.props.getMasterItemList();\n  }\n  componentWillReceiveProps(props) {\n    const productlistvalues = props.productlistvalues;\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n  submit = productformvalues => {\n    const selectedProduct = this.props.productlistvalues[\n      productformvalues.product\n    ];\n    if (selectedProduct) {\n      this.setState({ ...this.state, productformvalues, selectedProduct });\n      return {\n        success: { gloabl: \"data exist\" }\n      };\n    } else {\n      return {\n        errors: { global: \"something went wrong\" }\n      };\n    }\n  };\n\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.state;\n\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Cost</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <BillingForm submit={this.submit} />\n        {!!selectedProduct && (\n          <BillingTable\n            selectedProduct={selectedProduct}\n            productformvalues={productformvalues}\n            materiallistvalues={materiallistvalues}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts, getMasterItemList }\n)(ProductBilling);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginForm.scss\";\n\nclass LoginForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    errors: {},\n    loading: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props.submit(this.state.data).catch(err => {\n      console.log(JSON.stringify(err))\n      this.setState({ errors: err.response.data.errors, loading: false });\n      this.props.error(false);\n    });\n  };\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading } = this.state;\n    return (\n      <div className=\"center login-form-parent mg-20\">\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <AvGroup>\n            <div>\n              {!!errors.global ? (\n                <Alert color=\"danger\">{errors.global}</Alert>\n              ) : null}\n\n              {!!errors.email ? (\n                <Alert color=\"danger\">{errors.email}</Alert>\n              ) : null}\n            </div>\n            <Label className='small-font-size' for=\"Email\">Email</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"email\"\n              id=\"Email\"\n              type=\"email\"\n              value={data.email}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a Email\"\n                },\n                pattern: {\n                  value:\n                    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                  errorMessage: \"Please enter valid Email\"\n                }\n              }}\n            />\n          </AvGroup>\n          <AvGroup>\n            <Label className='small-font-size' for=\"password\">Password</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a password\"\n                }\n              }}\n            />\n          </AvGroup>\n          <div style={{ textAlign: \"center\" }}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","export const Roles = {\n  ADMIN: 'management',\n  EMPLOYEE: 'employee',\n  ITADMIN: 'itadmin',\n  FINANCE: 'finance',\n  PURCHASE: 'purchase',\n  SALES: 'sales',\n  STORE: 'stores',\n  PRODUCTION:'production'\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginForm from './LoginForm/LoginForm';\nimport { login } from '../../actions/actions';\nimport { Roles } from '../../Services/Roles';\nimport CustomLoader from '../../Components/loader/loader';\nimport Alert2 from '../../Components/Alert/Alert';\n\nclass LoginPage extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.login(data).then(() => {\n\n      this.dataHandler(false);\n      console.log(this.props.role);\n      if (this.props.role === Roles.ADMIN) {\n        // return this.props.history.push(`/adduser`);\n        return this.props.history.push(`/admin_dashboard`);\n      } else if (this.props.role === Roles.ITADMIN) {\n        return this.props.history.push(`/adminlist`);\n      } else if (\n        this.props.role === Roles.FINANCE ||\n        this.props.role === Roles.PURCHASE ||\n        this.props.role === Roles.SALES ||\n        this.props.role === Roles.STORE ||\n        this.props.role === Roles.PRODUCTION\n      ) {\n        return this.props.history.push(`/transaction_page`);\n      } else {\n\n        return this.props.history.push(`/admin_dashboard`);\n      }\n    });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n\n        <LoginForm submit={this.submit} error={this.dataHandler} />\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  role: PropTypes.string.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  submit: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(LoginPage);\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass Alert2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  render() {\n    return (\n      <div>\n        {/* <Button color=\"danger\" onClick={this.toggle}>\n          {this.props.buttonLabel}\n        </Button> */}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Pondhan Scaffolding</ModalHeader>\n          <ModalBody>\n          {this.props.errormessage}\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"secondary\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Alert2;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass AddMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: null,\n      materialrate: null\n    },\n    materialoptionlistvalues: [],\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Material is added successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Itemname\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid Itemname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">Item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Please select value</option>\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemdescription\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">Item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                       \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                   \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddMaterialForm);\n","import React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./DataTable.css\";\n\nconst DatatablePage = props => {\n  let scroll = false;\n  if(props.scrollx) {\n    scroll = props.scrollx\n  }\n  const data = {\n    columns: props.columnvalue,\n    rows: props.rowvalues\n  };\n\n  return (\n    <MDBDataTable\n      scrollX={scroll}\n      striped\n      bordered\n      small\n      data={data}\n      className={props.className}\n    />\n  );\n};\n\nexport default DatatablePage;\n","import React from \"react\";\nimport AddMaterialForm from \"./MaterialForms/AddMaterialForm\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  addMaterial,\n  getMaterial,\n  getMaterialsTypes\n} from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\n\nclass AddMaterial extends React.Component {\n  state = {\n    materiallist: \"\",\n    count: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_material/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentWillReceiveProps(props) {\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    const materiallist = materiallistvalues.map((materialdata, i) => {\n      return {\n        materialtype: materialdata.materialtype.materialname,\n        materialname: materialdata.materialname,\n        materialdescription: materialdata.materialdescription,\n        materialuom: materialdata.materialuom,\n        materialrate: materialdata.materialrate,\n        costperunit: materialdata.costperunit,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            View / Edit\n          </Button>\n        )\n      };\n    });\n    const count = materiallistvalues.length;\n    this.setState({ ...this.state, materiallist, count });\n  }\n\n  submit = data => {\n    return this.props.addMaterial(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { count, materiallist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"material Type\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Name\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"materialdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"unit of measure\",\n        field: \"materialuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Rate\",\n        field: \"materialrate\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"cost per unit\",\n        field: \"costperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"view / Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Item</BreadcrumbItem>\n        </Breadcrumb>\n        <AddMaterialForm submit={this.submit} />\n        <div>\n          {count > 0 && (\n            <div className=\"container mg-20\">\n              <DataTable columnvalue={columnvalue} rowvalues={materiallist} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAddMaterial.propTypes = {\n  addMaterial: PropTypes.func.isRequired,\n  getMaterial: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMaterial, getMaterial, getMaterialsTypes }\n)(AddMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass AddMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            material:\"\"\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    handleValidSubmit = () => {\n        console.log(this.state.data);\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Material details is Added successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Material data already exist.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Add Item Type</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"material\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.option}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item\"\n                                            },\n                                   \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid materialname\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <AvGroup className=\"mg-20\">\n                                    <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                                        Submit\n                                        {/* {loading} */}\n                                    </Button>\n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nAddMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nexport default AddMaterialTypesForm;","import React from \"react\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport AddMaterialOptions from \"./MaterialForms/AddMaterialTypesForm\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport { addMaterialTypes, getMaterialsTypes } from \"../../actions/Product\";\n\nclass AddMaterialType extends React.Component {\n  state = {\n    count: \"\",\n    materialoptions: []\n  };\n  componentDidMount() {\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_itemtype/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const materialoptionslist = Object.values(props.materialoptions);\n    const materialoptions = materialoptionslist.map((materialdata, i) => {\n      return {\n        materialname: materialdata.materialname,\n        view: (\n          <MDBBtn\n            color=\"info\"\n            size=\"sm\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            view / Edit\n          </MDBBtn>\n        )\n      };\n    });\n    const count = materialoptions.length;\n    this.setState({ ...this.state, materialoptions, count });\n  }\n  submit = data => {\n    return this.props.addMaterialTypes(data).then(data => {\n      this.props.getMaterialsTypes();\n      return data;\n    });\n  };\n  render() {\n    const { count, materialoptions } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div>\n        <div className=\"container mg-20\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Inventory</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Add Item Type</BreadcrumbItem>\n          </Breadcrumb>\n\n          <AddMaterialOptions submit={this.submit} />\n        </div>\n        {count > 0 && (\n          <div className=\"container mg-20\">\n            <DataTable columnvalue={columnvalue} rowvalues={materialoptions} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAddMaterialType.propTypes = {\n  addMaterialTypes: PropTypes.func.isRequired,\n  getMaterialsTypes: PropTypes.func.isRequired,\n  materialoptions: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    materialname: PropTypes.string.isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptions: state.materialoption\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { addMaterialTypes, getMaterialsTypes }\n)(AddMaterialType);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UpdateMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: \"\",\n      materialrate: \"1\"\n    },\n\n    errors: {},\n    materialoptionlistvalues: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.materialvalues;\n    data.materialtype = props.materialvalues.materialtype._id;\n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Item is updated successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader>Add Material</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemname\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid materialname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                      value={data.materialtype}\n                    >\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                      value={data.materialuom}\n                    >\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"ea\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                      \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                 \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateMaterialForm);\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMaterialForm from \"./MaterialForms/UpdateMaterialForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatematerialdetails, getMaterial } from \"../../actions/Product\";\n\nclass updateMaterial extends React.Component {\n  state = {\n    materialvalues: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    const materialid = this.props.match.params.id;\n    const materialvalues = this.props.materiallistvalues[materialid];\n    this.setState({ materialvalues });\n  }\n\n  submit = data => {\n    return this.props.updatematerialdetails(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { materialvalues } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/additem\">Add Item</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <UpdateMaterialForm\n          submit={this.submit}\n          materialvalues={materialvalues}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updatematerialdetails, getMaterial }\n)(updateMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass UpdateMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            materialname:this.props.materialoption.materialname,\n            id:this.props.materialoption.id\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    componentWillReceiveProps(props){\n        const dataRecord = props.materialoption;\n        this.setState({...this.state.data, data:dataRecord});\n    }\n\n    handleValidSubmit = () => {\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            // this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        console.log(this.props);\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Item details is updated successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Item data already exist.</Alert>\n                ) : null}\n                {!!errors.global ? (\n                    <Alert color=\"danger\">Something went wrong,Please try again later.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Update Item</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"materialname\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.materialname}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item name\"\n                                            },\n                                      \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid item name\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                    <div className=\"mg-20\">\n                        <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                            update\n                            {/* {loading} */}\n                        </Button>\n                    </div>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nUpdateMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n      materialoptionobjectlist: state.materialoption\n    };\n}\n\nexport default connect(mapStateToProps,{})(UpdateMaterialTypesForm);","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport UpdateMaterialTypeForm from \"./MaterialForms/UpdateMaterialTypesForm\";\nimport { updateMaterialType,getMaterialsTypes } from \"../../actions/Product\";\n\nclass UpdateMaterialType extends React.Component{\n    state={\n        materialoption:''\n    }\n    \n    componentDidMount(){\n        const materialid = this.props.match.params.id;\n        const materialoption = this.props.materialoptions[materialid];\n        this.setState({materialoption});\n    }\n\n    submit = (data) => this.props.updateMaterialType(data);\n\n\n    render(){\n        const { materialoption } = this.state;\n        return(\n            <div className=\"container mg-20\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/inventory_page\">Inventory</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to=\"/add_itemtype\">Item type</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Item View/Edit</BreadcrumbItem>\n                </Breadcrumb>\n                <UpdateMaterialTypeForm materialoption={materialoption} submit={this.submit} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        materialoptions: state.materialoption\n    }\n}\n\nexport default connect(mapStateToProps,{updateMaterialType,getMaterialsTypes})(UpdateMaterialType);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nclass ProductForm extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      data: {\n        productname: \"\",\n        values: [\"\"],\n        products: [\"\"],\n        productsqty: [\"\"],\n        productsuom: [\"\"],\n        productsqtyinmeter: [\"\"],\n        productsweight: [\"\"]\n      },\n      materiallistvalues: [],\n      uomlistvalues:[],\n      materiallistvaluesObject: {},\n      loading: false,\n      errors: {},\n      success: false\n    };\n  }\n  componentDidMount() {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(this.props.materiallistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n    this.getUnitmeasures()\n  }\n\n  componentWillReceiveProps(props) {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    //const uomlistvalues = Object.values(props.uomlistvalues);\n    // console.log(uomlistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n  }\n\n\n\n  getUnitmeasures(){\n    \n    this.setState({ loading: true });\n \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n    .then(res => {\n      console.log(res.data)\n      if(res.data.uomlist.uomdata.length > 0){\n        this.setState({\n          uomlistvalues:res.data.uomlist.uomdata\n        });\n      }\n      this.setState({ loading: false });\n    },\n    error =>{\n      this.setState({ loading: false });\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n\n  createSelectItems3 = optionvalue => {\n\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues\n    uomlistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.uomname}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItems = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'id': '1',\n    //     'itemname': 'Props'\n    //   },\n    //   {\n    //     'id': '2',\n    //     'itemname': 'MS Span'\n    //   },\n    //   {\n    //     'id': '3',\n    //     'itemname': 'MS Centering sheet'\n    //   },\n    //   {\n    //     'id': '4',\n    //     'itemname': 'Cuplock Vertical'\n    //   },\n    //   {\n    //     'id': '5',\n    //     'itemname': 'Cuoplock horizontal'\n    //   },\n    //   {\n    //     'id': '6',\n    //     'itemname': 'H Frame Scaffolding'\n    //   },\n    //   {\n    //     'id': '7',\n    //     'itemname': 'U Jack/ Base Jack'\n    //   },\n    //   {\n    //     'id': '8',\n    //     'itemname': 'Spigot pins'\n    //   },\n    //   {\n    //     'id': '9',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '10',\n    //     'itemname': 'pressed right cuplers'\n    //   },\n    //   {\n    //     'id': '11',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '12',\n    //     'itemname': 'Shttering clamps'\n    //   }\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    console.log(\"__MATERIAL_LIST_VALUES___\");\n    console.log(materiallistvalues);\n    materiallistvalues.filter((option, i) => {\n      if(option.masteritemtypename != \"\"){\n        if(option.masteritemtypename.split('')[0] == \"3\"){\n          items.push(\n            <option key={i} value={option.masteritemdescription}>\n              {option.masteritemdescription}\n            </option>\n          );\n        }\n      }\n   \n    });\n    return items;\n  };\n\n\n  createSelectItems2 = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'itemname': '50 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '6 mm MS Plate'\n    //   },\n    //   {\n    //     'itemname': 'Prop nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R sheet'\n    //   },\n    //   {\n    //     'itemname': 'Dia10 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': '65mm*6mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '75mm*75mm*8mm L Angle'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS span Bolt'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS Hexagonal nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R. Sheet'\n    //   },\n    //   {\n    //     'itemname': '25mm*25mm*5mm L angle.'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Top cup'\n    //   },\n    //   {\n    //     'itemname': 'Bottom cup'\n    //   },\n    //   {\n    //     'itemname': 'Dia 8 mm Rod'\n    //   },\n    //   {\n    //     'itemname': '20 NB H.R Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Ledger blade'\n    //   },\n    //   {\n    //     'itemname': 'locking pins'\n    //   },\n    //   {\n    //     'itemname': 'Dia 32 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': 'MS pLate'\n    //   },\n    //   {\n    //     'itemname': 'Cup nuts'\n    //   },\n    //   {\n    //     'itemname': 'dia 38 OD pipe'\n    //   },\n    //   {\n    //     'itemname': '40mm*40mm'\n    //   },\n    //   {\n    //     'itemname': '40mm*50mm'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm Ms flat'\n    //   }\n\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.masteritemdescription}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectunfinishedItems = optionvalue => {\n    let items = [];\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      if (option.masteritemtype.masteritemtypename !== optionvalue) {\n        items.push(\n          <option key={i} value={option.id}>\n            {option.masteritemtypename}\n          </option>\n        );\n      }\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        products: [...this.state.data.products, \"\"],\n        productsqty: [...this.state.data.productsqty, \"\"],\n        productsuom: [...this.state.data.productsuom, \"\"],\n        productsqtyinmeter: [...this.state.data.productsqtyinmeter, \"\"]\n      }\n    });\n  };\n  handleChange = (e, index) => {\n    this.state.data.products[index] = e.target.value;\n    const materialuom = this.state.materiallistvaluesObject[\n      this.state.data.products[index]\n    ];\n    this.state.data.productsqty[index] = \"1\";\n    this.state.data.productsuom[index] = materialuom.masteritemuom.uomname;\n    this.state.data.productsqtyinmeter[index] = \"\"\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        products: this.state.data.products,\n        productsuom: this.state.data.productsuom,\n        productsqty: this.state.data.productsqty,\n        productsqtyinmeter: this.state.data.productsqtyinmeter\n      }\n    });\n  };\n\n  ProductqtyhandleChange = (e, index) => {\n    console.log(index);\n    let arr = this.state.materiallistvalues.filter((item) =>{\n      return item.masteritemdescription == e.target.value\n    })\n    console.log(arr)\n    this.state.data.productsqty[index] = e.target.value;\n    this.state.data.productsweight[index] = \n    arr.length > 0 ? (arr[0].masteritemunitwt != 'undefined' && arr[0].masteritemunitwt != 'null' && arr[0].masteritemunitwt != '' ? arr[0].masteritemunitwt : 0) : 0\n    \n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, \n        productsqty: this.state.data.productsqty,\n        productsweight: this.state.data.productsweight\n      }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  ProductuomhandleChange = (e, index) => {\n    console.log(index);\n    this.state.data.productsuom[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsuom: this.state.data.productsuom }\n    });\n  };\n  \n  ProductqtyinmeterhandleChange = (e, index) => {\n    console.log(e.target.value);\n    this.state.data.productsqtyinmeter[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsqtyinmeter: this.state.data.productsqtyinmeter }\n    });\n  };\n  \n  removeClick = (e, index) => {\n    const removeProduct = { ...this.state.data };\n    const products = removeProduct.products;\n    const productsqty = removeProduct.productsqty;\n    const productsuom = removeProduct.productsuom;\n    const productsqtyinmeter = removeProduct.productsqtyinmeter;\n    const values = removeProduct.values;\n    products.splice(index, 1);\n    productsqty.splice(index, 1);\n    productsuom.splice(index, 1);\n    productsqtyinmeter.splice(index, 1);\n    values.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products, productsqty, productsuom,productsqtyinmeter, values }\n    });\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(\"product form data\");\n    console.log(this.state.data);\n    const products = this.state.data.products;\n    const productsqty = this.state.data.productsqty;\n    console.log(productsqty)\n    let productMaterials = [];\n    products.forEach(function (v, i) {\n      var obj = {};\n      obj.product_id = v;\n      obj.productqty = productsqty[i];\n      productMaterials.push(obj);\n    });\n\n    const data = { ...this.state.data, productMaterials };\n    delete data.products;\n    delete data.productsqty;\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            productname: \"\",\n            values: [\"\"],\n            products: [\"\"],\n            productsqty: [\"\"],\n            productsuom: [\"\"],\n            productsqtyinmeter: [\"\"]\n          },\n          materiallistvalues: this.initialState.materiallistvalues,\n          materiallistvaluesObject: this.initialState.materiallistvaluesObject\n        });\n        this.myFormRef.reset();\n\n      })\n      .catch(err => {\n        alert(\"Same product sub assembly is already added.\")\n        window.location.reload()\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  toggelbutton = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,uomlistvalues } = this.state;\n    console.log(\"__STATE_VALUE___DATA_\");\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Product detail is added successfully.</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className='small-font-size-bold'>Subassembly</ModalHeader>\n            <ModalBody >Subassembly is added successfully.</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggelbutton}>\n                Ok\n              </Button>{\" \"}\n\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.productname ? (\n          <Alert Label color=\"danger\">Product Name must be unique id.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Product Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"productname\" Label>Product Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"productname\"\n                      id=\"productname\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">select</option>\n          \n                      {this.createSelectItems(\"FinishedGoods\")}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={12}>\n                  <div>\n                    <div className=\"mg-20\">\n                      <Button color=\"info\" onClick={this.handleClick}>\n                        Add Component\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n\n              {data.values.map((value, index) => {\n                return (<Row key={index}>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qty+${index}`}>\n                        Sub assembly\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n\n                      <AvField\n                        Label\n                        type=\"select\"\n                        name=\"material_qty\"\n                        id={`Material-qty+${index}`}\n                        value={data.productsqty[index] || null}\n                        onChange={e =>\n                          this.ProductqtyhandleChange(e, index)\n                        }\n                      >\n                        <option value=\"\">select</option>\n             \n                        {this.createSelectItems2(\"\")}\n                      </AvField>\n                    </AvGroup>\n\n\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qtymeter+${index}`}>\n                        Quantity\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"text\"\n                      name=\"Material-qtymeter\"\n                      id={`Material-qtymeter+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsqtyinmeter[index]}\n                      onChange={e =>\n                        this.ProductqtyinmeterhandleChange(e, index)\n                      }\n                    >\n                     \n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-uom+${index}`}>\n                        UOM\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"Material-uom\"\n                      id={`Material-uom+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsuom[index]}\n                      onChange={e =>\n                        this.ProductuomhandleChange(e, index)\n                      }\n                    >\n                      <option value=\"\">Select unit</option>\n          \n                      {this.createSelectItems3(\"FinishedGoods\")}\n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  \n                  <Col sm={2}>\n                    <AvGroup style={{ marginTop: \"28px\" }}>\n                      <Button\n                        Label\n                        Label\n                        color='danger'\n                        type=\"button\"\n                        onClick={e => this.removeClick(e, index)}\n                      >\n                        -\n                  </Button>\n\n                    </AvGroup>\n\n                  </Col>\n                </Row>)\n              })}\n              {/* <div>\n                                    <button onClick={this.handleSubmit}>submit</button>\n                                </div> */}\n\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{paddingLeft: 15, paddingTop: 10}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader small-font-size\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.masteritemlistvalues\n    // masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductForm);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport { UOM_LIST } from \"../Services/types\";\nimport { uomListSchema } from \"../Schemas/schemas\";\n\nfunction uomListFetched(uomlist) {\n  return {\n    type: UOM_LIST,\n    uomlist\n  };\n}\n\nexport const getUomList = () => {\n  return dispatch => {\n    return api.uom.getUomDetails().then(uomlist => {\n      const uomlistvalue = uomlist.uomdata;\n      return dispatch(uomListFetched(normalize(uomlistvalue, [uomListSchema])));\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProductForm from \"./ProductForm/ProductForm\";\nimport { addproduct } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport { getUomList } from \"../../actions/uom\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass Product extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    //this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addproduct(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem  Label>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem  Label active>Add Subassembly</BreadcrumbItem>\n        </Breadcrumb>\n        <ProductForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  addproduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addproduct, getMasterItemList,getUomList }\n)(Product);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\r\nimport {\r\n  Button,\r\n  Label,\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nclass UpdateForm extends React.Component {\r\n  state = this.initialState;\r\n\r\n  get initialState() {\r\n    return {\r\n      data: {\r\n        id:\"\",\r\n        productname: \"\",\r\n        values: [\"\"],\r\n        products: [\"\"],\r\n        productsqty: [\"\"],\r\n        productsuom: [\"\"],\r\n        productsqtyinmeter: [\"\"],\r\n        productsweight: [\"\"]\r\n      },\r\n      materiallistvalues: [],\r\n      uomlistvalues:[],\r\n      materiallistvaluesObject: {},\r\n      loading: false,\r\n      errors: {},\r\n      success: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const materiallistvaluesObject = this.props.materiallistvalues;\r\n    const materiallistvalues = Object.values(this.props.materiallistvalues);\r\n    this.setState({\r\n      ...this.state,\r\n      materiallistvalues,\r\n      materiallistvaluesObject\r\n    });\r\n    this.getUnitmeasures()\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    const materiallistvaluesObject = this.props.materiallistvalues;\r\n    const materiallistvalues = Object.values(props.materiallistvalues);\r\n    const data = props.productlistvalues;\r\n\r\n    let productname = data.productname;\r\n\r\n    let weight = [];\r\n    let qty = [];\r\n    let qtyinmeter = [];\r\n    let uom = [];\r\n    let values = [];\r\n    let products = [];\r\n    for (var i=0;i<data.productsweight.length;i++) {\r\n        weight.push(data.productsweight[i]);\r\n        qty.push(data.productMaterial[i].productqty);\r\n        qtyinmeter.push(data.productsqtyinmeter[i]);\r\n        uom.push(data.productsuom[i]);\r\n        values.push(data.productsqtyinmeter[i]);\r\n        products.push(\"\");\r\n    }\r\n\r\n    //const uomlistvalues = Object.values(props.uomlistvalues);\r\n    // console.log(uomlistvalues);\r\n    this.setState({\r\n      ...this.state,\r\n      materiallistvalues,\r\n      materiallistvaluesObject,\r\n      data: {\r\n        ...this.state.data,\r\n        productname: productname,\r\n        productsweight: weight,\r\n        productsqty: qty,\r\n        productsuom: uom,\r\n        productsqtyinmeter: qtyinmeter,\r\n        values: values,\r\n        products:  products,\r\n        id: props.id\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getUnitmeasures(){\r\n    \r\n    this.setState({ loading: true });\r\n \r\n    axios\r\n    .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\r\n    .then(res => {\r\n      console.log(res.data)\r\n      if(res.data.uomlist.uomdata.length > 0){\r\n        this.setState({\r\n          uomlistvalues:res.data.uomlist.uomdata\r\n        });\r\n      }\r\n      this.setState({ loading: false });\r\n    },\r\n    error =>{\r\n      this.setState({ loading: false });\r\n      this.setState({ success: false, message:'Server error.' });\r\n    });\r\n  }\r\n\r\n\r\n  createSelectItems3 = optionvalue => {\r\n\r\n    let items = [];\r\n    const uomlistvalues = this.state.uomlistvalues\r\n    uomlistvalues.filter((option, i) => {\r\n      items.push(\r\n        <option key={i} value={option.uomname}>\r\n          {option.uomname}\r\n        </option>\r\n      );\r\n    });\r\n    return items;\r\n  };\r\n\r\n  createSelectItems = optionvalue => {\r\n\r\n    let items = [];\r\n    // const materiallistvalues = [\r\n    //   {\r\n    //     'id': '1',\r\n    //     'itemname': 'Props'\r\n    //   },\r\n    //   {\r\n    //     'id': '2',\r\n    //     'itemname': 'MS Span'\r\n    //   },\r\n    //   {\r\n    //     'id': '3',\r\n    //     'itemname': 'MS Centering sheet'\r\n    //   },\r\n    //   {\r\n    //     'id': '4',\r\n    //     'itemname': 'Cuplock Vertical'\r\n    //   },\r\n    //   {\r\n    //     'id': '5',\r\n    //     'itemname': 'Cuoplock horizontal'\r\n    //   },\r\n    //   {\r\n    //     'id': '6',\r\n    //     'itemname': 'H Frame Scaffolding'\r\n    //   },\r\n    //   {\r\n    //     'id': '7',\r\n    //     'itemname': 'U Jack/ Base Jack'\r\n    //   },\r\n    //   {\r\n    //     'id': '8',\r\n    //     'itemname': 'Spigot pins'\r\n    //   },\r\n    //   {\r\n    //     'id': '9',\r\n    //     'itemname': 'Pressed swivel cuplers'\r\n    //   },\r\n    //   {\r\n    //     'id': '10',\r\n    //     'itemname': 'pressed right cuplers'\r\n    //   },\r\n    //   {\r\n    //     'id': '11',\r\n    //     'itemname': 'Pressed swivel cuplers'\r\n    //   },\r\n    //   {\r\n    //     'id': '12',\r\n    //     'itemname': 'Shttering clamps'\r\n    //   }\r\n    // ]\r\n    const materiallistvalues = this.state.materiallistvalues;\r\n    console.log(\"__MATERIAL_LIST_VALUES___\");\r\n    console.log(materiallistvalues);\r\n    materiallistvalues.filter((option, i) => {\r\n      if(option.masteritemtypename != \"\"){\r\n        if(option.masteritemtypename.split('')[0] == \"3\"){\r\n            if(option.masteritemdescription == this.state.data.productname) {\r\n                items.push(\r\n                    <option key={i} value={option.masteritemdescription} selected>\r\n                      {option.masteritemdescription}\r\n                    </option>\r\n                  );\r\n            }\r\n            else {\r\n                items.push(\r\n                    <option key={i} value={option.masteritemdescription}>\r\n                      {option.masteritemdescription}\r\n                    </option>\r\n                  );\r\n            }\r\n        }\r\n      }\r\n   \r\n    });\r\n    return items;\r\n  };\r\n\r\n\r\n  createSelectItems2 = optionvalue => {\r\n\r\n    let items = [];\r\n    // const materiallistvalues = [\r\n    //   {\r\n    //     'itemname': '50 NB H.R. Tubes'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '40 NB H.R. Tubes'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '6 mm MS Plate'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Prop nut'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'H.R sheet'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Dia10 mm MS rod'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '65mm*6mm MS Flat'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '32mm*5mm MS Flat'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '75mm*75mm*8mm L Angle'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '3/4\" MS span Bolt'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '3/4\" MS Hexagonal nut'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'H.R. Sheet'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '25mm*25mm*5mm L angle.'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '40 NB H.R. Tubes'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Top cup'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Bottom cup'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Dia 8 mm Rod'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '20 NB H.R Tubes'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Ledger blade'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'locking pins'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Dia 32 mm MS rod'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'MS pLate'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'Cup nuts'\r\n    //   },\r\n    //   {\r\n    //     'itemname': 'dia 38 OD pipe'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '40mm*40mm'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '40mm*50mm'\r\n    //   },\r\n    //   {\r\n    //     'itemname': '32mm*5mm Ms flat'\r\n    //   }\r\n\r\n    // ]\r\n    const materiallistvalues = this.state.materiallistvalues;\r\n    materiallistvalues.filter((option, i) => {\r\n      items.push(\r\n        <option key={i} value={option.masteritemdescription}>\r\n          {option.masteritemdescription}\r\n        </option>\r\n      );\r\n    });\r\n    return items;\r\n  };\r\n\r\n  createSelectunfinishedItems = optionvalue => {\r\n    let items = [];\r\n    const materiallistvalues = this.state.materiallistvalues;\r\n    materiallistvalues.filter((option, i) => {\r\n      if (option.masteritemtype.masteritemtypename !== optionvalue) {\r\n        items.push(\r\n          <option key={i} value={option.id}>\r\n            {option.masteritemtypename}\r\n          </option>\r\n        );\r\n      }\r\n    });\r\n    return items;\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n  };\r\n\r\n  handleClick = e => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: {\r\n        ...this.state.data,\r\n        values: [...this.state.data.values, \"\"],\r\n        products: [...this.state.data.products, \"\"],\r\n        productsqty: [...this.state.data.productsqty, \"\"],\r\n        productsuom: [...this.state.data.productsuom, \"\"],\r\n        productsqtyinmeter: [...this.state.data.productsqtyinmeter, \"\"]\r\n      }\r\n    });\r\n  };\r\n  handleChange = (e, index) => {\r\n    this.state.data.products[index] = e.target.value;\r\n    const materialuom = this.state.materiallistvaluesObject[\r\n      this.state.data.products[index]\r\n    ];\r\n    this.state.data.productsqty[index] = \"1\";\r\n    this.state.data.productsuom[index] = materialuom.masteritemuom.uomname;\r\n    this.state.data.productsqtyinmeter[index] = \"\"\r\n    \r\n    this.setState({\r\n      ...this.state,\r\n      data: {\r\n        ...this.state.data,\r\n        products: this.state.data.products,\r\n        productsuom: this.state.data.productsuom,\r\n        productsqty: this.state.data.productsqty,\r\n        productsqtyinmeter: this.state.data.productsqtyinmeter\r\n      }\r\n    });\r\n  };\r\n\r\n  ProductqtyhandleChange = (e, index) => {\r\n    console.log(index);\r\n    let arr = this.state.materiallistvalues.filter((item) =>{\r\n      return item.masteritemdescription == e.target.value\r\n    })\r\n    console.log(arr)\r\n    this.state.data.productsqty[index] = e.target.value;\r\n    this.state.data.productsweight[index] = \r\n    arr.length > 0 ? (arr[0].masteritemunitwt != 'undefined' && arr[0].masteritemunitwt != 'null' && arr[0].masteritemunitwt != '' ? arr[0].masteritemunitwt : 0) : 0\r\n    \r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, \r\n        productsqty: this.state.data.productsqty,\r\n        productsweight: this.state.data.productsweight\r\n      }\r\n    },() =>{\r\n      console.log(this.state.data)\r\n    });\r\n  };\r\n\r\n  ProductuomhandleChange = (e, index) => {\r\n    console.log(index);\r\n    this.state.data.productsuom[index] = e.target.value;\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, productsuom: this.state.data.productsuom }\r\n    });\r\n  };\r\n  \r\n  ProductqtyinmeterhandleChange = (e, index) => {\r\n    console.log(e.target.value);\r\n    this.state.data.productsqtyinmeter[index] = e.target.value;\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, productsqtyinmeter: this.state.data.productsqtyinmeter }\r\n    });\r\n  };\r\n  \r\n  removeClick = (e, index) => {\r\n    const removeProduct = { ...this.state.data };\r\n    const products = removeProduct.products;\r\n    const productsqty = removeProduct.productsqty;\r\n    const productsuom = removeProduct.productsuom;\r\n    const productsqtyinmeter = removeProduct.productsqtyinmeter;\r\n    const values = removeProduct.values;\r\n    products.splice(index, 1);\r\n    productsqty.splice(index, 1);\r\n    productsuom.splice(index, 1);\r\n    productsqtyinmeter.splice(index, 1);\r\n    values.splice(index, 1);\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, products, productsqty, productsuom,productsqtyinmeter, values }\r\n    });\r\n  };\r\n  onChange = e => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value }\r\n    });\r\n  };\r\n  handleValidSubmit = () => {\r\n    console.log(\"product form data\");\r\n    console.log(this.state.data);\r\n    const products = this.state.data.products;\r\n    const productsqty = this.state.data.productsqty;\r\n    console.log(productsqty)\r\n    let productMaterials = [];\r\n    products.forEach(function (v, i) {\r\n      var obj = {};\r\n      obj.product_id = v;\r\n      obj.productqty = productsqty[i];\r\n      productMaterials.push(obj);\r\n    });\r\n\r\n    const data = { ...this.state.data, productMaterials };\r\n    delete data.products;\r\n    delete data.productsqty;\r\n    this.setState({ loading: true });\r\n    this.props\r\n      .submit(data)\r\n      .then(() => {\r\n        this.setState({\r\n          loading: false,\r\n          errors: {},\r\n          success: true,\r\n          data: {\r\n            productname: \"\",\r\n            values: [\"\"],\r\n            products: [\"\"],\r\n            productsqty: [\"\"],\r\n            productsuom: [\"\"],\r\n            productsqtyinmeter: [\"\"]\r\n          },\r\n          materiallistvalues: this.initialState.materiallistvalues,\r\n          materiallistvaluesObject: this.initialState.materiallistvaluesObject\r\n        });\r\n        this.myFormRef.reset();\r\n\r\n      })\r\n      .catch(err => {\r\n        alert(\"Same product sub assembly is already added.\")\r\n        window.location.reload()\r\n        this.setState({ errors: err.response.data.errors, loading: false });\r\n      });\r\n  };\r\n  toggle = () => {\r\n    this.setState({ ...this.state, success: false });\r\n  };\r\n  toggelbutton = () => {\r\n    this.setState({ ...this.state, success: false });\r\n    window.location.reload()\r\n  }\r\n  handleInvalidSubmit = () => {\r\n    console.log(\"invalid submit\");\r\n  };\r\n  render() {\r\n    const { data, errors, loading, success,uomlistvalues } = this.state;\r\n    console.log(\"__STATE_VALUE___DATA_\");\r\n    console.log(data);\r\n    return (\r\n      <div>\r\n        {!!success ? (\r\n          // <Alert color=\"info\">Product detail is added successfully.</Alert>\r\n          <Modal\r\n            isOpen={success}\r\n            toggle={this.toggle}\r\n            className={this.props.className}\r\n          >\r\n            <ModalHeader toggle={this.toggle} className='small-font-size-bold'>Subassembly</ModalHeader>\r\n            <ModalBody >Subassembly is added successfully.</ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={this.toggelbutton}>\r\n                Ok\r\n              </Button>{\" \"}\r\n\r\n            </ModalFooter>\r\n          </Modal>\r\n        ) : null}\r\n        {!!errors.productname ? (\r\n          <Alert Label color=\"danger\">Product Name must be unique id.</Alert>\r\n        ) : null}\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={el => (this.myFormRef = el)}\r\n        >\r\n          <Card>\r\n            <CardHeader className='small-font-size-bold'>Product Details</CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col sm={2}>\r\n                  <AvGroup>\r\n                    <Label className='small-font-size' for=\"productname\" Label>Product Name</Label>\r\n                    <span className=\"required-label\">*</span>\r\n                    <AvField\r\n                      Label\r\n                      type=\"select\"\r\n                      name=\"productname\"\r\n                      id=\"productname\"\r\n                      value={data.productname}\r\n                      onChange={this.onChange}\r\n                      required={true}\r\n                    >\r\n                      <option value=\"\">select</option>\r\n          \r\n                      {this.createSelectItems(\"FinishedGoods\")}\r\n                    </AvField>\r\n                  </AvGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12}>\r\n                  <div>\r\n                    <div className=\"mg-20\">\r\n                      <Button color=\"info\" onClick={this.handleClick}>\r\n                        Add Component\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {data.values.map((value, index) => {\r\n                return (<Row key={index}>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className='small-font-size' for={`Material-qty+${index}`}>\r\n                        Sub assembly\r\n                  </Label>\r\n                      <span className=\"required-label\">*</span>\r\n          \r\n\r\n                      <AvField\r\n                        Label\r\n                        type=\"select\"\r\n                        name=\"material_qty\"\r\n                        id={`Material-qty+${index}`}\r\n                        value={data.productsqty[index] || null}\r\n                        onChange={e =>\r\n                          this.ProductqtyhandleChange(e, index)\r\n                        }\r\n                      >\r\n                        <option value=\"\">select</option>\r\n             \r\n                        {this.createSelectItems2(\"\")}\r\n                      </AvField>\r\n                    </AvGroup>\r\n\r\n\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className='small-font-size' for={`Material-qtymeter+${index}`}>\r\n                        Quantity\r\n                  </Label>\r\n                      <span className=\"required-label\">*</span>\r\n          \r\n                    <AvField\r\n                      Label\r\n                      type=\"text\"\r\n                      name=\"Material-qtymeter\"\r\n                      id={`Material-qtymeter+${index}`}\r\n                      onChange={this.onChange}\r\n                      value={data.productsqtyinmeter[index]}\r\n                      onChange={e =>\r\n                        this.ProductqtyinmeterhandleChange(e, index)\r\n                      }\r\n                    >\r\n                     \r\n                    </AvField>\r\n                 \r\n                    </AvGroup>\r\n                  </Col>\r\n\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className='small-font-size' for={`Material-uom+${index}`}>\r\n                        UOM\r\n                  </Label>\r\n                      <span className=\"required-label\">*</span>\r\n          \r\n                    <AvField\r\n                      Label\r\n                      type=\"select\"\r\n                      name=\"Material-uom\"\r\n                      id={`Material-uom+${index}`}\r\n                      onChange={this.onChange}\r\n                      value={data.productsuom[index]}\r\n                      onChange={e =>\r\n                        this.ProductuomhandleChange(e, index)\r\n                      }\r\n                    >\r\n                      <option value=\"\">Select unit</option>\r\n          \r\n                      {this.createSelectItems3(\"FinishedGoods\")}\r\n                    </AvField>\r\n                 \r\n                    </AvGroup>\r\n                  </Col>\r\n\r\n                  \r\n                  <Col sm={2}>\r\n                    <AvGroup style={{ marginTop: \"28px\" }}>\r\n                      <Button\r\n                        Label\r\n                        Label\r\n                        color='danger'\r\n                        type=\"button\"\r\n                        onClick={e => this.removeClick(e, index)}\r\n                      >\r\n                        -\r\n                  </Button>\r\n\r\n                    </AvGroup>\r\n\r\n                  </Col>\r\n                </Row>)\r\n              })}\r\n              {/* <div>\r\n                                    <button onClick={this.handleSubmit}>submit</button>\r\n                                </div> */}\r\n\r\n            </CardBody>\r\n          </Card>\r\n          <div className=\"mg-20\" style={{paddingLeft: 15, paddingTop: 10}}>\r\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader small-font-size\">\r\n              Submit\r\n              {/* {loading} */}\r\n            </Button>\r\n          </div>\r\n        </AvForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateForm.propTypes = {\r\n  submit: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    materiallistvalues: state.masteritemlistvalues\r\n    // masteritemlistvalues: state.masteritemlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(UpdateForm);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport UpdateForm from \"./ProductForm/UpdateForm\";\r\nimport { updateproduct, getproducts } from \"../../actions/Product\";\r\nimport { getMasterItemList } from \"../../actions/Transaction\";\r\nimport { getUomList } from \"../../actions/uom\";\r\nimport CustomLoader from \"../../Components/loader/loader\";\r\n\r\nclass UpdateProduct extends React.Component {\r\n    state = {\r\n        id: \"\",\r\n        loading: false,\r\n        productvalues: \"\",\r\n        materiallistvalues: []\r\n        };\r\n  componentDidMount() {\r\n    //this.props.getUomList();\r\n    this.props.getMasterItemList();\r\n    this.props.getproducts();\r\n    const productid = this.props.match.params.id;\r\n    const productvalues = this.props.productlistvalues[productid];\r\n    this.setState({ productvalues, materiallistvalues: this.props.materiallistvalues, id: this.props.match.params.id });\r\n\r\n  }\r\n  submit = data => {\r\n    return this.props.updateproduct(data).then(data => {\r\n        this.props.getproducts();\r\n        return data;\r\n      });\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n  render() {\r\n    const { loading, id, productvalues, materiallistvalues } = this.state;\r\n    return (\r\n      <div className=\"container mg-20\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem  Label>\r\n            <Link to=\"/inventory_page\">Setup</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem  Label active>Add Subassembly</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <UpdateForm submit={this.submit} materiallistvalues={materiallistvalues} id={id} productlistvalues={productvalues} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        productlistvalues: state.productlistvalues\r\n    };\r\n  }\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n  { updateproduct, getproducts, getMasterItemList,getUomList }\r\n)(UpdateProduct);\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport axios from \"axios\";\n\nclass ViewProduct extends React.Component {\n  state = {\n    productlistvalue: \"\",\n    productMaterialslist: [],\n    productname: \"\"\n  };\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/product/getproduct/${this.props.match.params.id}`)\n      .then(res => {\n\n        console.log(res)\n        if (res.data.productlist.productdata.length > 0) {\n          let product = res.data.productlist.productdata[0]\n          let obj = {}, arr = []\n          const productname = product.productname;\n\n          for (var i = 0; i < product.productMaterial.length; i++) {\n            obj = {}\n            obj['materialitemtype'] = product.productname;\n            obj['materialname'] = product.productMaterial[i].productqty;\n            obj['materialuom'] = product.productsuom[i];\n            obj['productqty'] = product.productsqtyinmeter[i]\n            arr.push(obj)\n          }\n\n          this.setState({ 'productname': productname, 'productMaterialslist': arr });\n        }\n\n      },\n        error => {\n\n          alert(\"Server error\")\n        });\n\n    /* const productid = this.props.match.params.id;\n     const productlistvalue = this.props.productlistvalues[productid];\n     const productname = productlistvalue.productname.masteritemdescription;\n     const productMaterialslist = productlistvalue.productMaterial.map(\n       productMaterialData => {\n         let totalcost =\n           parseFloat(productMaterialData.productqty) *\n           parseFloat(productMaterialData.product_id.masteritemcostperunit);\n         let materialcostperunit =\n           productMaterialData.product_id.masteritemcostperunit;\n         return {\n           materialitemtype:\n             productMaterialData.product_id.masteritemtype.masteritemtypename,\n           materialname: productMaterialData.product_id.masteritemname,\n \n           materialdescription:\n             productMaterialData.product_id.masteritemdescription,\n \n           materialuom: productMaterialData.product_id.masteritemuom.uomname,\n           materialcostperunit:\n             materialcostperunit !== \"null\" ? materialcostperunit : \" \",\n           materialqty: productMaterialData.productqty,\n           totalcost: isNaN(totalcost) ? \" \" : totalcost\n         };\n       }\n     );\n     this.setState({ ...this.state, productMaterialslist, productname });*/\n  }\n  render() {\n    const { productMaterialslist, productname } = this.state;\n    let product;\n    if (productMaterialslist.length) {\n      product = productMaterialslist[0].materialitemtype;\n    }\n\n    const tablerows = productMaterialslist.map((itemlist, i) => {\n      return (\n        <tr key={i}>\n          {/* <td>{itemlist.materialitemtype}</td> */}\n          <td style={{textAlign:'left'}}>{itemlist.materialname}</td>\n          <td style={{textAlign:'left'}}>{itemlist.materialuom}</td>\n          <td style={{textAlign:'left'}}>{itemlist.productqty}</td>\n          \n          {/* <td>{itemlist.materialcostperunit}</td>\n          <td>{itemlist.materialqty}</td>\n          <td>{itemlist.totalcost}</td> */}\n        </tr>\n      );\n    });\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/viewproductlist\">View subassembly</Link>\n            </BreadcrumbItem>\n\n          </Breadcrumb>\n        </div>\n        {/* <h5>Product Name: {productname}</h5> */}\n        {/* <DataTable columnvalue={columnvalue} rowvalues={productMaterialslist} /> */}\n        <div style={{\n              marginBottom: 16}}>\n          <span\n            style={{\n              fontSize: 12,\n              fontWeight: 900,\n              marginRight: 16\n            }}>Product</span>\n          <span\n            style={{\n              fontSize: 12\n            }}>{product ? product : ''}</span>\n        </div>\n        <Table bordered style={{'width':'40%'}}>\n          <thead>\n            <tr>\n              {/* <th>Product Type</th> */}\n              <th>Subassembly</th>\n\n              <th>UOM</th>\n              <th>Quantity</th>\n              {/* (Meter) */}\n              {/* <th>Unit Cost</th>\n              <th>Item QTY</th>\n              <th>Total cost</th> */}\n            </tr>\n          </thead>\n          <tbody>{tablerows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ViewProduct);\n","import React from \"react\";\nimport { Alert, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts, deleteProduct } from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass ViewProductList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    showModal: false,\n    productlistvalues: \"\",\n    setDeleteId: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.dataHandler(true);\n  }\n  updateButton = id => {\n    let path = `/viewproduct/${id}`;\n    this.props.history.push(path);\n  };\n  editButton = id => {\n    let path = `/updateproduct/${id}`;\n    this.props.history.push(path);\n  };\n  deleteItem = () => {\n  return this.props.deleteProduct(this.state.setDeleteId)\n    .then((data) => {\n      setTimeout(() => {\n        window.location.reload(true);\n      }, 300);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  };\n  componentWillReceiveProps(props) {\n    const productlist = Object.values(props.productlistvalues);\n    const productlistvalues = productlist.map((productdata, i) => {\n      console.log(productdata)\n      return {\n        materialname: productdata.productname,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(productdata.id);\n            }}\n          >\n            View Sub assembly\n          </Button>\n        ),\n        edit: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.editButton(productdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n            Label\n            color=\"danger\"\n            onClick={() => {\n              this.setState({ ...this.state, showModal: true, setDeleteId: productdata.id });\n            }}\n          >\n            Delete\n          </Button>\n        )\n      };\n    });\n    const count = productlistvalues.length;\n    this.setState({ ...this.state, count, productlistvalues });\n    this.dataHandler(false);\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading, count, productlistvalues, showModal } = this.state;\n    const columnvalue = [\n      {\n        label: \"Product Name\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"View\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"Edit\",\n        field: \"edit\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        sort: \"asc\",\n        width: 10\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        {showModal ? (\n                      <Modal\n                      isOpen={showModal}\n                      className={this.props.className}\n                    >\n                      <ModalHeader toggle={this.toggle}>Delete</ModalHeader>\n                      <ModalBody>Do you want to delete this product?</ModalBody>\n                      <ModalFooter>\n                        <Button color='primary' onClick={this.deleteItem}>\n                          Yes\n                        </Button>\n                        <Button color='primary' onClick={this.toggle}>\n                          No\n                        </Button>                        \n                      </ModalFooter>\n                    </Modal>\n        ) : null\n        }\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Products</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        {count > 0 ? (\n          <DataTable columnvalue={columnvalue} \n          rowvalues={productlistvalues}\n          className=\"viewproductlist\" />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts, deleteProduct }\n)(ViewProductList);\n","import { AvField, AvForm, AvGroup } from 'availity-reactstrap-validation';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Alert, Button, Card,\n  CardBody,\n  CardHeader, Col, Label, Modal, ModalBody,\n  ModalFooter, ModalHeader, Row\n} from 'reactstrap';\n\nclass CustomerForm extends React.Component {\n  state = {\n    data: {\n      customernumber: '',\n      customername: '',\n      customercontactnumber: '',\n      customergstnumber: '',\n      customeraddress1: '',\n      customeraddress2: '',\n      city: '',\n      pincode: '',\n      state: '',\n      country: '',\n      codate: new Date().getTime(),\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    sameAsBilling: false,\n    suppliercontactlistvalue: []\n  };\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.keys(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customernumber = count ? 1001 + count : 1001;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customernumber\n      }\n    });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        deliveryAddress: {\n          ...this.state.data.deliveryAddress,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n  sameAsBilling = e => {\n    let val = e.target.value === 'false' ? true : false;\n    this.setState({ ...this.state, sameAsBilling: val });\n    if (val) {\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          deliveryAddress: {\n            address1: this.state.data.customeraddress1,\n            address2: this.state.data.customeraddress2,\n            city: this.state.data.city,\n            pincode: this.state.data.pincode,\n            state: this.state.data.state,\n            country: this.state.data.country\n          }\n        }\n      });\n    }\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const {\n      data,\n      errors,\n      loading,\n      success,\n      visible,\n      sameAsBilling\n    } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is added successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color='danger' isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      value={data.customernumber.toString()}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customername'\n                      type='text'\n                      id='customername'\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Name'\n                        }\n                    \n                        // pattern: {\n                        //   value: '^[a-zA-Z ]+$',\n                        //   errorMessage: 'Please enter valid Supplier Name'\n                        // }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customercontactnumber'>Contact Number </Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customercontactnumber'\n                      type='text'\n                      id='customercontactnumber'\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer contact number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GSTN </Label>\n                    <AvField\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Billing Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress1'>Address 1</Label>\n                        <AvField\n                          name='customeraddress1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                      \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress2'>Address 2</Label>\n                        <AvField\n                          name='customeraddress2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Delivery Address */}\n              <Card>\n                <CardHeader>\n                  Delivery Address ({' '}\n                  <input\n                    type='checkbox'\n                    className='same_checkbox'\n                    value={sameAsBilling}\n                    name='same'\n                    onChange={this.sameAsBilling}\n                  ></input>{' '}\n                  Same as billing address)\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                         \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain atleast 1 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              <div className='mg-20'>\n                <Button\n                  color='primary'\n                  disabled={loading}\n                  className='lgn-loader'\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{' '}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CustomerForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col\n} from \"reactstrap\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    data: {\n      searchcustomername: '',\n      searchfromdate: null,\n      searchtodate: null\n    },\n    count: 0,\n    customerlistvalues: [],\n    backupcustomerlistvalues: [],\n    fromdatetimestamp: '',\n    todatetimestamp: '',\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n  };\n\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        // id: customerdata.id,\n        // customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber != '' ? customerdata.customercontactnumber : '-',\n        codate: customerdata.codate != undefined ? customerdata.codate : '-',\n\n        Transaction: (\n          <Button\n            // style={{ fontSize: '0.8rem' }}\n            Label\n            color=\"primary\"\n            onClick={() => {\n              localStorage.setItem('customername', customerdata.customername)\n              this.getTransaction(customerdata.id);\n            }}\n          >\n            Transaction\n          </Button>\n        )\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, backupcustomerlistvalues: customervalues, count });\n    this.setState({ customerlistvalues: customervalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n\n  getTransaction = id => {\n    this.props.history.push(`/transaction/${id}`);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n\n  onChange = e => {\n    console.log(e)\n    this.setState({\n      //data: { ...this.state.data, [e.target.name]: e.target.value }\n      data: {\n        searchcustomername: e.target.value,\n        searchfromdate: null,\n        searchtodate: null\n      },\n      fromdatetimestamp: '',\n      todatetimestamp: ''\n    }, () => {\n      this.filterCustomer(this.state.data.searchcustomername)\n    });\n\n  };\n\n  getDateByMMDDYYYY(date) {\n    let searchdate = date != '-' ?\n      (new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n      + \"/\" +\n      (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n  handleDateChanges(dateName, dateValue) {\n\n    let { data, fromdatetimestamp, todatetimestamp } = this.state;\n    if (dateName === 'startDateTime') {\n      data.searchfromdate = dateValue;\n      fromdatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    } else {\n      data.searchtodate = dateValue;\n      todatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    }\n    data.searchcustomername = ''\n    this.setState({\n      data,\n      fromdatetimestamp,\n      todatetimestamp\n    }, () => {\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        this.filterBydates(this.state.fromdatetimestamp, this.state.todatetimestamp)\n      }\n      else {\n        this.initializeCustomers();\n      }\n    });\n  };\n\n  filterCustomer(ev) {\n    this.initializeCustomers();\n    setTimeout(() => {\n      const val = ev\n      if (val && val.trim() != '') {\n        let filtereddata = this.state.customerlistvalues.filter((item) => {\n          return (item.customername.toLowerCase().indexOf(val.toLowerCase()) > -1\n          )\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  filterBydates(date1, date2) {\n    this.initializeCustomers();\n    setTimeout(() => {\n\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        let filtereddata = this.state.customerlistvalues.filter((customer) => {\n          let comparedate =\n            (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1)\n            + \"/\" + (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate())\n            + \"/\" + new Date(parseInt(customer.codate)).getFullYear()\n\n          return (new Date(this.getDateByMMDDYYYY(comparedate)).getTime() >= date1 && new Date(this.getDateByMMDDYYYY(comparedate)).getTime() <= date2)\n\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  initializeCustomers() {\n    this.setState({\n      customerlistvalues: this.state.backupcustomerlistvalues\n    })\n  }\n\n\n  render() {\n    const { count, customerlistvalues, data, loading } = this.state;\n\n    const customerBlock = customerlistvalues.map(customer => {\n      customer['codate2'] = customer.codate != '-' ? (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate()) +\n        \"/\" + (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1) + \"/\" + new Date(parseInt(customer.codate)).getFullYear() : '-'\n      return (\n        <tr key={customer.customernumber}>\n\n          <td style={{'width' : '15%'}}>{customer.customername}</td>\n          {/* <td style={{ textAlign: 'center' }}>{customer.customernumber}</td> */}\n          <td style={{ textAlign: 'center','width' : '12%' }}>{customer.customercontactnumber}</td>\n\n          <td style={{ textAlign: 'center','width' : '8%' }}>{customer.Transaction}</td>\n        </tr>\n      )\n    });\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            {/* <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            /> */}\n\n            {/* <Card>\n           \n            <CardBody> */}\n            <Row>\n              <Col sm={3}>\n                <Label className='small-font-size' for=\"searchcustomername\">Search Customer Name</Label>\n\n\n                <input\n                  name=\"searchcustomername\"\n                  type=\"text\"\n                  id=\"searchcustomername\"\n                  className=\"form-control small-font-size\"\n                  value={data.searchcustomername}\n\n                  onChange={this.onChange}\n                />\n\n              </Col>\n\n\n\n              {/* <Col sm={3}>\n                  <Label for=\"searchfromdate\">Transaction from date</Label>\n                \n\n                     <DatePicker\n                    selected={data.searchfromdate}\n     \n                    onChange={date => this.handleDateChanges('startDateTime', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchfromdate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n                 <Col sm={3}>\n                  <Label for=\"searchtodate\">Transaction to date</Label>\n                 \n                  \n                  <DatePicker\n                    selected={data.searchtodate}\n                    onChange={date => this.handleDateChanges('endDateTime', date)}\n                    className=\"form-control\"\n                    isClearable={true}\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchtodate\"\n                  />\n                 \n                </Col> */}\n\n            </Row>\n            {/* </CardBody>\n                </Card> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{ 'marginTop': '10px','width': '40%' }}>\n              <thead>\n                <tr>\n\n                  <th style={{'width': '15%'}}>Customer Name</th>\n                  {/* <th>Customer Number</th> */}\n                  <th style={{'width': '12%'}}>Contact</th>\n                  <th style={{'width': '8%'}}>Transaction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerBlock}\n              </tbody>\n            </table>\n\n\n\n\n          </div>\n        ) : (\n            <div>\n              <Alert color=\"info\" Label>Loading Customer data</Alert>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import axios from \"axios\";\n\nexport default {\n  customer: {\n    addcustomer: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/customer/addcustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.customerdata;\n        });\n    },\n    getcustomer: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customer/getcustomer`)\n        .then(res => {\n          return res.data.customerlist;\n        });\n    },\n    updatecustomer: data => {\n      return axios\n        .patch(`${process.env.REACT_APP_BASE_URL}/customer/updatecustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  customerTransaction: {\n    getcustomerTransaction: (id) => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/${id}`)\n        .then(res => {\n          \n          return res.data.customerlist;\n        });\n    },\n  \n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/customerapi\";\nimport {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED,\n  CUSTOMERTRANSACTION_FETCHED\n} from \"../Services/types\";\nimport { customerListSchema,customerTransactionSchema } from \"../Schemas/schemas\";\n\nconst customerCreated = customerlist => {\n  return {\n    type: ADD_CUSTOMER_CONTACT,\n    customerlist\n  };\n};\n\nconst customerListFetched = customerlist => {\n\n  return {\n    type: CUSTOMER_CONTACT_FETCHED,\n    customerlist\n  };\n};\n\nconst customerTransactionFetched = customerlist => {\n\n  return {\n    type: CUSTOMERTRANSACTION_FETCHED,\n    customerlist\n  };\n};\n\nexport const addCustomerContact = data => {\n  return dispatch => {\n    return api.customer.addcustomer(data).then(customerlistvalues => {\n      return dispatch(\n        customerCreated(normalize(customerlistvalues, customerListSchema))\n      );\n    });\n  };\n};\n\nexport const getCustomerList = () => {\n  return dispatch => {\n    return api.customer.getcustomer().then(customerlist => {\n      const customerlistvalue = customerlist.customerdata;\n      return dispatch(\n        customerListFetched(normalize(customerlistvalue, [customerListSchema]))\n      );\n    });\n  };\n};\n\nexport const getCustomerTransaction = (id) => {\n  return dispatch => {\n    return api.customerTransaction.getcustomerTransaction(id).then(customerlist => {\n      const customertransationvalues = customerlist.customerdata;\n      console.log(customertransationvalues)\n      if(customertransationvalues.length != 0){\n        return dispatch(\n          customerTransactionFetched(normalize(customertransationvalues, [customerTransactionSchema]))\n        );\n      }\n      // console.log(normalize(customertransationvalues, [customerTransactionSchema]))\n\n    });\n  };\n};\n\nexport const updateCustomerContact = data => {\n  return dispatch => {\n    return api.customer.updatecustomer(data).then(customerlistvalues => {\n      return customerlistvalues;\n      // return dispatch(\n      //   customerCreated(normalize(customerlistvalues, customerListSchema))\n      // );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport AddCustomerForm from \"./AddCustomer/CustomerForm/CustomerForm\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass Customer extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddCustomerForm submit={this.submit} />\n        </div>\n        {/* <div>\n          <ViewCustomerList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n    getCustomerTransaction\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\n\n\nclass Transaction extends React.Component {\n  \n  state = {\n    data: {\n      enquirydate:null,\n      quotationdate:null,\n      podate:null\n    },\n    enquirytimestamp:null,\n    quotationtimestamp:null,\n    podatetimestamp:null,\n    userid : this.props.match.params.id,\n    loading: false,\n    count:0,\n    success: false,\n    message:'',\n    ponum:'',\n    podate:'',\n    customerName:localStorage.getItem('customername') !=null ? localStorage.getItem('customername') : '',\n    transactionID:'',\n    customertransationvalues:[],\n    backupcustomertransationvalues:[]\n  };\n  componentDidMount = () => {\n    // this.props.match.params.id\n    // 5d7245b928e146194b806e38\n    \n    this.getTransaction(this.props.match.params.id);\n  };\n\n  componentWillReceiveProps(props) {\n    let customervalues = Object.values(props.customertransationvalues).map(customerdata => {\n      return {\n        customerid: customerdata.customerid,\n        Transactionhistory: customerdata.Transactionhistory,\n        id:new Date().getTime()\n      };\n    });\n    if(customervalues.length > 0){\n      customervalues = customervalues.filter((item) =>{\n        return item.customerid == this.props.match.params.id\n      })\n      this.setState({ \n        customertransationvalues: customervalues,\n        backupcustomertransationvalues:customervalues,\n        count:customervalues.length\n      }, () => {\n        console.log(JSON.stringify(this.state.backupcustomertransationvalues))\n      })\n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  \n  initializeTransactions = () => {\n    this.setState({\n      customertransationvalues:this.state.backupcustomertransationvalues\n    },() =>{\n      console.log(this.state.backupcustomertransationvalues)\n    })\n  }\n\n  newEnquiry(){\n    localStorage.setItem('ids',this.state.userid)\n    this.setState({ success: true, message:'Are you sure want to add new enquiry' });\n  }\n\n  getTransaction(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n    .then(res => {\n      this.dataHandler(false)\n      if(res.data.customerlist.customerdata.length > 0){\n        let customervalues = res.data.customerlist.customerdata;\n        if(customervalues.length > 0){\n          customervalues = customervalues.filter((item) =>{\n            return item.customerid == this.props.match.params.id\n          })\n          this.setState({ customertransationvalues: customervalues,\n            backupcustomertransationvalues:customervalues,\n            count:customervalues.length}, () => {\n            console.log(JSON.stringify(this.state.customertransationvalues))\n          })\n        }\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  addenquiry(){\n    this.dataHandler(true)\n    let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) + \n    \"/\" + ( new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n     axios\n    .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`,\n    {\n      \"customerid\":this.state.userid,\n      \"enq_Date\" : date\n    })\n    .then(res => {\n      this.getTransaction(this.state.userid)\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  poreceived = value =>{\n    this.setState({\n      transactionID:value._id,\n      ponum:'',\n      podate:''\n    },() =>{\n      this.setState({ success: true, message:'update transaction' });\n    })\n  }\n\n  gotoPDF = value => {\n    console.log(\"the pdf page is\",  value)\n    this.props.history.push(value);\n  }\n\n  updatePO = () => {\n    if(this.state.ponum != '' && this.state.podate != ''){\n      let podates = this.state.podate.split('-')[2] + '/' + this.state.podate.split('-')[1] + '/' + this.state.podate.split('-')[0]\n      let obj = {}\n      obj['_id'] = this.state.transactionID\n      obj['po'] = podates\n      obj['ponum'] = this.state.ponum\n      this.dataHandler(true)\n      axios\n      .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n      .then(res => {\n        this.toggle()\n        this.getTransaction(this.state.userid)\n      },\n      error =>{\n        this.dataHandler(false)\n        this.toggle()\n        this.setState({ success: false, message:'Server error.' });\n      });\n    }\n    else\n      this.toggle()\n  }\n\n  onChange1 = e => {\n    this.setState({\n      'ponum' : e.target.value\n    });\n  }\n\n  onChange2 = e => {\n    console.log(e.target.value)\n    this.setState({\n      'podate' : e.target.value\n    });\n  }\n\n  getDateByMMDDYYYY(date){\n    let searchdate = date != '-' ? \n\n    (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" +\n    ( new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n    + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n    \n  handleDateChanges(dateName, dateValue) {\n\n    let { data,enquirytimestamp,quotationtimestamp,podatetimestamp } = this.state;\n    if (dateName === 'enquirydate') {\n      data.enquirydate = dateValue;\n      enquirytimestamp = this.getDateByMMDDYYYY(dateValue)\n    }\n    this.setState({\n      data,\n      enquirytimestamp\n    }, () => {\n      if (this.state.data.enquirydate != null) {\n        this.filterBydates()\n      }\n      else{\n        this.initializeTransactions();\n      }\n    });\n  };\n\n  filterBydates(){\n    this.initializeTransactions();\n    setTimeout(() => {\n        let filtereddata = this.state.customertransationvalues.filter((item) => {\n            return (this.state.enquirytimestamp != null && item.enq_Date == this.state.enquirytimestamp)\n            \n        })\n        this.setState({\n          customertransationvalues:filtereddata\n        })\n    })\n  }\n\n  render() {\n    let modaldata;\n\n    const { customertransationvalues,loading,count,success,message,data,customerName } = this.state;\n    if(message == 'update transaction' && success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Add customer PO</ModalHeader>\n        <ModalBody>\n          <input type=\"text\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.ponum} style={{'marginBottom': '15px'}} onChange={this.onChange1}/>\n          <input type=\"date\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.podate} onChange={this.onChange2}/>\n        </ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={this.updatePO}>\n            Update\n          </Button>\n        </ModalFooter>\n      </Modal>\n      )\n    }\n    else if(message == 'Server error.' && !success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Transaction</ModalHeader>\n        <ModalBody>{this.state.message}</ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n      )\n    }\n\n\n\n    const customerTransactionBlock = customertransationvalues.map((customer,index) => {\n      \n      let invoice = customer.invoice_link ? (<td style={{textAlign:'center'}}> \n      Invoice PDF<br/>\n      <Button color=\"primary\" onClick={() => this.gotoPDF(customer.invoice_link)} style={{fontSize: '12px'}}>\n       Print\n     </Button>\n </td>) : (<td style={{textAlign:'center'}}>---</td>);\n      let dc = customer.challan_link ? (\n      <td style={{textAlign:'center'}}>{customer.challan_link}</td>\n      ) : (\n        <td style={{textAlign:'center'}}>---</td>)\n      let enquiry = '',quote = '',PO=(<td style={{textAlign:'center'}}>---</td>)\n      enquiry = customer.enq_Date !=undefined ? (<td style={{textAlign:'center'}}> {customer.enq_Date}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      quote = customer.quotation !=undefined && customer.quotation != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.Qno} </b> <br/>{customer.quotation}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      PO = customer.po !=undefined && customer.po != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.ponum} </b> <br/> {customer.po}</td>) \n      : (<td style={{textAlign:'center'}}> \n           Customer PO not reveived<br/>\n           <Button color=\"primary\" onClick={() => this.poreceived(customer)} style={{fontSize: '12px'}}>\n            Add customer PO\n          </Button>\n      </td>)\n\n      if(customer.quotation == ''){\n        PO = (<td style={{textAlign:'center'}}>---</td>)\n      }\n\n      \n      return (\n        \n        <tr>\n          {/* <td></td>\n          {enquiry} */}\n          {quote}\n          {PO}\n          {invoice}\n          {dc}\n\n          </tr>\n             \n      )\n \n    })\n\n\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerlist\">CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{customerName}</BreadcrumbItem>\n        </Breadcrumb>\n     \n\n            {modaldata}\n \n        <h5 style={{ 'fontWeight': 'bold','margin': '15px'}}>{count} transaction found.</h5>\n        {customertransationvalues.length > 0 ?\n        (\n\n        <div>\n{/*           \n          <Row style={{ 'width': '75%','marginLeft': '9%'}}>\n                <Col sm={3} >\n                    <Label for=\"enquirydate\">Search enquiry date</Label>\n                    \n\n                      <DatePicker\n                    selected={data.enquirydate}\n\n                    onChange={date => this.handleDateChanges('enquirydate', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"enquirydate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n        \n\n                \n\n                </Row> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{'marginTop':'10px', 'width': '75%','marginLeft': '10%','background':'#fff'}}>\n\n              <tr>\n                {/* <th></th>\n                <th>Enquiry</th> */}\n                <th>Quotation</th>\n                <th>PO</th>\n                <th>Invoice</th>\n                <th>Delivary challan</th>\n                </tr>\n                {customerTransactionBlock}\n              </table>\n          </div>\n        ) : null\n       }\n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    customertransationvalues: state.customertransationvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getCustomerTransaction }\n)(Transaction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateCustomerForm extends React.Component {\n  state = {\n    data: {\n      id: \"\",\n      customernumber: \"\",\n      customername: \"\",\n      customercontactnumber: \"\",\n      customergstnumber: \"\",\n      customeraddress1: \"\",\n      customeraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    suppliercontactlistvalue: []\n  };\n  componentDidMount() {\n    const id = this.props.id;\n    const data = this.props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const data = props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({ ...this.state, data: {\n      ...this.state.data,\n      deliveryAddress:{\n        ...this.state.data.deliveryAddress,\n        [e.target.name] : e.target.value\n      }\n    } });\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success, visible } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is Updated successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color=\"danger\" isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customernumber\"\n                      type=\"number\"\n                      id=\"customernumber\"\n                      value={data.customernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Number\"\n                        },\n    \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customername\"\n                      type=\"text\"\n                      id=\"customername\"\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Name\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z ]+$\",\n                          errorMessage: \"Please enter valid Supplier Name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customercontactnumber\">Contact Number </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customercontactnumber\"\n                      type=\"text\"\n                      id=\"customercontactnumber\"\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer contact number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage:\n                            \"Your phone number must be composed only with numbers\"\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            \"Your phone number must be between 10 and 12 numbers\"\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            \"Your phone number be between 10 and 12 numbers\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GSTN </Label>\n                    <AvField\n                      name=\"customergstnumber\"\n                      type=\"text\"\n                      id=\"customergstnumber\"\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress1\">Address 1</Label>\n                        <AvField\n                          name=\"customeraddress1\"\n                          type=\"text\"\n                          id=\"customeraddress1\"\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress2\">Address 2</Label>\n                        <AvField\n                          name=\"customeraddress2\"\n                          type=\"text\"\n                          id=\"customeraddress2\"\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"city\">City</Label>\n                        <AvField\n                          name=\"city\"\n                          type=\"text\"\n                          id=\"city\"\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid city Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                        <AvField\n                          name=\"pincode\"\n                          type=\"text\"\n                          id=\"pincode\"\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                \"Pincode should contain atleast 6 characters\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                \"Pincode should contain between 6 to 10 characters\"\n                            },\n                            pattern: {\n                              value: \"^[0-9]+$\",\n                              errorMessage: \"Please enter valid PinCode\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"state\">State</Label>\n                        <AvField\n                          name=\"state\"\n                          type=\"text\"\n                          id=\"state\"\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid State Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"country\">Country</Label>\n                        <AvField\n                          name=\"country\"\n                          type=\"text\"\n                          id=\"country\"\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid Country Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                {/* Delivery Address */}\n                {/* Delivery Address */}\n              <Card>\n                <CardHeader>Delivery Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              </Card>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Update\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{\" \"}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateCustomerForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport UpdateCustomerForm from \"./UpdateCustomer/CustomerForm/UpdateCustomerForm\";\nimport {\n  updateCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader\n} from \"reactstrap\";\n\nclass Customer extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getCustomerList();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer List</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n\n          <UpdateCustomerForm submit={this.submit} id={id} />\n\n           \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\n\nclass ViewCustomerTable extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Link to=\"/crmlist\">CRM</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem active>Customer Transaction</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(ViewCustomerTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    count: 0,\n    customerlistvalues: []\n  };\n  componentWillReceiveProps(props) {\n    let customerlistvalues = Object.values(props.customerlistvalues);\n    //customerlistvalues= customerlistvalues.sort((a, b) => b.customernumber.toString().toLowerCase().localeCompare(a.customernumber.toString().toLowerCase()));\n    console.log(customerlistvalues)\n    customerlistvalues.sort(function(a, b){\n      return parseInt(b.customernumber) - parseInt(a.customernumber);\n    });\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber,\n        customergstnumber: customerdata.customergstnumber,\n        customeraddress1: customerdata.customeraddress1 != '' ? customerdata.customeraddress1 : '-',\n        customeraddress2: customerdata.customeraddress2 != '' ? customerdata.customeraddress2 : '-',\n        city: customerdata.city != '' ? customerdata.city : '-',\n        pincode: customerdata.pincode != '' ? customerdata.pincode : '-',\n        state: customerdata.state != '' ? customerdata.state : '-',\n        country: customerdata.country != '' ? customerdata.country : '-',\n        view: (\n          <Button\n            Label\n            // style={{ fontSize: '0.8rem' }}\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(customerdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, count });\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { count, customerlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Customer Number\",\n        field: \"customernumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Name\",\n        field: \"customername\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Contact\",\n        field: \"customercontactnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"GST Number\",\n        field: \"customergstnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address1\",\n        field: \"customeraddress1\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address2\",\n        field: \"customeraddress2\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"City\",\n        field: \"city\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Pincode\",\n        field: \"pincode\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"State\",\n        field: \"state\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Country\",\n        field: \"country\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n    return (\n      <div className=\"mg-t-20\">\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCustomerList } from \"../../../actions/customerContact\";\nimport ViewCustomerList from \"./ViewCustomerList\";\n\nclass CustomerInfo extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer Information</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(CustomerInfo);\n","import axios from \"axios\";\n\nexport default {\n  quotation: {\n    addquotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/addquotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    updatequotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/updatequotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    getquotation: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/quotation/getquotation`)\n        .then(res => {\n          return res.data.quotationlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/quotationapi\";\nimport { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\nimport { quotationListSchema } from \"../Schemas/schemas\";\n\nconst quotationCreated = quotationlist => {\n  return {\n    type: ADD_QUOTATION,\n    quotationlist\n  };\n};\n\nconst quotationFetched = quotationlist => {\n  return {\n    type: QUOTATION_FETCHED,\n    quotationlist\n  };\n};\n\nexport const addquotation = data => {\n  return dispatch => {\n    return api.quotation.addquotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\nexport const updatequotation = data => {\n  return dispatch => {\n    return api.quotation.updatequotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getquotation = () => {\n  return dispatch => {\n    return api.quotation.getquotation().then(quotationlist => {\n      const quotationlistvalues = quotationlist.quotationdata;\n      return dispatch(\n        quotationFetched(normalize(quotationlistvalues, [quotationListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { searchquotation } from \"../../../../actions/quotation\";\n\nclass CustomerQuotationList extends React.Component {\n  componentDidMount() {\n    const customerid = this.props.match.params.id;\n    this.props\n      .searchquotation(customerid)\n      .then(data => {})\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer list</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer status</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { searchquotation }\n)(CustomerQuotationList);\n","import { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Alert, Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nclass AddYearForm extends React.Component {\r\n  state = {\r\n    data: {\r\n      addyear: \"\",\r\n      updateyear: \"\",\r\n      updateid: \"\",\r\n    },\r\n    exists: false,\r\n    errors: {},\r\n    loading: false,\r\n    success: false,\r\n    visible: false,\r\n    updated: false,\r\n    suppliercontactlistvalue: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ loading: true });\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\r\n      (res) => {\r\n        if(res.data.year) {\r\n          this.setState({\r\n            ...this.state,\r\n            data: {\r\n              ...this.state.data,\r\n              updateid: res.data.year._id,\r\n              updateyear: res.data.year.currentyear\r\n            },\r\n          });\r\n          this.setState({ exists: true });\r\n        }\r\n        this.setState({ loading: false });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: {\r\n            ...this.state.errors,\r\n            error,\r\n          },\r\n          loading: false,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n  handleValidSubmit = () => {\r\n    this.setState({ loading: true });\r\n    const { data } = this.state;\r\n    console.log(JSON.stringify(data));\r\n    this.props\r\n      .submit(data)\r\n      .then((data) => {\r\n        this.setState({ success: true, loading: false, errors: {} });\r\n        this.onShowAlert();\r\n        this.myFormRef.reset();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ errors: err.response.data.errors, loading: false });\r\n        this.onShowAlert();\r\n      });\r\n  };\r\n\r\n  onShowAlert = () => {\r\n    this.setState({ visible: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ visible: false });\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ ...this.state, success: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, errors, loading, success, exists, visible } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {!!success ? (\r\n            // <Alert color=\"info\" isOpen={visible}>\r\n            //   Customer is added successfully.\r\n            // </Alert>\r\n            <Modal\r\n              isOpen={success}\r\n              toggle={this.toggle}\r\n              className={this.props.className}\r\n            >\r\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\r\n              <ModalBody>Year Added successfully</ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>\r\n                  Ok\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={(el) => (this.myFormRef = el)}\r\n        >\r\n          <div>\r\n            {!!errors.global ? (\r\n              <Alert color=\"danger\">{errors.global}</Alert>\r\n            ) : null}\r\n          </div>\r\n          {!!exists ? (\r\n            <Card>\r\n              <CardHeader>Update Year</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Update Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"updateyear\"\r\n                        type=\"text\"\r\n                        placeholder={data.updateyear.toString()}\r\n                        id=\"addyear\"\r\n                        value={data.updateyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>AddYear</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Add Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"addyear\"\r\n                        type=\"text\"\r\n                        placeholder=\"ex: 2020-21\"\r\n                        id=\"addyear\"\r\n                        value={data.addyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </AvForm>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(AddYearForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport {\r\n  addYear, updateYear\r\n} from \"../../../actions/financialYearAdd\";\r\nimport CustomLoader from \"../../../Components/loader/loader\";\r\nimport AddYearForm from \"./AddYear/AddYearForm/AddYearForm\";\r\n\r\nclass AddFinancialYear extends React.Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  submit = data => {\r\n    if(data.updateid !== \"\") {\r\n      this.dataHandler(true);\r\n    return this.props\r\n      .updateYear(data)\r\n      .then(data => {\r\n        this.dataHandler(false);\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        this.dataHandler(false);\r\n        throw err;\r\n      });    \r\n    }\r\n    else {\r\n      this.dataHandler(true);\r\n      return this.props\r\n        .addYear(data)\r\n        .then(data => {\r\n          this.dataHandler(false);\r\n          return data;\r\n        })\r\n        .catch(err => {\r\n          this.dataHandler(false);\r\n          throw err;\r\n        });\r\n    }\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"container mg-t-20\">\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/admin_dashboard\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/inventory_page\">Setup</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/financialYearAdd\">Add Year</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Add Year</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddYearForm submit={this.submit} />\r\n        </div>\r\n        {/* <div>\r\n          <ViewCustomerList />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { addYear,updateYear }\r\n)(AddFinancialYear);\r\n","import api from \"../Services/api\";\r\n\r\n\r\n export const addYear = data => {\r\n    return dispatch => {\r\n      return api.year.addyear(data);\r\n    }\r\n  }\r\n\r\n  export const updateYear = data => {\r\n    return dispatch => {\r\n      return api.year.updateyear(data);\r\n    }\r\n  }","import axios from 'axios';\n\nexport default {\n  challan: {\n    addchallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/addchallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    updatechallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/updatechallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    \n    getchallan: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n        .then(res => {\n          return res.data.challanlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport { challanListSchema } from \"../Schemas/schemas\";\nimport api from \"../Services/challanapi\";\nimport { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nconst challanCreated = challanlist => {\n  return {\n    type: ADD_CHALLAN,\n    challanlist\n  };\n};\n\nconst challanFetched = challanlist => {\n  return {\n    type: CHALLAN_FETCHED,\n    challanlist\n  };\n};\n\nexport const addChallan = data => {\n  return dispatch => {\n    return api.challan.addchallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\nexport const updateChallan = data => {\n  return dispatch => {\n    return api.challan.updatechallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getChallan = () => {\n  return dispatch => {\n    return api.challan.getchallan().then(challanlist => {\n      console.log(challanlist)\n      const challanlistvalues = challanlist.challandata;\n      console.log(challanlistvalues)\n      return dispatch(\n        challanFetched(normalize(challanlistvalues, [challanListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  invoice: {\n    addinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/addinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    updateinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/updateinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    \n    getinvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    getproformainvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/invoiceapi\";\nimport { ADD_INVOICE, INVOICE_FETCHED,PROFORMAINVOICE_FETCHED } from \"../Services/types\";\nimport { invoiceListSchema,proformainvoiceListSchema } from \"../Schemas/schemas\";\n\nconst invoiceCreated = invoicelist => {\n  return {\n    type: ADD_INVOICE,\n    invoicelist\n  };\n};\n\nconst invoiceFetched = invoicelist => {\n  return {\n    type: INVOICE_FETCHED,\n    invoicelist\n  };\n};\n\nconst proformainvoiceFetched = proformainvoicelist => {\n  return {\n    type: PROFORMAINVOICE_FETCHED,\n    proformainvoicelist\n  };\n};\n\nexport const addinvoice = data => {\n  return dispatch => {\n    return api.invoice.addinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\nexport const updateinvoice = data => {\n  return dispatch => {\n    return api.invoice.updateinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getinvoice = () => {\n  return dispatch => {\n    return api.invoice.getinvoice().then(invoicelist => {\n      const invoicelistvalues = invoicelist.invoicedata;\n      console.log(invoicelistvalues)\n      return dispatch(\n        invoiceFetched(normalize(invoicelistvalues, [invoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const getproformainvoice = () => {\n  return dispatch => {\n    return api.invoice.getproformainvoice().then(invoicelist => {\n      const proformainvoicelist = invoicelist.invoicedata;\n      console.log(proformainvoicelist)\n      return dispatch(\n        proformainvoiceFetched(normalize(proformainvoicelist, [proformainvoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass ChallanForm extends React.Component {\n  state = {\n    data: {\n      invoicenumber: null,\n      transactionid: null,\n      invoiceid: \"\",\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [],\n        itemlocation: [null],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      },\n      customerdetail: {\n        id: \"\",\n        customername: \"\",\n        customernumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      deliverychallanno: '',\n      toaddress: '',\n      mobilenumber: '',\n      site: '',\n      date: new Date(),\n      ponumber: '',\n      podate: new Date(),\n      vehiclenumber: '',\n      gstno: '',\n      otherreference: '',\n      values: ['']\n    },\n    errors: {},\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedInvoiceId: null,\n    selectedInvoiceNumber: null,\n    customerobjects: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    invoicelistvalues: [],\n    invoicelistselectedOptions: [],\n    itemlistSelectedOption: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    customerlistvalues: [],\n    customerlistSelect: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:'',\n    counts:1\n  };\n\n  componentDidMount() {\n  \n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const invoicelistvalues = Object.values(this.props.invoicelistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n\n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n      \n      let arrayInvoiceSet = [];\n      invoicelistvalues.map((option, i) => {\n        let objset = {\n          value: option._id, label: option.invoicenumber\n        }\n        arrayInvoiceSet.push(objset);\n      });\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        invoicelistvalues,\n        invoicelistselectedOptions: arrayInvoiceSet,\n        itemlistSelectedOption: newArraySet,\n        currencylistvalues,\n        locationlistvalue,\n        customerlistvalues,\n        customerobjects,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data\n        }\n      },() =>{\n        if (this.props.ID != undefined) {\n          this.getDCDetails(this.props.ID)\n        }\n        else{\n          //if(Object.keys(this.props.challanlistvalues).length == 0){\n            this.getChallandata()\n          //}\n        }\n      });\n    \n  }\n\n  getChallandata(){\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n      // if (res.data.challanlist.challandata.length > 0) {\n         \n        let deliverychallanno =\n        res.data.challanlist.challandata.length > 0 ? 1 + res.data.challanlist.challandata.length : 1;\n\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        });\n      //}\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n  getDCDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/challan/getsinglechallan/${id}`)\n      .then(res => {\n\n        console.log(res.data)\n         if (res.data.challanlist.challandata.length > 0) {\n           let founddata = res.data.challanlist.challandata;\n            console.log(founddata[0])\n           if(founddata[0].invoicenumber) {\n            this.handleInvoiceChange(founddata[0].invoiceid);\n           }\n           const newState = Object.assign({}, this.state);\n           newState.data.deliverychallanno = founddata[0].deliverychallanno;\n           newState.data.toaddress = founddata[0].toaddress;\n           newState.data.site = founddata[0].site;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.ponumber = founddata[0].ponumber;\n           newState.data.podate =  new Date(founddata[0].podate);\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.otherreference = founddata[0].otherreference;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.mobilenumber = founddata[0].mobilenumber ? founddata[0].mobilenumber : ''\n           newState.data.customerdetail.id = founddata[0].customerid ? founddata[0].customerid._id : '';\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n          \n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState);\n\n         \n         \n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.ID == undefined){\n      const materialoptionlistvalues = Object.values(\n        props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n      const masteritemlistvaluesobject = props.masteritemlistvalues;\n      const currencylistvalues = Object.values(props.currencylistvalues);\n      const invoicelistvalues = Object.values(this.props.invoicelistvalues);\n      const uomlistvalues = Object.values(props.uomlistvalues);\n      const locationlistvalue = Object.values(props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const challanlistvalues = Object.keys(this.props.challanlistvalues);\n      \n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      let arraySet = [];    \n      customerlistvalues.map((option, i) => {\n        let objset = {\n          value: option.id, label: option.customername\n        }\n        arraySet.push(objset);\n      });\n\n      let arrayInvoiceSet = [];\n      invoicelistvalues.map((option, i) => {\n        let objset = {\n          value: option._id, label: option.invoicenumber\n        }\n        arrayInvoiceSet.push(objset);\n      });\n      \n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n      \n\n      let deliverychallanno =\n        challanlistvalues.length > 0 ? 1 + challanlistvalues.length : 1;\n  \n        this.setState({\n          ...this.state,\n          masteritemlistvalues,\n          masteritemlistvaluesobject,\n          materialoptionlistvalues,\n          currencylistvalues,\n          invoicelistvalues,\n          invoicelistselectedOptions: arrayInvoiceSet,\n          locationlistvalue,\n          customerlistvalues,\n          itemlistSelectedOption: newArraySet,\n          customerlistSelect: arraySet,\n          customerobjects,\n          uom: uomlistvalues,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        },()=>{\n          console.log(this.state.customerlistvalues)\n        });\n    }\n \n    \n\n      \n \n  }\n\n\n  handleInvoiceChange = async(e) => {\n    console.log(e)\n    let selectedinvoice = e.value ? e.value : e\n    console.log(selectedinvoice)\n    const invoicelistvalues = this.state.invoicelistvalues;\n    let invoiceselected = invoicelistvalues.filter(\n      invoice => invoice._id === selectedinvoice || invoice.invoicenumber === selectedinvoice\n    );\n    console.log(\"invoice selected is\",invoiceselected)\n    if(invoiceselected && invoiceselected.length > 0){\n      invoiceselected = invoiceselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = invoiceselected.customerid ? invoiceselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let purchaseordernumber = invoiceselected.quotationnumber;\n      let transId = null;\n      const invoicenumber = invoiceselected.invoicenumber;\n      const invoiceid = selectedinvoice;\n      this.setState({ loading: true });\n      transId = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + invoiceselected.customerid)\n      .then(res => {\n        this.setState({ loading: false });\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            console.log(\"customer values is\", customervalues);\n            console.log(\"invoice selected is\", invoiceselected);\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == invoiceselected.quotationnumber\n            });\n            if(customervalues.length > 0)\n            {\n              return customervalues[0]['_id'];\n            }\n            else {\n              return \"\";\n            }\n          }\n        }\n      },\n      error =>{\n        this.setState({ loading: false });\n      });\n      let purchaseorderdate = new Date();\n      if(invoiceselected.purchaseorderdate) {\n        purchaseorderdate = new Date(invoiceselected.purchaseorderdate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      }\n      let values = invoiceselected.addeditemlist\n      if (invoiceselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < invoiceselected.addeditemlist.length; i++) {\n          invoiceselected.addeditemlist[i].itemdiscount = invoiceselected.addeditemlist[i].itemdiscount == null || invoiceselected.addeditemlist[i].itemdiscount == '' ?\n          invoiceselected.addeditemlist[i].itemdiscount = 0 : invoiceselected.addeditemlist[i].itemdiscount\n          invoiceselected.addeditemlist[i].itemdiscount = (invoiceselected.addeditemlist[i].itemdiscount).toString()\n\n\n          invoiceselected.addeditemlist[i].quantity = invoiceselected.addeditemlist[i].quantity == null || invoiceselected.addeditemlist[i].quantity == '' ?\n          invoiceselected.addeditemlist[i].quantity = 0 : invoiceselected.addeditemlist[i].quantity\n          invoiceselected.addeditemlist[i].quantity = (invoiceselected.addeditemlist[i].quantity).toString()\n\n          invoiceselected.addeditemlist[i].costperunit = invoiceselected.addeditemlist[i].costperunit == null || invoiceselected.addeditemlist[i].costperunit == '' ?\n          invoiceselected.addeditemlist[i].costperunit = 0 : invoiceselected.addeditemlist[i].costperunit\n          invoiceselected.addeditemlist[i].costperunit = (invoiceselected.addeditemlist[i].costperunit).toString()\n\n          invoiceselected.addeditemlist[i].totalcost = invoiceselected.addeditemlist[i].totalcost == null || invoiceselected.addeditemlist[i].totalcost == '' ?\n          invoiceselected.addeditemlist[i].totalcost = 0 : invoiceselected.addeditemlist[i].totalcost\n          invoiceselected.addeditemlist[i].totalcost = (invoiceselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n          let itemname = invoiceselected.addeditemlist[i].itemdescription;\n          if(invoiceselected.addeditemlist[i].itemshortdescription && invoiceselected.addeditemlist[i].itemshortdescription !== '') {\n            itemname = invoiceselected.addeditemlist[i].itemshortdescription;\n          }\n\n          selectedItemlist.itemname.push(itemname);\n          selectedItemlist.itemrate.push(invoiceselected.addeditemlist[i].costperunit);\n          selectedItemlist.itemdescription.push(invoiceselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(invoiceselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(invoiceselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(invoiceselected.addeditemlist[i].itemdiscount)\n          selectedItemlist.remarks.push(\"\");\n          selectedItemlist.itemlocation.push(\"\");\n\n\n         \n          selectedItemlist.itemuom.push(invoiceselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(invoiceselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(invoiceselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(invoiceselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(invoiceselected.addeditemlist[i].id)\n\n        }\n      }\n\n      const mobilenumber = invoiceselected.customercontactnumber;\n      const toaddress = invoiceselected.billingaddress;\n      let vehiclenumber = this.state.vehiclenumber;\n      if(invoiceselected.vehiclenumber) {\n        vehiclenumber = invoiceselected.vehiclenumber\n      }\n      let gstno = this.state.gstno;\n      if(invoiceselected.customergstnumber) {\n        gstno = invoiceselected.customergstnumber;\n      }\n\n      \n \n      const { totalcost } = selectedItemlist;\n      let totalvalue = 0;\n      if (totalcost.length > 0) {\n        totalvalue = totalcost\n          .map((value, i) => {\n            if (value) {\n              return parseFloat(value);\n            } else {\n              return 0;\n            }\n          })\n          .reduce((a, b) => {\n            return a + b;\n          }); \n        }\n\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          invoicenumber,\n          totalvalue,\n          transactionid: transId,\n          invoiceid,\n          selectedCustomerID: invoiceselected.customerid,\n          selectedCustomerName: invoiceselected.customername,\n          selectedInvoiceId: selectedinvoice,\n          selectedInvoiceNumber: invoiceselected.invoicenumber,\n          ponumber: purchaseordernumber,\n          podate: purchaseorderdate,\n          selectedItemlist,\n          mobilenumber,\n          toaddress,\n          gstno,\n          vehiclenumber,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            invoicenumber : invoicenumber,\n            invoiceid : invoiceid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          // if (invoiceselected.addeditemlist.length > 0) {\n          //   invoiceselected.addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index);\n          //   })\n          // }\n          if(invoiceselected.customerid) {\n            this.handleChange2(invoiceselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: date\n      }\n    });\n  };\n\n  handlePODate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        podate: date\n      }\n    });\n  };\n\n  handleChange = e => {\n    console.log( e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChange2 = e => {\n\n    let selected_id = e.value ? e.value : e\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n\n    let toaddress = customerdetail ? customerdetail.customeraddress1 +\n    \" \" +\n    customerdetail.customeraddress2 +\n    \" \" +\n    customerdetail.city +\n    \" \" +\n    customerdetail.state +\n    \" \" +\n    customerdetail.country +\n    \" \" +\n    customerdetail.pincode : ''\n\n  \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail,\n        toaddress,\n      },\n      selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n    },()=>{\n      localStorage.setItem('custname',this.state.data.customerdetail.customername)\n      console.log(this.state.data.customerdetail)\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n\n  createSelectcustomer = () => {\n    let items = [];\n    let customerlistvalues = this.state.customerlistvalues;\n    console.log(this.state.customerlistvalues)\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.value ? e.value : e;\n    console.log(this.state.masteritemlistvaluesobject)\n    console.log(selected_id)\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //   : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        \n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        }\n  \n        this.setState({\n  \n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          this.totalValue();\n        });\n      }\n      \n      }\n\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    const remarks = removeItem.selectedItemlist.remarks;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    remarks.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks\n        }\n      }\n    },() =>{\n      console.log(this.state.data.selectedItemlist)\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    console.log(this.state.data.customerdetail)\n    const { supplierdetail, selectedItemlist,customerdetail } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    data['customerdetail'].customername = localStorage.getItem('custname')\n    \n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    \n\n    this.props\n      .submit(data)\n      .then(() => {\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n        }\n\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n\n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n          }\n        \n      });\n  };\n\n  \n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let SelINV;\n    if(this.state.selectedInvoiceId != undefined) {\n      SelINV = {\n        value: this.state.selectedInvoiceId, label: this.state.selectedInvoiceNumber\n      }\n    }\n    const customerID = this.state.selectedCustomerID ? (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n    //   value={data.customerdetail.id}\n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />    \n    ) : (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n  \n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />        \n    )\n\n    let invoiceDisp = this.state.selectedInvoiceId ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleInvoiceChange.bind(this)} styles={customStyles} required value={SelINV} options={this.state.invoicelistselectedOptions} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleInvoiceChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.invoicelistselectedOptions} />\n    )\n    return (\n      <div>\n\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Delivery Challan</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Delivery Challan</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallanno'>DC</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='deliverychallanno'\n                      type='text'\n                      id='deliverychallanno'\n                      value={data.deliverychallanno || null}\n                      onChange={this.handleChange}\n                 \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Invoice No</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {invoiceDisp}\n                  </AvGroup>\n                </Col>                \n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To address </Label>\n                    <AvField\n                      Label\n                      name='toaddress'\n                      type='text'\n                      id='toaddress'\n                      value={data.toaddress}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='site'>Site</Label>\n                  <AvField\n                    Label\n                    name='site'\n                    type='text'\n                    id='site'\n                    value={data.site || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='mobilenumber'>Mobile No</Label>\n                  <AvField\n                    Label\n                    name='mobilenumber'\n                    type='text'\n                    id='mobilenumber'\n                    value={data.mobilenumber || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='quotationno'>Date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChallanDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>PO no</Label>\n                    <AvField\n                      Label\n                      type='text'\n                      name='ponumber'\n                      id='ponumber'\n                      value={data.ponumber || null}\n                      onChange={e => this.handleChange(e)}\n                    ></AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='podate'>PO Date</Label>\n                  <DatePicker\n                    selected={data.podate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handlePODate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='podate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='vehiclenumber'>Vehicle Number</Label>\n                    <AvField\n                      Label\n                      name='vehiclenumber'\n                      type='text'\n                      id='vehiclenumber'\n                      value={data.vehiclenumber}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      Label\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='otherreference'>Other reference</Label>\n                    <AvField\n                      Label\n                      name='otherreference'\n                      type='text'\n                      id='otherreference'\n                      value={data.otherreference}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              {/* className='purchaseorder-item-row' */}\n              <div >\n                {data.values.map((values, index) => {\n                            let optionsel = \"\";\n                            let SelVal = {};\n                            if(values.id != undefined) {\n                              if(values.itemshortdescription) {\n                                optionsel = values.itemshortdescription;\n                              }\n                              else {\n                                optionsel = values.itemdescription;\n                              }\n                              SelVal = {\n                                value: values.id._id, label: optionsel\n                              }\n                            }\n                            const itemnameinfo = values.id != undefined ? (\n                              // <AvField\n                              //   type=\"select\"\n                              //   value={values.id._id}\n                              //   name={`selectitem${index}`}\n                              //   onChange={e => this.selectitemchange(e, index)}\n                              //   required={true}\n                              // >\n                              //   <option value=\"\">select Item</option>\n                              //   {this.createSelectItems()}\n                              // </AvField>\n                              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                              ) :\n                              (\n                                // <AvField\n                                //   type=\"select\"\n                                //   name={`selectitem${index}`}\n                                //   value={\n                                //     data.selectedItemlist.id[index]\n                                //   }\n                                //   onChange={e => this.selectitemchange(e, index)}\n                                //   required={true}\n                                // >\n                                //   <option value=\"\">select Item</option>\n                                //   {this.createSelectItems()}\n                                // </AvField>\n                                <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                              )\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                readOnly\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                \n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                            \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                readOnly\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] || null\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='remarks'>Remarks</Label>\n                              <AvField\n                                Label\n                                name='remarks'\n                                type='text'\n                                id='remarks'\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    invoicelistvalues: state.invoicelistvalues,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChallanForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addChallan } from '../../../../actions/challan';\nimport { getChallan } from '../../../../actions/challan';\nimport { updateChallan } from '../../../../actions/challan';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport axios from 'axios';\n\nimport ChallanForm from './ChallanForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddChallan extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    this.props.getinvoice();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n\n      return this.props\n      .updateChallan(data)\n      .then(submitdata => {\n        console.log(\"data received is \", data);\n        let obj = {};\n        obj['_id'] = data.transactionid;\n        obj['challan_link'] = data.deliverychallanno;\n        axios\n        .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n        .then(res => {\n          this.dataHandler(false);\n          return submitdata;\n        },\n        error =>{\n          this.dataHandler(false);\n          throw error;\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n        .addChallan(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['challan_link'] = data.deliverychallanno;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return submitdata;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n    }\n  \n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Challan</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ChallanForm submit={this.submit}  ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addChallan,\n    updateChallan,\n    getCustomerList,\n    getChallan,\n    getinvoice\n  }\n)(AddChallan);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getChallan } from '../../../../actions/challan';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nclass ViewChallan extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    challanlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    \n    console.log(this.props);\n    if (this.props.challanlistvalues) {\n      let quotationlist = Object.values(this.props.challanlistvalues);\n\n      quotationlist.sort(function(a, b){\n        return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n      });\n      const challanlistvalues = quotationlist.map(quotationvalue => {\n        return {\n          deliverychallanno: quotationvalue.deliverychallanno,\n          ponumber: quotationvalue.ponumber,\n          vehiclenumber: quotationvalue.vehiclenumber,\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, challanlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.challanlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.deliverychallanno.toLowerCase().localeCompare(a.deliverychallanno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n    });\n    const challanlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        deliverychallanno: quotationvalue.deliverychallanno,\n        ponumber: quotationvalue.ponumber,\n        vehiclenumber: quotationvalue.vehiclenumber,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, challanlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_challanpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  updatechallan(id) {\n    let path = `/editchallan/${id}`;\n    this.props.history.push(path);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, challanlistvalues } = this.state;\n    console.log(challanlistvalues)\n    const columnvalue = [\n      {\n        label: 'Delivery Challan',\n        field: 'deliverychallanno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'PO Number',\n        field: 'ponumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Vehicle Number',\n        field: 'vehiclenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={challanlistvalues} \n          columnvalue={columnvalue}\n          className=\"challanlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getChallan \n    }\n)(ViewChallan);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ challanlistvalues, data_cond }) => {\n  const financialYear = challanlistvalues.financialyear;\n  console.log(JSON.stringify(challanlistvalues));\n  const data = challanlistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = challanlistvalues.totalvalue\n    ? challanlistvalues.totalvalue\n    : '';\n  const taxableAmount = challanlistvalues.taxableamount;\n  const date = moment(challanlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(challanlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(challanlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = challanlistvalues.billingaddress;\n  const deliveryaddress = challanlistvalues.deliveryaddress;\n  const vendorcode = challanlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = challanlistvalues;\n\n  let {\n    deliverychallanno,\n    toaddress,\n    site,\n    ponumber,\n    vehiclenumber,\n    otherreference,\n    gstno,\n    customername\n  } = challanlistvalues;\n  let arr = [],toAD='',arr1 = [],siteAD='',customername1 = ''\n  let mobileno = challanlistvalues.mobilenumber ? challanlistvalues.mobilenumber : ''\n  // if(toaddress.indexOf(',') > -1){\n  //   arr = toaddress.split(',');\n  //   customername = arr[0]\n  //   if(arr.length > 2){\n  //     for(var i=1;i<arr.length;i++){\n  //       toAD = i > 1 ? toAD + ',' + arr[i] : toAD + arr[i]\n  //     }\n  //   }\n  // }\n  // else\n  //   toAD = toaddress\n\n\n    toAD = toaddress\n  \n    // if(site.indexOf(',') > -1){\n    //   arr1 = site.split(',');\n    //   customername1 = arr1[0]\n    //   if(arr1.length > 2){\n    //     for(var i=1;i<arr1.length;i++){\n    //       siteAD = i > 1 ? siteAD + ',' + arr1[i] : siteAD + arr1[i]\n    //     }\n    //   }\n    // }\n    // else\n    //   siteAD = site\n\n    \n\n\n  const purchaseordernumber = challanlistvalues.purchaseordernumber;\n  const tax = challanlistvalues.tax ? challanlistvalues.tax : '';\n  const taxpercentage = challanlistvalues.tax\n    ? challanlistvalues.tax / 100\n    : '';\n\n\n  let pageone = [];\n  let pageTwo = [];\n  let pageThree = [];\n  let pageoneislast = false;\n  let pagetwoislast = false;\n  let pagethreeislast = false;\n\n  data.forEach((ele, i) => {\n    if (i == 0 && data.length > 1) {\n        if(ele.itemname.length < 2043) {\n            pageone.push(ele);\n            if (ele.itemname.length + data[i + 1].itemname.length < 2043) {\n                pageone.push(data[i + 1]);\n                if (data.length > 2) {\n                    if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length < 2043) {\n                        pageone.push(data[i + 2]);\n                        if (data.length > 3) {\n                            if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length < 2043) {\n                                pageone.push(data[i + 3]);\n                                if (data.length > 4) {\n                                    if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length + data[i + 4].itemname.length < 2043) {\n                                        pageone.push(data[i + 4]);\n                                        if (data.length > 5) {\n                                          if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length + data[i + 4].itemname.length + data[i + 5].itemname.length < 2043) {\n                                            pageone.push(data[i + 5]);\n                                          }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (pageone.length > 0) {\n            if (data.length > pageone.length) {\n                if (data[pageone.length].itemname.length < 2723) {\n                    pageTwo.push(data[pageone.length])\n                }\n                if(data.length > (pageone.length + 1) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length < 2723) {\n                    pageTwo.push(data[pageone.length + 1])\n                }\n                if(data.length > (pageone.length + 2) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length < 2723) {\n                    pageTwo.push(data[pageone.length + 2])\n                }\n                if(data.length > (pageone.length + 3) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length < 2723) {\n                    pageTwo.push(data[pageone.length + 3])\n                }\n                if(data.length > (pageone.length + 3) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length + data[pageone.length + 4].itemname.length < 2723) {\n                    pageTwo.push(data[pageone.length + 4])\n                }\n                if(data.length > (pageone.length + 3) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length + data[pageone.length + 4].itemname.length + data[pageone.length + 5].itemname.length < 2723) {\n                    pageTwo.push(data[pageone.length + 5])\n                }\n                if(data.length > (pageone.length + 3) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length + data[pageone.length + 4].itemname.length + data[pageone.length + 5].itemname.length + data[pageone.length + 6].itemname.length < 2723) {\n                    pageTwo.push(data[pageone.length + 6])\n                }                \n            }\n            else {\n              pageoneislast = true;\n            }\n        }\n        if(pageTwo.length > 0) {\n            if (data.length > (pageone.length + pageTwo.length)) {\n                if (data[pageone.length + pageTwo.length].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 1) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 1])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 2) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length + data[pageone.length  + pageTwo.length + 2].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 2])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 3) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length + data[pageone.length  + pageTwo.length + 2].itemname.length + data[pageone.length  + pageTwo.length + 3].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 3])\n                }\n            }\n            else {\n              pagetwoislast = true;\n            }\n        }\n    }\n    else if((i == 0 && data.length == 1)) {\n        pageone.push(data[i]);\n        pageoneislast = true;\n    }\n});\nlet pageoneTable;\nlet pagetwoTable;\nlet pagethreeTable;\n\nif (pageone.length > 0) {\n  pageoneTable = pageone.map((pageonedata, index) => {\n    if(index == 0) {\n      return (\n      <Table\n        border={2}\n        style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n        data={pageone}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ backgroundColor: 'tomato' }}\n        >\n          <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n            <Text style={[styles.headerfont]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={[styles.headerfont]}>PARTICULAR</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={[styles.headerfont]}>Unit</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={[styles.headerfont]}>Quantity</Text>\n          </TableCell>\n          <TableCell weighting={0.4}>\n            <Text style={[styles.headerfont]}>REMARKS</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n          />\n          <DataTableCell styles={{ height: 60 }}\n            style={styles.padding}\n            weighting={0.6}\n            getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n          <DataTableCell\n            style={styles.padding}\n            weighting={0.2}\n            getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n          <DataTableCell\n            style={styles.padding}\n            weighting={0.4}\n            getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n        </TableBody>\n      </Table>\n      )\n    }\n  });\n}\n\nif(pageTwo.length > 0) {\n  pagetwoTable = pageTwo.map((pagetwodata, index) => {\n    if(index == 0) {\n      return (\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text> \n      <Table\n        border={2}\n        style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n        data={pageTwo}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ backgroundColor: 'tomato' }}\n        >\n          <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n            <Text style={[styles.headerfont]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={[styles.headerfont]}>PARTICULAR</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={[styles.headerfont]}>Unit</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={[styles.headerfont]}>Quantity</Text>\n          </TableCell>\n          <TableCell weighting={0.4}>\n            <Text style={[styles.headerfont]}>REMARKS</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n          />\n          <DataTableCell styles={{ height: 60 }}\n            style={styles.padding}\n            weighting={0.6}\n            getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n          <DataTableCell\n            style={styles.padding}\n            weighting={0.2}\n            getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n          <DataTableCell\n            style={styles.padding}\n            weighting={0.4}\n            getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n        </TableBody>\n      </Table>        \n       <Text> {'\\n'}</Text>\n       {/* Three divs for remarks, tax details and amount */}\n       \n       {/* Two */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n               {'\\n'}\n               {'\\n'}\n\n             </Text>\n           </TableCell>\n           <TableCell weighting={0.5}>\n   \n           </TableCell>\n         </TableHeader>\n       </Table> */}\n       {/* Three */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n             {amountinwords}\n             </Text>\n           </TableCell>\n\n         </TableHeader>\n       </Table> */}\n       {/* ends here */}\n       <Text> {'\\n'}</Text>\n                 {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n      );\n    }\n  })\n}\n\n\nif(pageThree.length > 0) {\n  pagethreeTable = pageThree.map((pagethreedata, index) => {\n    if(index == 0) {\n      return (\n      <Page style={styles.pagepadding} wrap>\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text>\n      <Table\n        border={2}\n        style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n        data={pageThree}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ backgroundColor: 'tomato' }}\n        >\n          <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n            <Text style={[styles.headerfont]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={[styles.headerfont]}>PARTICULAR</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={[styles.headerfont]}>Unit</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={[styles.headerfont]}>Quantity</Text>\n          </TableCell>\n          <TableCell weighting={0.4}>\n            <Text style={[styles.headerfont]}>REMARKS</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n          />\n          <DataTableCell styles={{ height: 60 }}\n            style={styles.padding}\n            weighting={0.6}\n            getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n          <DataTableCell\n            style={styles.padding}\n            weighting={0.2}\n            getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n          <DataTableCell\n            style={styles.padding}\n            weighting={0.4}\n            getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n        </TableBody>\n      </Table>        \n       <Text> {'\\n'}</Text>\n       \n       {/* Two */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n               {'\\n'}\n               {'\\n'}\n\n             </Text>\n           </TableCell>\n           <TableCell weighting={0.5}>\n   \n           </TableCell>\n         </TableHeader>\n       </Table> */}\n       {/* Three */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n             {amountinwords}\n             </Text>\n           </TableCell>\n\n         </TableHeader>\n       </Table> */}\n       {/* ends here */}\n       <Text> {'\\n'}</Text>\n                 {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page> \n      );\n    }\n  })\n}\n\n\n\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = challanlistvalues.selectedcontactlist[0]\n  //     ? challanlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, { color: 'red', paddingLeft: 16 }]}>{deliverychallanno}</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{toAD}</Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={styles.dcaddress}>Site</Text>\n              <Text style={styles.dcaddress}>{site}</Text>\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={styles.header_tintext}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.weighteach}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.costperunit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.totalcost}</Text>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text>\n\n    \n\n        {/* <Text>{'\\n'}</Text> */}\n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, {\n                  color: 'red',\n                  paddingLeft: 16,\n                }]}>{deliverychallanno}/{financialYear}</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{toAD}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}> Phone no : {mobileno} </Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>Site</Text>\n              {/* <Text style={styles.dcaddress}>{site}</Text> */}\n              {/* <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername1}</Text> */}\n\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{site}</Text>\n\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Text>{'\\n'}</Text>\n\n          {pageoneTable}\n                    {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n          {pagetwoTable}\n          {pagethreeTable}\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getChallan } from '../../../../actions/challan';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport axios from \"axios\";\nimport './ViewChallan';\n\nclass ViewChallanPdf extends React.Component {\n  state = {\n    challanlistvalues: {},\n    status: false,\n    link: ''\n  };\n  async componentDidMount() {\n    this.props.getChallan();\n    const quotationid = this.props.match.params.id;\n    const challanlistvalues = this.props.challanlistvalues[quotationid];\n    challanlistvalues.requestdeliverydate = moment(\n      challanlistvalues.date\n    ).format('DD MMM, YYYY');\n    challanlistvalues.addeditemlist = challanlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n\n        if(itemlist.itemdescription.length < 340) {\n          console.log(\"coming here\");\n          let totalSpacerequired = 340 - itemlist.itemdescription.length;\n          let numSpaces = totalSpacerequired; // Change this to the number of spaces you want to add\n\n          let spaces = \" \".repeat(numSpaces); // Create a string of spaces\n          itemlist.itemdescription = itemlist.itemdescription + spaces;\n\n          console.log(\"after adding space\", itemlist.itemdescription);\n        }\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          itemdiscount: 0,\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = challanlistvalues.customerid;\n    const customernumber = challanlistvalues.customernumber;\n    const customername = challanlistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          challanlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          challanlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        challanlistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(challanlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        challanlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/challanlist');\n          }, 300);\n        });\n   \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, challanlistvalues, link } = this.state;\n    console.log(this.state);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                challanlistvalues={this.state.challanlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getChallan }\n)(ViewChallanPdf);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../../Components/loader/loader\";\nimport axios from \"axios\";\n\n\nclass EnquiryPage extends React.Component {\n  state = {\n    searchtodate: null,\n    count: null,\n    success: false,\n    update: false,\n    enquirylistvalues: [],\n    backupenquirylistvalues: [],\n    loading: false,\n    errorMsg: '',\n    data: {\n      eno: '',\n      company: '',\n      name: '',\n      phone: '',\n      email: '',\n      detail: '',\n      enquiryFrom: '',\n //   quoteno: '',\n      quotationCreated: false\n    }\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n    this.getEnquiries()\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  quotationCreated = e => {\n    const val = this.state.data.quotationCreated;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [\"quotationCreated\"]: !val }\n    })\n  }\n  updateButton = e => {\n    console.log(e);\n    if (!e.quotationCreated) { e.quotationCreated = false; }\n    this.setState({ ...this.state, success: true, update: true, data: e });\n  }\n  getEnquiries() {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/Enquiry/getenquiry`)\n      .then(res => {\n        this.dataHandler(false)\n        if (res.data.enquirylist.enquirydata.length > 0) {\n          let enquiryvalues = res.data.enquirylist.enquirydata;\n          if (enquiryvalues.length > 0) {\n            enquiryvalues = enquiryvalues.reverse()\n            enquiryvalues = enquiryvalues.map(enquiry => {\n              console.log(enquiry)\n              let created = \"No\"\n              if (enquiry.quotationCreated) {\n                created = \"Yes\"\n              }\n              return {\n                date: enquiry.date,\n                name: enquiry.name,\n                phone: enquiry.phone,\n                company: enquiry.company,\n                email: enquiry.email,\n                detail: enquiry.detail,\n                enquiryFrom: enquiry.enquiryFrom || null,\n            //    quoteno: enquiry.quoteno || null,\n                view: (\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(enquiry);\n                    }}\n                  >\n                    Edit\n                </Button>\n                )\n\n              };\n            });\n\n            this.setState({\n              enquirylistvalues: enquiryvalues,\n              count: enquiryvalues.length\n            }, () => {\n            })\n          }\n        }\n        else {\n          this.setState({ count: 0 })\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  addenquiry = () => {\n    this.setState({\n      success: true, update: false,\n      data: {\n        eno: '',\n        company: '',\n        name: '',\n        phone: '',\n        email: '',\n        detail: '',\n        enquiryFrom: '',\n   //   quoteno: '',\n        quotationCreated: false\n      }\n    });\n  }\n\n  addnewenquiry = () => {\n    const { data } = this.state;\n    if (data.company == '' || data.name == '' || data.phone == '' || data.email == '' || data.detail == '' || data.enquiryFrom == '') {\n      this.setState({ 'errorMsg': 'Fill all fields' });\n    }\n    else {\n      console.log(this.state.data)\n\n      this.dataHandler(true)\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      axios\n        .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/addenquiry`,\n          {\n            \"eno\": \"\",\n            \"company\": data.company,\n            \"name\": data.name,\n            \"phone\": data.phone,\n            \"email\": data.email,\n            \"detail\": data.detail,\n            \"date\": date,\n            \"enquiryFrom\": data.enquiryFrom,\n          //  \"quoteno\": data.quoteno,\n            \"quotationCreated\": data.quotationCreated\n          })\n        .then(res => {\n          this.getEnquiries()\n          this.toggle();\n        },\n          error => {\n            this.dataHandler(false)\n            this.setState({ success: false, message: 'Server error.' });\n          });\n    }\n  }\n\n  updateenquiry = () => {\n    const { data } = this.state;\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/updateenquiry`,\n        {\n          \"_id\": data._id,\n          \"eno\": \"\",\n          \"company\": data.company,\n          \"name\": data.name,\n          \"phone\": data.phone,\n          \"email\": data.email,\n          \"detail\": data.detail,\n          \"date\": data.date,\n          \"enquiryFrom\": data.enquiryFrom,\n        //  \"quoteno\": data.quoteno,\n          \"quotationCreated\": data.quotationCreated\n        })\n      .then(res => {\n        this.getEnquiries()\n        this.toggle();\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  }\n\n  render() {\n    const { count, enquirylistvalues, loading, success, data, errorMsg, update } = this.state;\n\n    const columnvalue = [\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Phone number\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Company name\",\n        field: \"company\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Item detail\",\n        field: \"detail\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Enquiry\",\n        field: \"enquiryFrom\",\n        sort: \"asc\",\n        width: 50\n      },\n      // {\n      //   label: \"Quotation created\",\n      //   field: \"quotationCreated\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Edit\",\n        field: \"edit\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n\n\n\n    let modaldata, errormessage;\n    errormessage = errorMsg != '' ? (<p style={{ 'textAlign': 'center', 'color': 'red' }}>{errorMsg}</p>) : null\n    if (success) {\n      modaldata = (\n        <Modal\n          isOpen={success}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Enquiry</ModalHeader>\n          <ModalBody>\n\n            <input type=\"text\" className=\"form-control\" placeholder=\"Company name\" name=\"company\" value={data.company} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Person name\" name=\"name\" value={data.name} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Mode of enquiry\" name=\"enquiryFrom\" value={data.enquiryFrom} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"number\" className=\"form-control\" placeholder=\"Phone number\" name=\"phone\" value={data.phone} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" value={data.email} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  />\n            <textarea type=\"text\" className=\"form-control\" placeholder=\"Item details\" name=\"detail\" value={data.detail} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  ></textarea>\n            {/* <input type=\"text\" className=\"form-control\" placeholder=\"Quotation Number\" name=\"quoteno\" value={data.quoteno} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} /> */}\n            {/* <input type=\"checkbox\" className=\"\" value={data.quotationCreated} onChange={this.quotationCreated} checked={data.quotationCreated} /> <span style={{position:'relative',top:'-12px'}}> Quotation created </span> */}\n            {errormessage}\n          </ModalBody>\n          <ModalFooter>\n            {update ? (\n              <Button\n                Label\n                style={{ float: 'right' }}\n                color=\"primary\"\n                onClick={this.updateenquiry}\n              >\n                Update\n          </Button>\n            ) : (\n                <div>\n                  <Button color=\"primary\" onClick={this.toggle} style={{ fontSize: '0.8rem' }}>\n                    Cancel\n          </Button>\n                  <Button\n                    Label\n                    style={{ float: 'right' }}\n                    color=\"primary\"\n                    onClick={this.addnewenquiry}\n                  >\n                    Submit\n        </Button>\n                </div>\n              )}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n \n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/crmlist\">CRM</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Enquiries</BreadcrumbItem>\n\n            </Breadcrumb>\n\n\n            <Button\n              Label\n              style={{ float: 'right' }}\n              color=\"primary\"\n              onClick={this.addenquiry}\n            >\n              Add Enquiry\n          </Button>\n\n            {modaldata}\n\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={enquirylistvalues}\n              className=\"customerlist\"\n            />\n\n          </div>\n         \n      </div>\n    );\n  }\n}\n\n\n\nexport default EnquiryPage\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass InvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        itemshortdescription: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      user_email: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      quotationnumber: '',\n      transactionid: null,\n      quotationid: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      tcs: '',\n      tcsamount: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      advanceamountreceived:'',\n      values: ['']\n    },\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedQuotationId: null,\n    user: {},\n    selectedQuotationNumber: null,\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    quotationlistvalues: [],\n    customerlistSelect: [],\n    quotationlistSelect: [],\n    itemlistSelectedOption: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const user = this.props.user;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    const quotationlistvalues = Object.values(this.props.quotationlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      quotationlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      customerobjects,\n      user,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n\n      this.getChallandata();\n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/invoice/getsingleinvoice/${id}`)\n      .then(async (res) => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.tcs = founddata[0].tcs;\n           newState.data.tcsamount = founddata[0].tcsamount;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.customerID = founddata[0].customerid;\n           newState.selectedCustomerID = founddata[0].customerID;\n           newState.selectedCustomerName = founddata[0].customername;\n           newState.selectedQuotationId = founddata[0].quotationid;\n           newState.data.quotationid = founddata[0].quotationid;\n           newState.selectedQuotationNumber = founddata[0].quotationnumber;\n           newState.data.quotationnumber = founddata[0].quotationnumber;\n\n           const transactionid = await axios\n           .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + founddata[0].customerid)\n           .then(res => {\n             this.dataHandler(false)\n             if(res.data.customerlist.customerdata.length > 0){\n               let customervalues = res.data.customerlist.customerdata;\n               if(customervalues.length > 0){\n                 customervalues = customervalues.filter((item) =>{\n                   return item.Qno == founddata[0].quotationnumber\n                 });\n                 if(customervalues.length > 0)\n                 {\n                  console.log(\"customer values is\", customervalues)\n                   return customervalues[0]['_id'];\n                 }\n                 else {\n                   return \"\";\n                 }\n               }\n             }\n           },\n           error =>{\n             this.dataHandler(false);\n           });\n\n           newState.data.transactionid = transactionid;\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n              console.log(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          \n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  async componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const quotationlistvalues = Object.values(props.quotationlistvalues);\n    const user = props.user;\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n    if (this.props.ID == undefined) {\n      this.dataHandler(true)\n      await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n      .then(res => {\n  \n        this.dataHandler(false)\n       // if(res.data.invoicelist.invoicedata.length > 0){\n          let invoicelistlength =\n          res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n          let invoicenumber = (1 + invoicelistlength)\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              invoicenumber\n            }\n          }); \n        //}\n      },\n      error =>{\n        this.dataHandler(false)\n       \n      });\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      quotationlistvalues,\n      customerlistSelect: arraySet,\n      masteritemlistvalues,\n      user_email: user.email,\n      itemlistSelectedOption: newArraySet,\n      quotationlistSelect: arrayQuotationSet,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'tcs') {\n      console.log(\"tcs value is\", e.target.value);\n      if(e.target.value == \"false\") {\n        this.setState(\n          {\n            ...this.state,\n            data: {\n              ...this.state.data,\n              [e.target.name]: '0.1'\n            }\n          }\n        );\n      }\n      else if(e.target.value == \"true\") {\n        this.setState(\n          {\n            ...this.state,\n            data: {\n              ...this.state.data,\n              tcsamount : '',\n              [e.target.name]: ''\n            }\n          },\n          () => {\n            this.calculatePercentageAmount();\n          }\n        );\n      }\n    } else if (e.target.name === 'tcsamount') {\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    }\n     else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // TCS\n    let tcs = this.state.data.tcs;    \n    //tcs amount\n    let tcsamount = this.state.data.tcsamount;    \n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    \n    const total = (Number(subTotal) + Number(cgst) + Number(tcsamount) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n  \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        if(selected_item.masteritemshortdescription){\n          selectedItemlist.itemshortdescription[index] =\n          selected_item.masteritemshortdescription;\n        }\n          // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n          // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    },()=>{\n      this.totalValue();\n    });\n  \n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    console.log(\"customer id is\", selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    \n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }, selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            ''\n          ],          \n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemshortdescription = removeItem.selectedItemlist.itemshortdescription;    \n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      });\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleQuotationChange = async(e) => {\n    console.log(e)\n    let selectedquotation = e.value ? e.value : e\n    console.log(selectedquotation)\n    const quotationlistvalues = this.state.quotationlistvalues;\n    let quotationselected = quotationlistvalues.filter(\n      quotation => quotation._id === selectedquotation || quotation.quotationnumber === selectedquotation\n    );\n    console.log(quotationselected)\n    if(quotationselected && quotationselected.length > 0){\n      quotationselected = quotationselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = quotationselected.customerid ? quotationselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let transId = null;\n      const quotationnumber = quotationselected.quotationnumber;\n      const quotationid = selectedquotation;\n      this.dataHandler(true);\n      const purchaseordernumber = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + quotationselected.customerid)\n      .then(res => {\n        this.dataHandler(false)\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == quotationselected.quotationnumber\n            });\n            transId = customervalues[0]['_id'];\n            poDate = customervalues[0]['po'];\n            return customervalues[0]['ponum'];\n          }\n        }\n      },\n      error =>{\n        this.dataHandler(false);\n      });\n      const date = new Date(quotationselected.date);\n      let purchaseorderdate = this.state.data.purchaseorderdate;\n      if(poDate != \"\" && poDate != null) {\n        let arrDate = poDate.split(\"/\");\n        let newDate = arrDate[1]+\"/\"+arrDate[0]+\"/\"+arrDate[2];\n        purchaseorderdate = new Date(newDate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = quotationselected.addeditemlist\n      if (quotationselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < quotationselected.addeditemlist.length; i++) {\n          quotationselected.addeditemlist[i].itemdiscount = quotationselected.addeditemlist[i].itemdiscount == null || quotationselected.addeditemlist[i].itemdiscount == '' ?\n          quotationselected.addeditemlist[i].itemdiscount = 0 : quotationselected.addeditemlist[i].itemdiscount\n          quotationselected.addeditemlist[i].itemdiscount = (quotationselected.addeditemlist[i].itemdiscount).toString()\n\n\n          quotationselected.addeditemlist[i].quantity = quotationselected.addeditemlist[i].quantity == null || quotationselected.addeditemlist[i].quantity == '' ?\n          quotationselected.addeditemlist[i].quantity = 0 : quotationselected.addeditemlist[i].quantity\n          quotationselected.addeditemlist[i].quantity = (quotationselected.addeditemlist[i].quantity).toString()\n\n          quotationselected.addeditemlist[i].costperunit = quotationselected.addeditemlist[i].costperunit == null || quotationselected.addeditemlist[i].costperunit == '' ?\n          quotationselected.addeditemlist[i].costperunit = 0 : quotationselected.addeditemlist[i].costperunit\n          quotationselected.addeditemlist[i].costperunit = (quotationselected.addeditemlist[i].costperunit).toString()\n\n          quotationselected.addeditemlist[i].totalcost = quotationselected.addeditemlist[i].totalcost == null || quotationselected.addeditemlist[i].totalcost == '' ?\n          quotationselected.addeditemlist[i].totalcost = 0 : quotationselected.addeditemlist[i].totalcost\n          quotationselected.addeditemlist[i].totalcost = (quotationselected.addeditemlist[i].totalcost).toString()\n\n\n          let itemname = quotationselected.addeditemlist[i].itemdescription;\n          if(quotationselected.addeditemlist[i].itemshortdescription && quotationselected.addeditemlist[i].itemshortdescription !== '') {\n            itemname = quotationselected.addeditemlist[i].itemshortdescription;\n          }\n\n          selectedItemlist.itemname.push(itemname);\n          selectedItemlist.itemrate.push(quotationselected.addeditemlist[i].costperunit);\n          selectedItemlist.itemdescription.push(quotationselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(quotationselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(quotationselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(quotationselected.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(quotationselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(quotationselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(quotationselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(quotationselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(quotationselected.addeditemlist[i].id)\n\n        }\n      }\n\n\n      let transportcharge = quotationselected.tcharge;\n      let transportgst = parseFloat(transportcharge) * parseFloat(quotationselected.transportationgst) / 100;\n      let ws = quotationselected.ws;\n      let loadingcharges = quotationselected.loadingcharge;\n\n      let totalFreight = parseFloat(transportcharge) + parseFloat(transportgst) + parseFloat(ws) + parseFloat(loadingcharges);\n\n\n\n      let freightcharges = totalFreight.toFixed(2);\n      \n      const { totalcost } = selectedItemlist;\n      let taxableamount = 0;\n      if (totalcost.length > 0) {\n        taxableamount = totalcost\n          .map((value, i) => {\n            if (parseFloat(value)) {\n              const floatvalue = parseFloat(value).toFixed(2);\n              return floatvalue;\n            } else {\n              return parseFloat(0);\n            }\n          })\n          .reduce((a, b) => {\n            const parsedvalue = parseFloat(a) + parseFloat(b);\n            return parsedvalue;\n          });\n        }\n\n        let cgst = Number(quotationselected.tax) / 2;\n        let sgst = Number(quotationselected.tax) / 2;\n\n        const taxable = parseFloat(taxableamount).toFixed(2);\n        const subtotal = Number(freightcharges) + Number(taxable);\n\n        let tcs = '';\n        if(quotationselected.tcs) {\n          tcs = Number(quotationselected.tcs);\n        }\n\n        let cgstamount;\n        let sgstamount;\n        let tcsamount = 0;\n\n        if(quotationselected.tcsamount) {\n          tcsamount = Number(quotationselected.tcsamount);\n        }\n\n        cgstamount = (subtotal * cgst) / 100;\n        sgstamount = (subtotal * sgst) / 100;\n    \n        \n        const total = (Number(subtotal) + Number(cgstamount) + Number(tcsamount) + Number(sgstamount)).toFixed(2);\n        const grandtotal = Number(total).toFixed(2);\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          taxableamount,\n          cgst: cgst,\n          sgst: sgst,\n          tcs: tcs,\n          tcsamount: tcsamount,\n          subtotal: subtotal,\n          freightcharges: freightcharges,\n          total: total,\n          grandtotal: grandtotal,\n          quotationnumber,\n          transactionid: transId,\n          quotationid,\n          date,\n          purchaseordernumber,\n          purchaseorderdate,\n          selectedItemlist,\n          values\n        },\n        selectedCustomerID: quotationselected.customerid,\n        selectedCustomerName: quotationselected.customername,\n        selectedQuotationId: selectedquotation,\n        selectedQuotationNumber: quotationselected.quotationnumber,\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            quotationnumber : quotationnumber,\n            quotationid : quotationid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          // if (quotationselected.addeditemlist.length > 0) {\n          //   quotationselected.addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index,true);\n          //   })\n          // }\n          if(quotationselected.customerid) {\n            this.handleChange(quotationselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      \n\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(selectedChallan.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n\n      \n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(selectedChallan.customerid) {\n            this.handleChange(selectedChallan.customerid._id);\n          }\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let customerDisp = this.state.selectedCustomerID != undefined ? (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />\n    ) : (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    );\n    let SelQuota;\n    if(this.state.selectedQuotationId) {\n      SelQuota = {\n        value: this.state.selectedQuotationId, label: this.state.selectedQuotationNumber\n      }\n    }\n    let quotationdisp = this.state.selectedQuotationId != undefined ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required value={SelQuota} options={this.state.quotationlistSelect} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required defaultValue={data.deliverychallannumber} options={this.state.quotationlistSelect} />\n    );\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n               \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Quotation No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  {/* <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField> */}\n                  {quotationdisp}\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Quotation date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n\n                {/* <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> */}\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n         \n                   <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    required\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerDisp}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n              {/* <Row>\n                <div className='mg-t-20' style={{ 'marginLeft': '15px','fontSize': '16px','fontWeight': 'bold'}}>\n                   For Proforma Invoice:\n                </div>\n              </Row>\n              \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Despath </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n              </Row> */}\n\n\n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                let optionsel = \"\";\n                let SelVal = {};\n                if(values.id != undefined) {\n                  if(values.itemshortdescription) {\n                    optionsel = values.itemshortdescription;\n                  }\n                  else {\n                    optionsel = values.itemdescription;\n                  }\n                  SelVal = {\n                    value: values.id._id, label: optionsel\n                  }\n                }                  \n\n                const itemnameinfo = values.id != undefined ? (\n                  // <AvField\n                  //   type=\"select\"\n                  //   value={values.id._id}\n                  //   name={`selectitem${index}`}\n                  //   onChange={e => this.selectitemchange(e, index)}\n                  //   required={true}\n                  // >\n                  //   <option value=\"\">select Item</option>\n                  //   {this.createSelectItems()}\n                  // </AvField>\n                  <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                  ) :\n                  (\n                    // <AvField\n                    //   type=\"select\"\n                    //   name={`selectitem${index}`}\n                    //   value={\n                    //     data.selectedItemlist.id[index]\n                    //   }\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                  )\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='tcs'>TCS</Label>\n                    <AvField\n                      Label\n                      name='tcs'\n                      type='checkbox'\n                      id='tcs'\n                      value={data.tcs}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>    \n                \n                {data.tcs !== '' ? (\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='tcs'>TCS Amount</Label>\n                    <AvField\n                      Label\n                      name='tcsamount'\n                      type='number'\n                      id='tcsamount'\n                      value={data.tcsamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>) : null  }\n           \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    user: state.user,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(InvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport { getquotation } from \"../../../../actions/quotation\";\nimport InvoiceForm from \"./InvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport axios from 'axios';\n\nclass AddInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n    this.props.getquotation();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n  submit = data => {\n    console.log(data)\n    this.dataHandler(true);\n      if(this.props.match.params.id != undefined){\n        data['_id'] = this.props.match.params.id;\n        return this.props\n        .updateinvoice(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['invoice_link'] = \"/view_invoicepdf/\"+submitdata.invoicelist.result;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n      else{\n        return this.props\n        .addinvoice(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['invoice_link'] = \"/view_invoicepdf/\"+submitdata.invoicelist.result;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return submitdata;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <InvoiceForm submit={this.submit} ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan,\n    getquotation\n  }\n)(AddInvoice);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ProformaInvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    proformainvoicelist: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemshortdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        itemdiscountcost: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      user_email: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      quotationnumber: '',\n      transactionid: null,\n      quotationid: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      tcs: '',\n      tcsamount: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      transportationgst:'',\n      advanceamountreceived:'',\n      transportchargerequired: 'Yes',\n      values: ['']\n    },\n    selectedCustomerID: null,\n    user: {},\n    selectedCustomerName: null,\n    selectedQuotationId: null,\n    selectedQuotationNumber: null,\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    quotationlistvalues: [],\n    customerlistSelect: [],\n    quotationlistSelect: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    itemlistSelectedOption: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const user = this.props.user;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const quotationlistvalues = Object.values(this.props.quotationlistvalues);\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      user,\n      quotationlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n      this.getChallandata();\n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getsingleproformainvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.tcs = founddata[0].tcs;\n           newState.data.tcsamount = founddata[0].tcsamount;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.transportationgst = founddata[0].transportationgst ?  founddata[0].transportationgst : ''\n           \n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.data.transportchargerequired = founddata[0].transportchargerequired ? founddata[0].transportchargerequired : ''\n           \n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n              founddata[0].addeditemlist[i].itemdiscountcost = founddata[0].addeditemlist[i].itemdiscountcost == null || founddata[0].addeditemlist[i].itemdiscountcost == '' ?\n                founddata[0].addeditemlist[i].itemdiscountcost = 0 : founddata[0].addeditemlist[i].itemdiscountcost\n              founddata[0].addeditemlist[i].itemdiscountcost = (founddata[0].addeditemlist[i].itemdiscountcost).toString()              \n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n              if(founddata[0].addeditemlist[i].itemdiscount) {\n                let discount = parseFloat(founddata[0].addeditemlist[i].costperunit) * parseFloat(founddata[0].addeditemlist[i].itemdiscount) / 100;\n                discount = founddata[0].addeditemlist[i].costperunit - discount;\n                newState.data.selectedItemlist.itemdiscountcost.push(discount.toFixed(1));\n              }\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          newState.selectedQuotationId = founddata[0].quotationid;\n          newState.selectedQuotationNumber = founddata[0].quotationnumber;\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  async componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const quotationlistvalues = Object.values(props.quotationlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const user = props.user;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    console.log(\"quotation values is \", quotationlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n\n    if (this.props.ID == undefined) {\n      this.dataHandler(true)\n      await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n      .then(res => {\n  \n        this.dataHandler(false)\n        if(res.data.invoicelist.invoicedata.length > 0){\n          let invoicelistlength =\n          res.data.invoicelist.invoicedata.length > 0 ? 35 + res.data.invoicelist.invoicedata.length : 35;\n          let invoicenumber = (1 + invoicelistlength)\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              invoicenumber\n            }\n          }); \n        }\n        else{\n          const invoicenumber = 35\n          this.setState({\n            data: {\n              ...this.state.data,\n              invoicenumber\n            }\n          })\n        }\n        this.getChallandata()\n      },\n      error =>{\n        this.dataHandler(false)\n       \n      });\n  \n  \n      this.dataHandler(false)\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerlistSelect: arraySet,\n      customerobjects,\n      user_email: user.email,\n      quotationlistvalues,\n      masteritemlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      quotationlistSelect: arrayQuotationSet,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'tcs') {\n      console.log(\"tcs value is\", e.target.value);\n      if(e.target.value == \"false\") {\n        this.setState(\n          {\n            ...this.state,\n            data: {\n              ...this.state.data,\n              [e.target.name]: '0.1'\n            }\n          });\n      }\n      else if(e.target.value == \"true\") {\n        this.setState(\n          {\n            ...this.state,\n            data: {\n              ...this.state.data,\n              tcsamount : '',\n              [e.target.name]: ''\n            }\n          },\n          () => {\n            this.calculatePercentageAmount();\n          }\n        );\n      }\n    } else if (e.target.name === 'tcsamount') {\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    }\n     else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // TCS\n    let tcs = this.state.data.tcs;      \n    //tcs amount\n    let tcsamount = this.state.data.tcsamount;     \n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(tcsamount) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    console.log(e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.itemdiscountcost[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.itemdiscountcost[index] = totaldiscountcost ?\n      totaldiscountcost : null || '';\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.itemdiscountcost = totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.itemdiscountcost[index] = totaldiscountcost\n      ? totaldiscountcost\n      : null || '';\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }, selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            ''\n          ],                    \n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemshortdescription = removeItem.selectedItemlist.itemshortdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n\n    if (this.props.ID != undefined) {\n      data['_id'] = this.props.ID;\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/updateproformainvoice`, {\n        data\n      })\n      .then(res => {\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      },(err) =>{\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      });\n    }\n\n    else{\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/addproformainvoice`, {\n        data\n      })\n      .then(res => {\n        \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      },(err) =>{\n \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n\n  handleQuotationChange = async(e) => {\n    console.log(e)\n    let selectedquotation = e.value ? e.value : e\n    console.log(selectedquotation)\n    const quotationlistvalues = this.state.quotationlistvalues;\n    console.log(\"quotation list values \", quotationlistvalues);\n    let quotationselected = quotationlistvalues.filter(\n      quotation => quotation._id === selectedquotation || quotation.quotationnumber === selectedquotation\n    );\n    console.log(quotationselected)\n    if(quotationselected && quotationselected.length > 0){\n      quotationselected = quotationselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = quotationselected.customerid ? quotationselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let transId = null;\n      const quotationnumber = quotationselected.quotationnumber;\n      const quotationid = selectedquotation;\n      this.dataHandler(true);\n      const purchaseordernumber = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + quotationselected.customerid)\n      .then(res => {\n        this.dataHandler(false)\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == quotationselected.quotationnumber\n            });\n            if(customervalues.length > 0) {\n              transId = customervalues[0]['_id'];\n              poDate = customervalues[0]['po'];\n              return customervalues[0]['ponum'];\n            }\n            else {\n              transId = \"\";\n              poDate = \"\";\n              return \"\";\n            }\n          }\n        }\n      },\n      error =>{\n        this.dataHandler(false);\n      });\n      const date = new Date(quotationselected.date);\n      let purchaseorderdate = this.state.data.purchaseorderdate;\n      if(poDate != \"\" && poDate !== null) {\n        let arrDate = poDate.split(\"/\");\n        let newDate = arrDate[1]+\"/\"+arrDate[0]+\"/\"+arrDate[2];\n        purchaseorderdate = new Date(newDate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemdiscountcost: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = quotationselected.addeditemlist\n      if (quotationselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < quotationselected.addeditemlist.length; i++) {\n          quotationselected.addeditemlist[i].itemdiscount = quotationselected.addeditemlist[i].itemdiscount == null || quotationselected.addeditemlist[i].itemdiscount == '' ?\n          quotationselected.addeditemlist[i].itemdiscount = 0 : quotationselected.addeditemlist[i].itemdiscount\n          quotationselected.addeditemlist[i].itemdiscount = (quotationselected.addeditemlist[i].itemdiscount).toString()\n\n          quotationselected.addeditemlist[i].itemdiscountamount = quotationselected.addeditemlist[i].itemdiscountamount == null || quotationselected.addeditemlist[i].itemdiscountamount == '' ?\n          quotationselected.addeditemlist[i].itemdiscountamount = 0 : quotationselected.addeditemlist[i].itemdiscountamount\n          quotationselected.addeditemlist[i].itemdiscountamount = (quotationselected.addeditemlist[i].itemdiscountamount).toString()\n\n\n          quotationselected.addeditemlist[i].quantity = quotationselected.addeditemlist[i].quantity == null || quotationselected.addeditemlist[i].quantity == '' ?\n          quotationselected.addeditemlist[i].quantity = 0 : quotationselected.addeditemlist[i].quantity\n          quotationselected.addeditemlist[i].quantity = (quotationselected.addeditemlist[i].quantity).toString()\n\n          quotationselected.addeditemlist[i].costperunit = quotationselected.addeditemlist[i].costperunit == null || quotationselected.addeditemlist[i].costperunit == '' ?\n          quotationselected.addeditemlist[i].costperunit = 0 : quotationselected.addeditemlist[i].costperunit\n          quotationselected.addeditemlist[i].costperunit = (quotationselected.addeditemlist[i].costperunit).toString()\n\n          quotationselected.addeditemlist[i].totalcost = quotationselected.addeditemlist[i].totalcost == null || quotationselected.addeditemlist[i].totalcost == '' ?\n          quotationselected.addeditemlist[i].totalcost = 0 : quotationselected.addeditemlist[i].totalcost\n          quotationselected.addeditemlist[i].totalcost = (quotationselected.addeditemlist[i].totalcost).toString()\n          \n\n  \n          let itemname = quotationselected.addeditemlist[i].itemdescription;\n          if(quotationselected.addeditemlist[i].itemshortdescription && quotationselected.addeditemlist[i].itemshortdescription !== '') {\n            itemname = quotationselected.addeditemlist[i].itemshortdescription;\n          }\n\n          selectedItemlist.itemname.push(itemname);\n          selectedItemlist.itemrate.push(quotationselected.addeditemlist[i].costperunit);\n          selectedItemlist.itemdescription.push(quotationselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(quotationselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(quotationselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(quotationselected.addeditemlist[i].itemdiscount)\n          selectedItemlist.itemdiscountcost.push(quotationselected.addeditemlist[i].itemdiscountamount)\n\n\n         \n          selectedItemlist.itemuom.push(quotationselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(quotationselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(quotationselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(quotationselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(quotationselected.addeditemlist[i].id)\n\n        }\n      }\n\n      let transportcharge = quotationselected.tcharge;\n      let transportgst = parseFloat(transportcharge) * parseFloat(quotationselected.transportationgst) / 100;\n      let ws = quotationselected.ws;\n      let loadingcharges = quotationselected.loadingcharge;\n\n      let totalFreight = parseFloat(transportcharge) + parseFloat(transportgst) + parseFloat(ws) + parseFloat(loadingcharges);\n\n\n\n      let freightcharges = totalFreight.toFixed(2);\n      \n \n    const { totalcost } = selectedItemlist;\n    let taxableamount = 0;\n    if (totalcost.length > 0) {\n      taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      }\n\n      let cgst = Number(quotationselected.tax) / 2;\n      let sgst = Number(quotationselected.tax) / 2;\n\n      const taxable = parseFloat(taxableamount).toFixed(2);\n      const subtotal = Number(freightcharges) + Number(taxable);\n\n      let tcs = '';\n      if(quotationselected.tcs) {\n        tcs = Number(quotationselected.tcs);\n      }\n\n      let cgstamount;\n      let sgstamount;\n      let tcsamount = 0;\n\n      if(quotationselected.tcsamount) {\n        tcsamount = Number(quotationselected.tcsamount);\n      }\n\n      cgstamount = (subtotal * cgst) / 100;\n      sgstamount = (subtotal * sgst) / 100;\n  \n      \n      const total = (Number(subtotal) + Number(cgstamount) + Number(tcsamount) + Number(sgstamount)).toFixed(2);\n      const grandtotal = Number(total).toFixed(2);\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          taxableamount,\n          subtotal: subtotal,\n          total: total,\n          cgst: cgst,\n          sgst: sgst,\n          tcs: tcs,\n          tcsamount: tcsamount,\n          grandtotal: grandtotal,\n          quotationnumber,\n          transactionid: transId,\n          quotationid,\n          date,\n          purchaseordernumber,\n          purchaseorderdate,\n          selectedItemlist,\n          values\n        },\n        selectedCustomerID: quotationselected.customerid,\n        selectedCustomerName: quotationselected.customername,\n        selectedQuotationId: selectedquotation,\n        selectedQuotationNumber: quotationselected.quotationnumber,\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            quotationnumber : quotationnumber,\n            quotationid : quotationid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          // if (quotationselected.addeditemlist.length > 0) {\n          //   quotationselected.addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index,true);\n          //   })\n          // }\n          this.totalValue();\n          if(quotationselected.customerid) {\n            this.handleChange(quotationselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      this.setState(newState);\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n      let addeditemlist = selectedChallan.addeditemlist;\n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(selectedChallan.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n       \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n          this.handleChange(selectedChallan._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let customerDisp = this.state.selectedCustomerID != undefined ? (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />\n    ) : (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    );\n    let SelQuota;\n    if(this.state.selectedQuotationId) {\n      SelQuota = {\n        value: this.state.selectedQuotationId, label: this.state.selectedQuotationNumber\n      }\n    }\n    let quotationdisp = this.state.selectedQuotationId != undefined ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required value={SelQuota} options={this.state.quotationlistSelect} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required defaultValue={data.deliverychallannumber} options={this.state.quotationlistSelect} />\n    );\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Proforma Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Proforma Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Proforma Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n              \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Quotation No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  {/* <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField> */}\n                  {quotationdisp}\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Quotation date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n               \n\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n           \n\n                 <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    required\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> \n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerDisp}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n            \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Dispatch </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationgst'>Transportation GST </Label>\n                    <AvField\n                      Label\n                      name='transportationgst'\n                      type='text'\n                      id='transportationgst'\n                      value={data.transportationgst}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportchargerequired'>GST required for Transport charge </Label>\n                    <AvField\n                      Label\n                      name='transportchargerequired'\n                      type='select'\n                      id='transportchargerequired'\n                      value={data.transportchargerequired}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    >\n                    <option value='Yes'>Yes</option>\n                    <option value='No'>No</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n\n             \n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                let optionsel = \"\";\n                let SelVal = {};\n                if(values.id != undefined) {\n                  if(values.itemshortdescription) {\n                    optionsel = values.itemshortdescription;\n                  }\n                  else {\n                    optionsel = values.itemdescription;\n                  }\n                  SelVal = {\n                    value: values.id._id, label: optionsel\n                  }\n                }  \n\n                const itemnameinfo = values.id != undefined ? (\n                  // <AvField\n                  //   type=\"select\"\n                  //   value={values.id._id}\n                  //   name={`selectitem${index}`}\n                  //   onChange={e => this.selectitemchange(e, index)}\n                  //   required={true}\n                  // >\n                  //   <option value=\"\">select Item</option>\n                  //   {this.createSelectItems()}\n                  // </AvField>\n                  <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                  ) :\n                  (\n                    // <AvField\n                    //   type=\"select\"\n                    //   name={`selectitem${index}`}\n                    //   value={\n                    //     data.selectedItemlist.id[index]\n                    //   }\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                  )\n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}                              \n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`itemdiscountcost${index}`}>Discount Cost</Label>\n                              <span className='required-label'></span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`itemdiscountcost${index}`}\n                                type='number'\n                                id={`itemdiscountcost${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscountcost[index] \n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>                          \n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='tcs'>TCS</Label>\n                    <AvField\n                      Label\n                      name='tcs'\n                      type='checkbox'\n                      id='tcs'\n                      value={data.tcs}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>   \n                \n                {data.tcs !== '' ? (\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='tcs'>TCS Amount</Label>\n                    <AvField\n                      Label\n                      name='tcsamount'\n                      type='number'\n                      id='tcsamount'\n                      value={data.tcsamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>) : null  }                                \n         \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues,\n    user: state.user\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProformaInvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport ProformaInvoiceForm from \"./ProformaInvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddProformaInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n    this.props.getquotation();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Proforma Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProformaInvoiceForm ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan,\n    getquotation\n  }\n)(AddProformaInvoice);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n\n    console.log(this.props);\n    if (this.props.invoicelistvalues) {\n      let quotationlist = Object.values(this.props.invoicelistvalues);\n      quotationlist.sort(function(a, b){\n        return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n      });\n      const invoicelistvalues = quotationlist.map(quotationvalue => {\n        return {\n          invoicenumber: quotationvalue.invoicenumber,\n          customername: quotationvalue.customername,\n          customernumber: quotationvalue.customernumber,\n          customercontactnumber: quotationvalue.customercontactnumber,\n\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, invoicelistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.invoicelistvalues);\n    console.log(quotationlist)\n    //quotationlist= quotationlist.sort((a, b) => b.invoicenumber.toString().toLowerCase().localeCompare(a.invoicenumber.toString().toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n    });\n    const invoicelistvalues = quotationlist.map(quotationvalue => {\n      return {\n        invoicenumber: quotationvalue.invoicenumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, invoicelistvalues });\n    this.dataHandler(false);\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = id => {\n    let path = `/view_invoicepdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editinvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, invoicelistvalues,success } = this.state;\n    console.log(invoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={invoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(ViewInvoice);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport './ViewInvoice.scss';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  padding1: {\n    paddingTop: 6\n  },\n  pagepadding: {\n   padding:5,\n   paddingLeft:10,\n   paddingRight:10,\n\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n    border: 'none',\n    boxShadow: 'none',\n    border: '30px solid green',\n    background:'#000'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  nobordertable: {\n    borderWidth: 0, borderRightWidth: 0, borderBottomWidth: 0\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument = ({ invoicelistvalues, data_cond }) => {\n  const financialYear = invoicelistvalues.financialyear;\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = invoicelistvalues.taxableamount;\n  taxableAmount = parseFloat(taxableAmount)\n  taxableAmount = taxableAmount.toFixed(2)\n  console.log(taxableAmount)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    tcs,\n    tcsamount,\n    total,\n    grandtotal,\n    quotationnumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername\n  } = invoicelistvalues;\n  let purchaseordernumber = invoicelistvalues.purchaseordernumber;\n\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n   \n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n\n\n\n\n  freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n  freightcharges = freightcharges.toFixed(2)\n  subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n  subtotal = parseFloat(subtotal)\n  subtotal = subtotal.toFixed(2)\n  \n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n\n  let tcsval = tcsamount != '' && tcsamount != null ? parseFloat(tcsamount) : 0\n  if (tcsval == 0)\n    tcs = 0\n\n  tcsval = tcsval.toFixed(2)\n\n\n  total = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval) + parseFloat(tcsval)\n  total = total.toFixed(2)\n\n  roundoffamount = roundoffamount != '' && roundoffamount != null ? parseFloat(roundoffamount) : 0\n  roundoffamount = roundoffamount.toFixed(2)\n\n  grandtotal = parseFloat(total) + parseFloat(roundoffamount)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  let pageone = [];\n  let pageTwo = [];\n  let pageThree = [];\n\n  data.forEach((ele, i) => {\n    if (i == 0 && data.length > 1) {\n        if(ele.itemname.length < 1021) {\n            pageone.push(ele);\n            if (ele.itemname.length + data[i + 1].itemname.length < 1021) {\n                pageone.push(data[i + 1]);\n                if (data.length > 2) {\n                    if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length < 1021) {\n                        pageone.push(data[i + 2]);\n                        if (data.length > 3) {\n                            if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length < 1021) {\n                                pageone.push(data[i + 3]);\n                                if (data.length > 4) {\n                                    if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length + data[i + 4].itemname.length < 1021) {\n                                        pageone.push(data[i + 4]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (pageone.length > 0) {\n            if (data.length > pageone.length) {\n                if (data[pageone.length].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length])\n                }\n                if(data.length > (pageone.length + 1) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length + 1])\n                }\n                if(data.length > (pageone.length + 2) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length + 2])\n                }\n                if(data.length > (pageone.length + 3) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length + 3])\n                }\n            }\n        }\n        if(pageTwo.length > 0) {\n            if (data.length > (pageone.length + pageTwo.length)) {\n                if (data[pageone.length + pageTwo.length].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 1) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 1])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 2) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length + data[pageone.length  + pageTwo.length + 2].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 2])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 3) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length + data[pageone.length  + pageTwo.length + 2].itemname.length + data[pageone.length  + pageTwo.length + 3].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 3])\n                }\n            }\n        }\n    }\n    else if((i == 0 && data.length == 1)) {\n        pageone.push(data[i]);\n    }\n});\n\nlet pageoneTable;\nlet pagetwoTable;\nlet pagethreeTable;\n\n  if (pageone.length > 0) {\n    pageoneTable = pageone.map((pageonedata, index) => {\n      if(index == 0) {\n        return (\n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={pageone}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ backgroundColor: 'tomato' }}\n          >\n            <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n              <Small>SL No</Small>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              {/* style={styles.headerfont} */}\n              <Description >Description</Description>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>UOM</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Qty</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Rate</Small>\n            </TableCell>\n            {/* <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>\n                After Dist Rate/Each{'\\n'}Rs\n              </Text>\n            </TableCell> */}\n\n            <TableCell weighting={0.2}>\n              <Small>Amount</Small>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n            <DataTableCell styles={{ height: 100 }} weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.discountamount}</Small>} />\n            {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n          */}\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        )\n      }\n    });\n  }\n\n  if(pageTwo.length > 0) {\n    pagetwoTable = pageTwo.map((pagetwodata, index) => {\n      if(index == 0) {\n        return (\n          <Page style={styles.pagepadding} wrap>\n          <View style={styles.invoice_header}>\n            <Image style={styles.logo} src={logo} />\n            <View style={{ flex: 1, paddingLeft: 25 }}>\n              <Text style={ { fontWeight: 200, marginLeft: 75 }}>Office &amp; Works:</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Plot no. 40 &amp;\n\t\t\t41(corner) Road, no.5, KIADB Obadenahalli Industrial Area, 3rd Phase</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Doddaballapura, Bangalore\n\t\t\tRural District-561203 Karnatak, India GST No. 29AAGCP4018E1ZJ</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Mob:+91 9900069150</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4, marginBottom: 4 }]}>Email id: info@pondhan.com, www.pondhan.com</Text>\n            \n            \n            </View>\n          </View>\n          <View> \n         <Table\n           style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n           data={pageTwo}\n         >\n           <TableHeader\n             textAlign={'center'}\n             style={{ backgroundColor: 'tomato' }}\n           >\n             <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n               <Small>SL No</Small>\n             </TableCell>\n             <TableCell weighting={0.6}>\n               {/* style={styles.headerfont} */}\n               <Description >Description</Description>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Small>UOM</Small>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Small>Qty</Small>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Small>Rate</Small>\n             </TableCell>\n             {/* <TableCell weighting={0.2}>\n               <Text style={styles.headerfont}>Dist %</Text>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Text style={styles.headerfont}>\n                 After Dist Rate/Each{'\\n'}Rs\n               </Text>\n             </TableCell> */}\n \n             <TableCell weighting={0.2}>\n               <Small>Amount</Small>\n             </TableCell>\n           </TableHeader>\n           <TableBody textAlign={'center'}>\n             <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n             <DataTableCell styles={{ height: 100 }} weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.discountamount}</Small>} />\n             {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n           */}\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n           </TableBody>\n         </Table>        \n         <Text> {'\\n'}</Text>\n         {/* Three divs for remarks, tax details and amount */}\n         </View>\n         \n         {/* Two */}\n         {/* <Table style={styles.section}>\n           <TableHeader>\n             <TableCell weighting={0.5}>\n               <Text style={styles.headerfont3}>\n                 {'\\n'}\n                 {'\\n'}\n \n               </Text>\n             </TableCell>\n             <TableCell weighting={0.5}>\n     \n             </TableCell>\n           </TableHeader>\n         </Table> */}\n         {/* Three */}\n         {/* <Table style={styles.section}>\n           <TableHeader>\n             <TableCell weighting={0.5}>\n               <Text style={styles.headerfont3}>\n               {amountinwords}\n               </Text>\n             </TableCell>\n  \n           </TableHeader>\n         </Table> */}\n         {/* ends here */}\n         <Text> {'\\n'}</Text>\n         </Page> \n        );\n      }\n    })\n  }\n\n\n  if(pageThree.length > 0) {\n    pagethreeTable = pageThree.map((pagethreedata, index) => {\n      if(index == 0) {\n        return (\n          <Page style={styles.pagepadding} wrap>\n          <View style={styles.invoice_header}>\n            <Image style={styles.logo} src={logo} />\n            <View style={{ flex: 1, paddingLeft: 25 }}>\n              <Text style={ { fontWeight: 200, marginLeft: 75 }}>Office &amp; Works:</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Plot no. 40 &amp;\n      41(corner) Road, no.5, KIADB Obadenahalli Industrial Area, 3rd Phase</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Doddaballapura, Bangalore\n      Rural District-561203 Karnatak, India GST No. 29AAGCP4018E1ZJ</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Mob:+91 9900069150</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4, marginBottom: 4 }]}>Email id: info@pondhan.com, www.pondhan.com</Text>\n            \n            \n            </View>\n          </View>\n          <View> \n         <Table\n           style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n           data={pageThree}\n         >\n           <TableHeader\n             textAlign={'center'}\n             style={{ backgroundColor: 'tomato' }}\n           >\n             <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n               <Small>SL No</Small>\n             </TableCell>\n             <TableCell weighting={0.6}>\n               {/* style={styles.headerfont} */}\n               <Description >Description</Description>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Small>UOM</Small>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Small>Qty</Small>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Small>Rate</Small>\n             </TableCell>\n             {/* <TableCell weighting={0.2}>\n               <Text style={styles.headerfont}>Dist %</Text>\n             </TableCell>\n             <TableCell weighting={0.2}>\n               <Text style={styles.headerfont}>\n                 After Dist Rate/Each{'\\n'}Rs\n               </Text>\n             </TableCell> */}\n  \n             <TableCell weighting={0.2}>\n               <Small>Amount</Small>\n             </TableCell>\n           </TableHeader>\n           <TableBody textAlign={'center'}>\n             <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n             <DataTableCell styles={{ height: 100 }} weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.discountamount}</Small>} />\n             {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n           */}\n             <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n           </TableBody>\n         </Table>        \n         <Text> {'\\n'}</Text>\n         {/* Three divs for remarks, tax details and amount */}\n         </View>\n         \n         {/* Two */}\n         {/* <Table style={styles.section}>\n           <TableHeader>\n             <TableCell weighting={0.5}>\n               <Text style={styles.headerfont3}>\n                 {'\\n'}\n                 {'\\n'}\n  \n               </Text>\n             </TableCell>\n             <TableCell weighting={0.5}>\n     \n             </TableCell>\n           </TableHeader>\n         </Table> */}\n         {/* Three */}\n         {/* <Table style={styles.section}>\n           <TableHeader>\n             <TableCell weighting={0.5}>\n               <Text style={styles.headerfont3}>\n               {amountinwords}\n               </Text>\n             </TableCell>\n  \n           </TableHeader>\n         </Table> */}\n         {/* ends here */}\n         <Text> {'\\n'}</Text>\n         </Page> \n        );\n      }\n    })\n  }\n\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 10 && data.length < 11) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      return ( \n      <>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <View style={styles.invoice_header}>\n        <Image style={styles.logo} src={logo} />\n        <View style={{ flex: 1, paddingLeft: 25 }}>\n          <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n          <Text style={styles.headerwidth}>INVOICE</Text>\n          <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n         \n         \n        </View>\n      </View>\n      {/* <View style={styles.section}>\n        <Text style={styles.headerwidth}></Text>\n\n        <Text style={styles.headerwidthdate}>\n          Date:{invoicelistvalues.requestdeliverydate}\n        </Text>\n      </View> */}\n      <View>\n        {/*  style={styles.section} */}\n        <Table>\n          <TableHeader>\n            <TableCell weighting={0.9}>\n              <Text style={styles.descriptionText}>\n              Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n              <Image style={styles.seal} src={seal} />\n            </TableCell>\n          </TableHeader>\n        </Table>\n        {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n          <Text>Hello World!</Text>\n        </View> */}\n        \n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                Invoice No: {invoicenumber}/{financialYear}\n               \n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n              <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                {invoicedate}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        \n        <Text> {'\\n'}</Text>\n        <Table>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              {/* <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    \n                  </TableCell>\n                </TableHeader>\n              </Table> */}\n              <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                Billing To\n              </Text>\n              <Text style={[styles.billingaddress]}>\n                {customername}  {'\\n'}\n                {billingaddress} {'\\n'}\n                GST No: {customergstnumber}\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Quotation No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {quotationnumber}/{financialYear}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              {/* <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>{date}</Text>\n                  </TableCell>\n                </TableHeader>\n              </Table> */}\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Purchase Order No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {purchaseordernumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Purchase Order Date:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {podate}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n\n              \n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Vendor Code No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {vendorcode}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>Date:</Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {purchaseorderdate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Text> {'\\n'}</Text>\n        <Table styles={{'borderWidth':'0'}}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              {/* <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    \n                  </TableCell>\n                </TableHeader>\n              </Table> */}\n              <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                Delivery To\n              </Text>\n              <Text style={[styles.shippingaddress]}>\n             \n                {deliveryaddress} \n              </Text>\n            </TableCell>\n\n            <TableCell weighting={0.5} >\n              <Table style={styles.section} style={{borderWidth: 0}}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>Vehicle No:</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {vehiclenumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>HSN Code</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>{hsncode}</Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>SAC Code:</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {saccode}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Time of invoice:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}></Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Date of invoice:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {invoicedate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Description of Excisible Goods:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {goodsDescription}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Text> {'\\n'}</Text>\n        {pageoneTable}\n        </View>\n        </Page>\n        {pagetwoTable}\n        {pagethreeTable}\n        <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={[styles.section,styles.nobordertable]}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  Remarks:\n                  {'\\n'}\n                  {'\\n'}\n                  {remarks}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n                <Text style={styles.headerfont3}>{amountinwords}</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.087}>\n                        <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                      </TableCell>\n                      <TableCell weighting={0.45}>\n                        <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>TCS@{tcs}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcsval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>                \n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                      <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n            \n              </TableCell>\n            </TableHeader>\n          </Table>            \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n          \n            </View>\n\n       \n\n          </View>\n\n          <View style={styles.main}>\n            \n              <View>\n              <Text style={styles.brandname} > Note:</Text>\n          \n              <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n              <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n              <Text style={styles.padding1}>3, Delivery Schedule: 8 to 10 days after confirmation.</Text>\n              <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n              <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n              <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n              <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n              <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n              <Text style={styles.padding1}>9, Any Legal matter will be under \"Bangalore Jurisdiction\".</Text>          \n              </View>\n            \n          </View>\n          </Page>\n        </>\n         )\n    }\n  })\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader style={styles.section}>\n              <TableCell weighting={1.087} style={styles.section}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13} style={styles.section}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n          \n                      GST No: {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Quotation No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {quotationnumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                      GST No. {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              \n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            \n         \n\n\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n          {dispDyn}\n    </Document >\n  );\n};\n\nexport default MyDocument;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport axios from \"axios\";\nimport \"./ViewInvoice\";\n\nclass ViewInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\",\n    text: null,\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    const invoicelistvalues = this.props.invoicelistvalues[quotationid];\n    console.log(\"invoice list values is\", invoicelistvalues);\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        let discountamount = itemlist.costperunit\n        ? itemlist.costperunit\n        : 0;\n\n        let disc = itemlist.itemdiscount ? \n        itemlist.itemdiscount\n        : 0;\n\n        if(disc != 0) {\n          discountamount = parseFloat(discountamount) * parseFloat(disc) / 100;\n          discountamount = parseFloat(itemlist.costperunit) - discountamount;\n        }\n        \n        if(itemlist.itemdescription.length < 340) {\n          console.log(\"coming here\");\n          let totalSpacerequired = 340 - itemlist.itemdescription.length;\n          let numSpaces = totalSpacerequired; // Change this to the number of spaces you want to add\n\n          let spaces = \" \".repeat(numSpaces); // Create a string of spaces\n          itemlist.itemdescription = itemlist.itemdescription + spaces;\n\n          console.log(\"after adding space\", itemlist.itemdescription);\n        }\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          discountamount: discountamount.toString(),\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        invoicelistvalues,\n        status: true,\n        text: quotationid.toString()+customername.toString()+\".pdf\"\n      });\n    },2000);\n   \n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.goBack();\n          }, 300);\n        });\n  \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link,text } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewInvoicePdf);\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproformainvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport axios from 'axios';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewProformaInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    proformainvoicelistvalues: [],\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getproformainvoice();\n\n    this.props.getUomList();\n    this.getProformaInvoice();\n    this.props.getChallan();\n  }\n\n\n  getProformaInvoice(){\n     axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n         console.log(res)\n         this.dataHandler(false);\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let invoicelist = res.data.invoicelist.invoicedata;\n           //invoicelist= invoicelist.sort((a, b) => b.invoicenumber.toLowerCase().localeCompare(a.invoicenumber.toLowerCase()));\n           invoicelist.sort(function(a, b){\n            return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n          });\n          const proformainvoicelistvalues = invoicelist.map(quotationvalue => {\n            return {\n              invoicenumber: quotationvalue.invoicenumber,\n              customername: quotationvalue.customername,\n              customernumber: quotationvalue.customernumber,\n              customercontactnumber: quotationvalue.customercontactnumber,\n      \n              view: (\n                <div className=\"actionbuttons\">\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(quotationvalue);\n                    }}\n                  >\n                    Print\n                  </Button>\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateinvoice(quotationvalue._id);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  </div>\n              )\n            };\n          });\n          this.setState({ ...this.state, proformainvoicelistvalues });\n         }\n        },error =>{\n          this.dataHandler(false)\n         \n        });\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = obj => {\n    sessionStorage.setItem(\"pformadata\",JSON.stringify(obj))\n    let path = `/view_proformainvoicepdf/123`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editproformainvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, proformainvoicelistvalues,success } = this.state;\n    console.log(proformainvoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={proformainvoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    proformainvoicelistvalues: state.proformainvoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getproformainvoice,\n    getChallan\n  }\n)(ViewProformaInvoice);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport moment from 'moment';\nimport React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\nimport './ViewInvoice.scss';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  \n  pagepadding: {\n    padding:5,\n    paddingLeft:10,\n    paddingRight:10,\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  padding1: {\n    paddingTop: 6\n  },\n  section: {\n    // position: 'relative',\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument2 = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  const financialYear = invoicelistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = parseFloat(invoicelistvalues.taxableamount)\n  taxableAmount = taxableAmount.toFixed(2)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  let workorderdate = invoicelistvalues.workorderdate != '' ? moment(invoicelistvalues.workorderdate).format('DD MMM, YYYY') : '';\n  let despathdate = invoicelistvalues.despathdate != '' ? moment(invoicelistvalues.despathdate).format('DD MMM, YYYY') : '-';\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    tcs,\n    tcsamount,\n    total,\n    grandtotal,\n    quotationnumber,\n    purchaseordernumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername,\n    deliverychallandata,\n    workorderno,\n    removaltime,\n    transportationcharge,\n    transportationgst,\n    advanceamountreceived,\n    transportchargerequired\n  } = invoicelistvalues;\n  quotationnumber = quotationnumber && quotationnumber != '' ? quotationnumber.toString() + \"/\"+financialYear: ''\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n\n\n  \n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n   freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n   freightcharges = freightcharges.toFixed(2)\n   subtotal = 0;\n   subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n   subtotal = parseFloat(subtotal)\n   subtotal = subtotal.toFixed(2)\n  // total = parseFloat(total)\n  // total = total.toFixed(2)\n\n\n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n\n  let tcsval = tcs != '' && tcs != null ? parseFloat(tcsamount) : 0\n  if (tcsval == 0)\n    tcs = 0\n  tcsval = tcsval.toFixed(2)  \n\n\n  let total2 = 0\n  total2 = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval) + parseFloat(tcsval)\n  total2 = parseFloat(total2)\n  total2 = total2.toFixed(2)\n  let transportationgstper=0;\n  transportationgst = transportationgst && transportationgst != '' ? parseFloat(transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n  transportationcharge = transportationcharge != '' && transportationcharge != null ? parseFloat(transportationcharge) : 0\n  transportationcharge = transportationcharge.toFixed(2)\n  let transportationchargegst = transportationcharge * transportationgst\n  transportationchargegst = transportationchargegst.toFixed(2)\n  transportationchargegst = transportchargerequired != '' && transportchargerequired == 'No' ? 0.00 : transportationchargegst\n  let totalaftertransportcharge = parseFloat(total2) + parseFloat(transportationchargegst) + parseFloat(transportationcharge)\n  totalaftertransportcharge = parseFloat(totalaftertransportcharge)\n  totalaftertransportcharge = totalaftertransportcharge.toFixed(2)\n\n\n  advanceamountreceived = advanceamountreceived != '' && advanceamountreceived != null ? parseFloat(advanceamountreceived) : 0\n  advanceamountreceived = advanceamountreceived.toFixed(2)\n  grandtotal = parseFloat(totalaftertransportcharge) - parseFloat(advanceamountreceived)\n  grandtotal = parseFloat(grandtotal)\n  grandtotal = grandtotal.toFixed(2)\n\n  \n  RsPaise(grandtotal)\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n\n\n  let pageone = [];\n  let pageTwo = [];\n  let pageThree = [];\n\n  data.forEach((ele, i) => {\n    if (i == 0 && data.length > 1) {\n        if(ele.itemname.length < 1021) {\n            pageone.push(ele);\n            if (ele.itemname.length + data[i + 1].itemname.length < 1021) {\n                pageone.push(data[i + 1]);\n                if (data.length > 2) {\n                    if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length < 1021) {\n                        pageone.push(data[i + 2]);\n                        if (data.length > 3) {\n                            if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length < 1021) {\n                                pageone.push(data[i + 3]);\n                                if (data.length > 4) {\n                                    if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length + data[i + 4].itemname.length < 1021) {\n                                        pageone.push(data[i + 4]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (pageone.length > 0) {\n            if (data.length > pageone.length) {\n                if (data[pageone.length].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length])\n                }\n                if(data.length > (pageone.length + 1) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length + 1])\n                }\n                if(data.length > (pageone.length + 2) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length + 2])\n                }\n                if(data.length > (pageone.length + 3) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length < 1361) {\n                    pageTwo.push(data[pageone.length + 3])\n                }\n            }\n        }\n        if(pageTwo.length > 0) {\n            if (data.length > (pageone.length + pageTwo.length)) {\n                if (data[pageone.length + pageTwo.length].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 1) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 1])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 2) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length + data[pageone.length  + pageTwo.length + 2].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 2])\n                }\n                if(data.length > (pageone.length  + pageTwo.length + 3) && data[pageone.length  + pageTwo.length].itemname.length + data[pageone.length  + pageTwo.length + 1].itemname.length + data[pageone.length  + pageTwo.length + 2].itemname.length + data[pageone.length  + pageTwo.length + 3].itemname.length < 1361) {\n                    pageThree.push(data[pageone.length  + pageTwo.length + 3])\n                }\n            }\n        }\n    }\n    else if((i == 0 && data.length == 1)) {\n        pageone.push(data[i]);\n    }\n});\n\nlet pageoneTable;\nlet pagetwoTable;\nlet pagethreeTable;\n\nif (pageone.length > 0) {\n  pageoneTable = pageone.map((pageonedata, index) => {\n    if(index == 0) {\n      return (\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={pageone}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ backgroundColor: 'tomato' }}\n        >\n          <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n            <Small>SL No</Small>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            {/* style={styles.headerfont} */}\n            <Description >Description</Description>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Small>UOM</Small>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Small>Qty</Small>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Small>Rate</Small>\n          </TableCell>\n          {/* <TableCell weighting={0.2}>\n            <Text style={styles.headerfont}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.headerfont}>\n              After Dist Rate/Each{'\\n'}Rs\n            </Text>\n          </TableCell> */}\n\n          <TableCell weighting={0.2}>\n            <Small>Amount</Small>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n          <DataTableCell styles={{ height: 100 }} weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n          <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell weighting={0.2} getContent={r => <Small>{parseFloat(r.discountamount).toFixed(2)}</Small>} />\n          {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n          <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n        */}\n          <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      )\n    }\n  });\n}\n\nif(pageTwo.length > 0) {\n  pagetwoTable = pageTwo.map((pagetwodata, index) => {\n    if(index == 0) {\n      return (\n        <Page style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={ { fontWeight: 200, marginLeft: 75 }}>Office &amp; Works:</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Plot no. 40 &amp;\n    41(corner) Road, no.5, KIADB Obadenahalli Industrial Area, 3rd Phase</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Doddaballapura, Bangalore\n    Rural District-561203 Karnatak, India GST No. 29AAGCP4018E1ZJ</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Mob:+91 9900069150</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4, marginBottom: 4 }]}>Email id: info@pondhan.com, www.pondhan.com</Text>\n          \n          \n          </View>\n        </View>\n        <View> \n       <Table\n         style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n         data={pageTwo}\n       >\n         <TableHeader\n           textAlign={'center'}\n           style={{ backgroundColor: 'tomato' }}\n         >\n           <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n             <Small>SL No</Small>\n           </TableCell>\n           <TableCell weighting={0.6}>\n             {/* style={styles.headerfont} */}\n             <Description >Description</Description>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Small>UOM</Small>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Small>Qty</Small>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Small>Rate</Small>\n           </TableCell>\n           {/* <TableCell weighting={0.2}>\n             <Text style={styles.headerfont}>Dist %</Text>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Text style={styles.headerfont}>\n               After Dist Rate/Each{'\\n'}Rs\n             </Text>\n           </TableCell> */}\n\n           <TableCell weighting={0.2}>\n             <Small>Amount</Small>\n           </TableCell>\n         </TableHeader>\n         <TableBody textAlign={'center'}>\n           <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n           <DataTableCell styles={{ height: 100 }} weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{parseFloat(r.discountamount).toFixed(2)}</Small>} />\n           {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n         */}\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n         </TableBody>\n       </Table>        \n       <Text> {'\\n'}</Text>\n       {/* Three divs for remarks, tax details and amount */}\n       </View>\n       \n       {/* Two */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n               {'\\n'}\n               {'\\n'}\n\n             </Text>\n           </TableCell>\n           <TableCell weighting={0.5}>\n   \n           </TableCell>\n         </TableHeader>\n       </Table> */}\n       {/* Three */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n             {amountinwords}\n             </Text>\n           </TableCell>\n\n         </TableHeader>\n       </Table> */}\n       {/* ends here */}\n       <Text> {'\\n'}</Text>\n       </Page> \n      );\n    }\n  })\n}\n\n\nif(pageThree.length > 0) {\n  pagethreeTable = pageThree.map((pagethreedata, index) => {\n    if(index == 0) {\n      return (\n        <Page style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={ { fontWeight: 200, marginLeft: 75 }}>Office &amp; Works:</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Plot no. 40 &amp;\n    41(corner) Road, no.5, KIADB Obadenahalli Industrial Area, 3rd Phase</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Doddaballapura, Bangalore\n    Rural District-561203 Karnatak, India GST No. 29AAGCP4018E1ZJ</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Mob:+91 9900069150</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4, marginBottom: 4 }]}>Email id: info@pondhan.com, www.pondhan.com</Text>\n          \n          \n          </View>\n        </View>\n        <View> \n       <Table\n         style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n         data={pageThree}\n       >\n         <TableHeader\n           textAlign={'center'}\n           style={{ backgroundColor: 'tomato' }}\n         >\n           <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n             <Small>SL No</Small>\n           </TableCell>\n           <TableCell weighting={0.6}>\n             {/* style={styles.headerfont} */}\n             <Description >Description</Description>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Small>UOM</Small>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Small>Qty</Small>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Small>Rate</Small>\n           </TableCell>\n           {/* <TableCell weighting={0.2}>\n             <Text style={styles.headerfont}>Dist %</Text>\n           </TableCell>\n           <TableCell weighting={0.2}>\n             <Text style={styles.headerfont}>\n               After Dist Rate/Each{'\\n'}Rs\n             </Text>\n           </TableCell> */}\n\n           <TableCell weighting={0.2}>\n             <Small>Amount</Small>\n           </TableCell>\n         </TableHeader>\n         <TableBody textAlign={'center'}>\n           <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n           <DataTableCell styles={{ height: 100 }} weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{parseFloat(r.discountamount).toFixed(2)}</Small>} />\n           {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n         */}\n           <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n         </TableBody>\n       </Table>        \n       <Text> {'\\n'}</Text>\n       {/* Three divs for remarks, tax details and amount */}\n       </View>\n       \n       {/* Two */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n               {'\\n'}\n               {'\\n'}\n\n             </Text>\n           </TableCell>\n           <TableCell weighting={0.5}>\n   \n           </TableCell>\n         </TableHeader>\n       </Table> */}\n       {/* Three */}\n       {/* <Table style={styles.section}>\n         <TableHeader>\n           <TableCell weighting={0.5}>\n             <Text style={styles.headerfont3}>\n             {amountinwords}\n             </Text>\n           </TableCell>\n\n         </TableHeader>\n       </Table> */}\n       {/* ends here */}\n       <Text> {'\\n'}</Text>\n       </Page> \n      );\n    }\n  })\n}\n\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 10 && data.length < 11) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      if(i == 0) {\n        return (\n          <>\n          <Page size='A4' style={styles.pagepadding} wrap>\n          <View style={styles.invoice_header}>\n            <Image style={styles.logo} src={logo} />\n            <View style={{ flex: 1, paddingLeft: 25 }}>\n              <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n              <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n              <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n              <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n              \n            </View>\n          </View>\n          {/* <View style={styles.section}>\n            <Text style={styles.headerwidth}></Text>\n  \n            <Text style={styles.headerwidthdate}>\n              Date:{invoicelistvalues.requestdeliverydate}\n            </Text>\n          </View> */}\n          <View>\n            {/*  style={styles.section} */}\n            <Table>\n              <TableHeader>\n                <TableCell weighting={0.9}>\n                  <Text style={styles.descriptionText}>\n                  Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n  \n                  \n                  </Text>\n                </TableCell>\n                <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                  <Image style={styles.seal} src={seal} />\n                </TableCell>\n              </TableHeader>\n            </Table>\n            {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n              <Text>Hello World!</Text>\n            </View> */}\n            \n            <Table style={styles.section}>\n              <TableHeader>\n                <TableCell weighting={0.5}>\n                  <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                    Proforma Invoice No: {invoicenumber}/{financialYear}\n                  </Text>\n                </TableCell>\n                <TableCell weighting={0.5}>\n                  <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                    {invoicedate}</Text>\n                </TableCell>\n              </TableHeader>\n            </Table>\n            <Text> {'\\n'}</Text>\n            <Table>\n              <TableHeader>\n                <TableCell weighting={0.5}>\n                  {/* <Table>\n                    <TableHeader>\n                      <TableCell weighting={1}>\n                        \n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n                  <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                    Billing To\n                  </Text>\n                  <Text style={[styles.billingaddress]}>\n                    {customername}  {'\\n'}\n                    {billingaddress}\n                  </Text>\n                </TableCell>\n                <TableCell weighting={0.5}>\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Quotation No:\n                            </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {quotationnumber}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                  {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>{date}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Purchase Order No:\n                            </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {purchaseordernumber}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Purchase Order Date:\n                            </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {podate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n  \n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Dispatch Date:\n                            </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {despathdate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n  \n                  \n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Vendor Code No:\n                            </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {vendorcode}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                  {/* <Table style={styles.section}>\n                        <TableHeader>\n                          <TableCell weighting={0.5}>\n                            <Text style={styles.headerfont2}>Date:</Text>\n                          </TableCell>\n                          <TableCell weighting={0.5}>\n                            <Text style={[styles.headerfont]}>\n                              {purchaseorderdate}\n                            </Text>\n                          </TableCell>\n                        </TableHeader>\n                      </Table> */}\n                </TableCell>\n              </TableHeader>\n            </Table>\n            <Text> {'\\n'}</Text>\n            <Table>\n              <TableHeader>\n                <TableCell weighting={0.5}>\n                  {/* <Table>\n                    <TableHeader>\n                      <TableCell weighting={1}>\n                        \n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n                  <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                    Delivery To\n                  </Text>\n                  <Text style={[styles.shippingaddress]}>\n           \n                    {deliveryaddress} {'\\n'}\n                    GST No: {customergstnumber}\n                  </Text>\n                </TableCell>\n                <TableCell weighting={0.5}>\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>Vehicle No:</Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {vehiclenumber}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>HSN Code</Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>{hsncode}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>SAC Code:</Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {saccode}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                  {/* <Table style={styles.section}>\n                        <TableHeader>\n                          <TableCell weighting={0.5}>\n                            <Text style={styles.headerfont2}>\n                              Time of invoice:\n                            </Text>\n                          </TableCell>\n                          <TableCell weighting={0.5}>\n                            <Text style={[styles.headerfont]}></Text>\n                          </TableCell>\n                        </TableHeader>\n                      </Table> */}\n                  {/* <Table style={styles.section}>\n                        <TableHeader>\n                          <TableCell weighting={0.5}>\n                            <Text style={styles.headerfont2}>\n                              Date of invoice:\n                            </Text>\n                          </TableCell>\n                          <TableCell weighting={0.5}>\n                            <Text style={[styles.headerfont]}>\n                              {invoicedate}\n                            </Text>\n                          </TableCell>\n                        </TableHeader>\n                      </Table> */}\n                  {/* <Table style={styles.section}>\n                        <TableHeader>\n                          <TableCell weighting={0.5}>\n                            <Text style={styles.headerfont2}>\n                              Description of Excisible Goods:\n                            </Text>\n                          </TableCell>\n                          <TableCell weighting={0.5}>\n                            <Text style={[styles.headerfont]}>\n                              {goodsDescription}\n                            </Text>\n                          </TableCell>\n                        </TableHeader>\n                      </Table> */}\n                </TableCell>\n              </TableHeader>\n            </Table>\n            <Text> {'\\n'}</Text>\n            {pageoneTable}\n            </View>\n            </Page>\n            {pagetwoTable}\n            {pagethreeTable}\n            {/* Three divs for remarks, tax details and amount */}\n            <Page size='A4' style={styles.pagepadding} wrap>\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n           \n                           <Text style={styles.headerfont3}>\n                          {amountinwords}\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Taxable amount</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                                {taxableAmount}\n                              </Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                            <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges </Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                                {freightcharges}\n                              </Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                            <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Sub Total</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                                {subtotal}\n                              </Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                        <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n                        <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                        <Table style={styles.section}>\n                          <TableHeader>\n                      \n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n                        <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>TCS@{tcs}%</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcsval}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                      <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Total</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total2}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n                       <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Transportation Charge</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationcharge}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                        <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Transportation @ {transportationgstper}%</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationchargegst}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                        \n                        <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Grand Total</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalaftertransportcharge}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n        \n                          <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Advance Received</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                                {advanceamountreceived}\n                              </Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n                        <Table style={styles.section}>\n                          <TableHeader>\n                            <TableCell weighting={1.087}>\n                              <Text style={styles.headerfont4}>Balance Amount</Text>\n                            </TableCell>\n                            <TableCell weighting={0.45}>\n                              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                            </TableCell>\n                          </TableHeader>\n                        </Table>\n                        </TableCell>\n                    </TableHeader>\n                  </Table>\n\n\n                  <Text>\n                    {'\\n'}\n                    {'\\n'}\n                    {'\\n'}\n                  </Text> \n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.0}>\n                        <Text style={styles.headerfont3}>\n                         \n                          \n                          Our Bank details:-  {'\\n'} {'\\n'}\n                          Company Name : Pondhan Scaffolding Pvt Ltd  {'\\n'}\n                          Bank : Bank Of Baroda, Branch: Byatarayanapura, Bangalore-92  {'\\n'}\n                          A/c No: 73690500000003 Transportation {'\\n'}\n                          IFSC Code: BARBOVJBYAT\n                        </Text>\n                      </TableCell>\n                     \n                    </TableHeader>\n                  </Table>\n                  <Text>\n                 \n                    {'\\n'}\n                  </Text> \n                  {/* Three */}\n        \n                  {/* ends here */}\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.087}>\n                        <Text style={styles.descriptionText}>\n                          Certified that the particulars given above are true and the\n                          amount indicated represents the price actually charged and\n                          that there is no additional flow directly or indirectly from\n                          the buyer\n                          {'\\n'}{'\\n'}{'\\n'}{'\\n'}\n                        </Text>\n        \n                        <View style={{fontSize: '10'}}>\n                      <Text style={styles.brandname} > Note:</Text>\n                  \n                      <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n                      <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n                      <Text style={styles.padding1}>3, Delivery Schedule: 10 to 12 days after confirmation.</Text>\n                      <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n                      <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n                      <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n                      <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n                      <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n                      <Text style={styles.padding1}>9, Any Legal matter will be under \"Bangalore Jurisdiction\".</Text>          \n                      </View>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                  <Text>\n                 \n                    {'\\n'}\n                  </Text> \n                  {/* <Text>\n                    {'\\n'}\n                    {'\\n'}\n                  </Text> */}\n                  <View style={styles.row}>\n                    <View style={styles.column}>\n                      <Table>\n                        <TableHeader>\n                          <TableCell weighting={1}>\n                            <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                              <SmallBold>Authentication</SmallBold>\n                              {'\\n'}\n                              {'\\n'}\n                              {'\\n'}\n                              {'\\n'}\n                              {'\\n'}\n                        \n                 \n                              E & O.E.\n                            </Text>\n                          </TableCell>\n                        </TableHeader>\n                        {/* > */}\n                      </Table>\n                    </View>\n                    <View style={styles.column}>\n                      <Table>\n                        <TableHeader>\n                          <TableCell weighting={1}>\n                            <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                              <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                              {'\\n'}\n                      \n                              <View style={{ flexDirection: 'row', justifyContent: 'center', padding: 5  }}>\n                                <Image style={{ width: 53, height: 53 }} src={sign} />\n                                <Image style={{ width: 53, height: 53 }} src={seal} />\n                              </View>\n                              <SmallBold>Authorised Signatories</SmallBold>\n                            </Text>\n                           \n                          </TableCell>\n                        </TableHeader>\n                       \n                      </Table>\n                  \n                    </View>\n        \n               \n                    \n                  </View>\n                  </Page>\n                  </>)\n      }\n    }\n  })\n\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Quotation No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {quotationnumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n        {dispDyn}\n    </Document >\n  );\n};\n\nexport default MyDocument2;","import { PDFViewer } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport logo from \"../../../../Images/logo.png\";\nimport MyDocument2 from \"./Component2\";\nimport \"./ViewInvoice\";\n\nclass ViewProformaInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\",\n    text: null\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    let invoicelistvalues = JSON.parse(sessionStorage.getItem('pformadata'))\n    console.log(\"invoice list iss\", invoicelistvalues);\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        let discountamount = itemlist.costperunit\n        ? itemlist.costperunit\n        : 0;\n\n        let disc = itemlist.itemdiscount ? \n        itemlist.itemdiscount\n        : 0;\n\n        if(disc != 0) {\n          discountamount = parseFloat(discountamount) * parseFloat(disc) / 100;\n          discountamount = parseFloat(itemlist.costperunit) - discountamount;\n        }\n        if(itemlist.itemdescription.length < 340) {\n          console.log(\"coming here\");\n          let totalSpacerequired = 340 - itemlist.itemdescription.length;\n          let numSpaces = totalSpacerequired; // Change this to the number of spaces you want to add\n\n          let spaces = \" \".repeat(numSpaces); // Create a string of spaces\n          itemlist.itemdescription = itemlist.itemdescription + spaces;\n\n          console.log(\"after adding space\", itemlist.itemdescription);\n        }\n        \n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id? itemlist.id.masteritemimage: \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          discountamount: discountamount.toString(),\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.invoicelistvalues,\n        invoicelistvalues,\n        status: true,\n        text: invoicelistvalues._id.toString()+customername.toString()+\".pdf\"\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/proformainvoicelist\");\n          }, 300);\n        });\n       \n      }\n    } else {\n    }\n  }\n  \n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link, text } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument2\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewProformaInvoicePdf);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass AddItemListForm extends React.Component {\n  state = {\n    data: {\n      masteritemtype: '',\n      masteritemname: null,\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      costperunit: null,\n      masteritemrate: null,\n      masteritemunitwt: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null,\n      masteritemimagefile: null,\n      masteritemsecondimagefile: null\n    },\n    materialoptionlistvalues: [],\n    masteritemlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    filename:'',\n    secondfilename:''\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  onItemTypeChange = e => {\n    const selecteditemtype = e.target.value;\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    const masteritemlistvalues = this.state.masteritemlistvalues;\n    const selecteditemtypevalue = materialoptionlistvalues.filter(\n      (option, i) => {\n        if (option.id === selecteditemtype) {\n          return option;\n        }\n      }\n    );\n    const selectitemid = selecteditemtypevalue[0].id;\n    if (selectitemid) {\n      const selecteditemvalues = masteritemlistvalues.filter(item => {\n        if (item.masteritemtype._id == selectitemid) {\n          return item;\n        }\n      });\n      console.log(selecteditemtypevalue);\n      console.log(selecteditemvalues);\n      const count = selecteditemvalues.length;\n      if ((selectitemid === '5d263475917f5e27146d9ee4' || selectitemid === '5df361a6f57a6f7c679da493' || selectitemid === '5f0830f14d38d207245a37eb')) {\n        let itemname = count > 0 ? 1002 + count : 1001;\n        if(selecteditemvalues.length > 0) {\n          let highestNo = itemname;\n          selecteditemvalues.map((item,key) => {\n            if(parseInt(item.masteritemtypename) >= highestNo) {\n              highestNo = parseInt(item.masteritemtypename) + 1;\n            }\n          });\n          itemname = highestNo;\n        }\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d263480917f5e27146d9ee5' || selectitemid == '5df361e1f57a6f7c679da494'  || selectitemid === '5f0831104d38d207245a37ec')) {\n        let itemname = count > 0 ? 2002 + count : 2001;\n        if(selecteditemvalues.length > 0) {\n          let highestNo = itemname;\n          selecteditemvalues.map((item,key) => {\n            if(parseInt(item.masteritemtypename) >= highestNo) {\n              highestNo = parseInt(item.masteritemtypename) + 1;\n            }\n          });\n          itemname = highestNo;\n        }\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d270f30136e660798dce139' || selectitemid == '5df361eaf57a6f7c679da495'  || selectitemid === '5f0831204d38d207245a37ed')) {\n        let itemname = count > 0 ? 3002 + count : 3001;\n        if(selecteditemvalues.length > 0) {\n          let highestNo = itemname;\n          selecteditemvalues.map((item,key) => {\n            if(parseInt(item.masteritemtypename) >= highestNo) {\n              highestNo = parseInt(item.masteritemtypename) + 1;\n            }\n          });\n          if(selectitemid == '5df361eaf57a6f7c679da495') {\n            highestNo = highestNo + 1074\n          }\n          itemname = highestNo;\n        }\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n\n      if ((selectitemid === '5d5e206ea24f1806712491b7' || selectitemid == '5df361f3f57a6f7c679da496'  || selectitemid === '5f08312c4d38d207245a37ee')) {\n        let itemname = count > 0 ? 4002 + count : 4001;\n        if(selecteditemvalues.length > 0) {\n          let highestNo = itemname;\n          selecteditemvalues.map((item,key) => {\n            if(parseInt(item.masteritemtypename) >= highestNo) {\n              highestNo = parseInt(item.masteritemtypename) + 1;\n            }\n          });\n          itemname = highestNo;\n        }\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n    }\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n\n\n  fileSelectedSecondHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemsecondimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      secondfilename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemsecondimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleValidSubmit = () => {\n    let { data } = this.state;\n    this.setState({ loading: true });\n    let formdata = new FormData();\n    console.log(data)\n    formdata.append('imagefile', data.masteritemimagefile);\n    formdata.append('secondimage', data.masteritemsecondimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    formdata.append('itemName', data.itemName);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('costperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(this.state.data)\n    console.log('invalid submit');\n  };\n\n  render() {\n    const { data, errors, loading, success,filename,secondfilename } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is added successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is added successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>{' '}\n             \n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onItemTypeChange}\n                      required={true}\n                      Label\n                    >\n                      <option value=''>select</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='Number'\n                      id='masteritemname'\n                      value={data.masteritemname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Code'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        },\n                        maxLength: {value: 326, errorMessage: 'Your Item Description must be between 6 and 326 characters'}\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=''>Please select value</option>\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit Cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      Label\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className=\"required-label\">*</span> */}\n        \n\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className=\"required-label\">*</span> */}\n        \n\n                    <AvField\n                      Label\n                      name='masteritemsecondimagefile'\n                      type='file'\n                      id='masteritemsecondimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedSecondHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemsecondimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload second image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{secondfilename}</div>\n\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader small-font-size'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddItemListForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert, Modal,ModalHeader,ModalBody,ModalFooter } from \"reactstrap\";\nimport { getMasterItemList } from \"../../../../actions/Transaction\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { deleteMasterItemList } from \"../../../../actions/Transaction\";\n\nclass ViewMasterItemList extends React.Component {\n  state = {\n    loading: false,\n    showModal: false,\n    setDeleteId: '',\n    masteritemlist: [],\n    count: 0\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemList();\n    console.log(\"master item list\", this.props);\n    if(this.props.masteritemlistvalues) {\n      let masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n      const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n        return {\n          masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n          masteritemtypename: masteritemdata.masteritemtypename,\n          masteritemdescription: masteritemdata.masteritemdescription,\n          masteritemshortdescription:masteritemdata.masteritemshortdescription,\n          masteritemuom: masteritemdata.masteritemuom.uomname,\n          // masteritemrate: masteritemdata.masteritemrate,\n          masteritemcostperunit: masteritemdata.masteritemcostperunit,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(masteritemdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          ),\n          delete: (\n            <Button\n            color=\"danger\"\n            onClick={() => {\n              this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n            }}\n          >\n            Delete\n          </Button>\n          )        \n        };\n      });\n      const count = masteritemlistvalues.length;\n      this.setState({ ...this.state, masteritemlist, count });\n      this.dataHandler(false);    \n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, showModal: false });\n  };\n\n  componentWillReceiveProps(props) {\n    console.log(\"master item list in props\", this.props);\n    let masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n    const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n      return {\n        masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n        masteritemtypename: masteritemdata.masteritemtypename,\n        masteritemdescription: masteritemdata.masteritemdescription,\n        masteritemshortdescription:masteritemdata.masteritemshortdescription,\n        masteritemuom: masteritemdata.masteritemuom.uomname,\n        // masteritemrate: masteritemdata.masteritemrate,\n        masteritemcostperunit: masteritemdata.masteritemcostperunit,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(masteritemdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n          }}\n        >\n          Delete\n        </Button>\n        )        \n      };\n    });\n    const count = masteritemlistvalues.length;\n    this.setState({ ...this.state, masteritemlist, count });\n    this.dataHandler(false);\n  }\n\n  deleteItem = () => {\n    return this.props.deleteMasterItemList(this.state.setDeleteId)\n    .then((data) => {\n      this.props.getMasterItemList();\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  };\n\n  updateButton = id => {\n    let path = `/m_updateitemlist/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { loading, count, masteritemlist, showModal } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"masteritemtype\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Code\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"masteritemdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Short Description\",\n        field: \"masteritemshortdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"UOM\",\n        field: \"masteritemuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      // {\n      //   label: \"Item Rate\",\n      //   field: \"masteritemrate\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Unit Cost\",\n        field: \"masteritemcostperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        {showModal ? (\n                      <Modal\n                      isOpen={showModal}\n                      className={this.props.className}\n                    >\n                      <ModalHeader toggle={this.toggle}>Delete</ModalHeader>\n                      <ModalBody>Do you want to delete this product?</ModalBody>\n                      <ModalFooter>\n                        <Button color='primary' onClick={this.deleteItem}>\n                          Yes\n                        </Button>\n                        <Button color='primary' onClick={this.toggle}>\n                          No\n                        </Button>                        \n                      </ModalFooter>\n                    </Modal>\n        ) : null\n        }\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={masteritemlist}\n              className=\"masteritemlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getMasterItemList, deleteMasterItemList }\n  )(ViewMasterItemList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddmasterItemList extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemList(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemList();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemListForm submit={this.submit} error={this.errorHandler}/>\n        </div>\n        {loading ? (\n        <CustomLoader/>\n        ) : null}\n        {/* <div>\n          <ViewMasterItemList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nAddmasterItemList.propTypes = {\n  addMasterItemList: PropTypes.func.isRequired,\n  getMasterItemList: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addMasterItemList, getMasterItemList, getUomList, getMasterItemTypes }\n)(AddmasterItemList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\n\nclass MasterItemListValues extends React.Component {\n  render() {\n    return (\n      <div class=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <ViewMasterItemList />\n      </div>\n    );\n  }\n}\n\nexport default MasterItemListValues;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass UpdateItemListForm extends React.Component {\n  state = {\n    data: {\n      id: null,\n      masteritemtype: '',\n      masteritemname: '',\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      itemImage: '',\n      itemsecondImage: '',\n      costperunit: null,\n      // masteritemrate: null,\n      masteritemunitwt: null,\n      masteritemimagefile: null,\n      masteritemsecondimagefile: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null\n    },\n    materialoptionlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    imageChanged: false,\n    secondimageChanged: false,\n    filename:'',\n    secondfilename:''\n  };\n\n  componentDidMount() {\n    const id = this.props.id;\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const masteritemlistvalues = props.masteritemlistvalues[id];\n    console.log(masteritemlistvalues)\n    const data = {};\n    data.id = masteritemlistvalues.id;\n\n    data.masteritemname = masteritemlistvalues.masteritemtypename;\n    data.masteritemdescription = masteritemlistvalues.masteritemdescription;\n    data.masteritemshortdescription = masteritemlistvalues.masteritemshortdescription;\n    data.itemName = masteritemlistvalues.itemName;\n    \n    data.permeter = masteritemlistvalues.permeter;\n    data.masteritemunitwt = masteritemlistvalues.masteritemunitwt;\n\n    data.perfeet =  masteritemlistvalues.permeter / 3.2808.toFixed(2)\n    data.perinch =  masteritemlistvalues.permeter / 39.3701.toFixed(2)\n    data.itemImage = masteritemlistvalues.masteritemimage != undefined && \n                     masteritemlistvalues.masteritemimage != null &&\n                     masteritemlistvalues.masteritemimage != '' ? `${process.env.REACT_APP_IMAGE_BASE_URL}` + '/' + masteritemlistvalues.masteritemimage : ''\n    \n    data.itemsecondImage = masteritemlistvalues.masteritemsecondimage != undefined && \n    masteritemlistvalues.masteritemsecondimage != null &&\n    masteritemlistvalues.masteritemsecondimage != '' ? `${process.env.REACT_APP_IMAGE_BASE_URL}` + '/' + masteritemlistvalues.masteritemsecondimage : ''\n    \n    \n    console.log(data.itemImage)\n    data.masteritemtype = masteritemlistvalues.masteritemtype._id;\n    data.masteritemuom = masteritemlistvalues.masteritemuom._id;\n    data.costperunit = masteritemlistvalues.masteritemcostperunit != undefined && \n                       masteritemlistvalues.masteritemcostperunit != null ? \n                      masteritemlistvalues.masteritemcostperunit.toString() : 0\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      data\n    });\n  }\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      ...this.state,\n      imageChanged: true,\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n\n  fileSelectedSecondHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemsecondimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      ...this.state,\n      secondimageChanged: true,\n      secondfilename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemsecondimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleInvalidSubmit = () =>{\n    console.log(this.state.data)\n  }\n\n  handleValidSubmit = () => {\n\n    const { data, imageChanged, secondimageChanged } = this.state;\n    this.setState({ loading: true });\n    const formdata = new FormData();\n    if (imageChanged) {\n      formdata.append('imagefile', data.masteritemimagefile);\n    }\n    if (secondimageChanged) {\n      formdata.append('secondimage', data.masteritemsecondimagefile);\n    }\n    // formdata.append(\"imagefile\", data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('id', data.id);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('itemName', data.itemName);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('masteritemcostperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success,filename,secondfilename } = this.state;\n    const itemimg = this.state.data.itemImage != '' ?\n    (<img src={data.itemImage} style={{'maxWidth': '150px','maxHeight' : '130px'}}/>) : ''\n    const itemsecondimg = this.state.data.itemsecondImage != '' ?\n    (<img src={data.itemsecondImage} style={{'maxWidth': '150px','maxHeight' : '130px'}}/>) : ''\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is Updated successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemtype || null}\n                    >\n                      <option value=''>select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='text'\n                      id='masteritemname'\n                      value={data.masteritemname || null}\n                      readOnly\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription || null}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        },\n                        maxLength: {value: 326, errorMessage: 'Your Item Description must be between 6 and 326 characters'}\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n\n                {/* <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemrate\">Item Rate</Label>\n                    <AvField\n                      name=\"masteritemrate\"\n                      type=\"text\"\n                      id=\"masteritemrate\"\n                      value={data.masteritemrate}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        maxLength: {\n                          value: 150,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Item Rate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col> */}\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemuom || null}\n                    >\n                      <option value=''>Please select value</option>\n                      {/* <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option> */}\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      className='small-font-size'\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      \n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className='required-label'>*</span> */}\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n                  </AvGroup>\n                </Col>\n\n                 <Col sm={6}>\n                {itemimg}\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className='required-label'>*</span> */}\n                    <AvField\n                      Label\n                      name='masteritemsecondimagefile'\n                      type='file'\n                      id='masteritemsecondimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedSecondHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemsecondimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload second image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{secondfilename}</div>\n                  </AvGroup>\n                </Col>\n\n                 <Col sm={6}>\n                {itemsecondimg}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport UpdateMasterItemListForm from \"../Form/ItemList/UpdateItemListForm\";\nimport { updatemasteritemlist } from \"../../../../actions/Transaction\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateMasterItemList extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updatemasteritemlist(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/mitemlistvalues\">Item List</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Update Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <UpdateMasterItemListForm id={id} submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    updatemasteritemlist,\n    addMasterItemList,\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList\n  }\n)(UpdateMasterItemList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass MasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      itemtype: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type data is Added successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Added successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item Type data already exist.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item Type</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"itemtype\"\n                      type=\"text\"\n                      id=\"masteritemtype\"\n                      value={data.option}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item Type\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid Item Type name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup className=\"mg-20\">\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader\"\n                    >\n                      Submit\n                      {/* {loading} */}\n                    </Button>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default MasterItemTypeForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport MasterItemTypeForm from \"../Form/MasterItemTypeForm\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass MasterItemType extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemType(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemTypes();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Type</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemTypeForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(MasterItemType);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nclass ItemMasterTypeList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    masteritemtypesvalues: []\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemTypes();\n  }\n  componentWillReceiveProps(props) {\n    const masteritemtypenamevaluelist = Object.values(\n      props.masteritemtypenamevalue\n    );\n    const masteritemtypesvalues = masteritemtypenamevaluelist.map(\n      (masteritemtypedata, i) => {\n        return {\n          masteritemtypename: masteritemtypedata.masteritemtypename,\n          view: (\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                this.updateButton(masteritemtypedata.id);\n              }}\n            >\n              view / Edit\n            </MDBBtn>\n          )\n        };\n      }\n    );\n    const count = masteritemtypesvalues.length;\n    this.setState({ ...this.state, masteritemtypesvalues, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/update_mitemtype/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { loading, count, masteritemtypesvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 && (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={masteritemtypesvalues}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(ItemMasterTypeList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateMasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      id: this.props.masteritemtypenamevalue.id,\n      masteritemtypename: this.props.masteritemtypenamevalue.masteritemtypename\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const dataRecord = props.masteritemtypenamevalue;\n    this.setState({ ...this.state.data, data: dataRecord });\n  }\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type is updated successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Updated successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>{\" \"}\n         \n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item data already exist.</Alert>\n        ) : null}\n        {!!errors.global ? (\n          <Alert color=\"danger\">\n            Something went wrong,Please try again later.\n          </Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Update Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"item\">Item</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"masteritemtypename\"\n                      type=\"text\"\n                      id=\"item\"\n                      value={data.masteritemtypename}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item name\"\n                        },\n                   \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid item name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalueobjectlist: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateMasterItemTypeForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMasterItemTypeForm from \"../Form/UpdateMasterItemTypeForm\";\nimport {\n  getMasterItemTypes,\n  updateMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateItemMasterType extends React.Component {\n  state = {\n    loading: false,\n    masteritemtypenamevalue: {}\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    const masteritemid = this.props.match.params.id;\n    const masteritemtypenamevalue = this.props.masteritemtypenamevalue[\n      masteritemid\n    ];\n    this.setState({ masteritemtypenamevalue });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updateMasterItemTypes(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { loading, masteritemtypenamevalue } = this.state;\n\n    return (\n      <div className=\"mg-t-20 container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/masteritemtypelist\">Item Type</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <UpdateMasterItemTypeForm\n            submit={this.submit}\n            masteritemtypenamevalue={masteritemtypenamevalue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMasterItemTypes, updateMasterItemTypes }\n)(UpdateItemMasterType);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../loader/loader\";\n\nclass EditTable extends React.Component {\n  state = {\n    data: {\n      poid: null,\n      ponumber: null,\n      poitemid: [],\n      itemid: [],\n      itemuom: [],\n      itemquantity: [],\n      receivedqty: [],\n      recevingqty: [],\n      itemlocation: [],\n      totalqty: [],\n      date: []\n    },\n    receiptnumber: null,\n    selectedItem: [],\n    locationlistvalue: [],\n    sucess: false,\n    errors: {},\n    uomlistvalues: [],\n    loading: false,\n    loadingvalue: false,\n    visible: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const ponumber = this.props.ponumber;\n    const poid = this.props.poid;\n    const selectedItemlistvalues = this.props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const poid = props.poid;\n    const ponumber = props.ponumber;\n    const selectedItemlistvalues = props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const itemlocation = [...this.state.data.itemlocation];\n    itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        itemlocation\n      }\n    });\n  };\n  quantityChange = (e, index) => {\n    const selected_qty = e.target.value;\n    const recevingqty = [...this.state.data.recevingqty];\n    const totalqty = [...this.state.data.totalqty];\n    const receivedqty = [...this.state.data.receivedqty];\n    recevingqty[index] = selected_qty;\n    totalqty[index] =\n      parseFloat(receivedqty[index]) + parseFloat(recevingqty[index]);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        recevingqty,\n        totalqty\n      }\n    });\n  };\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n  handleValidSubmit = () => {\n    this.dataHandler(true);\n    let data = {};\n    let AddedIteminfo = [];\n    const {\n      poid,\n      ponumber,\n      poitemid,\n      itemid,\n      itemuom,\n      itemquantity,\n      receivedqty,\n      recevingqty,\n      itemlocation,\n      totalqty,\n      date\n    } = this.state.data;\n    data.ponumber = ponumber;\n    data.poid = poid;\n    itemid.forEach(function(id, i) {\n      let obj = {};\n      obj.poitemid = poitemid[i];\n      obj.itemid = itemid[i];\n      obj.itemuom = itemuom[i];\n      obj.itemquantity = itemquantity[i];\n      obj.receivedqty = receivedqty[i];\n      obj.recevingqty = recevingqty[i];\n      obj.itemlocation = itemlocation[i];\n      obj.totalqty = totalqty[i];\n      AddedIteminfo.push(obj);\n    });\n    data.iteminfo = AddedIteminfo;\n    this.props\n      .itemlistsubmit(data)\n      .then(data => {\n        this.onShowAlert();\n        this.dataHandler(false);\n        this.setState({\n          success: true,\n          loading: false,\n          receiptnumber: data.receiptnumber\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ errors: err.response.data.error, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  dataHandler = value => {\n    this.setState({ loadingvalue: value });\n  };\n\n  render() {\n    // const { selectedItem } = this.props;\n    const {\n      loading,\n      data,\n      success,\n      errors,\n      selectedItem,\n      receiptnumber,\n      visible,\n      loadingvalue\n    } = this.state;\n    const tableBody = selectedItem.map((itemlist, i) => {\n      let nowDate = new Date();\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={itemlist.poitemid}>\n          <td>{i + 1}</td>\n          <td>{itemlist.itemname}</td>\n          <td>{itemlist.itemdescription}</td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`uom${i}`}\n              onChange={this.onChange}\n              required={true}\n              value={itemlist.itemuom || \" \"}\n            >\n              <option value=\"\">uom</option>\n              {this.createSelectUomItems()}\n            </AvField>\n          </td>\n          <td>{itemlist.quantity}</td>\n          <td>{itemlist.receivedqty}</td>\n          <td>\n            <AvField\n              name={`quantity${i}`}\n              type=\"number\"\n              id={`quantity${i}`}\n              value={itemlist.recevingqty.toString() || null}\n              min={0}\n              max={itemlist.recevingqty}\n              onChange={e => this.quantityChange(e, i)}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter Item Quantity\"\n                },\n                minLength: {\n                  value: 1,\n                  errorMessage: \"quantity value is required\"\n                },\n                pattern: {\n                  value: \"^[0-9.]*$\",\n                  errorMessage: \"Please enter valid quantity\"\n                }\n              }}\n            />\n          </td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`location${i}`}\n              onChange={e => this.locationChange(e, i)}\n              required={true}\n              value={itemlist.itemlocation}\n            >\n              {this.createSelectLocationItems()}\n            </AvField>\n          </td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loadingvalue ? <CustomLoader /> : null}\n        {success && (\n          // <Alert color=\"info\" isOpen={visible}>\n          //   Receipt {receiptnumber} created Successfully\n          // </Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Receipt {receiptnumber} created Successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        )}\n        {!!errors.global ? <Alert color=\"danger\">{errors.global}</Alert> : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>SI No</th>\n                    <th>Item Name</th>\n                    <th>Item Description</th>\n                    <th>UOM</th>\n                    <th>PO Qty</th>\n                    <th>Received Qty</th>\n                    <th>Receiving Qty</th>\n                    <th>location</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>{tableBody}</tbody>\n              </table>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    uomlistvalues: state.uomlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditTable);\n","import axios from \"axios\";\n\nexport default {\n  location: {\n    getLocationList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/location/getlocation`)\n        .then(res => {\n          return res.data.locationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/locationapi\";\nimport { Location_LIST } from \"../Services/types\";\nimport { locationListSchema } from \"../Schemas/schemas\";\n\nfunction locationListFetched(locationlist) {\n  return {\n    type: Location_LIST,\n    locationlist\n  };\n}\n\nexport const getLocationList = () => {\n  return dispatch => {\n    return api.location.getLocationList().then(locationlist => {\n      const locationlistvalue = locationlist.locationdata;\n      return dispatch(\n        locationListFetched(normalize(locationlistvalue, [locationListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert\n} from \"reactstrap\";\n\nclass ReceiptScreenForm extends React.Component {\n  state = {\n    data: {\n      ponumber: null\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onhandleChange = e => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        // eslint-disable-next-line prettier/prettier\n        this.setState({ errors: err.response.data.errors, loading: false, success: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Receipt Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    {!!errors.global ? (\n                      <Alert color=\"danger\" Label>Result Not Found</Alert>\n                    ) : null}\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\" Label>PO Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"ponumber\"\n                        type=\"number\"\n                        id=\"ponumber\"\n                        value={data.ponumber}\n                        onChange={this.onChange}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader small-font-size\"\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      Find\n                      {/* {loading} */}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptScreenForm;\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\n\nclass ReceiptTable extends React.Component {\n  state = {\n    receiptlistitems: []\n  };\n  componentDidMount() {\n    const receiptlistitems = this.props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const receiptlistitems = props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n  render() {\n    const { receiptlistitems } = this.state;\n    const receiptlisttable = receiptlistitems.map((receiptvalue, i) => {\n      let loc = receiptvalue.itemlocation ? receiptvalue.itemlocation.locationname : '-'\n      let nowDate = new Date(receiptvalue.date);\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={receiptvalue.id}>\n          <td>{i + 1}</td>\n          <td>{receiptvalue.itemid.masteritemname}</td>\n          <td>{receiptvalue.itemid.masteritemdescription}</td>\n          <td>{receiptvalue.itemuom.uomname}</td>\n          <td>{receiptvalue.itemquantity}</td>\n          <td>{receiptvalue.recevingqty}</td>\n          <td>{loc}</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>SI No</th>\n              <th>Item Name</th>\n              <th>Item Description</th>\n              <th>UOM</th>\n              <th>PO Qty</th>\n              <th>Received Qty</th>\n              <th>location</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>{receiptlisttable}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport async from \"async\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Button\n} from \"reactstrap\";\nimport EditTable from \"../../../../Components/EditTable/EditTable\";\nimport {\n  getPurchaseOrder,\n  searchPoNumber,\n  addorupdateitemsinlocation,\n  getReceiptlist\n} from \"../../../../actions/Transaction\";\nimport { getLocationList } from \"../../../../actions/Location\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport ReceiptScreenForm from \"./ReceiptScreenForm/ReceiptScreenForm\";\nimport ReceiptTable from \"./ReceiptScreenForm/ReceiptTable\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ReceiptScreen extends React.Component {\n  state = {\n    count: 0,\n    poid: null,\n    ponumber: null,\n    selectedItem: [],\n    success: false,\n    receiptlistitems: [],\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getLocationList();\n    this.props.getUomList();\n    const purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  componentWillReceiveProps(props) {\n    const purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  submit = data => {\n    this.dataHandler(true);\n    this.props.getReceiptlist(data).then(receiptlist => {\n      this.dataHandler(false);\n      const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n        return receiptvalue;\n      });\n      this.setState({\n        ...this.state,\n        receiptlistitems: receiptlistitems\n      });\n    });\n\n    return this.props\n      .searchPoNumber(data)\n      .then(podata => {\n        this.dataHandler(false);\n        const selectedItem = podata.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n        const ponumber = data.ponumber;\n        const poid = podata._id;\n        this.setState({\n          ...this.state,\n          selectedItem,\n          ponumber,\n          poid,\n          success: true\n        });\n        return podata;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ ...this.state, success: false });\n        throw err;\n      });\n  };\n\n  itemlistsubmit = data => {\n    const datavalue = {};\n    datavalue.ponumber = data.ponumber;\n    this.dataHandler(true);\n    this.props.getReceiptlist(datavalue).then(receiptlist => {\n      this.dataHandler(false);\n      if (receiptlist) {\n        const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n          return receiptvalue;\n        });\n        this.setState({\n          ...this.state,\n          receiptlistitems: receiptlistitems\n        });\n      }\n    });\n\n    return this.props\n      .addorupdateitemsinlocation(data)\n      .then(async data => {\n        this.dataHandler(false);\n        const receiptlist = await this.props.getReceiptlist(datavalue);\n        const searchporesult = await this.props.searchPoNumber(datavalue);\n        data = {\n          searchdata: data,\n          receiptlist: receiptlist,\n          searchporesult: searchporesult\n        };\n        return data;\n      })\n      .then(data => {\n        console.log(data);\n        const receiptlistitems = data.receiptlist.receiptlist.map(\n          receiptvalue => {\n            return receiptvalue;\n          }\n        );\n\n        const selectedItem = data.searchporesult.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n\n        this.setState({\n          ...this.state,\n          receiptlistitems,\n          selectedItem\n        });\n\n        return data.searchdata;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  savereport = value => {\n    sessionStorage.setItem(\"Receipt\",JSON.stringify(value))\n    let path = `/viewreceipt`;\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      poid,\n      ponumber,\n      count,\n      success,\n      selectedItem,\n      receiptlistitems,\n      loading\n    } = this.state;\n\n    const receiptlisttable = receiptlistitems.map(receiptvalue => {\n      return (\n        <div className=\"container mg-t-20\" key={receiptvalue.id}>\n          {loading ? <CustomLoader /> : null}\n          <Card>\n            <CardHeader>\n              <span> Receipt No : {receiptvalue.receiptnumber} </span>\n              <span> || </span>\n              <span> PO Number : {receiptvalue.ponumber} </span>\n              <div style={{ 'float':'right','marginTop': '-8px','marginBottom':'-5px'}}>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        this.savereport(receiptvalue);\n                      }}\n                      className=\"lgn-loader small-font-size\"\n                      \n                    >\n                      Save Report\n                     \n                    </Button>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <ReceiptTable itemlist={receiptvalue.itemlist} />\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Receipt Screen</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <ReceiptScreenForm submit={this.submit} />\n              {success && (\n                <EditTable\n                  selectedItem={selectedItem}\n                  ponumber={ponumber}\n                  poid={poid}\n                  itemlistsubmit={this.itemlistsubmit}\n                />\n              )}\n              {receiptlistitems.length > 0 && receiptlisttable}\n            </div>\n          ) : (\n              <Alert color=\"info\" Label>Please Add purchase order </Alert>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPurchaseOrder,\n    searchPoNumber,\n    addorupdateitemsinlocation,\n    getReceiptlist,\n    getLocationList,\n    getUomList\n  }\n)(ReceiptScreen);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 50,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height:50,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n\nconst today = new Date().getDate() + '/' +  (new Date().getMonth()+1) + '/' + new Date().getFullYear()\nconst data = orderlistvalues.addeditemlist;\n  const {\n    ponumber,\n    receiptnumber\n  } = orderlistvalues;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small>\n              </View>\n       \n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : 40 & 41 (corner) Road,no.5, Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>Off: +91 080 23339150, Mob: +91 9900069150</Bold>\n    \n        </Text>\n        <Text> {'\\n'}</Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black',textAlign:'center' }]}>\n          <Bold>Goods Received Note</Bold>\n        </Text>\n\n        \n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>GRN No. </Text>\n                <Text style={[styles.dcaddress, {\n                \n                  paddingLeft: 16,\n                }]}>{receiptnumber}/2019-20 \n                {'\\n'}\n                </Text>\n              </View>\n            \n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>PO No.</Text>\n                <Text style={[styles.dcaddress, {\n                    paddingLeft: 16,\n                    wordWrap: 'break-word'\n                }]}> PSPL/2019-20/{ponumber}\n                {'\\n'}\n                </Text>\n             </View>\n            </View>\n           \n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {today}\n                  {'\\n'}\n                </Text>\n              </View>\n            </View>\n            <Text>{'\\n'}</Text> \n          </View>\n          <Text>{'\\n'}</Text> \n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>UOM</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>PO Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Received Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>Received Date</Text>\n              </TableCell>\n              \n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Remaining Qty</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemuom}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.poqty}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receivedqty}</Text>} />\n            <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receiptDate}</Text>} />\n                \n                <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.availqty}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             Authorised : Yes {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspection Required : Yes {'\\n'}\n             \n            </Text>\n          </View>\n          <Text>{'\\n'}</Text> \n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             EDP Prepared by {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Store incharge {'\\n'}\n             \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspected By {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Manager {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Accounts Department {'\\n'}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\n//import './ViewOrder';\n\nclass ViewReceiptPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    let data = JSON.parse(sessionStorage.getItem(\"Receipt\"))\n    let receipts = JSON.parse(sessionStorage.getItem(\"SelectedItem\"))\n    receipts.map((item)=>{\n      for(var j=0;j<data.itemlist.length;j++){\n        if( data.itemlist[j].itemid.masteritemname == item.itemname){\n          data.itemlist[j]['TotalRecQty'] = item.recevingqty;break\n        }\n      }\n    })\n    let poreceiptvalues = {}\n    poreceiptvalues['ponumber'] = data['ponumber']\n    poreceiptvalues['receiptnumber'] = data['receiptnumber']\n    console.log(data.itemlist)\n    poreceiptvalues['addeditemlist'] = data.itemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemid.masteritemdescription ? itemlist.itemid.masteritemdescription : '',\n          itemcode: itemlist.itemid.masteritemname ? itemlist.itemid.masteritemname : '',\n          itemuom: itemlist.itemuom.uomname ? itemlist.itemuom.uomname : '',\n          poqty: itemlist.itemquantity ? itemlist.itemquantity.toString() : '',\n          receivedqty: itemlist.recevingqty ? itemlist.recevingqty.toString() : '',\n          receiptDate:  itemlist.date ? new Date(itemlist.date).getDate() + \"/\" + (new Date(itemlist.date).getMonth() + 1) + \"/\" + new Date(itemlist.date).getFullYear() : '',\n          availqty: itemlist.TotalRecQty ? itemlist.TotalRecQty : 0\n        };\n      }\n    );\n\n    setTimeout(() => {\n      this.setState({\n        orderlistvalues : poreceiptvalues,\n        status: true\n      },()=>{\n        console.log(this.state.orderlistvalues)\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 6000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/receipt_screen');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n           {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )} \n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps\n)(ViewReceiptPdf);\n","import axios from 'axios';\n\nexport default {\n  moveorder: {\n    addmoveorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/moveorder/addmoveorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.moveorderdata;\n        });\n    },\n    getmoveorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n        .then(res => {\n          return res.data.moveorderlist;\n        });\n    },\n    getItemsMoveOrder: (id) => {\n      return axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getItemsMoveOrder/`+id)\n      .then(res => {\n        return res.data.itemlist;\n      });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/moveorderapi';\nimport { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\nimport { moveorderListSchema } from '../Schemas/schemas';\n\nconst moveorderCreated = moverorderlist => {\n  return {\n    type: ADD_MOVEORDER,\n    moverorderlist\n  };\n};\n\nconst moveorderFetched = moverorderlist => {\n  return {\n    type: MOVEORDER_FETCHED,\n    moverorderlist\n  };\n};\n\nexport const addMoveOrder = data => {\n  return dispatch => {\n    return api.moveorder.addmoveorder(data).then(moverorderlistvalues => {\n      return dispatch(\n        moveorderCreated(normalize(moverorderlistvalues, moveorderListSchema))\n      );\n    });\n  };\n};\n\nexport const getMoveOrder = () => {\n  return dispatch => {\n    return api.moveorder.getmoveorder().then(moverorderlist => {\n      console.log(moverorderlist);\n      const moverorderlistvalues = moverorderlist.moveorderdata;\n      console.log(moverorderlistvalues);\n      return dispatch(\n        moveorderFetched(normalize(moverorderlistvalues, [moveorderListSchema]))\n      );\n    });\n  };\n};\n\nexport const getItemsMoveOrder = (id) => {\n    return api.moveorder.getItemsMoveOrder(id).then(itemorderlist => {\n      console.log(itemorderlist);\n      const itemorderlistvalues = itemorderlist.itemdata;\n      console.log(itemorderlistvalues);\n      return itemorderlistvalues;\n    });\n}\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass MoveOrderScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        availableQuantity: [null],\n        totalcost: [null],\n        remarks: [null]\n      },\n      moveorderno: '1',\n      fromaddress: '',\n      toaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const moveorderlistvalues = Object.keys(this.props.moveorderlistvalues);\n    const moveorderno =\n      moveorderlistvalues.length > 0 ? 1 + moveorderlistvalues.length : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        moveorderno\n      }\n    },()=>{\n      if(moveorderlistvalues.length == 0)\n        this.getMovedata()\n    });\n  }\n\n  getMovedata(){\n    if(Object.keys(this.props.moveorderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n      .then(res => {\n         //if (res.data.moveorderlist.moveorderdata.length > 0) {\n           \n          let moveorderno =\n          res.data.moveorderlist.moveorderdata.length > 0 ? 1 + res.data.moveorderlist.moveorderdata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              moveorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    console.log(this.state.masteritemlistvalues)\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      let itemdesc = ''\n      this.state.masteritemlistvalues.map((item) =>{\n        if(item.masteritemtypename == selected_item.itemname)\n          itemdesc = item.masteritemshortdescription != '' ? item.masteritemshortdescription : item.masteritemdescription\n       })\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc;\n  \n      // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n      // : selected_item.masteritemshortdescription\n      // selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      // selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      // selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n      // selectedItemlist.itemlocation[index] = null;\n      // selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      selectedItemlist.quantity[index] = selected_item.itemquantity;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity;\n      // selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(\n      item => item.id !== e.target.value\n    );\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n      const itemlist = data.itemlist.map(item => {\n        return {\n          id: item.id,\n          locationname: item.locationname,\n          itemid:item.itemid,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'itemname')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          availableQuantity: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n    \n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    availableQuantity.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          availableQuantity,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n\n   \n \n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    if(Number(e.target.value) > selectedItemlist.availableQuantity[index]){\n      window.alert('Move quantity cannot be greater than available quantity')\n      console.log(this.state.data.selectedItemlist.quantity)\n      selectedItemlist.quantity[index] = '0'\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n    else{\n      selectedItemlist.quantity[index] = e.target.value;\n      const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n      this.totalValue();\n    }\n\n\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>Order moved successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Move Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='moveorderno'>Move Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='moveorderno'\n                      type='text'\n                      id='moveorderno'\n                      value={data.moveorderno || null}\n                      onChange={this.handleChange}\n    \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Move Order No'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>From location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To location </Label>\n                    <AvField\n                      type='select'\n                      name='toaddress'\n                      onChange={this.onhandlerToChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createToLocationList()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Name</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Available quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                disabled='true'\n                                value={\n                                  data.selectedItemlist.availableQuantity[\n                                    index\n                                  ]\n                                }\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`movequantity${index}`}>\n                                Move quantity\n                              </Label>\n                              <AvField\n                                name={`movequantity${index}`}\n                                type='number'\n                                id={`movequantity${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.quantity[\n                                    index\n                                  ]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { totalitemvaluesearch }\n)(MoveOrderScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport MoveOrderScreenForm from './MoveOrderScreenForm/MoveOrderScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\n\nclass MoveOrderScreen extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addMoveOrder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Move</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <MoveOrderScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList\n  }\n)(MoveOrderScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getMoveOrder } from '../../../../actions/moveorder';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewProduction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    moveorderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getMoveOrder();\n    // console.log(this.props);\n    // if (this.props.moveorderlistvalues) {\n    //   const quotationlist = Object.values(this.props.moveorderlistvalues);\n    //   const moveorderlistvalues = quotationlist.map(quotationvalue => {\n    //     return {\n    //       moveorderno: quotationvalue.moveorderno,\n    //       fromaddress: quotationvalue.fromaddress,\n    //       toaddress: quotationvalue.toaddress\n    //     };\n    //   });\n    //   this.setState({ ...this.state, moveorderlistvalues });\n    //   this.dataHandler(false);\n    // }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.moveorderlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\n    });\n    const moveorderlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        moveorderno: quotationvalue.moveorderno,\n        fromaddress: quotationvalue.fromaddress,\n        toaddress: quotationvalue.toaddress,\n        view: (\n          <Button\n          color=\"primary\"\n          onClick={() => {\n            let path = `/view_ItemsOrder/${quotationvalue._id}`;\n            this.props.history.push(path);\n          }}\n        >\n          View Items\n        </Button>\n        )\n      };\n    });\n    this.setState({ ...this.state, moveorderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_invoicepdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, moveorderlistvalues } = this.state;\n    console.log(moveorderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Move Order No',\n        field: 'moveorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'From Address',\n        field: 'fromaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'To Address',\n        field: 'toaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'view',\n        width: 100,\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={moveorderlistvalues}\n            columnvalue={columnvalue}\n            className=\"moveorderlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMoveOrder }\n)(ViewProduction);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItemsMoveOrder } from '../../../../actions/moveorder';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewMoveOrderProduction extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    itemorderlistvalues: []\r\n  };\r\n  async componentDidMount() {\r\n    const moveorderid = this.props.match.params.id;\r\n    let receivedData = await getItemsMoveOrder(moveorderid);\r\n    console.log(\"itemorder list values\", receivedData);\r\n    let quotationlist = Object.values(receivedData);\r\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\r\n    quotationlist.sort(function(a, b){\r\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\r\n    });\r\n    const itemorderlistvalues = quotationlist.map(quotationvalue => {\r\n      return {\r\n        itemname: quotationvalue.itemname,\r\n        itemdescription: quotationvalue.itemdescription,\r\n        quantity: quotationvalue.quantity\r\n      };\r\n    });\r\n    this.setState({ ...this.state, itemorderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n  async componentWillReceiveProps(props) {\r\n    const moveorderid = this.props.match.params.id;\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_invoicepdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, itemorderlistvalues } = this.state;\r\n    console.log(itemorderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Item Name',\r\n        field: 'itemname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Item Description',\r\n        field: 'itemdescription',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'quantity',\r\n        field: 'quantity',\r\n        sort: 'asc',\r\n        width: 40\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/move-order'>Move Order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/moveorderlist'>Move Order List</Link>\r\n          </BreadcrumbItem>          \r\n          <BreadcrumbItem active>Items</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable\r\n            rowvalues={itemorderlistvalues}\r\n            columnvalue={columnvalue}\r\n            className=\"moveorderlist\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    moveorderlistvalues: state.moveorderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getItemsMoveOrder }\r\n)(ViewMoveOrderProduction);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch, getMasterItemList } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass AddOnHandScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemlocation: [null],\n        quantity: [null],\n        availableQuantity: [null],\n      },\n      fromaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false,\n    masterItemList: []\n  };\n\n  componentDidMount() {\n    // this.props.getLocationList();\n    this.props.getMasterItemList().then((result) => {\n      console.log('result..............................');\n      console.log(result);\n\n      let items = [];\n      //MasterItemTypeList.entities.masteritemtypelistvalues\n      for (let key in result.MasterItemTypeList.result) {\n        const data = result.MasterItemTypeList.entities.masteritemtypelistvalues[result.MasterItemTypeList.result[key]];\n        console.log(data);\n        items.push({\n          id: data['id'],\n          itemid: data['id'],\n          itemname: data['masteritemtypename'],\n          itemdescription: data['masteritemshortdescription'] != '' ? data['masteritemshortdescription'] : data['masteritemdescription'],\n          quantity: 0,\n          availableQuantity: 0\n        });\n      }\n\n      console.log('UUUUUUUUUUUUUUUUUUUUUUUU');\n      console.log(items);\n      this.setState({\n        masterItemList: items\n      });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data\n      }\n    }, () => {\n\n    });\n  }\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      console.log(this.state.masterItemList)\n      let itemdesc = ''\n      this.state.masterItemList.map((item) =>{\n        if(item.itemname == selected_item.itemname)\n          itemdesc = item.itemdescription\n      })\n\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc != '' ? itemdesc : selected_item.itemdescription;\n      selectedItemlist.quantity[index] = selected_item.itemquantity || 0;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity || 0;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(item => item.id !== e.target.value);\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    let location = e.target.value;\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n\n\n      const isAdded = [];\n      const itemlist = [];\n      data.itemlist.forEach(item => {\n        if (item['itemname']) {\n          itemlist.push({\n            id: item.id,\n            locationname: item.locationname,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n\n      itemlist.forEach(data => {\n        if (data['itemname']) {\n          isAdded.push(data['itemname'])\n        }\n      });\n\n      console.log('Before Adding Remaining');\n      console.log(itemlist);\n\n      const allItems = this.state.masterItemList;\n      allItems.forEach((item, index) => {\n        if (!(isAdded.indexOf(item.itemname) > -1)) {\n          itemlist.push({\n            id: item.id,\n            locationname: location,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n      console.log('After Adding Remaining');\n      console.log(itemlist);\n\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    console.log('###################################');\n    console.log(masteritemlistvalues);\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues, 'itemname');\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues = masteritemlistvalues.sort((a,b)=>{return a['itemname'].toLowerCase().localeCompare(b['itemname'].toLowerCase())})\n    \n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          availableQuantity: [...this.state.data.selectedItemlist.quantity, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemlocation.splice(index, 1);\n    quantity.splice(index, 1);\n    availableQuantity.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemlocation,\n          availableQuantity,\n          quantity\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n\n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    selectedItemlist.quantity[index] = e.target.value;\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let iteminfo = [];\n    const { supplierdetail, selectedItemlist, fromaddress } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    // const itemlocation = selectedItemlist.itemlocation;\n    const quantity = selectedItemlist.quantity;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemid = id[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemlocation = fromaddress;//itemlocation[i] || null;\n      obj.recevingqty = quantity[i] || null;\n      iteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['iteminfo'] = iteminfo;\n    this.setState({ loading: true });\n    // console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            selectedItemlist: {\n              id: [null],\n              itemname: [null],\n              itemdescription: [null],\n              itemlocation: [null],\n              quantity: [null],\n              availableQuantity: [null],\n            },\n            fromaddress: '',\n            values: ['']\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>On Hand Updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>On Hand</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>Select location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={data.selectedItemlist.availableQuantity[index]}\n                                disabled={true}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`newquantity${index}`}>\n                                New Quantity\n                              </Label>\n                              <AvField\n                                name={`newquantity${index}`}\n                                type='number'\n                                id={`newquantity${index}`}\n                                value={data.selectedItemlist.quantity[index]}\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    totalitemvaluesearch,\n    // getLocationList,\n    getMasterItemList\n  }\n)(AddOnHandScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport AddOnHandScreenForm from './AddOnHandScreenForm/AddOnHandScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\nimport { additemsinlocation } from '../../../actions/Transaction';\n\nclass AddOnHand extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .additemsinlocation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add On Hand</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddOnHandScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList,\n    additemsinlocation\n  }\n)(AddOnHand);","import axios from 'axios';\n\nexport default {\n  production: {\n    addproduction: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/production/addproduction`, {\n          data\n        })\n        .then(res => {\n          return res.data.productiondata;\n        });\n    },\n    getproduction: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n        .then(res => {\n          return res.data.productionlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/productionapi';\nimport { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\nimport { productionListSchema } from '../Schemas/schemas';\n\nconst productionCreated = productionlist => {\n  return {\n    type: ADD_PRODUCTION,\n    productionlist\n  };\n};\n\nconst productionFetched = productionlist => {\n  return {\n    type: PRODUCTION_FETCHED,\n    productionlist\n  };\n};\n\nexport const addproduction = data => {\n  return dispatch => {\n    return api.production.addproduction(data).then(productionlistvalues => {\n      return dispatch(\n        productionCreated(normalize(productionlistvalues, productionListSchema))\n      );\n    });\n  };\n};\n\nexport const getproduction = () => {\n  return dispatch => {\n    return api.production.getproduction().then(productionlist => {\n      const productionlistvalues = productionlist.productiondata;\n      console.log(productionlistvalues);\n      return dispatch(\n        productionFetched(\n          normalize(productionlistvalues, [productionListSchema])\n        )\n      );\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass ProductionForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        totalcost: [null],\n        remarks: [null],\n        totalweight: [null],\n        readystock: [null],\n        firstround: [null],\n        secondround: [null],\n        thirdround: [null]\n      },\n      products: [],\n      productionorderno: '',\n      customerid: '',\n      item: '',\n      date: new Date(),\n      quantity: '',\n      productiondate: new Date(),\n      subAssembly: [],\n      values: ['']\n    },\n    errors: {},\n    itemname:'',\n    materialoptionlistvalues: [],\n    productMaterial: [],\n    customerlistvalues: [],\n    productlistvalues: [],\n    supplierdetaillistvalue: [],\n    itemlistSelectedOption: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    customerlistSelect: [],\n    loading: false,\n    success: false\n  };\n  dummyProductMapping = {\n    props: [\n      { assembly: '50 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '40 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '6 mm MS Plate', unit: 'Kgs' },\n      { assembly: 'Prop nut', unit: 'Kgs' }\n    ]\n  };\n\n \n\n  componentWillReceiveProps(props) {\n   \n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    console.log(productlistvalues)\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const productionlistvalues = Object.keys(this.props.productionlistvalues);\n    const productionorderno =\n      productionlistvalues.length > 0\n        ? 1 + productionlistvalues.length\n        : 1;\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      customerlistvalues,\n      productlistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      customerlistSelect: arraySet,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        productionorderno\n      }\n    },()=>{\n      if(productionlistvalues.length == 0)\n        this.getProddata()\n    });\n  }\n\n  getProddata(){\n    if(Object.keys(this.props.productionlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n      .then(res => {\n         //if (res.data.productionlist.productiondata.length > 0) {\n           \n          let productionorderno =\n          res.data.productionlist.productiondata.length > 0 ? 1 + res.data.productionlist.productiondata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              productionorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChangeCust = (e,index) => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, customerid:  e.value}\n    });\n  }\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let products2 = this.state.data.products;\n    console.log(products2[index].quantity)\n\n    let item = e.label;\n    console.log(item)\n    const selected_id = e.value ? e.value : e;\n    console.log(selected_id)\n    let productMaterial2 = [],found=0;\n    let obj = {},arr = []\n    productMaterial2.push(this.props.masteritemlistvalues[selected_id])\n    let itemname = productMaterial2[0].masteritemtypename\n    console.log(productMaterial2)\n \n    for(var i=0;i<this.state.productlistvalues.length;i++){\n      if(this.state.productlistvalues[i].productname.toString().trim().toLowerCase() == productMaterial2[0].masteritemdescription.toString().trim().toLowerCase()){\n        found = 1;\n        break;\n      }\n    }\n    if(found == 1){\n      if(this.state.productlistvalues[i].productMaterial != null && this.state.productlistvalues[i].productMaterial.length > 0){\n        this.state.productlistvalues[i].productMaterial.map((item,index) =>{\n          console.log(item)\n          obj = {}\n          obj['masteritemdescription'] = item.productqty\n          obj['masteritemuom'] = new Object()\n          obj['permeter'] = this.state.productlistvalues[i].permeter\n          obj['perfeet'] = this.state.productlistvalues[i].perfeet\n          obj['perinch'] = this.state.productlistvalues[i].perinch\n          obj['quantityPerMeter'] = this.state.productlistvalues[i].productsqtyinmeter[index] ? this.state.productlistvalues[i].productsqtyinmeter[index] : 0\n          obj['quantityPerKg'] = this.state.productlistvalues[i].productsweight[index] ? this.state.productlistvalues[i].productsweight[index] : 0\n          obj['masteritemuom']['uomname'] =  this.state.productlistvalues[i].productsuom[index]\n          arr.push(obj)\n        })\n      }\n      productMaterial2 = arr\n    }\n    console.log(arr)\n    let subAssembly = [];\n    console.log(productMaterial2)\n    let calculationArray = [];\n    productMaterial2.map(product => {\n\n      let calculationdata = { permeter: null, perfeet: null, perinch: null };\n      product.quantityPerMeter = parseInt(product.quantityPerMeter)\n      product.quantityPerKg = parseInt(product.quantityPerKg)\n      product.quantityPerMeter = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) : product.quantityPerMeter\n      product.quantityPerKg = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) * product.quantityPerKg : product.quantityPerMeter * product.quantityPerKg\n\n      subAssembly.push({\n        name: product.masteritemdescription,\n        unit: product.masteritemuom.uomname,\n        thickness: 0,\n        quantity: 0,\n        quantityPerMeter:product.quantityPerMeter,\n        quantityPerKg: product.quantityPerKg,\n        total: 0\n      });\n      if (product.permeter && product.permeter !== null) {\n        calculationdata.permeter = Number(product.permeter);\n      }\n\n      if (product.perfeet && product.perfeet !== null) {\n        calculationdata.perfeet = Number(product.perfeet);\n      }\n\n      if (product.perinch && product.perinch !== null) {\n        calculationdata.perinch = Number(product.perinch);\n      }\n      calculationArray.push(calculationdata);\n    });\n    console.log(this.state.data.products)\n    let products = this.state.data.products;\n    products[index].subAssembly = subAssembly;\n    products[index].item = item;\n    products[index].calculationArray = calculationArray;\n    console.log(\"item selected is \",item);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, item, subAssembly, products },\n      itemname: 'Item code: ' + '\\n' + itemname,\n      productMaterial2\n    });\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    let productlistvalues = this.state.masteritemlistvalues;\n    console.log(productlistvalues)\n    productlistvalues = productlistvalues.filter((item) =>{\n      return item.masteritemtype.masteritemtypename == 'FinishedGoods'\n    })\n    productlistvalues.map((option, i) => {\n     option['masteritemdescription2'] = option.masteritemshortdescription != '' ?  option.masteritemshortdescription : option.masteritemdescription\n      \n     items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            products: [],\n            subAssembly: []\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggelreload = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  onthicknessChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['thickness'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onQuantityChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantity'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // METER\n  onQuantityChangeMeter = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerMeter'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) / Number(calc.permeter);\n      subAssembly[index]['quantityPerKg'] = kg;\n    }\n\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // KG\n  onQuantityChangeKg = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerKg'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) * Number(calc.permeter);\n      subAssembly[index]['quantityPerMeter'] = kg;\n    }\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onTotalChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['total'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  addItemComp = () => {\n    let products = this.state.data.products;\n    let items = { item: '', quantity: 0, subAssembly: [] };\n    products.push(items);\n    this.setState({\n      ...this.state.data,\n      products\n    });\n  };\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        productiondate: date\n      }\n    });\n  };\n  changeQuantity = (e, index) => {\n    let products = this.state.data.products;\n    products[index].quantity = e.target.value;\n    console.log(products[index])\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, productMaterial,itemname } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Production</ModalHeader>\n              <ModalBody>Production order is generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggelreload}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>\n              Production\n              <Button\n                color='primary'\n                disabled={loading}\n                className='lgn-loader'\n                style={{ float: 'right' }}\n              >\n                Submit\n                {/* {loading} */}\n              </Button>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='productionorderno'>Production No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='productionorderno'\n                      type='text'\n                      id='productionorderno'\n                      value={data.productionorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter production order no'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customerid'>Customer Name</Label>\n                    {/* <AvField\n                      type='select'\n                      name={`customerid`}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    <Select name={`customerid`} classNamePrefix=\"select\" onChange={this.handleChangeCust.bind(this)} styles={customStyles} defaultValue={this.state.customerlistSelect[0]} options={this.state.customerlistSelect} />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='productiondate'>Date</Label>\n                  <DatePicker\n                    autoComplete=\"new-password\"\n                    selected={data.productiondate}\n                    onChange={this.handleChangeDeliveryDate}\n                    className='form-control'\n                    dateFormat='dd/MM/yyyy'\n                    id='productiondate'\n                  />\n                </Col>\n              </Row>\n              {data.products &&\n                data.products.map((item, maninindex) => {\n                  let optionsel = \"\";\n                  let SelVal = {};\n                  if(item.id != undefined) {\n                    if(item.itemshortdescription) {\n                      optionsel = item.itemshortdescription;\n                    }\n                    else {\n                      optionsel = item.itemdescription;\n                    }\n                    SelVal = {\n                      value: item.id._id, label: optionsel\n                    }\n                  }\n                  const itemnameinfo = item.id != undefined ? (\n                    // <AvField\n                    //   type=\"select\"\n                    //   value={values.id._id}\n                    //   name={`selectitem${index}`}\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${maninindex}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, maninindex)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                    ) :\n                    (\n                      // <AvField\n                      //   type=\"select\"\n                      //   name={`selectitem${index}`}\n                      //   value={\n                      //     data.selectedItemlist.id[index]\n                      //   }\n                      //   onChange={e => this.selectitemchange(e, index)}\n                      //   required={true}\n                      // >\n                      //   <option value=\"\">select Item</option>\n                      //   {this.createSelectItems()}\n                      // </AvField>\n                      <Select name={`selectitem${maninindex}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, maninindex)} styles={customStyles} required defaultValue={data.selectedItemlist.id[maninindex]} options={this.state.itemlistSelectedOption} />\n                    )\n                  return (\n                    <div>\n                      <Row>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='item'>Item</Label>\n                          {/* <AvField\n                            type='select'\n                            name='item'\n                          \n                            onChange={e => this.selectitemchange(e, maninindex)}\n                            //required={true}\n                          >\n                            <option value=''>select Item</option>\n                            {this.createSelectItems()}\n                          </AvField> */}\n                          {itemnameinfo}\n                          <div style={{'color':'#707070','fontSize':'12px','fontWeight':'bold'}}>{itemname}</div>\n                        </Col>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='quantity'>Quantity</Label>\n                          <AvField\n                            name='quantity'\n                            type='number'\n                            id='quantity'\n                            value={data.quantity || ' ' || null}\n                            onChange={e => this.changeQuantity(e, maninindex)}\n                          />\n                        </Col>\n                      </Row>\n                      {/* Get table based on selected value */}\n                      {data.products[maninindex].subAssembly.length > 0 && (\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>Sub Assembly</th>\n                              <th>UOM</th>\n                              <th>Thickness</th>\n                              <th>Quantity (in meters)</th>\n                              <th>Quantity (in Kgs)</th>\n                              {/* <th>Total</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data.products[maninindex].subAssembly.map(\n                              (product, index) => {\n                                return (\n                                  <tr>\n                                    <td>{product.name}</td>\n                                    <td>{product.unit}</td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`thickness${index}`}\n                                          type='number'\n                                          id={`thickness${index}`}\n                                          placeholder='thickness'\n                                          onChange={e =>\n                                            this.onthicknessChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In meterts'\n                                          onChange={e =>\n                                            this.onQuantityChangeMeter(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerMeter}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In Kgs'\n                                          onChange={e =>\n                                            this.onQuantityChangeKg(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerKg}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    {/* <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`total${index}`}\n                                          type='number'\n                                          id={`total${index}`}\n                                          placeholder='total'\n                                          onChange={e =>\n                                            this.onTotalChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td> */}\n                                  </tr>\n                                );\n                              }\n                            )}\n                          </tbody>\n                        </Table>\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                    onClick={e => this.addItemComp()}\n                  >\n                    Add item\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    productionlistvalues: state.productionlistvalues,\n    customerlistvalues: state.customerlistvalues,\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductionForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addproduction } from '../../../../actions/Production';\nimport { getproduction } from '../../../../actions/Production';\nimport { getproducts } from '../../../../actions/Product';\nimport ProductionForm from './ProductionForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddProduction extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getproduction();\n    this.props.getproducts();\n  }\n  componentWillReceiveProps() {\n    \n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addproduction(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Production</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProductionForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getproduction,\n    getCustomerList,\n    addproduction,\n    getproducts\n  }\n)(AddProduction);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Modal,\n  Label,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproduction } from '../../../../actions/Production';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nclass ViewProudction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success: false,\n    quantity : '',\n    productiondate:'',\n    description:'',\n    id:'',\n    qtyAvaillength:0,\n    isViewList:false,\n    productionTodayList: [],\n    productionlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getproduction();\n    console.log(this.props);\n\n    if (this.props.productionlistvalues) {\n      let quotationlist = Object.values(this.props.productionlistvalues);\n      //quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n      quotationlist.sort(function(a, b){\n        return parseInt(b.productionorderno) - parseInt(a.productionorderno);\n      });\n      let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            obj['items'].push(subitem.item)\n          })\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n\n        var time = '';\n        if(quotationlist.productiondate) {\n          var created_date = new Date(quotationlist.productiondate);\n\n          var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n          var year = created_date.getFullYear();\n          var month = months[created_date.getMonth()];\n          var date = created_date.getDate();\n          var hour = created_date.getHours();\n          var min = created_date.getMinutes();\n          var sec = created_date.getSeconds();\n          time = date + ',' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\n        }\n        \n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          date: time,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n          \n        };\n      });\n      this.setState({ ...this.state, productionlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.productionlistvalues);\n    quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n    let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            if(parseInt(subitem.quantity) > 0)\n              obj['items'].push(subitem.item)\n\n          })\n        }\n        if(obj['items'].length > 0){\n          obj['items'] = obj['items'].join(\", \")\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n\n        var time = '';\n        if(quotationlist.productiondate) {\n          var created_date = new Date(quotationlist.productiondate);\n\n          var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n          var year = created_date.getFullYear();\n          var month = months[created_date.getMonth()];\n          var date = created_date.getDate();\n          var hour = created_date.getHours();\n          var min = created_date.getMinutes();\n          var sec = created_date.getSeconds();\n          time = date + ',' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\n        }\n\n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          date: time,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n        };\n      });\n    this.setState({ ...this.state, productionlistvalues });\n    this.dataHandler(false);\n  }\n\n  viewTransaction(arr){\n    this.setState({\n      isViewList:true,\n      productionTodayList : arr\n    })\n  }\n  addTransaction(data,totalqty){\n    console.log(data)\n    let usedqty = 0\n    if(data.transactionHistrory && data.transactionHistrory.length > 0){\n      data.transactionHistrory.map((item) =>{\n        usedqty = usedqty + parseInt(item.qty)\n      })\n    }\n    this.setState({success:true,id:data._id,quantity:'',productiondate:'',description:'',qtyAvaillength: totalqty - usedqty},() =>{\n      console.log(this.state.qtyAvaillength)\n    })\n  }\n\n  updateTransaction = () => {\n    // updateproductionqty\n    if(this.state.quantity == '' || this.state.productiondate == ''){\n      window.alert('All fields are manditory.')\n      return\n    }\n    if(parseInt(this.state.quantity) > this.state.qtyAvaillength){\n      window.alert('Quantity should be less than or equal to : ' + this.state.qtyAvaillength)\n      return\n    }\n    console.log(this.state.id)\n    let data = {}\n    data['_id'] = this.state.id\n    data['transactionHistrory'] = [{'qty' : this.state.quantity,\n              'productiondate' : this.state.productiondate,\n              'description' : this.state.description}]\n\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/production/updateproductionqty`, {\n      data\n      })\n      .then(res => {\n          this.toggle();\n          this.props.getproduction();\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggle2 = () => {\n    this.setState({ ...this.state, isViewList: false });\n  };\n  \n  onhandlerChange = e => { \n    this.setState({\n      quantity : e.target.value\n    });\n  };\n\n  onhandlerChange2 = e => { \n    this.setState({\n      description : e.target.value\n    });\n  };\n\n  \n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      productiondate : date\n    });\n  };\n\n  render() {\n    const { loading, count, isViewList,productionlistvalues,success,quantity,productiondate,description,qtyAvaillength,productionTodayList } = this.state;\n    console.log(\"productionlistvalues is \",productionlistvalues);\n    let headerBlock = '',contentBlock = ''\n    if(isViewList){\n      headerBlock = \n      (\n      <div className=\"row meetingspace\">\n        <div className=\"col split1\">Quantity</div>\n        <div className=\"col split1\">Date</div>\n        <div className=\"col split1\">Remarks</div>\n      </div>\n    )\n\n\n    contentBlock = productionTodayList.map((value,index) => {\n    value['description'] = value.description ? value.description : '-'\n    value.productiondate = \n    (new Date(value.productiondate).getDate() < 10 ? ('0' + new Date(value.productiondate).getDate()) : new Date(value.productiondate).getDate()) + '/' +\n    (new Date(value.productiondate).getMonth()+1 < 10 ? ('0' + (new Date(value.productiondate).getMonth()+1) ) : (new Date(value.productiondate).getMonth()+1)) + '/' + new Date(value.productiondate).getFullYear()\n    return (\n      <div key={index} className=\"row meetingspace\">\n        <div className=\"col split2\">{value.qty}</div>\n        <div className=\"col split2\" >{value.productiondate}</div>\n        <div className=\"col split2\" >{value.description}</div>\n\n      </div>\n    )\n  });\n\n  }\n\n\n\n\n    const columnvalue = [\n      {\n        label: 'Production no',\n        field: 'productionorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'item',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Quantity',\n        field: 'quantity',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"View Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      },\n      {\n        label: \"Add Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n\n         {!!isViewList ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={isViewList}\n              toggle={this.toggle2}\n              className={this.props.className}\n            >\n              <ModalHeader toggle2={this.toggle2}>View transaction <br/>\n              \n              </ModalHeader>\n              <ModalBody style={{'margin': '10px'}}>\n                {headerBlock}\n                {contentBlock}\n               \n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle2}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Add transaction <br/>\n              <span style={{ 'fontSize': '14px','fontWeight': 'bold'}}>Note: Available quantity is {qtyAvaillength}</span>\n              </ModalHeader>\n              <ModalBody>\n                \n                 <Label className='small-font-size' for=\"Quantity\">Quantity(*)</Label>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Quantity\" name=\"Quantity\" value={quantity} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n                 \n                  <Label className='small-font-size' for=\"productiondate\">Production Date(*)</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={productiondate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"productiondate\"\n                  />\n\n                 <Label className='small-font-size' for=\"description\">Remarks</Label>\n                  <textarea className=\"form-control\" placeholder=\"Remarks\" name=\"description\" value={description} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange2} ></textarea>\n                 \n\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.updateTransaction}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={productionlistvalues}\n            columnvalue={columnvalue}\n            className=\"productionlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productionlistvalues: state.productionlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproduction }\n)(ViewProudction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./purchaseorder.css\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass PurchaseOrderForm extends React.Component {\n  \n  state = {\n    data: {\n      isEditdone:false,\n      supplierdetail: {\n        id: null,\n        suppliernumber: \"\",\n        suppliername: \"\",\n        supplieraddress1: \"\",\n        supplieraddress2: \"\",\n        suppliercontactlistvalue: [],\n        city: \"\",\n        pincode: \"\",\n        state: \"\",\n        country: \"\",\n        suppliergstnumber: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      ponumber: \"\",\n      refno: \"\",\n      subject: \"\",\n      requestdeliverydate: \"\",\n      suppliercontactid: \"\",\n      values: [\"\"],\n      quotationno: null,\n      currency: \"5d3437e21c9d4400008624b7\",\n      totalvalue: null,\n      gst: null,\n      cgst:'',\n      sgst:'',\n      igst:'',\n      loadingcharge: \"\",\n      weighttons: \"\",\n      transportationcharge: '',\n      scheduledays:'',\n      schedulepayment:''\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:''\n   \n  };\n  \n  componentDidMount(){\n    console.log( Object.keys(this.props.purchaseorderlistvalues))\n    if(this.props.ID != undefined){\n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const supplierdetaillistvalue = Object.values(\n        this.props.supplierdetaillistvalue\n      );\n      const supplierdetaillistvalueobject = this.props.supplierdetaillistvalue;\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n\n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n  \n\n      this.setState({\n        ...this.state,\n        supplierdetaillistvalue,\n        supplierdetaillistvalueobject,\n        masteritemlistvalues,\n        itemlistSelectedOption: newArraySet,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      },()=>{\n        this.getPODetails(this.props.ID)\n      });\n    }\n    else{\n      \n\n      if(Object.keys(this.props.purchaseorderlistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder//getpurchaseorderrlist`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n     \n            const purchaseorderlistlength =\n\n            res.data.purchaseorderlist.purchaseorderlistdata.length > 0 ? res.data.purchaseorderlist.purchaseorderlistdata.length + 53 : 74;\n      \n            let ponumber = (1 + purchaseorderlistlength).toString();\n       \n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                ponumber\n              }\n            });\n          \n            \n          }\n        \n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n    }\n\n  }\n\n  getPODetails(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorder/${id}`)\n    .then(res => {\n\n      this.dataHandler(false)\n      if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n        let founddata = res.data.purchaseorderlist.purchaseorderlistdata;\n        let podetail = {...this.state.data}\n \n         podetail.supplierdetail.suppliername = founddata[0].suppliername;\n         podetail.supplierdetail.supplierid = founddata[0].supplierid;\n        \n        const newState = Object.assign({}, this.state);\n        newState.data.ponumber = founddata[0].ponumber;\n        newState.data.refno = founddata[0].referenceno;\n        newState.data.values = founddata[0].addeditemlist;\n        newState.data.subject = founddata[0].subject;\n        newState.data.requestdeliverydate = new Date(founddata[0].requestdeliverydate);\n        newState.data.currency = founddata[0].currencyid;\n        newState.data.totalvalue =  founddata[0].totalvalue;\n        newState.data.gst = '0';\n        newState.data.cgst = founddata[0].cgst;\n        newState.data.sgst = founddata[0].sgst;\n        newState.data.igst = founddata[0].igst;\n        newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n        newState.data.transportationcharge = founddata[0].transportationcharge ? founddata[0].transportationcharge : \"\";\n        newState.data.loadingcharge = founddata[0].loadingcharge != undefined && founddata[0].loadingcharge != null ? founddata[0].loadingcharge : '';\n        newState.data.weighttons = founddata[0].weighttons != undefined && founddata[0].weighttons != null ? founddata[0].weighttons : '';\n        newState.data.schedulepayment = founddata[0].schedulepayment ? founddata[0].schedulepayment : \"\";\n        \n        newState.data.suppliercontactid = founddata[0].suppliercontactid;\n        if(founddata[0].addeditemlist.length > 0){\n          \n          for(var i=0;i<founddata[0].addeditemlist.length;i++){\n            newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n            newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom)\n            newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n            newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n            newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n            newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n            newState.data.selectedItemlist.itemlocation.push(founddata[0].addeditemlist[i].itemlocation)\n          }\n        }\n\n\n        this.setState(newState);\n      \n        console.log(this.state)\n      }\n      else{\n        this.setState({count:0})\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    \n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const purchaseorderlistlength =\n      purchaseorderlist.length > 0 ? purchaseorderlist.length + 53 : 74;\n\n    let ponumber = (1 + purchaseorderlistlength).toString();\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n    if(this.props.ID != undefined){\n      ponumber = this.state.data.ponumber\n    }\n    this.setState({\n      ...this.state,\n      supplierdetaillistvalue,\n      supplierdetaillistvalueobject,\n      masteritemlistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        ponumber\n      }\n    });\n\n    if(this.state.data.supplierdetail.supplierid && this.state.data.supplierdetail.supplierid != '' && this.props.ID != undefined && !this.state.isEditdone){\n        this.setState({isEditdone:true},()=>{\n          this.handleChange2(this.state.data.supplierdetail.supplierid)\n        })\n    }\n    //console.log(props.supplierdetaillistvalue)\n    \n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    \n    const selected_id = e.target.value;\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        supplierdetail\n      }\n    });\n\n  };\n\n  handleChange2 = e => {\n    const selected_id = e\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    console.log(supplierdetail)\n    \n    if(supplierdetail != undefined){\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          supplierdetail\n        }\n      });\n    }\n \n    \n\n  };\n\n  totalValue = () => {\n    // const { totalcost } = this.state.data.selectedItemlist;\n    // if (totalcost.length > 0) {\n    //   let totalvalue = totalcost\n    //     .map((value, i) => {\n    //       if (value) {\n    //         return parseFloat(value);\n    //       } else {\n    //         return 0;\n    //       }\n    //     })\n    //     .reduce((a, b) => {\n    //       return a + b;\n    //     });\n    //   // Check if tax exists and handle tax  \n    //   let {gst} = this.state.data;\n    //   if(gst !== null) {\n    //     gst = parseFloat(gst).toFixed(2);\n    //   let per = (gst * totalvalue) / 100;\n    //   totalvalue = parseFloat(Number(per)+Number(totalvalue)).toFixed(2);\n    //   }\n    //   this.setState({\n    //     ...this.state.data,\n    //     data: {\n    //       ...this.state.data,\n    //       totalvalue\n    //     }\n    //   });\n    // }\n    this.calculatePercentageAmount()\n  };\n\n\n\n  calculatePercentageAmount = () => {\n\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n\n            // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(totalvalue)\n      ? Number(parseFloat(totalvalue).toFixed(2))\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n      console.log(cgst)\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['totalvalue']: grandtotal\n      }\n    });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        console.log(selected_item)\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        //  selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //                                                                                           : selected_item.masteritemshortdescription\n        selectedItemlist.itemdescription[index] = selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },() =>{\n          this.totalValue();\n        });\n\n      }\n    \n      }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  createSelectSupplier = () => {\n    let items = [];\n    const supplierdetaillistvalue = this.state.supplierdetaillistvalue;\n    supplierdetaillistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.suppliername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      this.totalValue()\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectSupplierContact = () => {\n    let items = [];\n    const suppliercontactlistvalues = this.state.data.supplierdetail\n      .suppliercontactlistvalue;\n    suppliercontactlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option._id}>\n          {option.suppliercontactname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    },()=>{\n      console.log(this.state.data.values)\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    console.log(values)\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    },()=>{\n      this.totalValue()\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || \"\";\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  onChangePO = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const {\n      values,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      totalvalue,\n      ponumber,\n      loadingcharge,\n      weighttons,\n      transportationcharge,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const data = {\n      supplierdetail,\n      AddedIteminfo,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      ponumber,\n      totalvalue,\n      loadingcharge,\n      weighttons,\n      transportationcharge,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        \n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order edited successfully' });\n          }\n         \n      \n        \n   \n      })\n      .catch(err => {\n        \n          this.setState({ errors: err.response.data.errors, loading: false });\n        \n        \n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  \n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Purchase Order</ModalHeader>\n              <ModalBody>{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Purchase Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">PO Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"ponumber\"\n                      type=\"number\"\n                      id=\"ponumber\"\n  \n                      value={data.ponumber || null}\n                      onChange={this.onChangePO}\n                      \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter PO Number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"refno\">Reference No </Label>\n                   \n                    <AvField\n                      name=\"refno\"\n                      type=\"text\"\n                      id=\"refno\"\n                      value={data.refno}\n                      onChange={e => this.onhandlerChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"totalcost\">Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"currency\">Currency</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`currency`}\n                      required={true}\n                      value={data.currency || null}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select currency</option>\n                      {this.createSelectCurrencyItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"quotationno\">Request Delivery Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.requestdeliverydate}\n                    required={true}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"schedulepayment\">Payment Schedule</Label>\n                  <AvField\n                      name=\"schedulepayment\"\n                      type=\"text\"\n                      id=\"schedulepayment\"\n                      value={data.schedulepayment || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                \n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`suppliername`}\n                      value={data.supplierdetail.supplierid}\n                      //required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select supplier name</option>\n                      {this.createSelectSupplier()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliernumber\"\n                      type=\"number\"\n                      readOnly\n                      id=\"suppliernumber\"\n                      value={data.supplierdetail.suppliernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier Number\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GST </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliergstnumber\"\n                      type=\"text\"\n                      readOnly\n                      id=\"suppliergstnumber\"\n                      value={data.supplierdetail.suppliergstnumber}\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier GST Number\"\n                        },\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliercontactinfo\">\n                      Supplier Contact Name\n                    </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      \n                      name={`suppliercontactid`}\n                      value={data.suppliercontactid}\n                      required={true}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select contact</option>\n                      {this.createSelectSupplierContact()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"supplieraddress\">Supplier Address</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"supplieraddress\"\n                      type=\"text\"\n                      id=\"supplieraddress\"\n                      readOnly\n                      value={\n                        data.supplierdetail.supplieraddress1 ||\n                        \"\" + \" \" + data.supplierdetail.supplieraddress2 ||\n                        \"\" + \" \" + data.supplierdetail.city ||\n                        \"\" + \" \" + data.supplierdetail.state ||\n                        \"\" + \" \" + data.supplierdetail.country ||\n                        \"\" + \" \" + data.supplierdetail.pincode ||\n                        \"\"\n                      }\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                  <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>  \n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                \n                    <AvField\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                 \n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"cgst\">CGST(%)</Label>\n                    \n                    <AvField\n                      name=\"cgst\"\n                      type=\"text\"\n                      id=\"cgst\"\n                      value={data.cgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"sgst\">SGST(%)</Label>\n                    \n                    <AvField\n                      name=\"sgst\"\n                      type=\"text\"\n                      id=\"sgst\"\n                      value={data.sgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"igst\">IGST(%)</Label>\n                    \n                    <AvField\n                      name=\"igst\"\n                      type=\"text\"\n                      id=\"igst\"\n                      value={data.igst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transportationcharge\">Transportation charges</Label>\n                    \n                    <AvField\n                      name=\"transportationcharge\"\n                      type=\"number\"\n                      id=\"transportationcharge\"\n                      value={data.transportationcharge}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"loadingcharge\">Loading and Handling charges</Label>\n                    \n                    <AvField\n                      name=\"loadingcharge\"\n                      type=\"number\"\n                      id=\"loadingcharge\"\n                      value={data.loadingcharge}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"weighttons\">Total Weight(in tons)</Label>\n                    \n                    <AvField\n                      name=\"weighttons\"\n                      type=\"number\"\n                      id=\"weighttons\"\n                      value={data.weighttons}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className=\"purchaseorder-item-row\">\n                {data.values.map((values, index) => {\n                  \n                  let optionsel = \"\";\n                  let SelVal = {};\n                  if(values.id != undefined) {\n                    if(values.itemshortdescription) {\n                      optionsel = values.itemshortdescription;\n                    }\n                    else {\n                      optionsel = values.itemdescription;\n                    }\n                    SelVal = {\n                      value: values.id._id, label: optionsel\n                    }\n                  }\n                  const itemnameinfo = values.id != undefined ? (\n                    // <AvField\n                    //   type=\"select\"\n                    //   value={values.id._id}\n                    //   name={`selectitem${index}`}\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                    ) :\n                    (\n                      // <AvField\n                      //   type=\"select\"\n                      //   name={`selectitem${index}`}\n                      //   value={\n                      //     data.selectedItemlist.id[index]\n                      //   }\n                      //   onChange={e => this.selectitemchange(e, index)}\n                      //   required={true}\n                      // >\n                      //   <option value=\"\">select Item</option>\n                      //   {this.createSelectItems()}\n                      // </AvField>\n                      <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={values.id} options={this.state.itemlistSelectedOption} />\n                    )\n                  \n        // const itemnameinfo = values.id != undefined ? (   \n        //   <AvField\n        //   type=\"select\"\n        //   value={values.id}\n        //   name={`selectitem${index}`}\n        //   onChange={e => this.selectitemchange(e, index)}\n        //   required={true}\n        // >\n        //   <option value=\"\">select Item</option>\n        //   {this.createSelectItems()}\n        // </AvField>\n  \n        // ) : \n        //   (\n        //        <AvField\n        //        type=\"select\"\n        //        name={`selectitem${index}`}\n        //        value={\n        //         data.selectedItemlist.id[index]\n        //       }\n        //        onChange={e => this.selectitemchange(e, index)}\n        //        required={true}\n        //      >\n        //        <option value=\"\">select Item</option>\n        //        {this.createSelectItems()}\n        //      </AvField>\n             \n        //   )\n\n\n\n                  return (\n                    <div key={index}>\n                      <div className=\"purchaseorder-table\">\n                      \n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for=\"selectitem\">Item Code</Label>\n                              <span className=\"required-label\">*</span>\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type=\"text\"\n                                readOnly\n                                id=\"masteritemdescription\"\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      \"Please enter Item Description\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                style={{ width: \"150px\" }}\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] \n                                }\n                              >\n                                <option value=\"\">select</option>\n                                {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] \n                                }\n                              >\n                                <option value=\"\">uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`location${index}`}>\n                                Delivery Location\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                name={`location${index}`}\n                                onChange={e => this.locationChange(e, index)}\n                                \n                                 value={data.selectedItemlist.itemlocation[index]}\n                              >\n                                <option value=\"\">select location</option>\n                                {this.createSelectLocationItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                name={`costperunit${index}`}\n                                type=\"number\"\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index] \n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage:\n                                      \"Please enter valid costperunit\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type=\"number\"\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: \"Please enter Item Quantity\"\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage: \"Please enter valid quantity\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                name={`totalcost${index}`}\n                                type=\"number\"\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : \" \"\n                                }\n                                onChange={e => this.onChange(e, index)}\n                                // validate={{\n                                //   minLength: {\n                                //     value: 1,\n                                //     errorMessage: \"Total Cost value is required\"\n                                //   }\n                                // }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type=\"button\"\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: \"30px\" }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PurchaseOrderForm);\n","import axios from \"axios\";\n\nexport default {\n  suppliercontact: {\n    addSupplierContact: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/addsuppliercontact`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.supplierContactdata;\n        });\n    },\n    getSupplierContact: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/getsuppliercontact`\n        )\n        .then(res => {\n          return res.data.suppliercontactlist;\n        });\n    }\n  },\n  supplierdetail: {\n    addsupplierdetails: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/addsupplierdetail`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getSupplierDetails: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/getSupplierdetail`\n        )\n        .then(res => {\n          return res.data.supplierdetaillist;\n        });\n    },\n    updateSupplierContact: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/updateSupplierdetail?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/supplierapi\";\nimport { SUPPLIER_CONTACT_LIST, SUPPLIER_DETAIL_LIST } from \"../Services/types\";\nimport {\n  supplierContactListSchema,\n  supplierDetailListSchema\n} from \"../Schemas/schemas\";\n\nexport const suppplierContactListFetched = suppliercontactlistvalue => {\n  return {\n    type: SUPPLIER_CONTACT_LIST,\n    suppliercontactlistvalue\n  };\n};\n\nexport const suppplierDetailListFetched = supplierdetaillistvalue => {\n  return {\n    type: SUPPLIER_DETAIL_LIST,\n    supplierdetaillistvalue\n  };\n};\nexport const addSupplierContact = data => {\n  return dispatch => {\n    return api.suppliercontact.addSupplierContact(data);\n  };\n};\n\nexport const addSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.addsupplierdetails(data);\n  };\n};\n\nexport const getSupplierContact = () => {\n  return dispatch => {\n    return api.suppliercontact\n      .getSupplierContact()\n      .then(suppliercontactlist => {\n        const suppliercontactlistvalue =\n          suppliercontactlist.suppliercontactlistdata;\n        return dispatch(\n          suppplierContactListFetched(\n            normalize(suppliercontactlistvalue, [supplierContactListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const getSupplierDetails = () => {\n  return dispatch => {\n    return api.supplierdetail.getSupplierDetails().then(supplierdetaillist => {\n      const supplierdetaillistvalue = supplierdetaillist.supplierdetaillistdata;\n      return dispatch(\n        suppplierDetailListFetched(\n          normalize(supplierdetaillistvalue, [supplierDetailListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const updateSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.updateSupplierContact(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  currency: {\n    getCurrencyList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/currency/getcurrency`)\n        .then(res => {\n          return res.data.currencylist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/currency\";\nimport { CURRENCY_LIST } from \"../Services/types\";\nimport { currencyListSchema } from \"../Schemas/schemas\";\n\nfunction currencyListFetched(currencylist) {\n  return {\n    type: CURRENCY_LIST,\n    currencylist\n  };\n}\n\nexport const getCurrencyList = () => {\n  return dispatch => {\n    return api.currency.getCurrencyList().then(currencylist => {\n      const currencylistvalue = currencylist.currencydata;\n      return dispatch(\n        currencyListFetched(normalize(currencylistvalue, [currencyListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport PurchaseOrderForm from \"./PurchaseOrderForm/PurchaseOrderForm\";\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  addPurchaseOrder,\n  updatePurchaseOrder,\n  getPurchaseOrder,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport axios from \"axios\";\nclass purchaseOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n    \n    \n  }\n  submit = data => {\n\n    this.dataHandler(true);\n    if(this.props.match.params.id != undefined){\n      \n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatePurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n      \n      // axios\n      // .post(`${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,{\n      //   data\n      // })\n      // .then(res => {\n  \n      //   this.dataHandler(false)\n      //   if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n  \n      //   }\n      //   else{\n      //     this.setState({count:0})\n      //   }\n      // },\n      // error =>{\n      //   this.dataHandler(false)\n      //   this.setState({ success: false, message:'Server error.' });\n      // });\n\n      \n    }\n    else{\n      return this.props\n      .addPurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/view_purchaseorderlist\">Purchase Order</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <PurchaseOrderForm submit={this.submit} ID={ID} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    addPurchaseOrder,\n    updatePurchaseOrder,\n    getPurchaseOrder,\n    getMasterItemTypes\n  }\n)(purchaseOrder);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getPurchaseOrder } from \"../../../actions/Transaction\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\n\nclass ViewPurchaseOrderlist extends React.Component {\n  state = {\n    loading: true,\n    purchaseorderlistvalues: [],\n    count: 0\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  componentDidMount() {\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n\n    this.props.getPurchaseOrder();\n    \n    let purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.supplierstate +\n            \"\" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    // this.dataHandler(false);\n  }\n\n  componentWillReceiveProps(props) {\n    let purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    console.log(purchaseorderlist)\n    //purchaseorderlist= purchaseorderlist.sort((a, b) => b.ponumber.toString().toLowerCase().localeCompare(a.ponumber.toString().toLowerCase()));\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\" style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updatePO(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/view_purchaseorderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updatePO = id => {\n    let path = `/purchase_order_update/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { count, purchaseorderlistvalues, loading } = this.state;\n    const columnvalue = [\n\n      {\n        label: \"PO Number\",\n        field: \"ponumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Reference Number\",\n        field: \"referenceno\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Address\",\n        field: \"address\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Action\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Purchase Order List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {loading ? <CustomLoader /> : null}\n          <div className=\"container mg-20\">\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={purchaseorderlistvalues}\n                className=\"viewpurchaseorder\"\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    getMasterItemTypes,\n    getPurchaseOrder }\n)(ViewPurchaseOrderlist);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport React from 'react';\nimport client from '../../../Images/client.png';\nimport logo from '../../../Images/logo.png';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: '6px',\n    paddingRight: 20,\n    backgroundColor: 'white'\n  },\n  columnSection: {\n    paddingRight: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  padd6: {\n    paddingTop: '6px',\n    paddingBottom: '6px'\n  },\n  padding2: {\n    padding: 5\n  },\n\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: '100%',\n    paddingTop: 20,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  headerwidthNew: {\n    width: 140,\n    padding: 20\n  },\n  headerwidthdate: {\n    fontSize: 12,\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 210,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  fontsize18bold: {\n    fontSize: 10,\n    fontWeight: 900,\n    paddingBottom: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, textAlign: 'left', paddingLeft: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ purchaseorderlistvalue, data_cond }) => {\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++, j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let formatDate = function (date) {\n    date = new Date(date);\n    const currentMonth = date.getMonth() + 1;\n    const monthString = currentMonth >= 10 ? currentMonth : `0${currentMonth}`;\n    const currentDate = date.getDate();\n    const dateString = currentDate >= 10 ? currentDate : `0${currentDate}`;\n    return `${date.getFullYear()}-${monthString}-${currentDate}`;\n}\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n  const ponumber = purchaseorderlistvalue.ponumber.toString();\n  const financialYear = purchaseorderlistvalue.financialyear.toString();\n  const data = purchaseorderlistvalue.addeditemlist;\n  let totaleachitem = 0\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n\n\n\n  let dateNew = formatDate(purchaseorderlistvalue.created_at);\n  let totalrs = purchaseorderlistvalue.totalvalue\n    ? purchaseorderlistvalue.totalvalue\n    : '';\n  RsPaise(totalrs)\n  const tax = purchaseorderlistvalue.cgst ? purchaseorderlistvalue.cgst : '';\n  let cgst = purchaseorderlistvalue.cgst && purchaseorderlistvalue.cgst != '' ? purchaseorderlistvalue.cgst : 0\n  cgst = parseFloat(cgst)\n  let cgstval = parseFloat(totaleachitem) * (cgst / 100)\n  cgstval = parseFloat(cgstval)\n  cgstval = cgstval.toFixed(2)\n\n  let sgst = purchaseorderlistvalue.sgst && purchaseorderlistvalue.sgst != '' ? purchaseorderlistvalue.sgst : 0\n  sgst = parseFloat(sgst)\n  let sgstval = parseFloat(totaleachitem) * (sgst / 100)\n  sgstval = parseFloat(sgstval)\n  sgstval = sgstval.toFixed(2)\n\n  let igst = purchaseorderlistvalue.igst && purchaseorderlistvalue.igst != '' ? purchaseorderlistvalue.igst : 0\n  igst = parseFloat(igst)\n  let igstval = parseFloat(totaleachitem) * (igst / 100)\n  igstval = parseFloat(igstval)\n  igstval = igstval.toFixed(2)\n\n  let transportationcharge = purchaseorderlistvalue.transportationcharge != '' && purchaseorderlistvalue.transportationcharge != null ? parseFloat(purchaseorderlistvalue.transportationcharge) : 0\n  transportationcharge = transportationcharge.toFixed(2)\n\n  const weighttons = purchaseorderlistvalue.weighttons ? purchaseorderlistvalue.weighttons : '';\n  const loadingcharge = purchaseorderlistvalue.loadingcharge ? purchaseorderlistvalue.loadingcharge : 0;\n\n  console.log(purchaseorderlistvalue.scheduledays)\n\n  let scheduledays = purchaseorderlistvalue.scheduledays ? purchaseorderlistvalue.scheduledays : ''\n  let schedulepayment = purchaseorderlistvalue.schedulepayment ? purchaseorderlistvalue.schedulepayment : ''\n  const taxpercentage = purchaseorderlistvalue.gst\n    ? purchaseorderlistvalue.gst / 100\n    : '';\n  // const grandtotal =  totalrs+igstval+cgstval+sgstval + transportationcharge;\n  let grandtotal = parseFloat(totalrs) + parseFloat(transportationcharge) + parseFloat(loadingcharge);\n  grandtotal = grandtotal.toFixed(2);\n  RsPaise(grandtotal);\n  const selectecontactlist = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactname\n    : '';\n  const suppliercontactnumber = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactnumber\n    : '';\n  const cond_data = data_cond;\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          {/* <Text style={styles.logo}></Text> */}\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works:</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            visit us: www.pondhan.com\n          </Text>\n        </View> */}\n        <Text style={styles.headerwidth}><Header>Purchase Order</Header>\n\n\n\n        </Text>\n\n        <View style={[styles.section, { paddingBottom: 15, marginTop: 8 }]}>\n\n          <Text style={styles.refstyle}>\n            PO No. PSPL/{financialYear}/{ponumber}\n          </Text>\n          {/* <Text style={styles.refstyle}>\n            Ref No.{purchaseorderlistvalue.referenceno}\n          </Text> */}\n          <Text style={styles.headerwidthdate}>\n            Date:{dateNew}\n          </Text>\n        </View>\n\n        <View style={styles.columnSection}>\n          <View>\n            <View>\n              <Text style={styles.fontsize18bold}>Vendor Address:</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>M/S {purchaseorderlistvalue.suppliername}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.supplieraddress1}{'\\n'}\n                {purchaseorderlistvalue.supplieraddress2}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.suppliercity}{' '}\n                {purchaseorderlistvalue.supplierstate}{' '}\n                {purchaseorderlistvalue.supplierpincode}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>{purchaseorderlistvalue.suppliercountry}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>Mobile: {suppliercontactnumber}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>GSTIN No: {purchaseorderlistvalue.suppliergstnumber}</Text>\n            </View>\n          </View>\n          <View>\n            <Text style={styles.fontsize18}>Billing & Delivery Address: {'\\n'}{'\\n'}\n              Pondhan Scaffolding Pvt Ltd.{'\\n'}\n              Plot No : 40&41, Rd. No 5{'\\n'}\n              3rd Phase, KIADB- Obadenahalli{'\\n'}\n              Industrial Area, Doddabalapura,{'\\n'}\n              Bangalore Rural- 561203{'\\n'}\n              GSTIN No : 29AAGCP4018E1ZJ{'\\n'}\n              Contact Number : 8971769150 / 9900069150\n\n            </Text>\n          </View>\n        </View>\n        <View >\n          <Text style={styles.kindattend}>Kind Attn:{selectecontactlist}</Text>\n        </View>\n\n        <View >\n          <Text style={styles.kindattend}>{'\\n'}</Text>\n        </View>\n        <View>\n          <Text style={styles.main}>Dear Sir,</Text>\n        </View>\n        <View>\n          <Text style={[styles.main, styles.padd6]}>\n            With ref to the discussions we had with you, we are pleased to place our order for the below mentioned\n            material as per the rates quoted by you and as per the T&C given below. ( Ref No ({purchaseorderlistvalue.referenceno}))\n          </Text>\n        </View>\n        <Table style={(styles.section, styles.padding)} data={data}>\n          <TableHeader textAlign={'center'}>\n            <TableCell weighting={0.08}>\n              <Text style={styles.headerfont}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.headerfont}>Material Description</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Rate</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n\n              weighting={0.08}\n              getContent={r => <Small>{r.slno}</Small>}\n            />\n            <DataTableCell\n              style={{ maxWidth: 200, wordWrap: 'break-word' }}\n              weighting={0.6}\n              getContent={r => <Description>{r.itemname}</Description>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.itemdescription}</Small>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Total.</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>CGST@{cgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{cgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>SGST@{sgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{sgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>IGST@{igst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{igstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Transportation Charge</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{transportationcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Loading And Handling Charges for {weighttons}tons</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{loadingcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>\n                {grandtotal}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n\n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n                {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View> */}\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}>Terms & conditions:</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>1. Payment Schedule: {schedulepayment} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>2. Delivery Schedule: {scheduledays} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            3. Unloading : Exclusive . (M/S Pondhan’s Scope)\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            4. Painting of material : If applicable\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            5. The weight mentioned above will be subject to toleranc of +/-\n            0.5%. Difference in weight beyond tolerance limit will not be\n            accepted and any shortfall in weight will be deducted from your\n            Invoice as applicable.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            6. All material shall be as per IS standard and acceptable quality.\n            You will take rejected material back at your cost.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            7. Weighing slip shall be sent along with each supply.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            8. Please specify the order No on challan & Bills.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            9. All your bills must contain our PO number, receipt along with the\n            bill, failing which the same will not be passed for the payment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            10. In the event you fail to mention GST number & HSN code of\n            purchaser and seller on the Invoice, the GST component will be\n            released only after the compliance of the same. (mandatory as per\n            the provision of GST ACT.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            11. Please ensure your GST Invoice is submitted to us immediately\n            after supply of materials, which should contain our GST number also.\n            Our GST no is : 29AAGCP4018E1ZJ & PAN is AAGCP4018E.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            12. We will recover the GST amount in case of mismatch of GST credit\n            with the GST return filed by the vendor.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            13. Above price is inclusive of loading but excludes transportation\n            charges & unloading comes under the perview of Pondhan Scaffolding\n            Pvt Ltd.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            14. The Transport Vehicle must have fitness certificate, emission\n            certificate, Inscurance, RC documents and all statutory vehicle\n            documents & Driver should have valid driving Liscenceas well as\n            driver alongwith unloaders compulsory to wear safety helmets,\n            reflection jackets and Shoes also.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            15. Special Terms : Relevant Eway bill has to be attached alongwith\n            each and every consignment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            16. Special Note : Relevant manufacturer test certificate has to be\n            submittedalongwith the material. (if applicable).\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            17. Special Note : Please ensure to put up your signature alongwith\n            your company seal, on TAX INVOICE without fail.\n          </Text>\n        </View>\n        <View >\n          <Text>{'\\n'}</Text>\n        </View>\n\n        <View>\n          <Text style={styles.main}>Note: {purchaseorderlistvalue.subject}</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            Kindly sign and return the duplicate copy of this PO as a token of\n            acceptance. {'\\n'} Thanking you, {'\\n'} {'\\n'} For Pondhan\n            Scaffolding Pvt Ltd. {'\\n'} {'\\n'} Authorised Signatory {'\\n'}\n          </Text>\n        </View>\n        <View style={styles.row}>\n          <Text style={styles.main}>Prepared By:</Text>\n          <Text style={styles.main}>Checked By:</Text>\n        </View>\n\n        <View>\n          <Text\n            style={[styles.main, { color: 'red' }]}\n          >\n            {'\\n'} {'\\n'}\n            Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getSupplierDetails } from '../../../actions/Supplier';\nimport { getPurchaseOrder } from '../../../actions/Transaction';\nimport logo from '../../../Images/logo.png';\nimport MyDocument from './Component';\nimport './ViewPurchaseOrder.scss';\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    purchaseorderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getSupplierDetails();\n    const purchaseorderid = this.props.match.params.id;\n    const purchaseorderlistvalues = this.props.purchaseorderlistvalues[\n      purchaseorderid\n    ];\n    console.log(purchaseorderlistvalues)\n    purchaseorderlistvalues.requestdeliverydate = moment(\n      purchaseorderlistvalues.requestdeliverydate\n    ).format('DD MMM, YYYY');\n    purchaseorderlistvalues.addeditemlist = purchaseorderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          itemdescription: itemlist.quantity\n            ? itemlist.quantity.toString()\n            : '',\n          quantity: itemlist.costperunit ? itemlist.costperunit.toString() : '',\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : ''\n        };\n      }\n    );\n    const supplierid = purchaseorderlistvalues.supplierid;\n    const suppliercontactid = purchaseorderlistvalues.suppliercontactid;\n    const supplierlistvalue = this.props.supplierdetaillistvalue[supplierid];\n    const selectedcontact = supplierlistvalue.suppliercontactlistvalue.filter(\n      contactid => {\n        if (contactid._id == suppliercontactid) {\n          return contactid;\n        }\n      }\n    );\n    console.log('__SELECTED_CONTACT_LIST____');\n    console.log(selectedcontact);\n    purchaseorderlistvalues.selectedcontactlist = selectedcontact;\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          purchaseorderlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          purchaseorderlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        purchaseorderlistvalues.financialyear = \"2020-21\";\n      }\n    );\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        purchaseorderlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/view_purchaseorderlist');\n          }, 300);\n        });\n      \n      }\n    } else {\n    }\n  }\n\n  render() {\n    //const link = \"blob:http://localhost:3000/0ef925bb-e930-4ea4-b861-2621aa6447ad\"\n\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                purchaseorderlistvalue={this.state.purchaseorderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getPurchaseOrder, getSupplierDetails }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport client from '../../../../../Images/client.png';\nimport CustomLoader from \"../../../../../Components/loader/loader\";\nclass QuotationForm extends React.Component {\n\n  state = {\n    customerID: null,\n    isRemovedCalled: false,\n    isVisible: true,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: \"\",\n        customernumber: \"\",\n        customergstnumber: \"\",\n        customercontactnumber: \"\",\n        customeraddress1: \"\",\n        customeraddress2: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\",\n        pincode: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemimage: [],\n        itemsecondimage: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemdiscountamount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      quotationnumber: null,\n      subject: \"\",\n      gst: null,\n      tcs: '',\n      tcsamount: '',\n      user_email: '',\n      totalvalue: \"\",\n      values: [],\n      tcharge: \"\",\n      transportationgst: \"\",\n      transitinsurance: \"\",\n      ws: \"\",\n      loadingcharge: \"\",\n      weighttons: \"\",\n      scheduledays: \"\",\n      date: new Date()\n    },\n    tcshecked: \"false\",\n    errors: {},\n    customerobjects: {},\n    user: {},\n    customerlistvalues: [],\n    selectedCustomerID: '',\n    selectedCustomerName: '',\n    uom: [],\n    customerlistSelect: [],\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: true,\n    success: false,\n    visible: false\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getQuotationDetails(id) {\n    this.dataHandler(true)\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/quotation/getsinglequotation/${id}`)\n      .then(res => {\n\n\n        if (res.data.quotationlist.quotationdata.length > 0) {\n          let founddata = res.data.quotationlist.quotationdata;\n\n          const newState = Object.assign({}, this.state);\n          newState.data.customerdetail.id = founddata[0].customerid;\n\n          newState.data.values = founddata[0].addeditemlist;\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n\n\n          newState.data.subject = founddata[0].subject;\n          newState.data.date = new Date(founddata[0].date);\n          newState.data.quotationnumber = founddata[0].quotationnumber;\n          localStorage.setItem('QTno', founddata[0].quotationnumber)\n          newState.data.totalvalue = founddata[0].totalvalue;\n          newState.data.tcs = founddata[0].tcs;\n          newState.data.tcsamount = founddata[0].tcsamount;\n          if (newState.data.tcs != '' && newState.data.tcs != null) {\n            newState.tcshecked = \"true\";\n          }\n          newState.data.gst = founddata[0].tax;\n          newState.data.ws = founddata[0].ws != undefined && founddata[0].ws != null ? founddata[0].ws : '';\n          newState.data.tcharge = founddata[0].tcharge != undefined && founddata[0].tcharge != null ? founddata[0].tcharge : '';\n          newState.data.transportationgst = founddata[0].transportationgst != undefined && founddata[0].transportationgst != null ? founddata[0].transportationgst : '';\n\n          newState.data.transitinsurance = founddata[0].transitinsurance != undefined && founddata[0].transitinsurance != null ? founddata[0].transitinsurance : '';\n\n          newState.data.loadingcharge = founddata[0].loadingcharge != undefined && founddata[0].loadingcharge != null ? founddata[0].loadingcharge : '';\n          newState.data.weighttons = founddata[0].weighttons != undefined && founddata[0].weighttons != null ? founddata[0].weighttons : '';\n          newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].itemdiscountamount = founddata[0].addeditemlist[i].itemdiscountamount == null || founddata[0].addeditemlist[i].itemdiscountamount == '' ?\n                founddata[0].addeditemlist[i].itemdiscountamount = 0 : founddata[0].addeditemlist[i].itemdiscountamount\n              founddata[0].addeditemlist[i].itemdiscountamount = (founddata[0].addeditemlist[i].itemdiscountamount).toString()\n\n\n\n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if (founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n              newState.data.selectedItemlist.itemimage.push(founddata[0].addeditemlist[i].itemimage);\n              newState.data.selectedItemlist.itemsecondimage.push(founddata[0].addeditemlist[i].itemsecondimage);\n              newState.data.selectedItemlist.itemdiscountamount.push(founddata[0].addeditemlist[i].itemdiscountamount)\n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.ID != undefined) {\n      this.getQuotationDetails(this.props.ID)\n    }\n    else {\n      setTimeout(() => {\n        this.dataHandler(false)\n      }, 100)\n      // quotation/getquotation\n    }\n\n    const quotationlistvalues = Object.keys(this.props.quotationlistvalues);\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const user = this.props.user;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n\n\n    if (this.props.ID == undefined) {\n\n      let quotationnumber = '';\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 17389 + quotationlistvalues.length : 18000;\n      this.setState({\n        data: {\n          ...this.state.data,\n          quotationnumber\n        }\n      })\n\n    }\n    // else{\n    //   alert(this.state.data.quotationnumber)\n    // }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom,\n      user\n    });\n\n    //this.dataHandler(false)\n  }\n\n  async componentWillReceiveProps(props) {\n    const quotationlistvalues = Object.keys(props.quotationlistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const user = this.props.user;\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n    let quotationnumber = ''\n    if (this.props.ID == undefined) {\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 17389 + quotationlistvalues.length : 18000;\n    }\n\n    this.dataHandler(true);\n    await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/quotation/getquotno`)\n      .then(res => {\n        if (res.data.quoteno) {\n          quotationnumber = parseInt(res.data.quoteno);\n        }\n      },\n        error => {\n          this.setState({ loading: false });\n        });\n\n    this.dataHandler(false);\n    let arraySet = [];\n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      if (option.masteritemtype.masteritemtypename == \"FinishedGoods\") {\n        let name = \"\";\n        if (option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      }\n    });\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemtypelistvaluesobject,\n      customerlistSelect: arraySet,\n      uom,\n      data: {\n        ...this.state.data,\n        quotationnumber,\n        user_email: user.email\n      }\n    });\n  }\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      if (name === 'gst') {\n        this.totalValue();\n      }\n    });\n  };\n\n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onSubjectHandler = e => {\n\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      console.log(this.state.data)\n    });\n  };\n  onhandletcsChange = e => {\n    console.log(\"tcs value is\", e.target.value);\n    if (e.target.value == \"false\") {\n      this.setState(\n        {\n          ...this.state,\n          tcshecked: \"true\",\n          data: {\n            ...this.state.data,\n            [e.target.name]: '0.1'\n          }\n        });\n    }\n    else if (e.target.value == \"true\") {\n      this.setState(\n        {\n          ...this.state,\n          tcshecked: \"false\",\n          data: {\n            ...this.state.data,\n            [e.target.name]: '',\n            tcsamount: ''\n          }\n        },\n        () => {\n          this.totalValue();\n        });\n    }\n  }\n\n  onTcsChange = e => {\n    this.setState(\n      {\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      },\n      () => {\n        this.totalValue();\n      }\n    );\n  }\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange2 = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      }, () => {\n        console.log(this.state.data.values)\n      });\n    }\n  }\n\n  selectitemchange = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if (selected_item) {\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemimage[index] = selected_item.masteritemimage;\n        selectedItemlist.itemsecondimage[index] = selected_item.masteritemsecondimage;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        if (selected_item.masteritemshortdescription) {\n          selectedItemlist.itemshortdescription[index] =\n            selected_item.masteritemshortdescription;\n        }\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate._id;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n        if (this.props.ID == undefined) {\n          selectedItemlist.itemdiscount[index] = \"0\";\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n          selectedItemlist.quantity[index] = (1).toString();\n          selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n        }\n\n\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        }, () => {\n          this.totalValue();\n        });\n      }\n\n    }\n\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || \"\";\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : \"\";\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    console.log(unitcost)\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      //   selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost) - (parseFloat(unitcost) * discount) / 100).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(selectedItemlist.costperunit[index]) -\n        (parseFloat(selectedItemlist.costperunit[index]) * selectedItemlist.itemdiscount[index]) / 100).toFixed(2);\n\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n\n  /*itemdiscountChange = (e, index) => {\n    \n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n    \n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n        selectedItemlist.itemdiscountamount[index] = null;\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };*/\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      // Check if tax exists and handle tax  \n      let { gst } = this.state.data;\n      if (gst !== null) {\n        gst = parseFloat(gst).toFixed(2);\n        let per = (gst * totalvalue) / 100;\n        totalvalue = parseFloat(Number(per) + Number(totalvalue)).toFixed(2);\n      }\n      let { tcsamount } = this.state.data;\n      if (tcsamount != '' && tcsamount != null) {\n        let newtcs = tcsamount;\n        totalvalue = parseFloat(Number(newtcs) + Number(totalvalue)).toFixed(2);\n      }\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail\n      },\n      selectedCustomerID: selected_id,\n      selectedCustomerName: customerdetail.customername\n    });\n\n  };\n\n  handleClick = e => {\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, [\"\"]],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, \"0\"],\n          itemdiscountamount: [...this.state.data.selectedItemlist.itemdiscountamount, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"1\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    }, () => {\n      console.log(this.state.data.values)\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    console.log(index)\n\n    let removeItem = { ...this.state.data };\n    console.log(removeItem.selectedItemlist)\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemimage = removeItem.selectedItemlist.itemimage;\n    let itemsecondimage = removeItem.selectedItemlist.itemsecondimage;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemshortdescription = removeItem.selectedItemlist.itemshortdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n    let itemdiscountamount = removeItem.selectedItemlist.itemdiscountamount;\n\n    values.splice(index, 1);\n\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemimage.splice(index, 1);\n    itemsecondimage.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n\n    costperunit.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    quantity.splice(index, 1);\n    itemdiscountamount.splice(index, 1);\n\n    totalcost.splice(index, 1);\n\n    console.log(removeItem.selectedItemlist)\n\n\n\n    //setTimeout(() =>{\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemimage,\n          itemsecondimage,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          itemdiscountamount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      },\n      isVisible: false,\n      isRemovedCalled: true\n    }, () => {\n      // setTimeout(() =>{\n      this.setState({\n        'isVisible': true\n      })\n      console.log(this.state.data.values)\n      console.log(this.state.data.selectedItemlist)\n      if (this.state.data.selectedItemlist.id.length > 0) {\n        this.state.data.selectedItemlist.id.filter((item, index) => {\n          if (typeof item == 'string' && item != '') {\n\n            this.selectitemchange2(item, index)\n          }\n\n        })\n\n      }\n      // },200)\n\n      this.totalValue();\n\n    });\n    //},200)\n\n\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const {\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      tcs,\n      tcsamount,\n      transitinsurance,\n      ws,\n      user_email,\n      loadingcharge,\n      weighttons,\n      scheduledays\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemimage = selectedItemlist.itemimage;\n    const itemsecondimage = selectedItemlist.itemsecondimage;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const itemdiscountamount = selectedItemlist.itemdiscountamount;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemimage = itemimage[i] || null;\n      obj.itemsecondimage = itemsecondimage[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.itemdiscountamount = itemdiscountamount[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    let data = {\n      customerdetail,\n      AddedIteminfo,\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      tcs,\n      tcsamount,\n      transitinsurance,\n      ws,\n      user_email,\n      loadingcharge,\n      weighttons,\n      scheduledays\n    };\n    console.log(transportationgst)\n    data['quotationnumber'] = data['quotationnumber'] == '' ? localStorage.getItem('QTno') : data['quotationnumber']\n    data['customeraddress'] = document.getElementById('customeraddress').value ? document.getElementById('customeraddress').value : ''\n\n    this.setState({ loading: true });\n\n    if (localStorage.getItem('customerId') != null) {\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      let obj = {}\n      obj['customerid'] = localStorage.getItem('customerId')\n      obj['Qno'] = this.state.data.quotationnumber\n      obj['quotation'] = date\n\n\n\n      if (this.props.ID != undefined) {\n        console.log(data)\n        this.props\n          .submit(data)\n          .then(() => {\n            this.dataHandler(false)\n            this.setState({ loading: false, errors: {}, success: true });\n            this.onShowAlert();\n          })\n          .catch(err => {\n            this.setState({ loading: false, errors: {}, success: true });\n            if (err.response) {\n              this.setState({ errors: err.response.data.errors, loading: false });\n              this.onShowAlert();\n            }\n\n          });\n\n      }\n      else {\n        axios\n          .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`, obj)\n          .then(res => {\n            this.props\n              .submit(data)\n              .then(() => {\n                this.setState({ loading: false, errors: {}, success: true });\n                this.myFormRef.reset();\n                this.onShowAlert();\n              })\n              .catch(err => {\n                this.setState({ errors: err.response.data.errors, loading: false });\n                this.onShowAlert();\n              });\n          },\n            error => {\n              this.setState({ errors: error.response.data.errors, loading: false });\n              this.onShowAlert();\n            });\n      }\n    }\n    else {\n      this.props\n        .submit(data)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n          this.onShowAlert();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n          this.onShowAlert();\n        });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id)\n      // this.setState({ loading: true,transaction:[] });\n      // axios\n      // .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n      // .then(res => {\n      //   this.setState({ loading: false });\n      //   if(res.data.customerlist.customerdata.length > 0){\n      //     let customervalues = res.data.customerlist.customerdata;\n      //     if(customervalues.length > 0){\n      //       customervalues = customervalues.filter((item,index) =>{\n      //         return index == customervalues.length-1\n      //       })\n      //       if(customervalues.length == 1){\n      //         this.setState({ transaction: customervalues },() =>{\n      //           console.log(this.state.transaction)\n      //         });\n      //       }\n      //     }\n      //   }\n      // },\n      // error =>{\n      //   this.setState({ loading: false });\n      // });\n    }\n\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n\n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, selectedCustomerID, selectedCustomerName, errors, loading, success, visible, isVisible } = this.state;\n    const successmsg = this.props.ID != undefined ? 'Quotation is updated successfully' : 'Quotation is added successfully'\n    let selCustVal = {};\n    if (selectedCustomerID) {\n      selCustVal = {\n        value: selectedCustomerID, label: selectedCustomerName\n      }\n    }\n    const customerID = selectedCustomerID ? (\n      //   <AvField\n      //   Label\n      //   type=\"select\"\n      //   name={`customername`}\n      //   value={data.customerdetail.id}\n      //   required={true}\n      //   onChange={e => this.handleChange(e)}\n      // >\n      //   <option value=\"\">select customer name</option>\n      //   {this.createSelectcustomer()}\n      // </AvField>\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required value={selCustVal} options={this.state.customerlistSelect} />\n    ) : (\n      //   <AvField\n      //   Label\n      //   type=\"select\"\n      //   name={`customername`}\n\n      //   required={true}\n      //   onChange={e => this.handleChange(e)}\n      // >\n      //   <option value=\"\">select customer name</option>\n      //   {this.createSelectcustomer()}\n      // </AvField>\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />\n    )\n\n    const customerNumber = data.customerdetail ? (\n      <AvField\n        Label\n        name=\"customernumber\"\n        type=\"number\"\n        readOnly\n        id=\"customernumber\"\n        value={data.customerdetail.customernumber}\n        onChange={this.onCustomerChange}\n        validate={{\n          required: {\n            value: true,\n            errorMessage: \"Please enter Customer Number\"\n          },\n\n          pattern: {\n            value: \"^[0-9]+$\",\n            errorMessage: \"Please enter valid Number\"\n          }\n        }}\n      />\n    ) : (\n      <AvField\n        Label\n        name=\"customernumber\"\n        type=\"number\"\n        readOnly\n        id=\"customernumber\"\n        onChange={this.onCustomerChange}\n        validate={{\n          required: {\n            value: true,\n            errorMessage: \"Please enter Customer Number\"\n          },\n\n          pattern: {\n            value: \"^[0-9]+$\",\n            errorMessage: \"Please enter valid Number\"\n          }\n        }}\n      />\n    )\n\n\n\n    const customerGST = data.customerdetail ? (\n      <AvField\n        Label\n        name=\"customergstnumber\"\n        type=\"text\" readOnly\n        id=\"customergstnumber\"\n        value={data.customerdetail.customergstnumber}\n        onChange={e => this.onCustomerChange}\n        validate={{\n          minLength: {\n            value: 15,\n            errorMessage:\n              \"Customer GST Number should contain 15 characters\"\n          },\n          maxLength: {\n            value: 15,\n            errorMessage:\n              \"Customer GST Number should contain 15 characters\"\n          },\n          pattern: {\n            value: \"^[a-zA-z0-9]+$\",\n            errorMessage: \"Please enter valid GST Number\"\n          }\n        }}\n      />\n    ) : (\n      <AvField\n        Label\n        name=\"customergstnumber\"\n        type=\"text\"\n        readOnly\n        id=\"customergstnumber\"\n        onChange={e => this.onCustomerChange}\n        validate={{\n          minLength: {\n            value: 15,\n            errorMessage:\n              \"Customer GST Number should contain 15 characters\"\n          },\n          maxLength: {\n            value: 15,\n            errorMessage:\n              \"Customer GST Number should contain 15 characters\"\n          },\n          pattern: {\n            value: \"^[a-zA-z0-9]+$\",\n            errorMessage: \"Please enter valid GST Number\"\n          }\n        }}\n      />\n    )\n\n\n\n    const customerAddress = data.customerdetail ? (\n      <AvField\n        Label\n        name=\"customeraddress\"\n        type=\"text\"\n        readOnly\n        id=\"customeraddress\"\n        value={\n          data.customerdetail.customeraddress1 +\n          \" \" +\n          data.customerdetail.customeraddress2 +\n          \" \" +\n          data.customerdetail.city +\n          \" \" +\n          data.customerdetail.state +\n          \" \" +\n          data.customerdetail.country +\n          \" \" +\n          data.customerdetail.pincode\n        }\n        onChange={this.onCustomerChange}\n      />\n    ) : (\n      <AvField\n        Label\n        name=\"customeraddress\"\n        type=\"text\"\n        readOnly\n        id=\"customeraddress\"\n\n        onChange={this.onCustomerChange}\n      />\n    )\n\n\n\n\n\n    const dataelem = isVisible ? (\n\n      <div className=\"purchaseorder-item-row\">\n        {data.values.map((values, index) => {\n\n          let optionsel = \"\";\n          let SelVal = {};\n          if (values.id != undefined) {\n            if (values.itemshortdescription) {\n              optionsel = values.itemshortdescription;\n            }\n            else {\n              optionsel = values.itemdescription;\n            }\n            SelVal = {\n              value: values.id._id, label: optionsel\n            }\n          }\n          const itemnameinfo = values.id != undefined ? (\n            // <AvField\n            //   type=\"select\"\n            //   value={values.id._id}\n            //   name={`selectitem${index}`}\n            //   onChange={e => this.selectitemchange(e, index)}\n            //   required={true}\n            // >\n            //   <option value=\"\">select Item</option>\n            //   {this.createSelectItems()}\n            // </AvField>\n            <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />\n          ) :\n            (\n              // <AvField\n              //   type=\"select\"\n              //   name={`selectitem${index}`}\n              //   value={\n              //     data.selectedItemlist.id[index]\n              //   }\n              //   onChange={e => this.selectitemchange(e, index)}\n              //   required={true}\n              // >\n              //   <option value=\"\">select Item</option>\n              //   {this.createSelectItems()}\n              // </AvField>\n              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n            )\n          return (\n            <div key={index}>\n\n              <div className=\"purchaseorder-table\">\n                <Row key={index}>\n                  <Col sm={2}>\n\n                    <AvGroup>\n\n                      <Label for=\"selectitem\">Item Code</Label>\n                      <span className=\"required-label\">*</span>\n                      {itemnameinfo}\n\n\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label for={`masteritemdescription${index}`}>\n                        Description\n                      </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`masteritemdescription${index}`}\n                        type=\"text\"\n                        readOnly\n                        id=\"masteritemdescription\"\n                        value={\n                          data.selectedItemlist.itemdescription[index]\n                        }\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              \"Please enter Item Description\"\n                          }\n\n\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemtype${index}`}>Type</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        style={{ width: \"150px\" }}\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemtype${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemtype[index]\n                        }\n                      >\n                        <option value=\"\">select</option>\n                        {this.createSelectItemTypes()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemuom${index}`}>UOM</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemuom${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemuom[index]\n                        }\n                      >\n                        <option value=\"\">uom</option>\n                        {this.createSelectUomItems()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`discount${index}`}>Discount %</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`itemdiscount${index}`}\n                        type=\"number\"\n                        id={`itemdiscount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscount[index]\n                        }\n                        onChange={e =>\n                          this.itemdiscountChange(e, index)\n                        }\n                        validate={{\n                          minLength: {\n                            value: 1,\n                            errorMessage:\n                              \"item Discount value is required\"\n                          },\n                          maxLength: { value: 100 },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid value\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`quantity${index}`}>Quantity</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`quantity${index}`}\n                        type=\"number\"\n                        id={`quantity${index}`}\n                        value={\n                          data.selectedItemlist.quantity[index]\n                        }\n                        onChange={e => this.quantityChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Item Quantity\"\n                          },\n                          minLength: {\n                            value: 1,\n                            errorMessage: \"quantity value is required\"\n                          },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid quantity\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`costperunit${index}`}>\n                        MRP Cost\n                      </Label>\n                      <AvField\n                        name={`costperunit${index}`}\n                        type=\"number\"\n                        id={`costperunit${index}`}\n                        value={\n                          data.selectedItemlist.costperunit[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Please enter cost'\n                          },\n\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage:\n                              \"Please enter valid costperunit\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`itemdiscountamount${index}`}>\n                        Discount Cost\n                      </Label>\n                      <AvField\n                        name={`itemdiscountamount${index}`}\n                        type=\"number\"\n                        id={`itemdiscountamount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscountamount[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`totalcost${index}`}>\n                        Total Cost\n                      </Label>\n                      <AvField\n                        name={`totalcost${index}`}\n                        type=\"number\"\n                        id={`totalcost${index}`}\n                        value={\n                          data.selectedItemlist.totalcost[index]\n                            ? data.selectedItemlist.totalcost[index]\n                            : \" \"\n                        }\n                        onChange={e => this.onChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <Button\n                      type=\"button\"\n                      onClick={e => this.removeClick(e, index)}\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      -\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n\n\n            </div>\n          );\n        })}\n      </div>\n\n\n    ) : null\n\n\n\n    return (\n      <div>\n        <div>\n\n          {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Quotation</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert color=\"danger\" isOpen={visible} Label>\n              Quotation number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Quotation</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">Quotation Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"quotationnumber\"\n                      type=\"number\"\n                      id=\"quotationnumber\"\n                      value={data.quotationnumber || null}\n                      onChange={this.onhandlerChange}\n\n                      validate={{\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"totalcost\" Label>Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"date\">Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                    autoComplete=\"new-password\"\n                    selected={data.date}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control small-font-size\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label F\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    {customerNumber}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GST </Label>\n                    {customerGST}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customeraddress\">Customer Address</Label>\n                    {customerAddress}\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                    <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={this.onSubjectHandler}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n\n                    <AvField\n                      Label\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"loadingcharge\">\n                      Loading and Handling Charges </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"loadingcharge\"\n                      type=\"number\"\n                      id=\"loadingcharge\"\n                      value={data.loadingcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Loading and Handling Charges\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"weighttons\">\n                      Total Weight(in tons) </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"weighttons\"\n                      type=\"number\"\n                      id=\"weighttons\"\n                      value={data.weighttons || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Weight in Tons\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ws\">\n                      W.S</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"ws\"\n                      type=\"number\"\n                      id=\"ws\"\n                      value={data.ws || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter W.S\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transitinsurance\">\n                      Transit Insurance</Label>\n\n                    <AvField\n                      Label\n                      name=\"transitinsurance\"\n                      type=\"number\"\n                      id=\"transitinsurance\"\n                      value={data.transitinsurance || \"\"}\n                      onChange={this.onSubjectHandler}\n\n                    />\n                  </AvGroup>\n                </Col>\n\n\n\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"tcharge\">\n                      Transportation Charges</Label>\n\n                    <AvField\n                      Label\n                      name=\"tcharge\"\n                      type=\"number\"\n                      id=\"tcharge\"\n                      value={data.tcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transportationgst\">Transportation GST(%) </Label>\n                    <AvField\n                      Label\n                      name=\"transportationgst\"\n                      type=\"number\"\n                      id=\"transportationgst\"\n                      value={data.transportationgst || \"\"}\n                      onChange={this.onSubjectHandler}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='tcs'>TCS</Label>\n                    <AvField\n                      Label\n                      name='tcs'\n                      type='checkbox'\n                      id='tcs'\n                      value={this.state.tcshecked}\n                      onChange={e => this.onhandletcsChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n\n\n              </Row>\n              {!!data.tcs ? (\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"tcsamount\">TCS Amount</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"tcsamount\"\n                      type=\"number\"\n                      id=\"tcsamount\"\n                      value={data.tcsamount || \"\"}\n                      onChange={this.onTcsChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row> ) : null }\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n\n              {dataelem}\n\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    user: state.user,\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(QuotationForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addquotation } from \"../../../../actions/quotation\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updatequotation } from \"../../../../actions/quotation\";\n\nimport QuotationForm from \"./QuotationForm/QuotationForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddQuotation extends React.Component {\n\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  }\n\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    \n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatequotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      \n      return this.props\n      .addquotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n          <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <QuotationForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addquotation,\n    updatequotation,\n    getCustomerList,\n    getquotation\n  }\n)(AddQuotation);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getquotation } from '../../../../actions/quotation';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\nclass ViewQuotation extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    quotationlistvalues: []\n  };\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n\n    let quotationlist = Object.values(this.props.quotationlistvalues);\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n  \n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              // style={{ 'fontSize': '0.8rem' }}\n              Label\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              Label\n              // style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.quotationlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.quotationnumber.toLowerCase().localeCompare(a.quotationnumber.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateQuotation(id) {\n    let path = `/editquotation/${id}`;\n    this.props.history.push(path);\n  }\n\n  updateButton = id => {\n    // let path = `/view_quotationpdf/${id}`;\n    let path = `/viewnewpdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, quotationlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: 'Quotation Number',\n        field: 'quotationnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n    \n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Action',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n       \n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <DataTable\n            rowvalues={quotationlistvalues}\n            columnvalue={columnvalue}\n            className=\"quotationlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getquotation \n  }\n)(ViewQuotation);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getquotation } from '../../../../actions/quotation';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nimport {\r\n  getMasterItemList,\r\n  getMasterItemTypes\r\n} from \"../../../../actions/Transaction\";\r\nimport { getUomList } from \"../../../../actions/uom\";\r\nimport { getCustomerList } from \"../../../../actions/customerContact\";\r\n\r\nclass viewQuotationListTest extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    quotationlistvalues: []\r\n  };\r\n  componentDidMount() {\r\n\r\n    this.props.getCustomerList();\r\n    this.props.getMasterItemTypes();\r\n    this.props.getMasterItemList();\r\n    this.props.getUomList();\r\n    this.props.getquotation();\r\n\r\n    let quotationlist = Object.values(this.props.quotationlistvalues);\r\n    quotationlist.sort(function(a, b){\r\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\r\n    });\r\n  \r\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\r\n      return {\r\n        quotationnumber: quotationvalue.quotationnumber,\r\n        customername: quotationvalue.customername,\r\n        customernumber: quotationvalue.customernumber,\r\n        customercontactnumber: quotationvalue.customercontactnumber,\r\n       \r\n        view: (\r\n\r\n          <div className=\"actionbuttons\">\r\n            <Button\r\n              color=\"primary\"\r\n              // style={{ 'fontSize': '0.8rem' }}\r\n              Label\r\n              onClick={() => {\r\n                this.updateButton(quotationvalue._id);\r\n              }}\r\n            >\r\n              Print\r\n          </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              Label\r\n              // style={{ 'fontSize': '0.8rem' }}\r\n              onClick={() => {\r\n                this.updateQuotation(quotationvalue._id);\r\n              }}\r\n            >\r\n              Edit\r\n          </Button>\r\n          </div>\r\n        )\r\n      };\r\n    });\r\n    this.setState({ ...this.state, quotationlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    let quotationlist = Object.values(props.quotationlistvalues);\r\n    //quotationlist= quotationlist.sort((a, b) => b.quotationnumber.toLowerCase().localeCompare(a.quotationnumber.toLowerCase()));\r\n    quotationlist.sort(function(a, b){\r\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\r\n    });\r\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\r\n      return {\r\n        quotationnumber: quotationvalue.quotationnumber,\r\n        customername: quotationvalue.customername,\r\n        customernumber: quotationvalue.customernumber,\r\n        customercontactnumber: quotationvalue.customercontactnumber,\r\n       \r\n        view: (\r\n          <div className=\"actionbuttons\">\r\n            <Button\r\n              color=\"primary\"\r\n              style={{ 'fontSize': '0.8rem' }}\r\n              onClick={() => {\r\n                this.updateButton(quotationvalue._id);\r\n              }}\r\n            >\r\n              Print\r\n          </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              style={{ 'fontSize': '0.8rem' }}\r\n              onClick={() => {\r\n                this.updateQuotation(quotationvalue._id);\r\n              }}\r\n            >\r\n              Edit\r\n          </Button>\r\n          </div>\r\n        )\r\n      };\r\n    });\r\n    this.setState({ ...this.state, quotationlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n\r\n  updateQuotation(id) {\r\n    let path = `/editquotation/${id}`;\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  updateButton = id => {\r\n    let path = `/viewnewpdf/${id}`;\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, quotationlistvalues } = this.state;\r\n    const columnvalue = [\r\n      {\r\n        label: 'Quotation Number',\r\n        field: 'quotationnumber',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Customer Name',\r\n        field: 'customername',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n\r\n      {\r\n        label: 'Customer Number',\r\n        field: 'customernumber',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n    \r\n      {\r\n        label: 'Contact Number',\r\n        field: 'customercontactnumber',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'view',\r\n        sort: 'asc',\r\n        width: 40\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n       \r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/crmlist'>CRM</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        {loading ? <CustomLoader /> : null}\r\n        <div>\r\n          <DataTable\r\n            rowvalues={quotationlistvalues}\r\n            columnvalue={columnvalue}\r\n            className=\"quotationlist\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quotationlistvalues: state.quotationlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { \r\n    getMasterItemList,\r\n    getMasterItemTypes,\r\n    getUomList,\r\n    getCustomerList,\r\n    getquotation \r\n  }\r\n)(viewQuotationListTest);\r\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport justDial from '../../../../Images/js.jpg';\nimport makeInIdia from '../../../../Images/mk.jpg';\nimport proud from '../../../../Images/proud.jpg';\nimport scaff from '../../../../Images/scaff.jpg';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\nimport TimesNewRoman from '../../../../fonts/Times New Roman.ttf'\n\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport {\n  Document,\n  Page,\n  Text,\n  Font,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\nFont.register({\n  family: 'Times New Roman',\n  src:  TimesNewRoman,\n});\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n\n  pagepadding: {\n    padding: 35\n  },\n  section: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  tableHeader: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    // backgroundColor: '#548DD4',\n    // width: '100%',\n    // height: 40,\n    // color: 'white',\n    // textAlign: 'center',\n    // padding: 5\n  },\n  refno: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  cutoff: {\n    // overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n    // width:'150px',\n    //wordBreak: 'break-all'\n\n    'whiteSpace': 'normal',\n    'wordBreak': 'breakAll',\n\n  },\n\n  bgblue: {\n    backgroundColor: '#000'\n  },\n  padding5: {\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  fontbold: {\n    fontWeight: 'bolder'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  smallicon: {\n    width: 25\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 300,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n\n  padding1: {\n    paddingTop: 6\n  },\n\n  kindattend: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  padding: {\n    padding: 0\n  },\n  main: {\n    fontSize: 10\n  },\n  flexview: {\n    fontSize: 10,\n    display: 'flex'\n  },\n  tableheaderbgcolor: {\n    backgroundColor: '#000',\n    color: 'red',\n    background: '#000'\n  },\n  footerfixed: {\n    // position: 'absolute',\n    // bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontFamily: 'Times New Roman', fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst BigBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 13, fontFamily: 'Times New Roman', fontWeight: 'extrabold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontFamily: 'Times New Roman', fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst RedBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontFamily: 'Times New Roman', fontWeight: 'bold',color: 'red'}}>{children}</Text>\n  )\n}\n\nconst BlackBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontFamily: 'Times New Roman', fontWeight: 'bold',color: 'black'}}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ quotationlistvalues, data_cond }) => {\n  console.log(quotationlistvalues)\n\n  let amountinwords = ''\n  const financialYear = quotationlistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n\n  const data = quotationlistvalues.addeditemlist;\n  let totaleachitem = 0;\n  console.log('data');\n  console.log(data);\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n  // const data = [\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   }\n  // ];\n  console.log(quotationlistvalues)\n\n  let customeraddress = quotationlistvalues.customeraddress ? quotationlistvalues.customeraddress : ''\n  let loadingcharges = quotationlistvalues.loadingcharge != undefined\n    && quotationlistvalues.loadingcharge != null ?\n    parseFloat(quotationlistvalues.loadingcharge) : 0.00\n\n  let ws = quotationlistvalues.ws != undefined\n    && quotationlistvalues.ws != null ?\n    parseFloat(quotationlistvalues.ws) : 0.00\n\n  let transitinsurance = quotationlistvalues.transitinsurance != undefined\n    && quotationlistvalues.transitinsurance != null ?\n    parseFloat(quotationlistvalues.transitinsurance) : 0.00\n\n    \n\n  let tcharge = quotationlistvalues.tcharge != undefined\n    && quotationlistvalues.tcharge != null ?\n    parseFloat(quotationlistvalues.tcharge) : 0.00\n\n\n  loadingcharges = loadingcharges.toFixed(2)\n  let tchargegst = 0.00\n  ws = ws.toFixed(2)\n  transitinsurance = transitinsurance.toFixed(2)\n  tcharge = tcharge.toFixed(2)\n  let subtotal = parseFloat(totaleachitem) + parseFloat(loadingcharges) + parseFloat(ws) + parseFloat(transitinsurance)\n  subtotal = subtotal.toFixed(2)\n  let subtotalgst = parseFloat(subtotal * 0.18)\n  subtotalgst = subtotalgst.toFixed(2)\n  let totalincludegst = parseFloat(subtotal) + parseFloat(subtotalgst)\n  totalincludegst = totalincludegst.toFixed(2)\n\n  let transportationgstper=0,transportationgst;\n  transportationgst = quotationlistvalues.transportationgst && quotationlistvalues.transportationgst != '' ? parseFloat(quotationlistvalues.transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n\n  tchargegst = tcharge * transportationgst\n  tchargegst = tchargegst.toFixed(2)\n  let tcsval = quotationlistvalues.tcs != '' && quotationlistvalues.tcs != null ? (parseFloat(subtotal) * parseFloat(quotationlistvalues.tcs)) / 100 : 0\n  if (tcsval == 0)\n  {\n    quotationlistvalues.tcs = 0\n  }\n  tcsval = tcsval.toFixed(2)\n\n  let grandtotal = parseFloat(tcharge) + parseFloat(totalincludegst) + parseFloat(tchargegst) + parseFloat(tcsval);\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  let scheduledays = quotationlistvalues.scheduledays ? quotationlistvalues.scheduledays + ' days' : ''\n\n  const totalrs = quotationlistvalues.totalvalue\n    ? quotationlistvalues.totalvalue\n    : '';\n  const tax = quotationlistvalues.tax ? quotationlistvalues.tax : '';\n  const taxpercentage = quotationlistvalues.tax\n    ? quotationlistvalues.tax / 100\n    : '';\n  //const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = quotationlistvalues.selectedcontactlist[0]\n  //     ? quotationlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n\n  const refno = 'Quotation no:PSPL/Quote/' + quotationlistvalues.quotationnumber + '/'+financialYear;\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 1 && data.length < 3) {\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <BigBold>Dear sir / Madam,</BigBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}</SmallBold>\n          <BigBold>Thanking You</BigBold>,{'\\n'}{'\\n'}\n          With Regards,{'\\n'}{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 120 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={data}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      </>\n      );\n    }\n    else if(i == 0 && i <= 3 && data.length < 5) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 1) {\n          firstDat.push(data[i])\n        }\n        if(i > 1 && i <= 3) {\n          secondDat.push(data[i])\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <BigBold>Dear sir / Madam,</BigBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}</SmallBold>\n          <BigBold>Thanking You</BigBold>,{'\\n'}{'\\n'}\n          With Regards,{'\\n'}{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 120 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      </>\n      );\n    }\n    else if(i == 0 && i <= 5 && data.length < 7) {\n      let firstDat = [];\n      let secondDat = [];\n      let thirdDat = [];\n      data.forEach((element,i) => {\n        if(i <= 1) {\n          firstDat.push(data[i]);\n        }\n        if(i > 1 && i <= 3) {\n          secondDat.push(data[i]);\n        }\n        if(i > 3 && i <= 5) {\n          thirdDat.push(data[i]);\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <BigBold>Dear sir / Madam,</BigBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}</SmallBold>\n          <BigBold>Thanking You</BigBold>,{'\\n'}{'\\n'}\n          With Regards,{'\\n'}{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 120 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={thirdDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>          \n      </>\n      );\n    }\n    else if(i == 0 && i <= 7 && data.length < 9) {\n      let firstDat = [];\n      let secondDat = [];\n      let thirdDat = [];\n      let fourthDat = [];\n      data.forEach((element,i) => {\n        if(i <= 1) {\n          firstDat.push(data[i]);\n        }\n        if(i > 1 && i <= 3) {\n          secondDat.push(data[i]);\n        }\n        if(i > 3 && i <= 5) {\n          thirdDat.push(data[i]);\n        }\n        if(i > 5 && i <= 7) {\n          fourthDat.push(data[i]);\n        }        \n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <BigBold>Dear sir / Madam,</BigBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}</SmallBold>\n          <BigBold>Thanking You</BigBold>,{'\\n'}{'\\n'}\n          With Regards,{'\\n'}{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 120 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={thirdDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={fourthDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>                \n      </>\n      );\n    }    \n    else if(i == 0 && i <= 9 && data.length < 11) {\n      let firstDat = [];\n      let secondDat = [];\n      let thirdDat = [];\n      let fourthDat = [];\n      let fifthDat = [];\n      data.forEach((element,i) => {\n        if(i <= 1) {\n          firstDat.push(data[i]);\n        }\n        if(i > 1 && i <= 3) {\n          secondDat.push(data[i]);\n        }\n        if(i > 3 && i <= 5) {\n          thirdDat.push(data[i]);\n        }\n        if(i > 5 && i <= 7) {\n          fourthDat.push(data[i]);\n        }\n        if(i > 7 && i <=9) {\n          fifthDat.push(data[i]);\n        }        \n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <BigBold>Dear sir / Madam,</BigBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}</SmallBold>\n          <BigBold>Thanking You</BigBold>,{'\\n'}{'\\n'}\n          With Regards,{'\\n'}{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 120 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={thirdDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={fourthDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page> \n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={fifthDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>                     \n      </>\n      );\n    }\n    else if(i == 0 && i <= 11 && data.length < 13) {\n      let firstDat = [];\n      let secondDat = [];\n      let thirdDat = [];\n      let fourthDat = [];\n      let fifthDat = [];\n      let sixthDat = [];\n      data.forEach((element,i) => {\n        if(i <= 1) {\n          firstDat.push(data[i]);\n        }\n        if(i > 1 && i <= 3) {\n          secondDat.push(data[i]);\n        }\n        if(i > 3 && i <= 5) {\n          thirdDat.push(data[i]);\n        }\n        if(i > 5 && i <= 7) {\n          fourthDat.push(data[i]);\n        }\n        if(i > 7 && i <=9) {\n          fifthDat.push(data[i]);\n        }        \n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <BigBold>Dear sir / Madam,</BigBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}</SmallBold>\n          <BigBold>Thanking You</BigBold>,{'\\n'}{'\\n'}\n          With Regards,{'\\n'}{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 120 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={thirdDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={fourthDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page> \n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={fifthDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>  \n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={sixthDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11,height: 90, width: 162 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image style={{height: \"120px\", width: \"140px\"}}\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>                           \n      </>\n      );\n    }\n  })\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: '#000' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n         {dispDyn}\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Loading and Handling Charges per ton Rs185.00 x (No of tons)</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{loadingcharges}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>W.S</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{ws}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}> Transit Insurance</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transitinsurance}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Sub Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@18%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotalgst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalincludegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Transportation Charges</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@{transportationgstper}%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tchargegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>TCS@{quotationlistvalues.tcs}%</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcsval}</Text>\n              </TableCell>\n            </TableHeader>\n        </Table>         \n\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                {grandtotal}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n{/* \n        <Text style={[styles.headerfont, { textAlign: 'right' }]}>\n        {'\\n'} \n            {amountinwords}\n        </Text> */}\n\n       \n\n        {/* <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View> */}\n        {/* <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View> */}\n\n        <View style={[styles.section]}>\n          <Text style={{fontSize: '10'}}>We hope the rates quoted are reasonable and looking forward for your kind orders.</Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} >Thanking you </Text>\n          <Text style={styles.padding1}>Yours truly,</Text>\n          <View style={[styles.section]}>\n            <Text style={styles.brandname}>For PONDHAN SCAFFOLING PVT LTD</Text>\n            <Text style={{fontSize: \"12\", fontWeight: \"600\", paddingTop: \"10\", paddingBottom: \"10\"}}>Sales Team Contact:</Text>\n          </View>\n        </View>\n\n\n\n        <View style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\n          <Image style={{ width: 70, height: 70 }} src={sign} />\n          <Image style={{ width: 70, height: 70 }} src={seal} />\n          <View style={{ paddingLeft: '300' }}>\n          <Text style={{fontSize: \"12\", fontWeight: \"600\", paddingTop: \"10\", paddingBottom: \"10\"}}>9900069150</Text>\n          </View>\n        </View>\n\n        <View>\n          {/* <Image src={seal} style={styles.smallicon} />\n          <Image src={sign} style={styles.smallicon} /> */}\n          <Text style={styles.brandname}>A.B. Ponnappa {'\\n'}\n            Managing Director\n          </Text>\n          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} > Note:</Text>\n          <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n          <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n          <Text style={styles.padding1}>3, Delivery Schedule: {scheduledays} after confirmation.</Text>\n          <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n          <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n          <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n          <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n          <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} > Bank Details:-</Text>\n          <Text style={styles.padding1}>Name: Pondhan scaffolding Pvt ltd.</Text>\n          <Text style={styles.padding1}>Bank: Bank Of Baroda Branch: Byatarayanapura</Text>\n          <Text style={styles.padding1}>City: Bangalore-560092</Text>\n          <Text style={styles.padding1}>A/C No: 73690500000003.</Text>\n          <Text style={styles.padding1}>IFSC: Code: BARBOVJBYAT.</Text>\n        </View>\n\n        <View>\n            <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={[styles.footerfixed]}>\n          <Image src={client} />\n        </View>\n\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport axios from \"axios\";\nimport \"./ViewQuotation.scss\";\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    quotationlistvalues: {},\n    status: false,\n    text: null\n  };\n  async componentDidMount() {\n    this.props.getquotation();\n\n    const quotationid = this.props.match.params.id;\n    const quotationlistvalues = this.props.quotationlistvalues[quotationid];\n    quotationlistvalues.requestdeliverydate = moment(\n      quotationlistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    quotationlistvalues.addeditemlist = quotationlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        console.log(itemlist)\n        itemlist.itemdiscountamount = parseFloat(itemlist.itemdiscountamount)\n        itemlist.itemdiscountamount = itemlist.itemdiscountamount.toFixed(2)\n        itemlist.quantity = parseInt(itemlist.quantity)\n        if(itemlist.itemdiscountamount != '0.00' && itemlist.itemdiscountamount != 'NaN' && itemlist.itemdiscountamount != null) {\n          itemlist.totalcost = parseFloat(itemlist.itemdiscountamount) * parseInt(itemlist.quantity);\n        }\n        else {\n          itemlist.totalcost = parseFloat(itemlist.totalcost) * parseInt(itemlist.quantity);  \n        }\n  \n        itemlist.totalcost = parseFloat(itemlist.totalcost)\n        itemlist.totalcost = itemlist.totalcost.toFixed(2)\n\n        if(itemlist.itemdiscountamount == '0.00' || itemlist.itemdiscountamount == 'NaN' || itemlist.itemdiscountamount == null) {\n          itemlist.itemdiscountamount = \"0\";\n        }\n\n        let schedule = \"8-10\";\n        if(itemlist.scheduledays) {\n         schedule = itemlist.scheduledays;\n        }\n\n        if(itemlist.itemdescription.length > 200) {\n          itemlist.itemdescription = itemlist.itemdescription.substring(0, 200);\n        }\n\n        if(itemlist.itemdescription.length < 180) {\n          console.log(\"coming here\");\n          let totalSpacerequired = 200 - itemlist.itemdescription.length;\n          let numSpaces = totalSpacerequired; // Change this to the number of spaces you want to add\n\n          let spaces = \" \".repeat(numSpaces); // Create a string of spaces\n          itemlist.itemdescription = itemlist.itemdescription + spaces;\n\n          console.log(\"after adding space\", itemlist.itemdescription);\n        }\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          itemimage: itemlist.itemimage != '' && itemlist.itemimage != null ? itemlist.itemimage : \"\",\n          scheduledays: schedule,\n          weighteach: itemlist.id.masteritemunitwt && itemlist.id.masteritemunitwt != \"undefined\" && \n          itemlist.id.masteritemunitwt != \"null\"\n            ? itemlist.id.masteritemunitwt\n            : \"-\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n          itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n            itemdiscountamount:itemlist.itemdiscountamount\n            ? itemlist.itemdiscountamount\n            : \"0\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost\n            : \"\"\n        };\n      }\n    );\n    const customerid = quotationlistvalues.customerid;\n    const customernumber = quotationlistvalues.customernumber;\n    const customername = quotationlistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          quotationlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          quotationlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        quotationlistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(quotationlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        quotationlistvalues,\n        status: true,\n        text: quotationid.toString()+customername.toString()\n      });\n    }, 2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        });\n\n        setTimeout(() => {\n          document.getElementById(\"D1\").click();\n          this.props.history.push(\"/quotationlist\");\n        }, 200);\n    \n      }\n    } else {\n    }\n  }\n\n\n\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, quotationlistvalues,link,text } = this.state;\n    return (\n      <div>\n        <div className=\"pdf-class\">\n        Downloading file.Please wait.\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                \n                quotationlistvalues={this.state.quotationlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getquotation }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactPDF from \"@react-pdf/renderer\";\r\nimport moment from \"moment\";\r\nimport { PDFViewer } from \"@react-pdf/renderer\";\r\nimport { getquotation } from \"../../../../actions/quotation\";\r\nimport MyDocument from \"./Component\";\r\nimport logo from \"../../../../Images/logo.png\";\r\nimport axios from \"axios\";\r\nimport \"./ViewQuotation.scss\";\r\n\r\nclass ViewPurchaseOrderPdf extends React.Component {\r\n  state = {\r\n    quotationlistvalues: {},\r\n    status: false,\r\n    text: null\r\n  };\r\n  async componentDidMount() {\r\n    this.props.getquotation();\r\n\r\n\r\n    const quotationid = this.props.match.params.id;\r\n    const quotationlistvalues = this.props.quotationlistvalues[quotationid];\r\n    console.log(\"quotation values \",quotationlistvalues)\r\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/quotation/generatequotaionPDF/`+quotationlistvalues._id).then(\r\n        (res) => {\r\n          if(res.data) {\r\n            this.setState({\r\n                link: process.env.REACT_APP_IMAGE_BASE_URL+\"/uploads/\"+res.data.data+\".pdf\"\r\n                // status : undefined,\r\n              });\r\n      \r\n              setTimeout(() => {\r\n                document.getElementById(\"D1\").click();\r\n                this.props.history.push(\"/quotationlist\");\r\n              }, 400);\r\n          }\r\n          else {\r\n            quotationlistvalues.financialyear = \"2020-21\";          \r\n          }\r\n        },\r\n        (error) => {\r\n          quotationlistvalues.financialyear = \"2020-21\";\r\n        }\r\n    )\r\n    const customerid = quotationlistvalues.customerid;\r\n    const customernumber = quotationlistvalues.customernumber;\r\n    const customername = quotationlistvalues.customername;\r\n    console.log(\"--COMPONENTDIDMOUNT--\");\r\n    console.log(quotationlistvalues);\r\n  }\r\n  dynamicClick() {\r\n    if (document.getElementsByClassName(\"pdf-class\")) {\r\n      if (\r\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\r\n      ) {\r\n        setTimeout(() => {\r\n          this.dynamicClick();\r\n        }, 7000);\r\n      } else if (\r\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\r\n      ) {\r\n        this.setState({\r\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\r\n          // status : undefined,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          document.getElementById(\"D1\").click();\r\n          this.props.history.push(\"/quotationlist\");\r\n        }, 200);\r\n    \r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const data_cond = [\r\n      {\r\n        slno: \"1\",\r\n        title: \"Invoices\",\r\n        value: \"2 copies Invoices (original & duplicate)\"\r\n      },\r\n      {\r\n        slno: \"2\",\r\n        title: \"Tax & Duty\",\r\n        value: \"Included\"\r\n      },\r\n      {\r\n        slno: \"3\",\r\n        title: \"Payment Schedule\",\r\n        value: \"15 days from the date of delivery\"\r\n      },\r\n      {\r\n        slno: \"4\",\r\n        title: \"Delivery Schedule\",\r\n        value: \"Immediately\"\r\n      },\r\n      {\r\n        slno: \"5\",\r\n        title: \"Billing address & GST No\",\r\n        value:\r\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\r\n      },\r\n      {\r\n        slno: \"6\",\r\n        title: \"Delivery Address\",\r\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\r\n      }\r\n    ];\r\n    const { status, quotationlistvalues,link,text } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"pdf-class\">\r\n        Downloading file.Please wait.\r\n          <a href={link} download={text} id=\"D1\"></a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quotationlistvalues: state.quotationlistvalues\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getquotation }\r\n)(ViewPurchaseOrderPdf);\r\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass SupplierContactForm extends React.Component {\n  state = {\n    data: {\n      suppliercontactname: \"\",\n      suppliercontactnumber: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Supplier Contact is added Successfully</Alert>\n          ) : null}\n          {!!errors.suppliercontactnumber ? (\n            <Alert color=\"danger\">Supplier Contact Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\">Full Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliercontactname\"\n                        type=\"text\"\n                        id=\"fullname\"\n                        value={data.suppliercontactname}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Your Name\"\n                          },\n                      \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"phone\">Phone</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"text\"\n                        name=\"suppliercontactnumber\"\n                        id=\"phone\"\n                        value={data.suppliercontactnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter your phone number\"\n                          },\n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage:\n                              \"Your phone number must be composed only with numbers\"\n                          },\n                          minLength: {\n                            value: 10,\n                            errorMessage:\n                              \"Your phone number must be between 10 and 12 numbers\"\n                          },\n                          maxLength: {\n                            value: 12,\n                            errorMessage:\n                              \"Your phone number be between 10 and 12 numbers\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierContactForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierContactForm from \"../SupplierForm/SupplierContact\";\nimport {\n  addSupplierContact,\n  getSupplierContact\n} from \"../../../../actions/Supplier\";\n\nclass SupplierContact extends React.Component {\n  componentDidMount() {\n    this.props.getSupplierContact();\n  }\n  submit = data => {\n    return this.props.addSupplierContact(data);\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Admin Dashboard</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/transaction_page\">Transaction</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/supplier\">Supplier</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Supplier Contact</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div>\n          <SupplierContactForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierContact.propTypes = {\n  addSupplierContact: PropTypes.func.isRequired,\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addSupplierContact, getSupplierContact }\n)(SupplierContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [\"\"],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const suppliercontactlistvalue = Object.values(\n      props.suppliercontactlistvalue\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const count = supplierdetaillistvalue.length;\n    const suppliernumber = count > 0 ? 10001 + count : 10001;\n    this.setState({\n      ...this.state,\n      suppliercontactlistvalue,\n      data: { ...this.state.data, suppliernumber }\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function (value, i) {\n      var obj = {};\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is added successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody >Supplier data is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>{\" \"}\n               \n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert Label color=\"danger\">Supplier Number alreadt exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert Label color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString()}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                        \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                          minLength: {\n                            value: 3,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          maxLength: {\n                            value: 300,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader Label>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader Label>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            designation{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              maxLength: {\n                                value: 100,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          Label\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                  <AvGroup>\n                                    <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                    <span className=\"required-label\">*</span>\n                                    <AvField\n                                      type=\"select\"\n                                      name=\"contactnumber\"\n                                      onChange={this.onChange}\n                                      required={true}\n                                      disabled={true}\n                                    >\n                                      <option value=\"\">123</option>\n                                      <option value=\"\">345</option>\n                                      <option value=\"\"></option>\n                                      {this.createSelectNumbers()}\n                                    </AvField>\n                                  </AvGroup>\n                                </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    suppliercontactlistvalue: state.suppliercontactlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(SupplierDetail);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailForm from \"../SupplierForm/SupplierDetail\";\nimport {\n  getSupplierContact,\n  addSupplierDetails,\n  getSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierContact();\n    this.props.getSupplierDetails();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetail.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { getSupplierContact, addSupplierDetails, getSupplierDetails }\n)(SupplierDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetailUpdateForm extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [null],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"],\n      mongoid: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.supplierdetaillistvalue;\n    const suppliercontactname = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactname\n    );\n\n    const mongoid = data.suppliercontactlistvalue.map(obj => obj._id);\n    const suppliercontactnumber = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactnumber\n    );\n\n    const suppliercontactdesignation = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactdesignation\n    );\n\n    const suppliercontactemail = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactemail\n    );\n    data.mongoid = mongoid;\n    data.values = suppliercontactname;\n    data.suppliercontactnamelist = suppliercontactname;\n    data.suppliercontactdesignation = suppliercontactdesignation;\n    data.suppliercontactnumber = suppliercontactnumber.map((item, i) => {\n      return item ? item.toString() : item;\n    });\n    data.suppliercontactemail = suppliercontactemail;\n    this.setState({ ...this.state.data, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactid = this.state.data.mongoid;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function(value, i) {\n      var obj = {};\n      obj.id = suppliercontactid[i] || null;\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is updated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody>Supplier data is updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert color=\"danger\">Supplier Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString() || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                  \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                       \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            Contact designation{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact designation name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact designation name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                      <AvGroup>\n                                        <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                        <span className=\"required-label\">*</span>\n                                        <AvField\n                                          type=\"select\"\n                                          name=\"contactnumber\"\n                                          onChange={this.onChange}\n                                          required={true}\n                                          disabled={true}\n                                        >\n                                          <option value=\"\">123</option>\n                                          <option value=\"\">345</option>\n                                          <option value=\"\"></option>\n                                          {this.createSelectNumbers()}\n                                        </AvField>\n                                      </AvGroup>\n                                    </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(SupplierDetailUpdateForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailUpdateForm from \"../SupplierForm/SupplierDetailUpdate\";\nimport {\n  getSupplierDetails,\n  updateSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetailUpdate extends React.Component {\n  state = {\n    supplierdetaillistvalue: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierDetails();\n    const supplierdetailid = this.props.match.params.id;\n    const supplierdetaillistvalue = this.props.supplierdetaillistvalue[\n      supplierdetailid\n    ];\n    this.setState({ supplierdetaillistvalue });\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, supplierdetaillistvalue } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Set Up</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail Update</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailUpdateForm\n            supplierdetaillistvalue={supplierdetaillistvalue}\n            submit={this.submit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetailUpdate.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails, updateSupplierDetails }\n)(SupplierDetailUpdate);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem, Button, Alert } from \"reactstrap\";\nimport { getSupplierDetails } from \"../../../../actions/Supplier\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass Supplierlist extends React.Component {\n  state = {\n    supplierdetaillist: [],\n    count: 0,\n    loading: false\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getSupplierDetails();\n  }\n  componentWillReceiveProps(props) {\n    let supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    //supplierdetaillistvalue= supplierdetaillistvalue.sort((a, b) => b.suppliernumber.toString().toLowerCase().localeCompare(a.suppliernumber.toString().toLowerCase()));\n\n    supplierdetaillistvalue.sort(function(a, b){\n      return parseInt(b.suppliernumber) - parseInt(a.suppliernumber);\n    });\n    const count = supplierdetaillistvalue.length;\n    const supplierdetaillist = supplierdetaillistvalue.map(\n      (supplierdata, i) => {\n        return {\n          suppliernumber: supplierdata.suppliernumber,\n          suppliername: supplierdata.suppliername,\n          suppliergstnumber: supplierdata.suppliergstnumber,\n          supplierAddress:\n            supplierdata.supplieraddress1 +\n            \" \" +\n            supplierdata.supplieraddress2 +\n            \" \" +\n            supplierdata.city +\n            \" \" +\n            supplierdata.state +\n            \" \" +\n            supplierdata.country +\n            \" \" +\n            supplierdata.pincode,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(supplierdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          )\n        };\n      }\n    );\n    this.setState({ supplierdetaillist, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/supplierdetail_update/${id}`;\n    this.props.history.push(path);\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { supplierdetaillist, count, loading } = this.state;\n    const columnvalue = [\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier GST\",\n        field: \"suppliergstnumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Address\",\n        field: \"supplierAddress\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier list</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={supplierdetaillist}\n                className=\"supplierlist\"\n              />\n            </div>\n          ) : (\n              <div>\n                <Alert color=\"info\">Please add Supplier details</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails }\n)(Supplierlist);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass ItemQuantitySearch extends React.Component {\n  state = {\n    data: {\n      locationid: \"\",\n      itemid: \"\"\n    },\n    locationlistvalue: [],\n    masteritemlistvalues: [],\n    loading: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    console.log('XXXXXXXXXXXXX');\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n  selectitemchange = () => { };\n  \n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          ...this.state,\n          loading: false\n        });\n      })\n      .catch(err => { });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Search Item Quantity</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>location</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"locationid\"\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>Item</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name={`itemid`}\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select Item</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    type=\"submit\"\n                    onClick={this.submit}\n                    style={{ marginTop: \"30px\" }}\n                  >\n                    Find\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ItemQuantitySearch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Alert } from \"reactstrap\";\nimport ItemSearch from \"./TotalQuantityForm/ItemQuantitySearch\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport {\n  totalitemvaluesearch,\n  getMasterItemList\n} from \"../../../actions/Transaction\";\nimport { ar } from \"date-fns/locale\";\n\nclass TotalQuantity extends React.Component {\n  state = {\n    itemlist: [],\n    success: false\n  };\n  componentDidMount() {\n    this.props.getLocationList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    return this.props.totalitemvaluesearch(data).then(data => {\n   \n       //console.log(itemsArray)\n      // var i=0,j,arr = [],count=0,isAllDuplicate=false;\n      // for(i=0;i<data.itemlist.length;i++){\n      //   j=i;\n      //   j = j + 1;\n      //   console.log(data.itemlist[i].itemquantity)\n      //   if(j < data.itemlist.length){\n      //     if(data.itemlist[i].itemname == data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[i].itemquantity)\n      //       isAllDuplicate = true;\n      //     }\n      //     else if(data.itemlist[i].itemname != data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[j].itemquantity)\n      //       if(count > 0)\n      //         data.itemlist[i].itemquantity = count\n      //       arr.push(data.itemlist[i])\n      //       count=0;\n      //       isAllDuplicate=false;\n      //     }\n      //   }\n      //   else if(j == data.itemlist.length){\n      //     console.log(data.itemlist[i].itemquantity)\n      //      if(count > 0)\n      //          data.itemlist[i].itemquantity = data.itemlist[i].itemquantity + count\n      //   }\n\n        \n      // }\n\n      // //console.log(count)\n      // //console.log(i)\n      // if(isAllDuplicate){\n      //   i > data.itemlist.length - 1 ?  arr.push(data.itemlist[i-1]) : arr.push(data.itemlist[i])\n      // }\n        \n\n      // console.log(arr)\n\n      // data.itemlist = arr;\n      \n      \n      const itemlist = data.itemlist.map(item => {\n        return {\n          // locationname: item.locationname,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist,\n        success: true\n      });\n   \n    });\n  };\n  render() {\n    const { success, itemlist } = this.state;\n    const columnvalue = [\n      // {\n      //   label: \"location\",\n      //   field: \"locationname\",\n      //   sort: \"asc\",\n      //   width: 40\n      // },\n      {\n        label: \"Item Code\",\n        field: \"itemname\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Item Description\",\n        field: \"itemdescription\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Quantity\",\n        field: \"itemquantity\",\n        sort: \"asc\",\n        width: 40\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transaction</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Total Item Quantity</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ItemSearch submit={this.submit} />\n        </div>\n        <div className=\"mg-t-20\">\n          {itemlist.length > 0 ? (\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={itemlist}\n              className=\"totalquantity\"\n            />\n          ) : (\n              <div>\n                <Alert color=\"info\" Label>Result Not Found.</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getLocationList, totalitemvaluesearch, getMasterItemList }\n)(TotalQuantity);\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\r\nimport { Button, Label, Alert } from \"reactstrap\";\r\nimport DatePicker from 'react-datepicker';\r\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\r\n\r\nclass LogsForm extends React.Component {\r\n  state = {\r\n    data: {\r\n      date: \"\",\r\n      type: \"\",\r\n      invoicelist: [],\r\n      quotationlist: [],\r\n      proformainvoicelist: []\r\n    },\r\n    quotationlistvalues: [],\r\n    invoicelistvalues: [],\r\n    proformainvoicelistvalues: [],\r\n    masteritemlistvalues: [],\r\n    loading: false\r\n  };\r\n  componentDidMount() {\r\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\r\n    let quotationlist = Object.values(this.props.quotationlistvalues);\r\n\r\n    let invoicelist = Object.values(this.props.invoicelistvalues);\r\n\r\n    let proformainvoicelist = Object.values(this.props.proformainvoicelistvalues);\r\n    \r\n    this.setState({\r\n      ...this.state,\r\n      masteritemlistvalues,\r\n      quotationlistvalues: quotationlist,\r\n      invoicelistvalues: invoicelist,\r\n      proformainvoicelistvalues: proformainvoicelist\r\n    });\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\r\n    this.setState({\r\n      ...this.state,\r\n      masteritemlistvalues\r\n    });\r\n  }\r\n  createSelectLocationItems = () => {\r\n    let items = [];\r\n    const locationlistvalue = this.state.locationlistvalue;\r\n    locationlistvalue.map((option, i) => {\r\n      items.push(\r\n        <option key={i} value={option.id}>\r\n          {option.locationname}\r\n        </option>\r\n      );\r\n    });\r\n    return items;\r\n  };\r\n\r\n  handledate = (date) => {\r\n    this.setState({\r\n        ...this.state,\r\n        data: { ...this.state.data, ['date']: date }\r\n      });\r\n  }\r\n\r\n  filterItems(itemarray, key) {\r\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\r\n  }\r\n\r\n  createSelectItems = () => {\r\n    let items = [];\r\n    items.push(\r\n        <option key=\"0\" value=\"Quotation Logs\">\r\n          Quotation Logs\r\n        </option>\r\n      );\r\n      items.push(\r\n        <option key=\"1\" value=\"Invoice Logs\">\r\n          Invoice Logs\r\n        </option>\r\n      );      \r\n      items.push(\r\n        <option key=\"2\" value=\"Proforma Invoice Logs\">\r\n          Proforma Invoice Logs\r\n        </option>\r\n      );      \r\n    return items;\r\n  };\r\n  selectitemchange = () => { };\r\n  \r\n  onhandlerChange = e => {\r\n    this.setState({\r\n        ...this.state,\r\n        data: { ...this.state.data, ['type']: e.target.value }\r\n      });\r\n  };\r\n  handleValidSubmit = () => {\r\n    const { data } = this.state;\r\n    let newQuotation = this.state.quotationlistvalues.filter((quot, key) => {\r\n        let selDate = new Date(data.date);\r\n        let quotationDate = new Date(quot.date);\r\n        quotationDate = new Date(quotationDate.getFullYear(), quotationDate.getMonth(), quotationDate.getDate());\r\n        if(selDate.getTime() == quotationDate.getTime()){\r\n            return quot;\r\n        }\r\n    });\r\n    data.quotationlist = newQuotation;\r\n    \r\n    let newInvoiceList = this.state.invoicelistvalues.filter((quot, key) => {\r\n        let selDate = new Date(data.date);\r\n        let quotationDate = new Date(quot.date);\r\n        quotationDate = new Date(quotationDate.getFullYear(), quotationDate.getMonth(), quotationDate.getDate());\r\n        if(selDate.getTime() == quotationDate.getTime()){\r\n            return quot;\r\n        }\r\n    });\r\n    data.invoicelist = newInvoiceList;\r\n\r\n    let newProformainvoice = this.state.proformainvoicelistvalues.filter((quot, key) => {\r\n        let selDate = new Date(data.date);\r\n        let quotationDate = new Date(quot.date);\r\n        quotationDate = new Date(quotationDate.getFullYear(), quotationDate.getMonth(), quotationDate.getDate());\r\n        if(selDate.getTime() == quotationDate.getTime()){\r\n            return quot;\r\n        }\r\n    });\r\n    data.proformainvoicelist = newProformainvoice;\r\n\r\n    this.props\r\n      .submit(data)\r\n      this.setState({\r\n        ...this.state,\r\n        loading: false\r\n      });  \r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div>\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={el => (this.myFormRef = el)}\r\n        >\r\n          <Card>\r\n            <CardHeader Label>Logs</CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col sm={2}>\r\n                  <AvGroup>\r\n                    <Label className='small-font-size'>Date</Label>\r\n                    <DatePicker\r\n                    autoComplete=\"new-password\"\r\n                    selected={this.state.data.date}\r\n                    onChange={this.handledate}\r\n                    className='form-control small-font-size'\r\n                    dateFormat='yyyy-MM-dd'\r\n                    id='date'\r\n                  />\r\n                  </AvGroup>\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <AvGroup>\r\n                    <Label className='small-font-size'>Type</Label>\r\n                    <AvField\r\n                      Label\r\n                      type=\"select\"\r\n                      name={`itemid`}\r\n                      onChange={this.onhandlerChange}\r\n                    >\r\n                      <option value=\"\">select Type</option>\r\n                      {this.createSelectItems()}\r\n                    </AvField>\r\n                  </AvGroup>\r\n                </Col>\r\n                <Col sm={1}>\r\n                  <Button\r\n                    Label\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    type=\"submit\"\r\n                    onClick={this.submit}\r\n                    style={{ marginTop: \"30px\" }}\r\n                  >\r\n                    Find\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </AvForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    masteritemlistvalues: state.masteritemlistvalues,\r\n    quotationlistvalues: state.quotationlistvalues,\r\n    invoicelistvalues: state.invoicelistvalues,\r\n    proformainvoicelistvalues: state.proformainvoicelistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(LogsForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem, Alert } from \"reactstrap\";\r\nimport DataTable from \"../../../Components/Table/DatatablePage\";\r\nimport { getLocationList } from \"../../../actions/Location\";\r\nimport { getquotation } from \"../../../actions/quotation\";\r\nimport { getproformainvoice } from \"../../../actions/Invoice\";\r\nimport { getinvoice } from \"../../../actions/Invoice\";\r\nimport {\r\n  totalitemvaluesearch,\r\n  getMasterItemList\r\n} from \"../../../actions/Transaction\";\r\nimport { ar } from \"date-fns/locale\";\r\nimport LogsForm from \"./LogsForm/LogsForm\";\r\n\r\nclass Logs extends React.Component {\r\n  state = {\r\n    logslist: [],\r\n    success: false,\r\n    quotationlistvalues: [],\r\n    invoicelistvalues: [],\r\n    proformainvoicelistvalues: []\r\n  };\r\n  componentDidMount() {\r\n    this.props.getquotation();\r\n    this.props.getMasterItemList();\r\n    this.props.getinvoice();\r\n    this.props.getproformainvoice();\r\n  }\r\n  submit = data => {\r\n    let logslist = [];\r\n    if(data.type == \"Quotation Logs\") {\r\n        logslist = data.quotationlist.map((value,index) => {\r\n          var created_date = new Date(value.date);\r\n\r\n          var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n          var year = created_date.getFullYear();\r\n          var month = months[created_date.getMonth()];\r\n          var date = created_date.getDate();\r\n          var hour = created_date.getHours();\r\n          var min = created_date.getMinutes();\r\n          var sec = created_date.getSeconds();\r\n          var time = date + ',' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n            return {\r\n                // locationname: item.locationname,\r\n                number: value.quotationnumber,\r\n                date: time,\r\n                user_email: value.user_email\r\n              };\r\n        });\r\n    }\r\n    else if(data.type == \"Invoice Logs\") { \r\n        logslist = data.invoicelist.map((value,index) => {\r\n          var created_date = new Date(value.date);\r\n\r\n          var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n          var year = created_date.getFullYear();\r\n          var month = months[created_date.getMonth()];\r\n          var date = created_date.getDate();\r\n          var hour = created_date.getHours();\r\n          var min = created_date.getMinutes();\r\n          var sec = created_date.getSeconds();\r\n          var time = date + ',' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n            return {\r\n                // locationname: item.locationname,\r\n                number: value.quotationnumber,\r\n                date: time,\r\n                user_email: value.user_email\r\n              };\r\n        });\r\n     }\r\n     else if(data.type == \"Proforma Invoice Logs\") { \r\n        logslist = data.proformainvoicelist.map((value,index) => {\r\n          var created_date = new Date(value.date);\r\n\r\n          var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n          var year = created_date.getFullYear();\r\n          var month = months[created_date.getMonth()];\r\n          var date = created_date.getDate();\r\n          var hour = created_date.getHours();\r\n          var min = created_date.getMinutes();\r\n          var sec = created_date.getSeconds();\r\n          var time = date + ',' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n            return {\r\n                // locationname: item.locationname,\r\n                number: value.quotationnumber,\r\n                date: time,\r\n                user_email: value.user_email\r\n              };\r\n        });\r\n      }\r\n    //   const itemlist = data.itemlist.map(item => {\r\n    //     return {\r\n    //       // locationname: item.locationname,\r\n    //       itemname: item.itemname,\r\n    //       itemdescription: item.itemdescription,\r\n    //       itemquantity: item.itemquantity\r\n    //     };\r\n    //   });\r\n    //   this.setState({\r\n    //     ...this.state,\r\n    //     itemlist,\r\n    //     success: true\r\n    //   });\r\n    this.setState({\r\n        ...this.state,\r\n        logslist,\r\n        success: true\r\n      });\r\n    return logslist;\r\n  };\r\n  render() {\r\n    const { success, logslist } = this.state;\r\n    const columnvalue = [\r\n      // {\r\n      //   label: \"location\",\r\n      //   field: \"locationname\",\r\n      //   sort: \"asc\",\r\n      //   width: 40\r\n      // },\r\n      {\r\n        label: \"Number\",\r\n        field: \"number\",\r\n        sort: \"asc\",\r\n        width: 40\r\n      },\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n        sort: \"asc\",\r\n        width: 40\r\n      },\r\n      {\r\n        label: \"Added By\",\r\n        field: \"user_email\",\r\n        sort: \"asc\",\r\n        width: 40\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"container mg-t-20\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/admin_dashboard\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/transaction_page\">Transaction</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Logs</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <LogsForm submit={this.submit} />\r\n        </div>\r\n        <div className=\"mg-t-20\">\r\n          {logslist.length > 0 ? (\r\n            <DataTable\r\n              columnvalue={columnvalue}\r\n              rowvalues={logslist}\r\n              className=\"totalquantity\"\r\n            />\r\n          ) : (\r\n              <div>\r\n                <Alert color=\"info\" Label>Result Not Found.</Alert>\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { getquotation, getinvoice, getproformainvoice, getMasterItemList }\r\n)(Logs);\r\n","import axios from 'axios';\n\nexport default {\n  order: {\n    addorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/addorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    updateaddorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/updateworkorder`, {\n          data\n        })\n        .then(res => {\n          return true;\n        });\n    },\n\n    getorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n        .then(res => {\n          return res.data.orderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/order';\nimport { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\nimport { orderListSchema } from '../Schemas/schemas';\n\nconst orderCreated = orderlist => {\n  return {\n    type: ADD_ORDER,\n    orderlist\n  };\n};\n\nconst orderFetched = orderlist => {\n  return {\n    type: ORDER_FETCHED,\n    orderlist\n  };\n};\n\nexport const addorder = data => {\n  return dispatch => {\n    return api.order.addorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\nexport const updateaddorder = data => {\n  return dispatch => {\n    return api.order.updateaddorder(data).then(orderlistvalues => {\n      return true\n    });\n  };\n};\n\n\n\nexport const getorder = () => {\n  return dispatch => {\n    return api.order.getorder().then(orderlist => {\n      console.log(orderlist);\n      const orderlistvalues = orderlist.orderdata;\n      console.log(orderlistvalues);\n      return dispatch(\n        orderFetched(normalize(orderlistvalues, [orderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass OrderForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: [],\n        totalweight: [],\n        readystock: [],\n        firstround: [],\n        secondround: [],\n        thirdround: []\n      },\n      workorderno: '',\n      quotationnumber: '',\n      quotationid: '',\n      companydetails: '',\n      contactperson: '',\n      date: new Date(),\n      officeno: '',\n      deliveryschedule: new Date(),\n      orderdate: new Date(),\n      deliveryaddress: '',\n      distance: '',\n      sitecontactperson: '',\n      gstno: '',\n      pono: '',\n      values: ['']\n    },\n    errors: {},\n    selectedQuotationId: null,\n    selectedQuotationNumber: null,\n    quotationlistvalues: [],\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    quotationlistSelect: [],\n    itemlistSelectedOption: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const quotationlistvalues = Object.values(this.props.quotationlistvalues);\n\n    if (this.props.ID != undefined) {\n      this.getWorkorderDetails(this.props.ID)\n    }\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    this.setState({\n      ...this.state,\n      quotationlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n    });\n  }\n\n  getWorkorderDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getsingleworkorder/${id}`)\n      .then(res => {\n\n         if (res.data.orderlist.orderdata.length > 0) {\n           let founddata = res.data.orderlist.orderdata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.workorderno = founddata[0].workorderno;\n           newState.data.companydetails = founddata[0].companydetails;\n           newState.data.contactperson = founddata[0].contactperson;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.officeno = founddata[0].officeno;\n           newState.data.deliveryschedule =  new Date(founddata[0].deliveryschedule);\n           newState.data.orderdate =  new Date(founddata[0].orderdate);\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.distance = founddata[0].distance;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.pono = founddata[0].pono\n           newState.data.sitecontactperson = founddata[0].sitecontactperson\n           if(founddata[0].quotationid) {\n            newState.selectedQuotationId = founddata[0].quotationid;\n            newState.data.quotationid = founddata[0].quotationid;\n            newState.selectedQuotationNumber = founddata[0].quotationnumber;\n            newState.data.quotationnumber = founddata[0].quotationnumber;\n           }\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n               \n              newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.totalweight.push(founddata[0].addeditemlist[i].totalweight)\n              newState.data.selectedItemlist.readystock.push(founddata[0].addeditemlist[i].readystock)\n              newState.data.selectedItemlist.firstround.push(founddata[0].addeditemlist[i].firstround)\n              newState.data.selectedItemlist.secondround.push(founddata[0].addeditemlist[i].secondround)\n              newState.data.selectedItemlist.thirdround.push(founddata[0].addeditemlist[i].thirdround)\n   \n\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState,()=>{\n              console.log(this.state.data.selectedItemlist)\n            });\n\n         \n         \n          // if (founddata[0].addeditemlist.length > 0) {\n          //   founddata[0].addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index);\n          //   })\n          // }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  async componentWillReceiveProps(props) {\n\n    console.log(this.props.orderlistvalues);\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const orderlistvalues = Object.keys(this.props.orderlistvalues);\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n    if (this.props.ID == undefined) {\n      let workorderno =\n      orderlistvalues.length > 0 ? 15 + orderlistvalues.length : 50;\n\n\n      this.setState({ loading: true });\n      await axios\n         .get(`${process.env.REACT_APP_BASE_URL}/order/getorderno`)\n         .then(res => {\n           if(res.data.orderno){\n             workorderno = parseInt(res.data.orderno);\n           }\n         },\n         error =>{\n           this.setState({ loading: false });\n       });\n   \n      this.setState({ loading: false });\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        itemlistSelectedOption: newArraySet,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data,\n          workorderno\n        }\n      },() =>{\n        if(orderlistvalues.length == 0)\n          this.getOrderData()\n      });\n    }\n    else{\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        itemlistSelectedOption: newArraySet,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      });\n    }\n\n  }\n\n  getOrderData(){\n    if(Object.keys(this.props.orderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n      .then(res => {\n        console.log(res.data.orderlist.orderdata)\n         //if (res.data.orderlist.orderdata.length > 0) {\n           \n          let workorderno =\n          res.data.orderlist.orderdata.length > 0 ? 1 + res.data.orderlist.orderdata.length : 1;\n\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              workorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChangeDeliveryschedule = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        deliveryschedule: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n      // selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        : selected_item.masteritemshortdescription\n\n      selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n     // selectedItemlist.itemlocation[index] = null;\n\n\n\n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n\n          selectedItemlist.totalweight[index] = \n          selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n          selected_item.masteritemunitwt != \"\" ? (1 * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n          \n        } \n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 1],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, ''],\n          totalweight: [...this.state.data.selectedItemlist.totalweight, ''],\n          readystock: [...this.state.data.selectedItemlist.readystock, ''],\n          firstround: [...this.state.data.selectedItemlist.firstround, ''],\n          secondround: [...this.state.data.selectedItemlist.secondround, ''],\n          thirdround: [...this.state.data.selectedItemlist.thirdround, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    let removeItem = { ...this.state.data };\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemlocation = removeItem.selectedItemlist.itemlocation;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n\n    let remarks = removeItem.selectedItemlist.remarks;\n    let totalweight = removeItem.selectedItemlist.totalweight;\n    let readystock = removeItem.selectedItemlist.readystock;\n    let firstround = removeItem.selectedItemlist.firstround;\n    let secondround = removeItem.selectedItemlist.secondround;\n    let thirdround = removeItem.selectedItemlist.thirdround;\n\n\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n    remarks.splice(index, 1);\n    totalweight.splice(index, 1);\n    readystock.splice(index, 1);\n    firstround.splice(index, 1);\n    secondround.splice(index, 1);\n    thirdround.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks,\n          totalweight,\n          readystock,\n          firstround,\n          secondround,\n          thirdround\n        }\n      }\n    });\n  };\n\n\n\n  handleQuotationChange = async(e) => {\n    console.log(e)\n    let selectedquotation = e.value ? e.value : e\n    console.log(selectedquotation)\n    const quotationlistvalues = this.state.quotationlistvalues;\n    let quotationselected = quotationlistvalues.filter(\n      quotation => quotation._id === selectedquotation || quotation.quotationnumber === selectedquotation\n    );\n    console.log(quotationselected)\n    if(quotationselected && quotationselected.length > 0){\n      quotationselected = quotationselected[0];\n\n      let contactperson = quotationselected.customername ? quotationselected.customername : '';\n      let deliveryaddress = quotationselected.customeraddress ? quotationselected.customeraddress : '';\n      let companydetails = quotationselected.customeraddress ? quotationselected.customeraddress : '';\n      let officeno = quotationselected.customercontactnumber ? quotationselected.customercontactnumber : '';\n      let gstno = quotationselected.customergstnumber ? quotationselected.customergstnumber : '';\n      \n\n      let poDate = \"\";\n      let transId = null;\n      const quotationnumber = quotationselected.quotationnumber;\n      const quotationid = selectedquotation;\n      this.setState({ loading: true });\n      const purchaseordernumber = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + quotationselected.customerid)\n      .then(res => {\n        this.setState({ loading: false });\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == quotationselected.quotationnumber\n            });\n            transId = customervalues[0]['_id'];\n            poDate = customervalues[0]['po'];\n            return customervalues[0]['ponum'];\n          }\n        }\n      },\n      error =>{\n        this.setState({ loading: false });\n      });\n      const date = new Date(quotationselected.date);\n      let purchaseorderdate = this.state.data.purchaseorderdate;\n      if(poDate != \"\" && poDate != null) {\n        let arrDate = poDate.split(\"/\");\n        let newDate = arrDate[1]+\"/\"+arrDate[0]+\"/\"+arrDate[2];\n        purchaseorderdate = new Date(newDate);\n      }\n\n\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: [],\n        totalweight: [],\n        readystock: [],\n        firstround: [],\n        secondround: [],\n        thirdround: []\n      }\n      let values = quotationselected.addeditemlist\n      if (quotationselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < quotationselected.addeditemlist.length; i++) {\n\n\n          quotationselected.addeditemlist[i].quantity = quotationselected.addeditemlist[i].quantity == null || quotationselected.addeditemlist[i].quantity == '' ?\n          quotationselected.addeditemlist[i].quantity = 0 : quotationselected.addeditemlist[i].quantity\n          quotationselected.addeditemlist[i].quantity = (quotationselected.addeditemlist[i].quantity).toString()\n\n          quotationselected.addeditemlist[i].costperunit = quotationselected.addeditemlist[i].costperunit == null || quotationselected.addeditemlist[i].costperunit == '' ?\n          quotationselected.addeditemlist[i].costperunit = 0 : quotationselected.addeditemlist[i].costperunit\n          quotationselected.addeditemlist[i].costperunit = (quotationselected.addeditemlist[i].costperunit).toString()\n\n          quotationselected.addeditemlist[i].totalcost = quotationselected.addeditemlist[i].totalcost == null || quotationselected.addeditemlist[i].totalcost == '' ?\n          quotationselected.addeditemlist[i].totalcost = 0 : quotationselected.addeditemlist[i].totalcost\n          quotationselected.addeditemlist[i].totalcost = (quotationselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(quotationselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemtype.push(quotationselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemlocation.push(quotationselected.addeditemlist[i].itemlocation)\n          selectedItemlist.remarks.push(quotationselected.addeditemlist[i].remarks)\n          selectedItemlist.totalweight.push(quotationselected.addeditemlist[i].totalweight)\n          selectedItemlist.readystock.push(quotationselected.addeditemlist[i].readystock)\n          selectedItemlist.firstround.push(quotationselected.addeditemlist[i].firstround)\n          selectedItemlist.secondround.push(quotationselected.addeditemlist[i].secondround)\n          selectedItemlist.thirdround.push(quotationselected.addeditemlist[i].thirdround)\n\n\n         \n          selectedItemlist.itemuom.push(quotationselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(quotationselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(quotationselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(quotationselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(quotationselected.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          quotationnumber,\n          pono: purchaseordernumber,\n          quotationid,\n          contactperson,\n          deliveryaddress,\n          companydetails,\n          officeno,\n          gstno,\n          purchaseorderdate,\n          selectedItemlist,\n          values\n        },\n        selectedQuotationId: selectedquotation,\n        selectedQuotationNumber: quotationselected.quotationnumber,\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            quotationnumber : quotationnumber,\n            quotationid : quotationid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (quotationselected.addeditemlist.length > 0) {\n            quotationselected.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n        });\n      });\n    }\n  }\n\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    console.log(selectedItemlist)\n    \n    const selected_item = this.state.masteritemlistvaluesobject[selectedItemlist.id[index]];\n    console.log(selected_item)\n\n\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    const wtperunit = selectedItemlist.totalweight[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit  \n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue ? parseFloat(totalValue).toFixed(2)\n      : '';\n\n\n    selectedItemlist.totalweight[index] = \n    selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n    selected_item.masteritemunitwt != \"\" ? (e.target.value * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n\n    const totalweight = selectedItemlist.totalweight;\n    const readystock = selectedItemlist.readystock;\n    const firstround = selectedItemlist.firstround;\n    const secondround = selectedItemlist.secondround;\n    const thirdround = selectedItemlist.thirdround;\n\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      obj.totalweight = totalweight[i] || null;\n      obj.readystock = readystock[i] || null;\n      obj.firstround = firstround[i] || null;\n      obj.secondround = secondround[i] || null;\n      obj.thirdround = thirdround[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success } = this.state;\n    let SelQuota;\n    if(this.state.selectedQuotationId) {\n      SelQuota = {\n        value: this.state.selectedQuotationId, label: this.state.selectedQuotationNumber\n      }\n    }\n    let quotationdisp = this.state.selectedQuotationId != undefined ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required value={SelQuota} options={this.state.quotationlistSelect} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required defaultValue={data.deliverychallannumber} options={this.state.quotationlistSelect} />\n    );\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Work Order</ModalHeader>\n              <ModalBody>Work order is edited/generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Work order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Quotation No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  {/* <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField> */}\n                  {quotationdisp}\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='companydetails'>Company Name & address </Label>\n                    <AvField\n                      name='companydetails'\n                      type='text'\n                      id='companydetails'\n                      value={data.companydetails}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='contactperson'>Contact Person</Label>\n                  <AvField\n                    name='contactperson'\n                    type='text'\n                    id='contactperson'\n                    value={data.contactperson || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='officeno'>Office Number</Label>\n                  <AvField\n                    name='officeno'\n                    type='number'\n                    id='officeno'\n                    value={data.officeno || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryschedule'>Delivery Schedule</Label>\n                    <DatePicker\n                    autoComplete=\"new-password\"\n                      selected={data.deliveryschedule}\n                      onChange={this.handleChangeDeliveryschedule}\n                      className='form-control'\n                      autoComplete=\"new-password\"\n                      dateFormat='dd/MM/yyyy'\n                      id='deliveryschedule'\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='orderdate'>Order Date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.orderdate}\n                    onChange={this.handleChangeDeliveryDate}\n                    className='form-control'\n                    autoComplete=\"new-password\"\n                    dateFormat='dd/MM/yyyy'\n                    id='orderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      value={data.deliveryaddress}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='distance'>Distance(KM)</Label>\n                    <AvField\n                      name='distance'\n                      type='text'\n                      id='distance'\n                      value={data.distance}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sitecontactperson'>Site contact person</Label>\n                    <AvField\n                      name='sitecontactperson'\n                      type='text'\n                      id='sitecontactperson'\n                      value={data.sitecontactperson}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='pono'>PO NO</Label>\n                    <AvField\n                      name='pono'\n                      type='number'\n                      id='pono'\n                      value={data.pono}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                            let optionsel = \"\";\n                            let SelVal = {};\n                            if(values.id != undefined) {\n                              if(values.itemshortdescription) {\n                                optionsel = values.itemshortdescription;\n                              }\n                              else {\n                                optionsel = values.itemdescription;\n                              }\n                              SelVal = {\n                                value: values.id._id, label: optionsel\n                              }\n                            }\n                            const itemnameinfo = values.id != undefined ? (\n                              // <AvField\n                              //   type=\"select\"\n                              //   value={values.id._id}\n                              //   name={`selectitem${index}`}\n                              //   onChange={e => this.selectitemchange(e, index)}\n                              //   required={true}\n                              // >\n                              //   <option value=\"\">select Item</option>\n                              //   {this.createSelectItems()}\n                              // </AvField>\n                              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                              ) :\n                              (\n                                // <AvField\n                                //   type=\"select\"\n                                //   name={`selectitem${index}`}\n                                //   value={\n                                //     data.selectedItemlist.id[index]\n                                //   }\n                                //   onChange={e => this.selectitemchange(e, index)}\n                                //   required={true}\n                                // >\n                                //   <option value=\"\">select Item</option>\n                                //   {this.createSelectItems()}\n                                // </AvField>\n                                <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                              )\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={data.selectedItemlist.id[index]}\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalweight${index}`}>Total weight</Label>\n                              <AvField\n                                name={`totalweight${index}`}\n                                type='text'\n                                id={`totalweight${index}`}\n                                value={\n                                  data.selectedItemlist.totalweight[index] \n                                \n                                }\n                                onChange={e => this.weightChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`readystock${index}`}>Ready stock</Label>\n                              <AvField\n                                name={`readystock${index}`}\n                                type='text'\n                                id={`readystock${index}`}\n                                value={\n                                  data.selectedItemlist.readystock[index]\n                                }\n                                onChange={e => this.stockChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`firstround${index}`} >1st round</Label>\n                              <AvField\n                                name={`firstround${index}`}\n                                type='text'\n                                id={`firstround${index}`}\n                                value={\n                                  data.selectedItemlist.firstround[index]\n                                }\n                                onChange={e => this.firstChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`secondround${index}`}>2nd round</Label>\n                              <AvField\n                                name={`secondround${index}`}\n                                type='text'\n                                id={`secondround${index}`}\n                                value={\n                                  data.selectedItemlist.secondround[index]\n                                }\n                                onChange={e => this.secondChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`thirdround${index}`}>3rd round</Label>\n                              <AvField\n                                name={`thirdround${index}`}\n                                type='text'\n                                id={`thirdround${index}`}\n                                value={\n                                  data.selectedItemlist.thirdround[index]\n                                }\n                                onChange={e => this.thirdChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`remarks${index}`}>Remarks</Label>\n                              <AvField\n                                name={`remarks${index}`}\n                                type='text'\n                                id={`remarks${index}`}\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OrderForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addorder } from '../../../../actions/order';\nimport { getquotation } from '../../../../actions/quotation';\nimport { updateaddorder } from '../../../../actions/order';\nimport { getorder } from '../../../../actions/order';\nimport OrderForm from './OrderForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getorder();\n    this.props.getquotation();\n  }\n  \n  componentWillReceiveProps() {\n    \n  }\n\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      return this.props\n      .updateaddorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n      .addorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Work order</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <OrderForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getorder,\n    getCustomerList,\n    addorder,\n    getquotation,\n    updateaddorder\n  }\n)(AddOrder);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewOrder extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    orderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getorder();\n    console.log(this.props);\n    if (this.props.orderlistvalues) {\n      let orderlist = Object.values(this.props.orderlistvalues);\n      orderlist.sort(function(a, b){\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\n      });\n      const orderlistvalues = orderlist.map(quotationvalue => {\n        if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n          const DateNow = new Date();\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\n          return {\n            workorderno: quotationvalue.workorderno,\n            companyname: quotationvalue.companydetails,\n            contactperson: quotationvalue.contactperson,\n            officeno: quotationvalue.officeno,\n            view: (\n              <div className=\"actionbuttons\">\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateButton(quotationvalue._id);\n                  }}\n                >\n                  Print\n                </Button>\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateworkorder(quotationvalue._id);\n                  }}\n                >\n                  Edit\n                </Button>\n                </div>\n            ),\n            complete: deliveryDate.getTime() < DateNow.getTime() ? (\n              <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Complete\n            </Button>\n            ) : null\n          };\n        }\n      });  \n      this.setState({ ...this.state, orderlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let orderlist = Object.values(props.orderlistvalues);\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\n    orderlist.sort(function(a, b){\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\n    });\n    console.log(props);\n    const orderlistvalues = orderlist.map(quotationvalue => {\n      if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n      const DateNow = new Date();\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\n      return {\n        workorderno: quotationvalue.workorderno,\n        companyname: quotationvalue.companydetails,\n        contactperson: quotationvalue.contactperson,\n        officeno: quotationvalue.officeno,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        ),\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\n          <Button\n          Label\n          color='primary'\n          onClick={() => {\n            this.updateCompleteOrder(quotationvalue._id);\n          }}\n        >\n          Complete\n        </Button>\n        ) : null        \n      };\n    }\n    });\n    this.setState({ ...this.state, orderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_orderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updateCompleteOrder = id => {\n    let data = this.props.orderlistvalues[id];\n    console.log(\"order is\", data);\n    data['_id'] = id;\n    data['AddedIteminfo'] = data.addeditemlist;\n    data['completed'] = \"yes\";\n    return this.props\n    .updateaddorder(data)\n    .then(data => {\n      this.dataHandler(false);\n      this.props.getorder();\n      window.location.reload(true);\n    })\n    .catch(err => {\n      this.dataHandler(false);\n      throw err;\n    });\n  };\n\n\n  updateworkorder= id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editworkorder/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, orderlistvalues } = this.state;\n    console.log(orderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Order ID',\n        field: 'workorderno',\n        sort: 'asc',\n        width: 20\n      },\n      {\n        label: 'Company Name',\n        field: 'companyname',\n        sort: 'asc',\n        width: 30\n      },\n      {\n        label: 'Contact Person',\n        field: 'contactperson',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Office Number',\n        field: 'officeno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Complete',\n        field: 'complete',\n        sort: 'asc',\n        width: 20\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          scrollx=\"true\"\n          rowvalues={orderlistvalues} \n          columnvalue={columnvalue}\n          className=\"orderlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getorder, updateaddorder }\n)(ViewOrder);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getorder } from '../../../../actions/order';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewCompletedOrder extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    orderlistvalues: []\r\n  };\r\n  componentDidMount() {\r\n    this.props.getorder();\r\n    console.log(this.props);\r\n    if (this.props.orderlistvalues) {\r\n      let orderlist = Object.values(this.props.orderlistvalues);\r\n      orderlist.sort(function(a, b){\r\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n      });\r\n      const orderlistvalues = orderlist.map(quotationvalue => {\r\n        if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n          const DateNow = new Date();\r\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n          return {\r\n            workorderno: quotationvalue.workorderno,\r\n            companyname: quotationvalue.companydetails,\r\n            contactperson: quotationvalue.contactperson,\r\n            officeno: quotationvalue.officeno,\r\n            view: (\r\n              <div className=\"actionbuttons\">\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateButton(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Print\r\n                </Button>\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateworkorder(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                </div>\r\n            )\r\n          };\r\n        }\r\n      });  \r\n      this.setState({ ...this.state, orderlistvalues });\r\n      this.dataHandler(false);\r\n    }\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    let orderlist = Object.values(props.orderlistvalues);\r\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\r\n    orderlist.sort(function(a, b){\r\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n    });\r\n    console.log(props);\r\n    const orderlistvalues = orderlist.map(quotationvalue => {\r\n      if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n      const DateNow = new Date();\r\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n      return {\r\n        workorderno: quotationvalue.workorderno,\r\n        companyname: quotationvalue.companydetails,\r\n        contactperson: quotationvalue.contactperson,\r\n        officeno: quotationvalue.officeno,\r\n        view: (\r\n          <div className=\"actionbuttons\">\r\n            <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateButton(quotationvalue._id);\r\n              }}\r\n            >\r\n              Print\r\n            </Button>\r\n            {/* <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateworkorder(quotationvalue._id);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button> */}\r\n            </div>\r\n        ),\r\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\r\n          <Button\r\n          Label\r\n          color='primary'\r\n          onClick={() => {\r\n            this.updateCompleteOrder(quotationvalue._id);\r\n          }}\r\n        >\r\n          Complete\r\n        </Button>\r\n        ) : null        \r\n      };\r\n    }\r\n    });\r\n    this.setState({ ...this.state, orderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_orderpdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n\r\n  updateworkorder= id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/editworkorder/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, orderlistvalues } = this.state;\r\n    console.log(orderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Order ID',\r\n        field: 'workorderno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Company Name',\r\n        field: 'companyname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Contact Person',\r\n        field: 'contactperson',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Office Number',\r\n        field: 'officeno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Print',\r\n        field: 'view',\r\n        sort: 'asc',\r\n        width: 20\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/work-order'>Work order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>List</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable \r\n          rowvalues={orderlistvalues} \r\n          columnvalue={columnvalue}\r\n          className=\"orderlist\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    orderlistvalues: state.orderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getorder }\r\n)(ViewCompletedOrder);\r\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  headerfont3: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  headerfont4: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold'\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 10\n  },\n  dcaddress_left: {\n    fontSize: 10\n  },\n  view_border: {\n    border: '1pt solid #000',\n    flexGrow: 1,\n    height: 100\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingLeft: 100\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 10,\n    fontWeight: 'bolder',\n    textAlign: 'center'\n  },\n  header_tintext: {\n    fontSize: 10,\n    fontWeight: 900\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, textAlign: 'left', wordWrap: 'break-word' }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n  console.log(JSON.stringify(orderlistvalues));\n  let data = orderlistvalues.addeditemlist;\n  let totalwt = 0\n  if(data.length > 0){\n   \n    for(var i=0;i<data.length;i++){\n      totalwt += parseFloat(data[i].totalweight)\n    }\n  }\n  console.log('data');\n  console.log(totalwt);\n  totalwt = parseFloat(totalwt)\n  totalwt = totalwt.toFixed(2)\n  const totalrs = orderlistvalues.totalvalue ? orderlistvalues.totalvalue : '';\n  const taxableAmount = orderlistvalues.taxableamount;\n  const date = moment(orderlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(orderlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(orderlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = orderlistvalues.billingaddress;\n  const vendorcode = orderlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = orderlistvalues;\n\n  let {\n    workorderno,\n    companydetails,\n    contactperson,\n    officeno,\n    deliveryschedule,\n    orderdate,\n    gstno,\n    deliveryaddress,\n    distance,\n    sitecontactperson,\n    pono\n  } = orderlistvalues;\n  //orderdate = new Date(orderdate)\n  const purchaseordernumber = orderlistvalues.purchaseordernumber;\n\n  const tax = orderlistvalues.tax ? orderlistvalues.tax : '';\n  const taxpercentage = orderlistvalues.tax ? orderlistvalues.tax / 100 : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = orderlistvalues.selectedcontactlist[0]\n  //     ? orderlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\nlet pageone = [];\nlet pageTwo = [];\nlet pageoneislast = false;\nlet pagetwoislast = false;\n\n\ndata.forEach((ele, i) => {\n  if (i == 0 && data.length > 1) {\n      if(ele.itemname.length < 2383) {\n          pageone.push(ele);\n          if (ele.itemname.length + data[i + 1].itemname.length < 2383) {\n              pageone.push(data[i + 1]);\n              if (data.length > 2) {\n                  if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length < 2383) {\n                      pageone.push(data[i + 2]);\n                      if (data.length > 3) {\n                          if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length < 2383) {\n                              pageone.push(data[i + 3]);\n                              if (data.length > 4) {\n                                  if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length + data[i + 4].itemname.length < 2383) {\n                                      pageone.push(data[i + 4]);\n                                      if (data.length > 5) {\n                                        if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length + data[i + 4].itemname.length + data[i + 5].itemname.length < 2383) {\n                                          pageone.push(data[i + 5]);\n                                          if (data.length > 6) {\n                                            if (ele.itemname.length + data[i + 1].itemname.length + data[i + 2].itemname.length + data[i + 3].itemname.length + data[i + 4].itemname.length + data[i + 5].itemname.length + data[i + 6].itemname.length < 2383) {\n                                              pageone.push(data[i + 6]);\n                                            }\n                                          }\n                                        }\n                                      }\n                                  }\n                              }\n                          }\n                      }\n                  }\n              }\n          }\n      }\n      if (pageone.length > 0) {\n          if (data.length > pageone.length) {\n              pagetwoislast = true;\n              if (data[pageone.length].itemname.length < 2723) {\n                  pageTwo.push(data[pageone.length])\n              }\n              if(data.length > (pageone.length + 1) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length < 2723) {\n                  pageTwo.push(data[pageone.length + 1])\n              }\n              if(data.length > (pageone.length + 2) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length < 2723) {\n                  pageTwo.push(data[pageone.length + 2])\n              }\n              if(data.length > (pageone.length + 3) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length < 2723) {\n                  pageTwo.push(data[pageone.length + 3])\n              }\n              if(data.length > (pageone.length + 4) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length + data[pageone.length + 4].itemname.length < 2723) {\n                  pageTwo.push(data[pageone.length + 4])\n              }\n              if(data.length > (pageone.length + 5) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length + data[pageone.length + 4].itemname.length + data[pageone.length + 5].itemname.length < 2723) {\n                  pageTwo.push(data[pageone.length + 5])\n              }\n              if(data.length > (pageone.length + 6) && data[pageone.length].itemname.length + data[pageone.length + 1].itemname.length + data[pageone.length + 2].itemname.length + data[pageone.length + 3].itemname.length + data[pageone.length + 4].itemname.length + data[pageone.length + 5].itemname.length + data[pageone.length + 6].itemname.length < 2723) {\n                  pageTwo.push(data[pageone.length + 6])\n              }                \n          }\n          else {\n            pageoneislast = true;\n          }\n      }\n  }\n  else if((i == 0 && data.length == 1)) {\n      pageone.push(data[i]);\n      pageoneislast = true;\n  }\n});\n\n\nlet pageoneTable;\nlet pagetwoTable;\nlet pagethreeTable;\n\n\nif (pageone.length > 0) {\n  pageoneTable = pageone.map((pageonedata, index) => {\n    if(index == 0) {\n      return (\n          <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={pageone}\n          >\n          <TableHeader\n            textAlign={'center'}\n            style={{ backgroundColor: 'tomato' }}\n          >\n            <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n              <Text style={styles.headerfont3}>SL</Text>\n            </TableCell>\n            <TableCell weighting={0.7}>\n              <Text style={styles.headerfont3}>Material</Text>\n            </TableCell>\n            <TableCell weighting={0.3}>\n              <Text style={styles.headerfont3}>Total weight</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>Ready stock</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>1st trip</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>2nd trip</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>3rd trip</Text>\n            </TableCell>\n            <TableCell weighting={0.3}>\n              <Text style={styles.headerfont3}>Remarks</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              weighting={0.08}\n            \n              getContent={r => <Text style={styles.headerfont4}>{r.slno}</Text>}\n            />\n            <DataTableCell\n              \n              weighting={0.7}\n              getContent={r => <Text style={styles.headerfont4}>{r.itemname}</Text>}\n            />\n            <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.totalweight}</Text>} />\n            <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.quantity}</Text>} />\n            <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.readystock}</Text>} />\n            <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.firstround}</Text>} />\n            <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.secondround}</Text>} />\n            <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.thirdround}</Text>} />\n            <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.remarks}</Text>} />\n          </TableBody>\n          </Table>\n      )\n    }\n  })\n}\n\n\nif (pageTwo.length > 0) {\n  pagetwoTable = pageTwo.map((pagetwodata, index) => {\n    if(index == 0) {\n      return (\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        <Text style={{ fontSize: 14, fontWeight: 900, textAlign: 'center', margin: 8 }}>WORK ORDER</Text>\n        <Text style={{ fontSize: 12, fontWeight: 500, textAlign: 'right', margin: 8 }}>Workorder Date : {orderdate}</Text>\n        <View>\n          <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={pageTwo}\n          >\n          <TableHeader\n            textAlign={'center'}\n            style={{ backgroundColor: 'tomato' }}\n          >\n            <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n              <Text style={styles.headerfont3}>SL</Text>\n            </TableCell>\n            <TableCell weighting={0.7}>\n              <Text style={styles.headerfont3}>Material</Text>\n            </TableCell>\n            <TableCell weighting={0.3}>\n              <Text style={styles.headerfont3}>Total weight</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>Ready stock</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>1st trip</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>2nd trip</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont3}>3rd trip</Text>\n            </TableCell>\n            <TableCell weighting={0.3}>\n              <Text style={styles.headerfont3}>Remarks</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              weighting={0.08}\n            \n              getContent={r => <Text style={styles.headerfont4}>{r.slno}</Text>}\n            />\n            <DataTableCell\n              \n              weighting={0.7}\n              getContent={r => <Text style={styles.headerfont4}>{r.itemname}</Text>}\n            />\n            <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.totalweight}</Text>} />\n            <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.quantity}</Text>} />\n            <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.readystock}</Text>} />\n            <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.firstround}</Text>} />\n            <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.secondround}</Text>} />\n            <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.thirdround}</Text>} />\n            <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.remarks}</Text>} />\n          </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Text style={styles.headerfont4}>Total Weight : {totalwt}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n        </Page>\n      )\n    }\n  })\n}\n\n\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>PO No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{pono}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => r.itemname}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.totalweight} />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.readystock} />\n              <DataTableCell weighting={0.2} getContent={r => r.firstround} />\n              <DataTableCell weighting={0.2} getContent={r => r.secondround} />\n              <DataTableCell weighting={0.2} getContent={r => r.thirdround} />\n              <DataTableCell weighting={0.4} getContent={r => r.remarks} />\n            </TableBody>\n          </Table>\n          \n          <Text>{'\\n'}</Text>\n          \n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        <Text style={{ fontSize: 14, fontWeight: 900, textAlign: 'center', margin: 8 }}>WORK ORDER</Text>\n        <Text style={{ fontSize: 12, fontWeight: 500, textAlign: 'right', margin: 8 }}>Workorder Date : {orderdate}</Text>\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Order ID</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{workorderno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder Date</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{orderdate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table> */}\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>9</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Distance</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{distance} Km</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text>{'\\n'}</Text>\n\n          {pageoneTable}\n\n          <Text>{'\\n'}</Text>\n          <Text style={styles.headerfont4}>Total Weight : {totalwt}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      </Page>\n      {pagetwoTable}\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getorder } from '../../../../actions/order';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewOrder';\n\nclass ViewOrderPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getorder();\n    const quotationid = this.props.match.params.id;\n    console.log(this.props.orderlistvalues);\n    const orderlistvalues = this.props.orderlistvalues[quotationid];\n    orderlistvalues.requestdeliverydate = moment(orderlistvalues.date).format(\n      'DD MMM, YYYY'\n    );\n    orderlistvalues.deliveryschedule = moment(\n      orderlistvalues.deliveryschedule\n    ).format('DD MMM, YYYY');\n    \n    orderlistvalues.orderdate = moment(\n      orderlistvalues.orderdate\n    ).format('DD MMM, YYYY');\n\n    orderlistvalues.addeditemlist = orderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n\n        if(itemlist.itemdescription.length < 340) {\n          console.log(\"coming here\");\n          let totalSpacerequired = 340 - itemlist.itemdescription.length;\n          let numSpaces = totalSpacerequired; // Change this to the number of spaces you want to add\n\n          let spaces = \" \".repeat(numSpaces); // Create a string of spaces\n          itemlist.itemdescription = itemlist.itemdescription + spaces;\n\n          console.log(\"after adding space\", itemlist.itemdescription);\n        }\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          // itemdiscount: itemlist.itemdiscount.toString()\n          //   ? itemlist.itemdiscount\n          //   : \"0\",\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          totalweight: itemlist.totalweight\n            ? itemlist.totalweight.toString()\n            : '',\n          readystock: itemlist.readystock ? itemlist.readystock.toString() : '',\n          firstround: itemlist.firstround ? itemlist.firstround.toString() : '',\n          secondround: itemlist.secondround\n            ? itemlist.secondround.toString()\n            : '',\n          thirdround: itemlist.thirdround ? itemlist.thirdround.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = orderlistvalues.customerid;\n    const customernumber = orderlistvalues.customernumber;\n    const customername = orderlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(orderlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        orderlistvalues,\n        status: true\n      });\n    },5000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 4000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          // setTimeout(() => {\n          //   document.getElementById('D1').click();\n          //   this.props.history.push('/orderlist');\n          // }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    console.log(this.state.orderlistvalues);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrderPdf);\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../../actions/actions\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport moment from \"moment\";\nimport { deleteUser } from \"../../actions/actions\";\n\nclass AdminRole extends React.Component {\n  state = {\n    count: \"\",\n    userdata: []\n  };\n\n  updateButton = id => {\n    let path = `/updateuser/${id}`;\n    this.props.history.push(path);\n  };\n\n  deleteButton = id => {\n    this.props.deleteUser(id)\n    .then((data) => {\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  }\n\n  componentDidMount() {\n    this.props.getUser().catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const userlist = Object.values(props.userlist);\n    const userdata = userlist.map((userdata, i) => {\n      return {\n        title: userdata.title,\n        name: `${userdata.firstname} ${userdata.lastname}`,\n        email: userdata.email,\n        phone: userdata.phone,\n        startdat: moment(userdata.startdate).format(\"DD MMM, YYYY\"),\n        enddate: userdata.enddate ? moment(userdata.enddate).format(\"DD MMM, YYYY\"):\" \",\n        persontype: userdata.persontype,\n        department: userdata.department,\n        job: userdata.job,\n        location: userdata.location,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(userdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.deleteButton(userdata.id);\n          }}\n        >\n          Delete\n        </Button>\n        )\n      };\n    });\n    this.setState({ userdata });\n  }\n  render() {\n    const columnvalue = [\n      {\n        label: \"Title\",\n        field: \"title\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Full Name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 270\n      },\n      {\n        label: \"Phone\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 200\n      },\n      {\n        label: \"Start date\",\n        field: \"startdate\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"End date\",\n        field: \"enddate\",\n        sort: \"asc\",\n        width: 150\n      },\n      {\n        label: \"Person type\",\n        field: \"persontype\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Department\",\n        field: \"department\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Job\",\n        field: \"job\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Location\",\n        field: \"location\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100        \n      }\n    ];\n    return (\n      <div style={{ overflow: \"hidden\" }} className=\"mg-t-20\">\n          <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Users</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <DataTable columnvalue={columnvalue} rowvalues={this.state.userdata} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUser,deleteUser }\n)(AdminRole);\n","import React from \"react\";\n\nclass EmployeeRole extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h6>Employee List</h6>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeRole;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass BOMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>BOM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/addproduct\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/viewproductlist\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BOMPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ChallanPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Delivery challan</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addchallan'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Challan</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/challanlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Challan List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ChallanPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass CRMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>CRM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n          \n\n            <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/enquiry'>\n                    <i className='fas fa-envelope fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>New Enquiry</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                     \n                <li className='bg-color-lg-blue'>\n                  <div className='icon-eleme'>\n                    <Link to='/quotationpage'>\n                      <i className='fas fa-credit-card fa-3x'></i>\n                      <div style={{ paddingTop: '5px' }}>\n                        <span>Quotations</span>\n                      </div>\n                    </Link>\n                  </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/customerlist'>\n                    <i className='fas fa-users fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Customer Transaction</span>\n                    </div>\n                    </Link>\n                </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CRMPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass CustomerPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div class=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/AddCustomer\">\n                  <i class=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Add Customer</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n    \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customerinfo\">\n                  <i class=\"fas fa-list fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Customer List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass InventoryPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Setup</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\" style={{'top': '55%', 'width': '55%'}}>\n          <ul className=\"clearfix\">\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemtype\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/masteritemtypelist\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* \n             */}\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/itemspage\">\n                  <i className=\"fas fa-cart-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Items</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n          {/* <li className='bg-colo-lg-red'>\n            <div className='icon-eleme'>\n              <Link to='/productbilling'>\n                <i className='fas fa-kaaba fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                  <span>Item Cost</span>\n                </div>\n              </Link>\n            </div>\n          </li> */}\n\n      \n\n             <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/bomproductlist\">\n                  <i className=\"fa fa-cog fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n            \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Suppliers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customer\">\n                  <i className=\"fas fa-users fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Customers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/financialYearAdd\">\n                  <i className=\"fas fa-calendar-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add/Update FinancialYear</span>\n                  </div>\n                </Link>\n              </div>\n            </li>            \n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InventoryPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice1'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Normal Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice2'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage1 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addinvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n           \n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage1;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage2 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Proforma Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n      \n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addproformainvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/proformainvoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage2;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass ItemsPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Items</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n          <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/madditem\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Item</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemlistvalues\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ItemsPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ManufacturingPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Manufacturing</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n            <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/work-order'>\n              <i className='fas fa-shopping-cart fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Work Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/production'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Production</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ManufacturingPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass MoveOrder extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Move Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/move'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Move Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/moveorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Move Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveOrder;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass OnHandPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/quantitypage'>Quantity</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>On Hand</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addonhand'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Update On Hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>View On hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default OnHandPage;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ProductionPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n            <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Production</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/add-production'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Production</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/productionlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Production list</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProductionPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass PurchaceOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/purchase_order'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>Purchase Order</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/view_purchaseorderlist'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>View Purchase Order List</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PurchaceOrderPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuantityPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quantity</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/receipt_screen'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>PO receipts</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/onhand'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                {/* <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand Old</span>\n                    </div>\n                    </Link>\n                </div>\n                </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuantityPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuotationPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/crmlist'>CRM</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quotation</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addquotation'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Add Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/quotationlist'>\n                    <i className='fas fa-list fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>List Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuotationPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass SupplierPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Supplier</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_detail\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Supplier</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_list\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Supplier List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass TransactionPage extends React.Component {\n  render() {\n    const adminMenu = (\n      <React.Fragment>\n     \n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        {/*  */}\n        \n        {/*  */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-cart-arrow-down fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Inventory</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        \n   \n        \n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/addquotation'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Add Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quotationlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n      \n\n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n          <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/logs'>\n              <i className='fas fa-book fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Logs</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const financeMenu = (\n      <React.Fragment>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const purchaseMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_order'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/view_purchaseorderlist'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const salesMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/enquiry'>\n              <i className='fas fa-envelope fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>New Enquiry</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const storeMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/receipt_screen'>\n              <i className='fas fa-dolly-flatbed fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Receive quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/totalitemquantity'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>On hand quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n         <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-folder fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      </React.Fragment>\n    );\n    const productionMenu = (\n      <React.Fragment>\n        \n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    return (\n      <div className='container mg-20'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Transactions</BreadcrumbItem>\n        </Breadcrumb>\n        <div className='admin-dashboard-icons' style={{'top': '55%','width': '55%'}}>\n          <ul className='clearfix'>\n            {this.props.role === 'management'\n              ? adminMenu\n              : this.props.role === 'finance'\n              ? financeMenu\n              : this.props.role === 'purchase'\n              ? purchaseMenu\n              : this.props.role === 'sales'\n              ? salesMenu\n              : this.props.role === 'stores'\n              ? storeMenu\n              : this.props.role === 'production'\n              ? productionMenu\n              : ''}\n              {this.props.second_role === 'finance'\n               ? financeMenu\n               : this.props.second_role === 'purchase'\n               ? purchaseMenu\n               : this.props.second_role === 'sales'\n               ? salesMenu\n               : this.props.second_role === 'stores'\n               ? storeMenu\n               : this.props.second_role === 'production'\n               ? productionMenu\n               : ''\n              }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role,\n    second_role: state.user.second_role\n  };\n}\nexport default connect(mapStateToProps)(TransactionPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass WorkOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Work order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addorder'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Work Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/orderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Current Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/completedorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Completed Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>              \n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default WorkOrderPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst GuestRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\n    }\n  />\n);\n\nGuestRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GuestRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Roles } from '../Services/Roles';\nimport { connect } from 'react-redux';\n\nconst UserRoute = ({\n  isAuthenticated,\n  roles,\n  role,\n  second_role,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      // return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      if (!isAuthenticated) {\n        return <Redirect to='/login' />;\n      }\n      if (typeof roles === 'string') {\n        if (!(role === roles || second_role === roles)) {\n          if(role === Roles.FINANCE ||\n            role === Roles.PURCHASE ||\n            role === Roles.SALES ||\n            role === Roles.STORE ||\n            role === Roles.PRODUCTION || second_role === Roles.FINANCE ||\n            second_role === Roles.PURCHASE ||\n            second_role === Roles.SALES ||\n            second_role === Roles.STORE ||\n            second_role === Roles.PRODUCTION) {\n              return <Redirect to='/transaction_page' />;\n            }\n            else {\n              return <Redirect to='/' />;\n            }\n        }\n      } else if (!(roles.includes(role) || roles.includes(second_role))) {\n        if(role === Roles.FINANCE ||\n          role === Roles.PURCHASE ||\n          role === Roles.SALES ||\n          role === Roles.STORE ||\n          role === Roles.PRODUCTION || second_role === Roles.FINANCE ||\n          second_role === Roles.PURCHASE ||\n          second_role === Roles.SALES ||\n          second_role === Roles.STORE ||\n          second_role === Roles.PRODUCTION) {\n            return <Redirect to='/transaction_page' />;\n          }\n          else {\n            return <Redirect to='/' />;\n          }\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\n\nUserRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  // role: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token,\n    role: state.user.role,\n    second_role: state.user.second_role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UserRoute);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport AddUser from './Containers/AddUser/AddUser';\nimport UpdateUser from './Containers/AddUser/UpdateUser';\nimport AdminDashboard from './Containers/Admin/AdminDashboard';\nimport ProductBilling from './Containers/Billing/ProductBilling';\nimport LoginPage from './Containers/LoginPage/LoginPage';\nimport AddMaterial from './Containers/Material/AddMaterial';\nimport AddMaterialType from './Containers/Material/AddMaterialType';\nimport UpdateMaterial from './Containers/Material/UpdateMaterial';\nimport UpdateMaterialType from './Containers/Material/UpdateMaterialType';\nimport ProductList from './Containers/Product/Product';\nimport ProductUpdate from './Containers/Product/UpdateProduct';\nimport ViewProduct from './Containers/Product/ViewProduct';\nimport ViewProductList from './Containers/Product/ViewProductList';\nimport AddCustomer from './Containers/SetUp/Customer/Customer';\nimport Transaction from './Containers/SetUp/Customer/Transaction';\nimport UpdateCustomer from './Containers/SetUp/Customer/UpdateCustomer';\nimport ViewCustomerTable from './Containers/SetUp/Customer/ViewCustomerTable';\nimport CustomerInfo from './Containers/SetUp/CustomerInfo/CustomerInfo';\nimport CustomerQuotationList from './Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList';\nimport AddFinancialYear from './Containers/SetUp/FinancialYear/AddFinancialYear';\nimport AddChalan from './Containers/Transaction/Challan/Challan/AddChalan';\nimport ViewChallan from './Containers/Transaction/Challan/View/ViewChallan';\nimport ViewChallanPdf from './Containers/Transaction/Challan/View/ViewChallanPdf';\nimport EnquiryPage from './Containers/Transaction/Enquiry';\nimport AddInvoice from './Containers/Transaction/Invoice/Invoice/AddInvoice';\nimport AddProformaInvoice from './Containers/Transaction/Invoice/Invoice/AddProformaInvoice';\nimport ViewInvoice from './Containers/Transaction/Invoice/View/ViewInvoice';\nimport ViewInvoicePdf from './Containers/Transaction/Invoice/View/ViewInvoicePdf';\nimport ViewProformaInvoice from './Containers/Transaction/Invoice/View/ViewProformaInvoice';\nimport ViewProformaInvoicePdf from './Containers/Transaction/Invoice/View/ViewProformaInvoicePdf';\nimport AddMasterItemList from './Containers/Transaction/Item/ItemList/AddMasterItemList';\nimport MasterItemList from './Containers/Transaction/Item/ItemList/MasterItemListValues';\nimport UpdateMasterItemList from './Containers/Transaction/Item/ItemList/UpdateMasterItemList';\nimport MasterItemType from './Containers/Transaction/Item/ItemType/ItemMasterType';\nimport MasterItemTypeList from './Containers/Transaction/Item/ItemType/ItemMasterTypeList';\nimport UpdateMasterItemType from './Containers/Transaction/Item/ItemType/UpdateItemMasterType';\nimport ReceiptScreen from './Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen';\nimport ViewReceiptPdf from './Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt';\nimport MoveOrderScreen from './Containers/Transaction/MoveOrder/MoveOrderScreen';\nimport ViewMoveOrder from './Containers/Transaction/MoveOrder/View/ViewMoveOrder';\nimport ViewItemsMoveOrder from './Containers/Transaction/MoveOrder/View/viewOrderItems';\nimport AddOnHand from './Containers/Transaction/OnHand/AddOnHand';\nimport AddProduction from './Containers/Transaction/ProductionScreen/Production/AddProduction';\nimport ViewProudction from './Containers/Transaction/ProductionScreen/View/ViewProudction';\nimport PurchaseOrder from './Containers/Transaction/PurchaseOrder/PurchaseOrder';\nimport ViewPurchaseOrderList from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList';\nimport ViewPurchaseOrderPdf from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf';\nimport AddQuotation from './Containers/Transaction/Quotation/Quotation/AddQuotation';\nimport ViewQuotation from './Containers/Transaction/Quotation/View/ViewQuotation';\nimport viewQuotationListTest from './Containers/Transaction/Quotation/View/viewQuotationListTest';\nimport ViewQuotationPdf from './Containers/Transaction/Quotation/View/ViewQuotationPdf';\nimport ViewNewPDFQuuotation from './Containers/Transaction/Quotation/View/ViewNewPDFQuuotation';\nimport SupplierContact from './Containers/Transaction/Supplier/SupplierContact/SupplierContact';\nimport SupplierDetail from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetail';\nimport SupplierDetailUpdate from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate';\nimport SupplierList from './Containers/Transaction/Supplier/SupplierDetail/Supplierlist';\nimport TotalQuantity from './Containers/Transaction/TotalQuantityScreen/TotalQuantity';\nimport Logs from './Containers/Transaction/Logs/Logs';\nimport AddOrder from './Containers/Transaction/WorkOrder/Order/AddOrder';\nimport ViewOrder from './Containers/Transaction/WorkOrder/View/ViewOrder';\nimport ViewCompletedOrder from './Containers/Transaction/WorkOrder/View/ViewCompletedOrder';\nimport ViewOrderPdf from './Containers/Transaction/WorkOrder/View/ViewOrderPdf';\nimport ViewAdmin from './Containers/View/AdminRole';\nimport ViewEmployee from './Containers/View/EmployeeRole';\nimport './global/global.scss';\nimport BOMPage from './Pages/BOMPage';\nimport ChallanPage from './Pages/Challan';\nimport CRMPage from './Pages/CRMPage';\nimport CustomerPage from './Pages/CustomerPage';\nimport InventoryPage from './Pages/InventoryPage';\nimport InvoicePage from './Pages/InvoicePage';\nimport InvoicePage1 from './Pages/InvoicePage1';\nimport InvoicePage2 from './Pages/InvoicePage2';\nimport ItemsPage from './Pages/ItemsPage';\nimport ManufacturingPage from './Pages/ManufacturingPage';\nimport MoveOrder from './Pages/MoveOrder';\nimport OnHandPage from './Pages/OnHandPage';\nimport ProductionPage from './Pages/Production';\nimport PurchaceOrderPage from './Pages/PurchaceOrderPage';\nimport QuantityPage from './Pages/QuantityPage';\nimport QuotationPage from './Pages/QuotationPage';\nimport SupplierPage from './Pages/SupplierPage';\nimport TransactionPage from './Pages/TransactionPage';\nimport WorkOrderPage from './Pages/WorkOrder';\nimport GuestRoute from './Routes/GuestRoute';\nimport UserRoute from './Routes/UserRoute';\nimport { Roles } from './Services/Roles';\n\n\n\n\n\n\n\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route path='/' exact component={LoginPage} />\n        <GuestRoute path='/login' exact component={LoginPage} />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/admin_dashboard'\n          exact\n          component={AdminDashboard}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adduser'\n          exact\n          component={AddUser}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adminlist'\n          exact\n          component={ViewAdmin}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/employeelist'\n          exact\n          component={ViewEmployee}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/updateuser/:id'\n          exact\n          component={UpdateUser}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/enquiry'\n          exact\n          component={EnquiryPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addproduct'\n          exact\n          component={ProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/updateproduct/:id'\n          exact\n          component={ProductUpdate}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproductlist'\n          exact\n          component={ViewProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/bomproductlist'\n          exact\n          component={BOMPage}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproduct/:id'\n          exact\n          component={ViewProduct}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/add_itemtype'\n          exact\n          component={AddMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_itemtype/:id'\n          exact\n          component={UpdateMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/additem'\n          exact\n          component={AddMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_material/:id'\n          exact\n          component={UpdateMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productbilling'\n          exact\n          component={ProductBilling}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/inventory_page'\n          exact\n          component={InventoryPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[\n            Roles.ADMIN,\n            Roles.FINANCE,\n            Roles.PURCHASE,\n            Roles.SALES,\n            Roles.STORE,\n            Roles.PRODUCTION\n          ]}\n          path='/transaction_page'\n          exact\n          component={TransactionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice'\n          exact\n          component={InvoicePage}\n        />\n          <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice1'\n          exact\n          component={InvoicePage1}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice2'\n          exact\n          component={InvoicePage2}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/delivery-challan'\n          exact\n          component={ChallanPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE, Roles.PRODUCTION]}\n          path='/addonhand'\n          exact\n          component={AddOnHand}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move-order'\n          exact\n          component={MoveOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move'\n          exact\n          component={MoveOrderScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/moveorderlist'\n          exact\n          component={ViewMoveOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_ItemsOrder/:id'\n          exact\n          component={ViewItemsMoveOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/work-order'\n          exact\n          component={WorkOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/editworkorder/:id'\n          exact\n          component={AddOrder}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/manufacturing'\n          exact\n          component={ManufacturingPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customer'\n          exact\n          component={CustomerPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/financialYearAdd'\n          exact\n          component={AddFinancialYear}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/transaction/:id'\n          exact\n          component={Transaction}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier'\n          exact\n          component={SupplierPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/quotationpage'\n          exact\n          component={QuotationPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/quantitypage'\n          exact\n          component={QuantityPage}\n        />\n\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/itemspage'\n          exact\n          component={ItemsPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtype'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtypelist'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/masteritemtypelist'\n          exact\n          component={MasterItemTypeList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/madditem'\n          exact\n          component={AddMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemlistvalues'\n          exact\n          component={MasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/m_updateitemlist/:id'\n          exact\n          component={UpdateMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_mitemtype/:id'\n          exact\n          component={UpdateMasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order'\n          exact\n          component={PurchaseOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_orderpage'\n          exact\n          component={PurchaceOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderpdf/:id'\n          exact\n          component={ViewPurchaseOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderlist'\n          exact\n          component={ViewPurchaseOrderList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_detail'\n          exact\n          component={SupplierDetail}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_contact'\n          exact\n          component={SupplierContact}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order_update/:id'\n          exact\n          component={PurchaseOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplierdetail_update/:id'\n          exact\n          component={SupplierDetailUpdate}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_list'\n          exact\n          component={SupplierList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/receipt_screen'\n          exact\n          component={ReceiptScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/viewreceipt'\n          exact\n          component={ViewReceiptPdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/totalitemquantity'\n          exact\n          component={TotalQuantity}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/logs'\n          exact\n          component={Logs}\n        />        \n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/onhand'\n          exact\n          component={OnHandPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/AddCustomer'\n          exact\n          component={AddCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/customerlist'\n          exact\n          component={ViewCustomerTable}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/crmlist'\n          exact\n          component={CRMPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/updatecustomer/:id'\n          exact\n          component={UpdateCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerinfo'\n          exact\n          component={CustomerInfo}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/addquotation'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/editquotation/:id'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/quotationlist'\n          exact\n          component={ViewQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/quotationlisttest'\n          exact\n          component={viewQuotationListTest}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/view_quotationpdf/:id'\n          exact\n          component={ViewQuotationPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/viewnewpdf/:id'\n          exact\n          component={ViewNewPDFQuuotation}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerquotationlist/:id'\n          exact\n          component={CustomerQuotationList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addinvoice'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addproformainvoice'\n          exact\n          component={AddProformaInvoice}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editinvoice/:id'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editproformainvoice/:id'\n          exact\n          component={AddProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addchallan'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editchallan/:id'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addorder'\n          exact\n          component={AddOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/orderlist'\n          exact\n          component={ViewOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/completedorderlist'\n          exact\n          component={ViewCompletedOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoicelist'\n          exact\n          component={ViewInvoice}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/proformainvoicelist'\n          exact\n          component={ViewProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/challanlist'\n          exact\n          component={ViewChallan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/productionlist'\n          exact\n          component={ViewProudction}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_invoicepdf/:id'\n          exact\n          component={ViewInvoicePdf}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_proformainvoicepdf/:id'\n          exact\n          component={ViewProformaInvoicePdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_orderpdf/:id'\n          exact\n          component={ViewOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_challanpdf/:id'\n          exact\n          component={ViewChallanPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/production'\n          exact\n          component={ProductionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/add-production'\n          exact\n          component={AddProduction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport user from '../reducer/user';\nimport userlist from '../reducer/userlist';\nimport materialoptionlist from '../reducer/materialoptionlist';\nimport materiallistvalues from '../reducer/materiallistvalues';\nimport productlistvalues from '../reducer/productlistvalues';\nimport masteritemtypenamevalue from '../reducer/masteritemtypenamevalue';\nimport masteritemtypelistvalues from '../reducer/masteritemlistnamevalue';\nimport suppliercontactlistvalue from '../reducer/suppliercontactlistvalue';\nimport supplierdetaillistvalue from '../reducer/supplierdetaillistvalue';\nimport uomlistvalue from '../reducer/uomlistvalue';\nimport currencylistvalue from '../reducer/currencylistvalue';\nimport locationlistvalue from '../reducer/locationlistvalue';\nimport purchaseorderlistvalue from '../reducer/purchaseorderlistvalue';\nimport receiptlistvalues from '../reducer/receiptlistvalues';\nimport customerlistvalues from '../reducer/customerlistvalues';\nimport quotationlistvalues from '../reducer/quotationlistvalues';\nimport invoicelistvalues from '../reducer/invoicelistvalues';\nimport proformainvoicelistvalues from '../reducer/proformainvoicelistvalues';\n\nimport challanlistvalues from '../reducer/challanlistvalues';\nimport orderlistvalues from '../reducer/orderlistvalues';\nimport productionlistvalues from '../reducer/productionlistvalues';\nimport moveorderlistvalues from '../reducer/moveorderlistvalues';\nimport customertransationvalues from '../reducer/customertransationvalues';\n\nimport { USER_LOGGED_OUT } from '../Services/types';\n\nconst appReducer = combineReducers({\n  user: user,\n  userlist: userlist,\n  materialoption: materialoptionlist,\n  materiallistvalues: materiallistvalues,\n  productlistvalues: productlistvalues,\n  masteritemtypenamevalue: masteritemtypenamevalue,\n  masteritemlistvalues: masteritemtypelistvalues,\n  suppliercontactlistvalue: suppliercontactlistvalue,\n  supplierdetaillistvalue: supplierdetaillistvalue,\n  uomlistvalue: uomlistvalue,\n  currencylistvalue: currencylistvalue,\n  locationlistvalue: locationlistvalue,\n  purchaseorderlistvalue: purchaseorderlistvalue,\n  receiptlistvalues: receiptlistvalues,\n  customerlistvalues: customerlistvalues,\n  customertransationvalues: customertransationvalues,\n  quotationlistvalues: quotationlistvalues,\n  invoicelistvalues: invoicelistvalues,\n  proformainvoicelistvalues: proformainvoicelistvalues,\n  challanlistvalues: challanlistvalues,\n  orderlistvalues: orderlistvalues,\n  productionlistvalues: productionlistvalues,\n  moveorderlistvalues: moveorderlistvalues\n});\n\nconst rootReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGGED_OUT:\n      state = {};\n      storage.removeItem('persist:root');\n      return {};\n    default:\n      return appReducer(state, action);\n  }\n};\n\nexport default rootReducer;\n","import storage from \"redux-persist/lib/storage\";\nimport { USER_LOGGED_IN } from \"../Services/types\";\nimport { USER_LOGGED_OUT } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return action.user;\n    case USER_LOGGED_OUT:\n      storage.removeItem(\"persist:root\");\n      return {};\n    default:\n      return state;\n  }\n}\n","import { USER_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_FETCHED:\n      return { ...state, ...action.userlist.entities.users };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_OPTIONS } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_OPTIONS:\n      return {\n        ...state,\n        ...action.materialoption.entities.materialoptions\n      };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.materialsvalues.entities.materialslistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PRODUCT_VALUES_DELETED, PRODUCT_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCT_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.productlistvalues.entities.productlistvalues\n      };\n      case PRODUCT_VALUES_DELETED  :\n        console.log(action);\n        let arrayData = [];\n        Object.keys(state).forEach(function(key, index) {\n          arrayData.push(state[key]);\n        });\n        let fileteredData = arrayData.filter((item, id) => item.id !== action.payload);\n        let obj = {};\n        fileteredData.map((data,ind) => {\n          obj[data.id] = data;\n        });\n        return obj;\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_TYPES } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_TYPES:\n      return {\n        ...state,\n        ...action.MasterItemTypeName.entities.masteritemtypenamevalue\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_LIST,DELETE_MASTER_ITEM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_LIST:\n      return {\n        ...state,\n        ...action.MasterItemTypeList.entities.masteritemtypelistvalues\n      };\n    case DELETE_MASTER_ITEM_LIST  : \n      let arrayData = [];\n      Object.keys(state).forEach(function(key, index) {\n        arrayData.push(state[key]);\n      });\n      let fileteredData = arrayData.filter((item, id) => item.id !== action.payload);\n      let obj = {};\n      fileteredData.map((data,ind) => {\n        obj[data.id] = data;\n      });\n      return obj;\n    default:\n      return state;\n  }\n}","import { SUPPLIER_CONTACT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_CONTACT_LIST:\n      return {\n        ...state,\n        ...action.suppliercontactlistvalue.entities.suppliercontactlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_DETAIL_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_DETAIL_LIST:\n      return {\n        ...state,\n        ...action.supplierdetaillistvalue.entities.supplierdetaillistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { UOM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UOM_LIST:\n      return {\n        ...state,\n        ...action.uomlist.entities.uomlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { CURRENCY_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case CURRENCY_LIST:\n      return {\n        ...state,\n        ...action.currencylist.entities.currencylistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { Location_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case Location_LIST:\n      return {\n        ...state,\n        ...action.locationlist.entities.locationlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PURCHASE_ORDER_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PURCHASE_ORDER_LIST:\n      return {\n        ...state,\n        ...action.purchaseorderlistvalues.entities.purchaseorderlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PO_RECEIPT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PO_RECEIPT_LIST:\n      return {\n        ...state,\n        ...action.receiptlistvalues.entities.receiptlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED\n} from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(state)\n  switch (action.type) {\n    case CUSTOMER_CONTACT_FETCHED:\n    \n    case ADD_CUSTOMER_CONTACT:\n      return {\n        ...state,\n        ...action.customerlist.entities.customerlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    CUSTOMERTRANSACTION_FETCHED,\n    ADD_CUSTOMER_TRANSACTION\n  } from \"../Services/types\";\n  \n  export default function(state = {}, action) {\n    console.log(action)\n    switch (action.type) {\n      case CUSTOMERTRANSACTION_FETCHED:\n      return {\n        ...state,\n        ...action.customerlist.entities.customertransationvalues\n      };\n      case ADD_CUSTOMER_TRANSACTION:\n        return {\n          ...state,\n          ...action.customerlist.entities.customertransationvalues\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case QUOTATION_FETCHED:\n    case ADD_QUOTATION:\n      return {\n        ...state,\n        ...action.quotationlist.entities.quotationlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_INVOICE, INVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case INVOICE_FETCHED:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    case ADD_INVOICE:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","\n\nimport { ADD_PROFORMA_INVOICE, PROFORMAINVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PROFORMAINVOICE_FETCHED:\n    case ADD_PROFORMA_INVOICE:\n      return {\n        ...state,\n        ...action.proformainvoicelist.entities.proformainvoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(action)\n  switch (action.type) {\n    case CHALLAN_FETCHED:\n    case ADD_CHALLAN:\n      return {\n        ...state,\n        ...action.challanlist.entities.challanlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ADD_ORDER:\n    case ORDER_FETCHED:\n      return {\n        ...state,\n        ...action.orderlist.entities.orderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCTION_FETCHED:\n    case ADD_PRODUCTION:\n      return {\n        ...state,\n        ...action.productionlist.entities.productionlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MOVEORDER_FETCHED:\n    case ADD_MOVEORDER:\n      return {\n        ...state,\n        ...action.moverorderlist.entities.moveorderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport LocalStorage from \"redux-persist/lib/storage\";\nimport localforage from \"localforage\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   storage: LocalStorage\n// };\n\nconst persistConfig = {\n  key: 'root',\n  storage: localforage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n);\n\nexport default store;\n","import { persistStore } from \"redux-persist\";\nimport store from \"./store\";\n\nexport default persistStore(store);\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCalendarPlus, faCube, faDollyFlatbed, faHome, faKaaba, faUser, faUserFriends, faUsers, faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport jwtDecode from \"jwt-decode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { userLoggedIn } from \"./actions/actions\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport persistor from \"./Store/persistStore\";\nimport store from \"./Store/store\";\nimport setAuthorizationHeader from \"./utils/setAuthorizationHeader\";\n\nlibrary.add(\n  faHome,\n  faDollyFlatbed,\n  faCube,\n  faKaaba,\n  faUsers,\n  faUser,\n  faUsersCog,\n  faUserFriends,\n  faCalendarPlus\n);\n\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n\nif (localStorage.Mob_JWT) {\n  const token = localStorage.Mob_JWT;\n  setAuthorizationHeader(token);\n  var decoded = jwtDecode(localStorage.Mob_JWT);\n  const userinfo = {\n    email: decoded.email,\n    role: decoded.role,\n    second_role: decoded.sexond_role,\n    token: localStorage.Mob_JWT\n  };\n  store.dispatch(userLoggedIn(userinfo));\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App component={App} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}