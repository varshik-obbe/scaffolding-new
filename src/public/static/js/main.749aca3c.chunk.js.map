{"version":3,"sources":["Images/sign.jpg","Images/js.jpg","Images/mk.jpg","Images/proud.jpg","Images/scaff.jpg","Images/logo.png","Images/seal.jpg","Images/client.png","Services/api.js","utils/setAuthorizationHeader.js","Services/types.js","Schemas/schemas.js","actions/actions.js","Components/Header/Header.js","Containers/AddUser/AddUserForm/AddUserForm.js","Containers/AddUser/AddUser.js","Components/loader/loader.js","Containers/AddUser/AddUserForm/UpdateUserForm.js","Containers/AddUser/UpdateUser.js","Containers/Admin/AdminDashboard.js","actions/Product.js","Services/transactionapi.js","actions/Transaction.js","Containers/Billing/BillingForm/BillingForm.js","Containers/Billing/BillingTable.js","Containers/Billing/ProductBilling.js","Containers/LoginPage/LoginForm/LoginForm.js","Services/Roles.js","Containers/LoginPage/LoginPage.js","Components/Alert/Alert.js","Containers/Material/MaterialForms/AddMaterialForm.js","Components/Table/DatatablePage.js","Containers/Material/AddMaterial.js","Containers/Material/MaterialForms/AddMaterialTypesForm.js","Containers/Material/AddMaterialType.js","Containers/Material/MaterialForms/UpdateMaterialForm.js","Containers/Material/UpdateMaterial.js","Containers/Material/MaterialForms/UpdateMaterialTypesForm.js","Containers/Material/UpdateMaterialType.js","Containers/Product/ProductForm/ProductForm.js","actions/uom.js","Containers/Product/Product.js","Containers/Product/ViewProduct.js","Containers/Product/ViewProductList.js","Containers/SetUp/Customer/AddCustomer/CustomerForm/CustomerForm.js","Containers/SetUp/Customer/ViewCustomerList.js","Services/customerapi.js","actions/customerContact.js","Containers/SetUp/Customer/Customer.js","Containers/SetUp/Customer/Transaction.js","Containers/SetUp/Customer/UpdateCustomer/CustomerForm/UpdateCustomerForm.js","Containers/SetUp/Customer/UpdateCustomer.js","Containers/SetUp/Customer/ViewCustomerTable.js","Containers/SetUp/CustomerInfo/ViewCustomerList.js","Containers/SetUp/CustomerInfo/CustomerInfo.js","Services/quotationapi.js","actions/quotation.js","Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList.js","Containers/SetUp/FinancialYear/AddYear/AddYearForm/AddYearForm.js","Containers/SetUp/FinancialYear/AddFinancialYear.js","actions/financialYearAdd.js","Services/challanapi.js","actions/challan.js","Services/invoiceapi.js","actions/Invoice.js","Containers/Transaction/Challan/Challan/ChallanForm.js","Containers/Transaction/Challan/Challan/AddChalan.js","Containers/Transaction/Challan/View/ViewChallan.js","Containers/Transaction/Challan/View/Component.js","Containers/Transaction/Challan/View/ViewChallanPdf.js","Containers/Transaction/Enquiry.js","Containers/Transaction/Invoice/Invoice/InvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddInvoice.js","Containers/Transaction/Invoice/Invoice/ProformaInvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddProformaInvoice.js","Containers/Transaction/Invoice/View/ViewInvoice.js","Containers/Transaction/Invoice/View/Component.js","Containers/Transaction/Invoice/View/ViewInvoicePdf.js","Containers/Transaction/Invoice/View/ViewProformaInvoice.js","Containers/Transaction/Invoice/View/Component2.js","Containers/Transaction/Invoice/View/ViewProformaInvoicePdf.js","Containers/Transaction/Item/Form/ItemList/AddItemListForm.js","Containers/Transaction/Item/ItemList/ViewMasterItemList.js","Containers/Transaction/Item/ItemList/AddMasterItemList.js","Containers/Transaction/Item/ItemList/MasterItemListValues.js","Containers/Transaction/Item/Form/ItemList/UpdateItemListForm.js","Containers/Transaction/Item/ItemList/UpdateMasterItemList.js","Containers/Transaction/Item/Form/MasterItemTypeForm.js","Containers/Transaction/Item/ItemType/ItemMasterType.js","Containers/Transaction/Item/ItemType/ItemMasterTypeList.js","Containers/Transaction/Item/Form/UpdateMasterItemTypeForm.js","Containers/Transaction/Item/ItemType/UpdateItemMasterType.js","Components/EditTable/EditTable.js","Services/locationapi.js","actions/Location.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptScreenForm.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptTable.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen.js","Containers/Transaction/ItemScreening/ReceiptScreen/Component.js","Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt.js","Services/moveorderapi.js","actions/moveorder.js","Containers/Transaction/MoveOrder/MoveOrderScreenForm/MoveOrderScreenForm.js","Containers/Transaction/MoveOrder/MoveOrderScreen.js","Containers/Transaction/MoveOrder/View/ViewMoveOrder.js","Containers/Transaction/MoveOrder/View/viewOrderItems.js","Containers/Transaction/OnHand/AddOnHandScreenForm/AddOnHandScreenForm.js","Containers/Transaction/OnHand/AddOnHand.js","Services/productionapi.js","actions/Production.js","Containers/Transaction/ProductionScreen/Production/ProductionForm.js","Containers/Transaction/ProductionScreen/Production/AddProduction.js","Containers/Transaction/ProductionScreen/View/ViewProudction.js","Containers/Transaction/PurchaseOrder/PurchaseOrderForm/PurchaseOrderForm.js","Services/supplierapi.js","actions/Supplier.js","Services/currency.js","actions/Currency.js","Containers/Transaction/PurchaseOrder/PurchaseOrder.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList.js","Containers/Transaction/PurchaseOrder/Component.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf.js","Containers/Transaction/Quotation/Quotation/QuotationForm/QuotationForm.js","Containers/Transaction/Quotation/Quotation/AddQuotation.js","Containers/Transaction/Quotation/View/ViewQuotation.js","Containers/Transaction/Quotation/View/Component.js","Containers/Transaction/Quotation/View/ViewQuotationPdf.js","Containers/Transaction/Supplier/SupplierForm/SupplierContact.js","Containers/Transaction/Supplier/SupplierContact/SupplierContact.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetail.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetail.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/Supplierlist.js","Containers/Transaction/TotalQuantityScreen/TotalQuantityForm/ItemQuantitySearch.js","Containers/Transaction/TotalQuantityScreen/TotalQuantity.js","Services/order.js","actions/order.js","Containers/Transaction/WorkOrder/Order/OrderForm.js","Containers/Transaction/WorkOrder/Order/AddOrder.js","Containers/Transaction/WorkOrder/View/ViewOrder.js","Containers/Transaction/WorkOrder/View/ViewCompletedOrder.js","Containers/Transaction/WorkOrder/View/Component.js","Containers/Transaction/WorkOrder/View/ViewOrderPdf.js","Containers/View/AdminRole.js","Containers/View/EmployeeRole.js","Pages/BOMPage.js","Pages/Challan.js","Pages/CRMPage.js","Pages/CustomerPage.js","Pages/InventoryPage.js","Pages/InvoicePage.js","Pages/InvoicePage1.js","Pages/InvoicePage2.js","Pages/ItemsPage.js","Pages/ManufacturingPage.js","Pages/MoveOrder.js","Pages/OnHandPage.js","Pages/Production.js","Pages/PurchaceOrderPage.js","Pages/QuantityPage.js","Pages/QuotationPage.js","Pages/SupplierPage.js","Pages/TransactionPage.js","Pages/WorkOrder.js","Routes/GuestRoute.js","Routes/UserRoute.js","App.js","serviceWorker.js","Store/rootReducer.js","reducer/user.js","reducer/userlist.js","reducer/materialoptionlist.js","reducer/materiallistvalues.js","reducer/productlistvalues.js","reducer/masteritemtypenamevalue.js","reducer/masteritemlistnamevalue.js","reducer/suppliercontactlistvalue.js","reducer/supplierdetaillistvalue.js","reducer/uomlistvalue.js","reducer/currencylistvalue.js","reducer/locationlistvalue.js","reducer/purchaseorderlistvalue.js","reducer/receiptlistvalues.js","reducer/customerlistvalues.js","reducer/customertransationvalues.js","reducer/quotationlistvalues.js","reducer/invoicelistvalues.js","reducer/proformainvoicelistvalues.js","reducer/challanlistvalues.js","reducer/orderlistvalues.js","reducer/productionlistvalues.js","reducer/moveorderlistvalues.js","Store/store.js","Store/persistStore.js","index.js"],"names":["module","exports","__webpack_require__","p","api","userRegister","userRegisterdata","axios","post","concat","process","then","res","data","userRecord","login","credentials","user","getUser","get","userdata","getUserbyid","id","userRecordData","updateUser","patch","success","deleteUser","delete","addmaterialtype","materialdata","getmaterialstype","materiallist","updatematerialtype","addmaterial","getmaterial","updatematerial","addproduct","getproducts","productlist","addyear","checkexists","year","updateyear","updateid","catch","err","error","setAuthorizationHeader","token","arguments","length","undefined","defaults","headers","common","authorization","UOM_LIST","CURRENCY_LIST","Location_LIST","userSchema","schema","Entity","idAttribute","uomListSchema","materialOptionSchema","materialListSchema","productListSchema","masterItemTypeNameSchema","masterItemTypeListSchema","supplierContactListSchema","supplierDetailListSchema","currencyListSchema","locationListSchema","purchaseOrderListSchema","customerListSchema","customerTransactionSchema","quotationListSchema","invoiceListSchema","proformainvoiceListSchema","challanListSchema","orderListSchema","productionListSchema","moveorderListSchema","userLoggedIn","type","Header","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","logout","window","location","reload","history","push","toggle","bind","_assertThisInitialized","state","isOpen","isAuthenticated","_createClass","key","value","setState","React","createElement","Navbar","expand","className","NavbarBrand","tag","Link","to","src","logo","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","role","NavItem","NavLink","second_role","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Component","withRouter","connect","e","dispatch","localStorage","removeItem","AddUserForm","_len","args","Array","_key","apply","title","firstname","lastname","email","phone","startdate","Date","enddate","username","password","repassword","active","persontype","second_persontype","department","job","errors","loading","onChange","_objectSpread","_defineProperty","target","name","handleValidSubmit","console","log","submit","myFormRef","reset","response","handleChangeStartDate","date","selectedDate","formattedDate","getDate","getMonth","getFullYear","handleChangeEndDate","handleInvalidSubmit","_this2","_this$state","Alert","color","AvForm","onValidSubmit","onInvalidSubmit","ref","el","Card","CardHeader","CardBody","Row","Col","sm","AvGroup","Label","for","AvField","validate","required","errorMessage","pattern","minLength","maxLength","DatePicker","selected","autoComplete","minDate","dateFormat","maxDate","match","Button","disabled","AddUser","CustomLoader","Loader","height","UpdateUserForm","count","userRecordModified","dateEnd","userlist","UpdateUser","userid","params","AdminDashboard","paddingTop","productlistvalues","productdata","productvalueFetched","normalize","getMaterialsTypes","materialsvalue","materialsdata","materialoption","getMaterial","materialslistvalue","materialsvalues","transactionapi","getUomDetails","uomlist","addMasterItemType","masterItemType","getMasterItemType","masteritemtypes","updateMasterItemType","addMasterItemList","url","method","Accept","Content-Type","masterItemList","getMasterItemList","masteritemlist","updatemasteritemlist","deletemasteritemlist","addPurchaseOrder","purchaseorderlist","updatePurchaseOrder","getPurchaseOrderList","searchponumber","ponumber","purchaseordervalue","addorupdateitemsinlocation","additemsinlocation","getitemlistavaliable","locationid","itemid","totalitemlistvalues","getReceiptList","receiptlist","getMasterItemTypes","masteritemtypenamevalue","masteritemtypenamedata","MasterItemTypeName","masteritemtypelistvalues","masteritemtypelistdata","MasterItemTypeList","getPurchaseOrder","purchaseorderlistvalues","purchaseorderlistdata","purchaseOrderListFetched","totalitemvaluesearch","ProductBilling","product","profit","qty","labourcost","materiallistvalues","createSelectItems","items","map","option","i","filter","productname","_id","masteritemdescription","Object","values","textAlign","masteritemlistvalues","BillingTable","_this$props","selectedProduct","productformvalues","materialTotalCost","productMaterial","productMaterialData","parseFloat","productqty","product_id","masteritemcostperunit","reduce","a","b","subTotal","grandTotal","colSpan","masteritemname","masteritemuom","uomname","toFixed","parseInt","productlistvalue","gloabl","global","Breadcrumb","BreadcrumbItem","BillingForm","LoginForm","JSON","stringify","Roles","ADMIN","EMPLOYEE","ITADMIN","FINANCE","PURCHASE","SALES","STORE","PRODUCTION","LoginPage","dataHandler","Mob_JWT","decoded","jwtDecode","userinfo","AddMaterialForm","materialtype","materialname","materialdescription","materialuom","costperunit","materialrate","materialoptionlistvalues","DatatablePage","scroll","scrollx","columns","columnvalue","rows","rowvalues","MDBDataTable","scrollX","striped","bordered","small","AddMaterial","updateButton","path","addMaterial","view","DataTable","label","field","sort","AddMaterialTypesForm","material","AddMaterialType","materialoptions","addMaterialTypes","MDBBtn","size","AddMaterialOptions","UpdateMaterialForm","materialvalues","updateMaterial","updatematerialdetails","materialid","UpdateMaterialTypesForm","dataRecord","materialoptionobjectlist","UpdateMaterialType","updateMaterialType","UpdateMaterialTypeForm","ProductForm","initialState","createSelectItems3","optionvalue","uomlistvalues","masteritemtypename","split","createSelectItems2","createSelectunfinishedItems","masteritemtype","handleClick","_toConsumableArray","products","productsqty","productsuom","productsqtyinmeter","handleChange","index","materiallistvaluesObject","ProductqtyhandleChange","arr","item","productsweight","masteritemunitwt","ProductuomhandleChange","ProductqtyinmeterhandleChange","removeClick","removeProduct","splice","productMaterials","forEach","v","obj","alert","toggelbutton","getUnitmeasures","uomdata","message","_this3","Modal","ModalHeader","ModalBody","ModalFooter","_React$createElement3","marginTop","paddingLeft","getUomList","uomlistvalue","uomListFetched","Product","propTypes","PropTypes","func","isRequired","ViewProduct","productMaterialslist","materialitemtype","tablerows","itemlist","marginBottom","fontSize","fontWeight","marginRight","Table","ViewProductList","CustomerForm","customernumber","customername","customercontactnumber","customergstnumber","customeraddress1","customeraddress2","city","pincode","country","codate","getTime","deliveryAddress","address1","address2","visible","sameAsBilling","suppliercontactlistvalue","onDeliveryAddressChange","val","onShowAlert","setTimeout","keys","customerlistvalues","toString","ViewCustomerList","searchcustomername","searchfromdate","searchtodate","backupcustomerlistvalues","fromdatetimestamp","todatetimestamp","componentDidMount","getTransaction","filterCustomer","customervalues","customerdata","Transaction","setItem","dateName","dateValue","getDateByMMDDYYYY","filterBydates","initializeCustomers","ev","_this4","trim","filtereddata","toLowerCase","indexOf","date1","date2","_this5","customer","comparedate","_this$state2","customerBlock","customerapi","addcustomer","getcustomer","customerlist","updatecustomer","getcustomerTransaction","getCustomerList","customerlistvalue","customerListFetched","Customer","addCustomerContact","AddCustomerForm","enquirydate","quotationdate","podate","enquirytimestamp","quotationtimestamp","podatetimestamp","ponum","customerName","getItem","transactionID","customertransationvalues","backupcustomertransationvalues","initializeTransactions","poreceived","gotoPDF","updatePO","podates","put","onChange1","onChange2","customerid","Transactionhistory","enq_Date","_this6","modaldata","_this7","placeholder","customerTransactionBlock","quote","invoice","invoice_link","dc","challan_link","PO","quotation","Qno","po","margin","marginLeft","background","getCustomerTransaction","customerTransactionFetched","UpdateCustomerForm","updateCustomerContact","ViewCustomerTable","CustomerInfo","quotationapi","addquotation","quotationdata","updatequotation","getquotation","quotationlist","searchquotation","customerquotationlist","quotationCreated","quotationlistvalues","quotationFetched","CustomerQuotationList","AddYearForm","exists","updated","currentyear","AddFinancialYear","updateYear","addYear","challanapi","challan","addchallan","challandata","updatechallan","getchallan","challanlist","challanCreated","getChallan","challanlistvalues","challanFetched","invoiceapi","addinvoice","invoicedata","updateinvoice","getinvoice","invoicelist","getproformainvoice","invoiceCreated","invoicelistvalues","invoiceFetched","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","ChallanForm","invoicenumber","transactionid","invoiceid","selectedItemlist","itemname","itemdescription","itemtype","itemrate","itemuom","itemlocation","quantity","totalcost","remarks","customerdetail","deliverychallanno","toaddress","mobilenumber","site","vehiclenumber","gstno","otherreference","selectedCustomerID","selectedCustomerName","selectedInvoiceId","selectedInvoiceNumber","customerobjects","supplierdetaillistvalue","supplierdetaillistvalueobject","invoicelistselectedOptions","itemlistSelectedOption","masteritemlistvaluesobject","currencylistvalues","customerlistSelect","uom","locationlistvalue","successmsg","counts","handleInvoiceChange","_ref","_asyncToGenerator","_callee","selectedinvoice","invoiceselected","purchaseordernumber","transId","purchaseorderdate","_context","assign","quotationnumber","itemshortdescription","itemdiscount","addeditemlist","billingaddress","selectitemchange","handleChange2","_x","handleChallanDate","handlePODate","selected_id","totalValue","totalvalue","createSelectcustomer","selected_item","masteritemrate","ID","locationChange","selected_location","onhandlerChange","onSubjectHandler","filterItems","createSelectItemTypes","createSelectCurrencyItems","currencyname","createSelectUomItems","createSelectLocationItems","locationname","quantityChange","remarkChange","unitChange","AddedIteminfo","_this$state$data","supplierdetail","newArraySet","masteritemshortdescription","objset","arrayInvoiceSet","getDCDetails","getChallandata","founddata","newState","arraySet","itemarray","localeCompare","SelVal","SelINV","customStyles","control","base","minHeight","valueContainer","provided","padding","input","indicatorSeparator","display","indicatorsContainer","customerID","Select","classNamePrefix","styles","options","invoiceDisp","defaultValue","optionsel","itemnameinfo","selectedOption","readOnly","currencylistvalue","purchaseorderlistvalue","AddChallan","updateChallan","submitdata","addChallan","ViewChallan","quotationvalue","StyleSheet","textcenter","textright","textleft","paddingleft","pagepadding","section","position","flexDirection","overflow","section_column","myHeight","headerfont","descriptionText","headerfont2","headerfontleft","shippingaddress","row","justifyContent","dcaddress","dcaddress_left","view_border","border","flexGrow","view_border_left","borderLeft","borderTop","borderBottom","view_border_right","borderRight","column","headerwidth","headerwidthdate","headerwidthlogo","header_name","header_sub_name","paddingHorizontal","header_sub_name_phone","header_tintext","header_sub_name3","header_sub_nameB","flex","header_sub_nameA","headerwidthAddress","refstyle","paddingBottom","headerpadding","flexgrow","fontsize18","kindattend","yourref","main","tableheaderbgcolor","backgroundColor","footerfixed","bottom","dc_header","dc_gst","Small","children","Text","Medium","_ref3","textDecorationLine","Bold","_ref5","_ref6","MyDocument","_ref7","data_cond","toAD","totalrs","taxableAmount","taxableamount","moment","format","grandtotal","deliveryaddress","vendorcode","freightcharges","subtotal","cgst","sgst","igst","total","deliverychallannumber","goodsDescription","roundoffamount","mobileno","tax","tableComponentTwo","datalength","Page","TableHeader","TableCell","weighting","TableBody","DataTableCell","getContent","r","slno","View","Image","itemimage","weighteach","unit","Document","stye","paddingRight","wordWrap","ViewChallanPdf","status","link","quotationid","requestdeliverydate","masteritemimage","dynamicClick","document","getElementsByClassName","getElementById","click","href","download","PDFViewer","EnquiryPage","update","enquirylistvalues","backupenquirylistvalues","errorMsg","eno","company","detail","enquiryFrom","getEnquiries","addenquiry","addnewenquiry","updateenquiry","enquirylist","enquirydata","enquiryvalues","enquiry","errormessage","float","InvoiceForm","_customerdetail","_data","transaction","hsncode","saccode","tcs","selectedQuotationId","selectedQuotationNumber","quotationlistSelect","masteritemtypelistvaluesobject","_objectSpread2","sub","taxable","Number","calculatePercentageAmount","ttl","gst","gt","roa","calculateRoundoffTotal","_objectSpread9","onCustomerChange","onRemarksChange","handleDate","handleWorkorderDate","handleDespathdate","purchaseDate","invocieDate","bool","discountpercentagevalue","discountvalue","totalvaluecost","itemdiscountChange","discount","unitcost","particularindextotalvalue","_objectSpread17","updateQuotation","saveDynamicPonum","createChallanList","handleQuotationChange","selectedquotation","quotationselected","poDate","handleChallanChange","selecteddeliveryChallan","selectedChallan","arrayQuotationSet","getInvoiceDetails","_ref2","_callee2","_context2","lastIndexOf","invoicedate","deliverychallandata","workorderno","workorderdate","despathdate","removaltime","transportationcharge","advanceamountreceived","_x2","SelQuota","customerDisp","quotationdisp","AddInvoice","valid","ProformaInvoiceForm","proformainvoicelist","_objectSpread7","_objectSpread15","transportationgst","transportchargerequired","_objectSpread16","_React$createElement","AddProformaInvoice","ViewInvoice","originalInvoice","profomaInvoice","brandname","padding1","_pagepadding","boxShadow","headerfont4","headerfont5","headerfont3","seal","invoice_header","nobordertable","borderWidth","borderRightWidth","borderBottomWidth","Description","SmallBold","_ref4","financialYear","financialyear","amountinwords","Rs","amount","words","number","join","n_length","words_string","n_array","received_n_array","substr","j","cgstval","sgstval","igstval","tcsval","n","op","nums","whole","substring","fraction","RsPaise","dispDyn","datanew","alignItems","firstDat","secondDat","element","Fragment","ViewInvoicePdf","text","_componentDidMount","goBack","ViewProformaInvoice","sessionStorage","getProformaInvoice","proformainvoicelistvalues","proformainvoiceFetched","MyDocument2","total2","transportationgstper","transportationchargegst","totalaftertransportcharge","sign","ViewProformaInvoicePdf","parse","AddItemListForm","itemName","permeter","perfeet","perinch","masteritemimagefile","filename","onNameChange","_objectSpread3","_objectSpread4","onItemTypeChange","selecteditemtype","selecteditemtypevalue","selectitemid","selecteditemvalues","fileSelectedHandler","files","file_size","file_name","file_type","filesize","hasExtension","formdata","FormData","append","fileName","exts","RegExp","replace","test","encType","accept","cursor","ViewMasterItemList","showModal","setDeleteId","deleteItem","deleteMasterItemList","masteritemdata","deletedData","payload","AddmasterItemList","MasterItemListForm","errorHandler","MasterItemListValues","class","UpdateItemListForm","itemImage","imageChanged","itemimg","maxWidth","maxHeight","UpdateMasterItemList","UpdateMasterItemListForm","MasterItemTypeForm","MasterItemTypename","MasterItemType","ItemMasterTypeList","masteritemtypesvalues","masteritemtypedata","UpdateMasterItemTypeForm","masteritemtypenamevalueobjectlist","UpdateItemMasterType","updateMasterItemTypes","masteritemid","EditTable","poid","poitemid","itemquantity","receivedqty","recevingqty","totalqty","receiptnumber","selectedItem","sucess","loadingvalue","selected_qty","iteminfo","itemlistsubmit","selectedItemlistvalues","tableBody","nowDate","min","max","locationapi","getLocationList","locationlist","locationdata","locationListFetched","ReceiptScreenForm","onhandleChange","ReceiptTable","receiptlistitems","receiptlisttable","receiptvalue","ReceiptScreen","getReceiptlist","searchPoNumber","podata","poItem","datavalue","searchporesult","searchdata","savereport","orderlistvalues","today","poqty","receiptDate","availqty","ViewReceiptPdf","poreceiptvalues","itemcode","TotalRecQty","moveorderapi","moveorder","addmoveorder","moveorderdata","getmoveorder","moveorderlist","getItemsMoveOrder","addMoveOrder","moverorderlistvalues","moverorderlist","getMoveOrder","moveorderFetched","itemorderlist","itemorderlistvalues","itemdata","MoveOrderScreenForm","availableQuantity","moveorderno","fromaddress","tolocationlist","handleChangeDeliveryDate","it","itemdesc","onhandlerFromChange","onhandlerToChange","createToLocationList","moveorderlistvalues","getMovedata","overflowX","MoveOrderScreen","ViewProduction","ViewMoveOrderProduction","moveorderid","receivedData","_componentWillReceiveProps","AddOnHandScreenForm","isAdded","entities","AddOnHand","productionapi","addproduction","productiondata","getproduction","productionlist","productionlistvalues","productionFetched","ProductionForm","totalweight","readystock","firstround","secondround","thirdround","productionorderno","subAssembly","dummyProductMapping","assembly","handleChangeCust","products2","productMaterial2","found","calculationArray","calculationdata","quantityPerMeter","quantityPerKg","thickness","weightChange","stockChange","secondChange","firstChange","thirdChange","toggelreload","onthicknessChange","mainindex","onQuantityChange","onQuantityChangeMeter","calc","kg","onQuantityChangeKg","onTotalChange","addItemComp","changeQuantity","getProddata","maninindex","AddProduction","ViewProudction","productiondate","description","qtyAvaillength","isViewList","productionTodayList","updateTransaction","toggle2","onhandlerChange2","subitem","usedqty","transactionHistrory","view2","viewTransaction","addTransaction","headerBlock","contentBlock","PurchaseOrderForm","isEditdone","suppliernumber","suppliername","supplieraddress1","supplieraddress2","suppliergstnumber","refno","subject","suppliercontactid","quotationno","currency","scheduledays","schedulepayment","createSelectSupplier","createSelectSupplierContact","suppliercontactname","_this$state$data2","getPODetails","podetail","supplierid","referenceno","currencyid","supplierapi","addSupplierContact","supplierContactdata","getSupplierContact","suppliercontactlist","addsupplierdetails","getSupplierDetails","supplierdetaillist","updateSupplierContact","suppliercontactlistdata","suppplierContactListFetched","supplierdetaillistdata","suppplierDetailListFetched","getCurrencyList","currencylist","currencydata","currencyListFetched","purchaseOrder","ViewPurchaseOrderlist","purchaseorder","address","suppliercity","supplierstate","supplierpincode","suppliercountry","columnSection","padd6","padding2","headerwidthNew","fontsize18bold","totaleachitem","selectecontactlist","selectedcontactlist","suppliercontactnumber","client","ViewPurchaseOrderPdf","purchaseorderid","selectedcontact","contactid","QuotationForm","isRemovedCalled","isVisible","itemdiscountamount","tcharge","transitinsurance","ws","loadingcharge","selectitemchange2","totaldiscountcost","getQuotationDetails","customerNumber","customerGST","customerAddress","dataelem","F","AddQuotation","ViewQuotation","tableHeader","cutoff","whiteSpace","wordBreak","bgblue","padding5","fontbold","smallicon","flexview","RedBold","BlackBold","customeraddress","loadingcharges","tchargegst","subtotalgst","totalincludegst","proud","makeInIdia","justDial","scaff","SupplierContactForm","SupplierContact","SupplierDetail","suppliercontactnamelist","suppliercontactdesignation","suppliercontactemail","supplierContacthandleChange","removeContact","contactnameChange","contactdesignationChange","contactnumberChange","contactemailChange","supplierContactinfo","suppliercontactarray","suppliercontactdesignationarray","suppliercontactnumberarray","suppliercontactemailarray","addSupplierDetails","SupplierDetailForm","SupplierDetailUpdateForm","mongoid","SupplierDetailUpdate","updateSupplierDetails","supplierdetailid","Supplierlist","supplierdata","supplierAddress","ItemQuantitySearch","TotalQuantity","ItemSearch","order","addorder","orderdata","updateaddorder","getorder","orderlist","orderFetched","OrderForm","companydetails","contactperson","officeno","deliveryschedule","orderdate","distance","sitecontactperson","pono","handleChangeDeliveryschedule","getWorkorderDetails","getOrderData","_React$createElement2","AddOrder","ViewOrder","updateCompleteOrder","updateworkorder","completed","DateNow","deliveryDate","companyname","ViewCompletedOrder","totalwt","ViewOrderPdf","AdminRole","deleteButton","startdat","userlistvalue","userFetched","EmployeeRole","BOMPage","_Component","ChallanPage","padding-top","CRMPage","CustomerPage","InventoryPage","top","InvoicePage","InvoicePage1","InvoicePage2","ItemsPage","ManufacturingPage","MoveOrder","OnHandPage","ProductionPage","PurchaceOrderPage","QuantityPage","QuotationPage","SupplierPage","TransactionPage","adminMenu","financeMenu","purchaseMenu","salesMenu","storeMenu","productionMenu","WorkOrderPage","component","rest","_objectWithoutProperties","_excluded","Route","render","Redirect","roles","includes","App","exact","GuestRoute","UserRoute","ViewAdmin","ViewEmployee","ProductList","UpdateMaterial","ViewMoveOrder","ViewItemsMoveOrder","AddMasterItemList","MasterItemList","UpdateMasterItemType","PurchaseOrder","ViewPurchaseOrderList","SupplierList","AddCustomer","UpdateCustomer","ViewQuotationPdf","AddChalan","Boolean","hostname","appReducer","combineReducers","action","storage","users","arrayData","fileteredData","ind","receiptlistvalues","rootReducer","persistConfig","localforage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","persistStore","library","add","faHome","faDollyFlatbed","faCube","faKaaba","faUsers","faUser","faUsersCog","faUserFriends","faCalendarPlus","sexond_role","ReactDOM","BrowserRouter","Provider","PersistGate","persistor","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.749aca3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sign.83a51cee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/js.15986e52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mk.e7f890af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proud.b1a70432.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scaff.184bf216.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd12c247.png\";","module.exports = __webpack_public_path__ + \"static/media/seal.0511c619.jpg\";","module.exports = __webpack_public_path__ + \"static/media/client.e1af59ba.png\";","import axios from \"axios\";\n\nexport default {\n  user: {\n    userRegister: userRegisterdata => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/auth`, {\n          userRegisterdata\n        })\n        .then(res => {\n          return res.data.userRecord;\n        });\n    },\n    login: credentials => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/login`, {\n          credentials\n        })\n        .then(res => {\n          return res.data.user;\n        });\n    },\n    getUser: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuser`)\n        .then(res => {\n          return res.data.userdata;\n        });\n    },\n    getUserbyid: id => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuserbyid?id=${id}`)\n        .then(res => {\n          return res.data.userRecordData;\n        });\n    },\n    updateUser: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/api/updateuser?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    deleteUser: id => {\n      return axios\n      .delete(`${process.env.REACT_APP_BASE_URL}/api/deleteUser?id=${id}`)\n    }\n  },\n  material: {\n    addmaterialtype: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/materialtype/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterialstype: data => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/materialtype/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerialtype: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/materialtype/updatematerialtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    addmaterial: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/material/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterial: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/material/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerial: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/material/updatematerial?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  product: {\n    addproduct: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/product/addproduct`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getproducts: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/product/getproducts`)\n        .then(res => {\n          return res.data.productlist;\n        });\n    }\n  },\n  year: {\n    addyear: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/year/addyear`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    checkexists: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/year/getyear`)\n        .then(res => {\n          return res.data.year;\n        });\n    },\n    updateyear: data => {\n      return axios\n      .patch(\n        `${process.env.REACT_APP_BASE_URL}/year/updateyear?id=${data.updateid}`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res.data.success;\n      })\n      .catch(err => {\n        return err.data.error;\n      });\n    }\n  }\n};\n","import axios from \"axios\";\nexport default (token = null) => {\n  if (token) {\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.headers.common.authorization;\n  }\n};\n","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\nexport const USER_FETCHED = 'USER_FETCHED';\nexport const MATERIAL_OPTIONS = 'MATERIAL_OPTIONS';\nexport const MATERIAL_VALUES_FETCHED = 'MATERIAL_VALUES_FETCHED';\nexport const PRODUCT_VALUES_FETCHED = 'PRODUCT_VALUES_FETCHED';\nexport const MASTER_ITEM_TYPES = 'MASTER_ITEM_TYPES';\nexport const MASTER_ITEM_LIST = 'MASTER_ITEM_LIST';\nexport const DELETE_MASTER_ITEM_LIST = 'DELETE_MASTER_ITEM_LIST';\nexport const SUPPLIER_CONTACT_LIST = 'SUPPLIER_CONTACT_LIST';\nexport const SUPPLIER_DETAIL_LIST = 'SUPPLIER_DETAIL_LIST';\nexport const UOM_LIST = 'UOM_LIST';\nexport const CURRENCY_LIST = 'CURRENCY_LIST';\nexport const Location_LIST = 'LOCATION_LIST';\nexport const PURCHASE_ORDER_LIST = 'PURCHASE_ORDER_LIST';\nexport const PO_RECEIPT_LIST = 'PO_RECEIPT_LIST';\nexport const ADD_CUSTOMER_CONTACT = 'ADD_CUSTOMER_CONTACT';\nexport const CUSTOMER_CONTACT_FETCHED = 'CUSTOMER_CONTACT_FETCHED';\nexport const CUSTOMERTRANSACTION_FETCHED = 'CUSTOMERTRANSACTION_FETCHED';\nexport const ADD_CUSTOMER_TRANSACTION = 'ADD_CUSTOMER_TRANSACTION';\n\nexport const QUOTATION_FETCHED = 'QUOTATION_FETCHED';\nexport const ADD_QUOTATION = 'ADD_QUOTATION';\n\nexport const INVOICE_FETCHED = 'INVOICE_FETCHED';\nexport const PROFORMAINVOICE_FETCHED = 'PROFORMAINVOICE_FETCHED';\nexport const ADD_PROFORMA_INVOICE = 'ADD_PROFORMA_INVOICE';\n\nexport const ADD_INVOICE = 'ADD_INVOICE';\n\nexport const CHALLAN_FETCHED = 'CHALLAN_FETCHED';\nexport const ADD_CHALLAN = 'ADD_CHALAN';\n\nexport const ORDER_FETCHED = 'ORDER_FETCHED';\nexport const ADD_ORDER = 'ADD_ORDER';\n\nexport const PRODUCTION_FETCHED = 'PRODUCTION_FETCHED';\nexport const ADD_PRODUCTION = 'ADD_PRODUCTION';\n\nexport const MOVEORDER_FETCHED = 'MOVEORDER_FETCHED';\nexport const ADD_MOVEORDER = 'ADD_MOVEORDER';\n","import { schema } from 'normalizr';\n\nexport const userSchema = new schema.Entity('users', {}, { idAttribute: 'id' });\n\nexport const uomListSchema = new schema.Entity(\n  'uomlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialOptionSchema = new schema.Entity(\n  'materialoptions',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialListSchema = new schema.Entity(\n  'materialslistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const productListSchema = new schema.Entity(\n  'productlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeNameSchema = new schema.Entity(\n  'masteritemtypenamevalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeListSchema = new schema.Entity(\n  'masteritemtypelistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierContactListSchema = new schema.Entity(\n  'suppliercontactlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierDetailListSchema = new schema.Entity(\n  'supplierdetaillistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const currencyListSchema = new schema.Entity(\n  'currencylistvalue',\n  {},\n  { idAttribute: 'id' }\n);\nexport const locationListSchema = new schema.Entity(\n  'locationlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const purchaseOrderListSchema = new schema.Entity(\n  'purchaseorderlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const receiptListSchema = new schema.Entity(\n  'receiptlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerListSchema = new schema.Entity(\n  'customerlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerTransactionSchema = new schema.Entity(\n  'customertransationvalues',\n  {},\n  { idAttribute: 'customerid' }\n);\n\nexport const quotationListSchema = new schema.Entity(\n  'quotationlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const invoiceListSchema = new schema.Entity(\n  'invoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const proformainvoiceListSchema = new schema.Entity(\n  'proformainvoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const challanListSchema = new schema.Entity(\n  'challanlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const orderListSchema = new schema.Entity(\n  'orderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const productionListSchema = new schema.Entity(\n  'productionlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const moveorderListSchema = new schema.Entity(\n  'moveorderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport setAuthorizationHeader from \"../utils/setAuthorizationHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  USER_FETCHED\n} from \"../Services/types\";\nimport { userSchema } from \"../Schemas/schemas\";\n\nexport const userLoggedIn = user => {\n  return {\n    type: USER_LOGGED_IN,\n    user: user\n  };\n};\n\nexport const userLoggedOut = () => {\n  return {\n    type: USER_LOGGED_OUT,\n    user: {}\n  };\n};\n\nexport const userFetched = userlist => {\n  return {\n    type: USER_FETCHED,\n    userlist\n  };\n};\n\nexport const userRegister = data => {\n  return dispatch => {\n    return api.user.userRegister(data);\n  };\n};\n\nexport const getUser = () => {\n  console.log(\"dispatch action calling\");\n  return dispatch => {\n    return api.user.getUser().then(userlist => {\n      const userlistvalue = userlist.userdata;\n      return dispatch(userFetched(normalize(userlistvalue, [userSchema])));\n    });\n  };\n};\n\nexport const updateUser = data => {\n  return dispatch => {\n    return api.user.updateUser(data);\n  };\n};\n\nexport const deleteUser = id => {\n  return dispatch => {\n    return api.user.deleteUser(id);\n  }\n}\n\nexport const login = credentials => {\n  return dispatch => {\n    return api.user.login(credentials).then(user => {\n      localStorage.Mob_JWT = user.token;\n      setAuthorizationHeader(user.token);\n      var decoded = jwtDecode(localStorage.Mob_JWT);\n      console.log(\"Decoded \", decoded)\n      const userinfo = {\n        email: decoded.email,\n        role: decoded.role,\n        second_role: decoded.second_role,\n        token: localStorage.Mob_JWT\n      };\n      dispatch(userLoggedIn(userinfo));\n    });\n  };\n};\n\nexport const logout = e => {\n  return dispatch => {\n    localStorage.removeItem(\"Mob_JWT\");\n    dispatch(userLoggedOut());\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/actions';\nimport logo from '../../Images/logo.png';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      isAuthenticated: this.props.isAuthenticated\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logout = () => {\n    this.props.logout();\n    window.location.reload();\n    this.props.history.push('/login');\n  };\n  render() {\n    return (\n      <div>\n        <Navbar  expand='md'>\n          <div className='container'>\n            <NavbarBrand tag={Link} to='/'>\n              <div>\n                <img src={logo} alt='scaffolding' style={{ width: '90px' }} />\n              </div>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'admin'\n                ) && (\n                  <NavItem>\n                    <NavLink tag={Link} to='/admin_dashboard'>\n                      <i className='fas fa-home fa-2x'></i>\n                    </NavLink>\n                  </NavItem>\n                )}\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'management' || this.props.role == 'itadmin' || this.props.second_role == 'management' || this.props.second_role == 'itadmin'\n                ) && (\n                  <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                      Users\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem tag={Link} to='/adduser'>\n                        Add User\n                      </DropdownItem>\n                      <DropdownItem tag={Link} to='/adminlist'>\n                        Registered user details\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                )}\n                {/* {!!(this.props.isAuthenticated && this.props.role == \"admin\") &&\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Material & product\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag={Link} to=\"/addmaterialtype\">\n                    Add MaterialTypes \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addmaterial\">\n                    Add Material \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addproduct\">\n                    Add Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/viewproductlist\">\n                    View Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/productbilling\">\n                    Product Billing \n                  </DropdownItem>  \n                </DropdownMenu>\n              </UncontrolledDropdown>\n              } */}\n                {this.props.isAuthenticated ? (\n                  <NavItem>\n                    <NavLink tag={Link} onClick={this.logout}>\n                      Logout\n                    </NavLink>\n                  </NavItem>\n                ) : (\n                  <NavItem>\n                    <NavLink tag={Link} to='/login'>\n                      Login\n                    </NavLink>\n                  </NavItem>\n                )}\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  if (state && state.user) {\n    return {\n      isAuthenticated: !!state.user.token,\n      role: state.user.role,\n      second_role: state.user.second_role\n    };\n  } else {\n    return {\n      isAuthenticated: false,\n      role: 'admin'\n    };\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { logout }\n  )(Header)\n);\n","import React from 'react';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass AddUserForm extends React.Component {\n  state = {\n    data: {\n      title: 'Mr',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: null,\n      username: 'nA',\n      password: '',\n      repassword: '',\n      active: '1',\n      persontype: 'admin',\n      second_persontype: '',\n      department: '1',\n      job: '1',\n      location: '1'\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? <Alert color='info'>user is added</Alert> : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='second_persontype'>Second Role Role</Label>\n                    <span className='required-label'></span>\n                    <AvField\n                      type='select'\n                      name='second_persontype'\n                      id='second_persontype'\n                      onChange={this.onChange}\n                      value={data.second_persontype}\n                    >\n                      <option value=''>Select Second</option>\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>                  \n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='password'\n                      type='password'\n                      id='password'\n                      value={data.password}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                       \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Re Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='repassword'\n                      type='password'\n                      id='re-password'\n                      value={data.repassword}\n                      onChange={this.onChange}\n                      validate={{\n                        match: { value: 'password' },\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                      \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {loading}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default AddUserForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { userRegister } from \"../../actions/actions\";\nimport AddUserForm from \"./AddUserForm/AddUserForm\";\n\nclass AddUser extends React.Component {\n  submit = data => this.props.userRegister(data);\n\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <AddUserForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nAddUser.propTypes = {\n  userRegister: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { userRegister }\n)(AddUser);\n","import React from \"react\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport \"./loader.css\";\nclass CustomLoader extends React.Component {\n    render() {\n        return(\n         <Loader className=\"loaderposition\"\n            type=\"ThreeDots\"\n            color=\"#ed272f\"\n            height=\"100\"\n            width=\"100\"\n         />\n        );\n       }\n}\n\nexport default CustomLoader;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\nimport CustomLoader from '../../../Components/loader/loader';\n\nclass UpdateUserForm extends React.Component {\n  state = {\n    data: {\n      id: '',\n      title: '',\n      firstname: this.props.firstname,\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: '',\n      username: '',\n      password: '',\n      repassword: '',\n      active: '',\n      persontype: '',\n      second_persontype: '',\n      department: '',\n      job: '',\n      location: ''\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    count: ''\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const userRecord = props.userRecord;\n    const userRecordModified = userRecord;\n    userRecordModified.startdate = new Date(userRecord.startdate);\n    // userRecordModified.enddate = new Date(userRecord.enddate);\n    let dateEnd = new Date();\n    try {\n     dateEnd = new Date(userRecordModified.enddate);\n     if(dateEnd == \"Invalid Date\") {\n      dateEnd = null;\n     }\n    }\n    catch (errors) {\n      dateEnd = null;\n    }\n    userRecordModified.enddate = dateEnd;\n    this.setState({ ...this.state.data, data: userRecordModified });\n  }\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(data => {\n        console.log('updateuserform page');\n        console.log(data);\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          {!!success ? (\n            <Alert color='info'>User details is updated successfully</Alert>\n          ) : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                      value={data.title}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n            \n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        disabled={true}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='second_persontype'>Second Role</Label>\n                    <span className='required-label'></span>\n                    <AvField\n                      type='select'\n                      name='second_persontype'\n                      id='second_persontype'\n                      onChange={this.onChange}\n                      value={data.second_persontype}\n                    >\n                      <option value=''>Select Second Role</option>\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>                  \n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                        {data.enddate && data.enddate !== '' ? (\n                        <DatePicker\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />                        \n                      ): null}\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\nUpdateUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateUserForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport UpdateUserForm from \"./AddUserForm/UpdateUserForm\";\n// import api from \"../api\";\nimport { updateUser } from \"../../actions/actions\";\n\nclass UpdateUser extends React.Component {\n  state = {\n    userRecord: \"\"\n  };\n\n  componentDidMount() {\n    const userid = this.props.match.params.id;\n    const userRecord = this.props.userlist[userid];\n    this.setState({ userRecord });\n    // api.user.getUserbyid(userid)\n    // .then((userRecord)=>{\n    //     this.setState({userRecord});\n    // })\n    // .catch((err)=>{\n    //     console.log(\"updateuserfile err\");\n    //     console.log(err);\n    // });\n  }\n\n  submit = data => this.props.updateUser(data);\n\n  render() {\n    const { userRecord, userid } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <UpdateUserForm userRecord={userRecord} submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nUpdateUser.propTypes = {\n  userlist: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  userRecord: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    firstname: PropTypes.string.isRequired,\n    lastname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    startdate: PropTypes.string.isRequired,\n    enddate: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    persontype: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    job: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updateUser }\n)(UpdateUser);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AdminDashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/inventory_page\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Setup</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/transaction_page\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Transactions</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n            {/* <li className=\"bg-color-lg-pk\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-user fa-3x\"></i>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-org\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-users-cog fa-3x\"></i>\n                </Link>\n              </div>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport {\n  MATERIAL_OPTIONS,\n  MATERIAL_VALUES_FETCHED,\n  PRODUCT_VALUES_FETCHED\n} from \"../Services/types\";\nimport {\n  materialOptionSchema,\n  materialListSchema,\n  productListSchema\n} from \"../Schemas/schemas\";\n\nexport const productvalueFetched = productlistvalues => {\n  return {\n    type: PRODUCT_VALUES_FETCHED,\n    productlistvalues\n  };\n};\nexport const materialoptionFetched = materialoption => {\n  return {\n    type: MATERIAL_OPTIONS,\n    materialoption\n  };\n};\n\nexport const materialsFetched = materialsvalues => {\n  return {\n    type: MATERIAL_VALUES_FETCHED,\n    materialsvalues\n  };\n};\n\nexport const addproduct = data => {\n  return dispatch => {\n    return api.product.addproduct(data);\n  };\n};\n\nexport const getproducts = data => {\n  return dispatch => {\n    return api.product.getproducts(data).then(data => {\n      const productlistvalues = data.productdata;\n      return dispatch(\n        productvalueFetched(normalize(productlistvalues, [productListSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterialTypes = data => {\n  return dispatch => {\n    return api.material.addmaterialtype(data);\n  };\n};\n\nexport const updateMaterialType = data => {\n  return dispatch => {\n    return api.material.updatematerialtype(data);\n  };\n};\n\nexport const getMaterialsTypes = () => {\n  return dispatch => {\n    return api.material.getmaterialstype().then(materiallist => {\n      const materialsvalue = materiallist.materialsdata;\n      return dispatch(\n        materialoptionFetched(normalize(materialsvalue, [materialOptionSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterial = data => {\n  return dispatch => {\n    return api.material.addmaterial(data);\n  };\n};\n\nexport const getMaterial = () => {\n  return dispatch => {\n    return api.material.getmaterial().then(materiallist => {\n      const materialslistvalue = materiallist.materialsdata;\n      return dispatch(\n        materialsFetched(normalize(materialslistvalue, [materialListSchema]))\n      );\n    });\n  };\n};\n\nexport const updatematerialdetails = data => {\n  return dispatch => {\n    return api.material.updatematerial(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  uom: {\n    getUomDetails: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n        .then(res => {\n          return res.data.uomlist;\n        });\n    }\n  },\n  transaction: {\n    addMasterItemType: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/transaction/addmasteritemtype`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getMasterItemType: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/transaction/getmasteritemtype`)\n        .then(res => {\n          return res.data.masteritemtypes;\n        });\n    },\n    updateMasterItemType: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/transaction/updatemasteritemtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  transactionMasterItemList: {\n    addMasterItemList: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/addmasteritemlist`,\n        method: \"POST\",\n        data: data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    getMasterItemList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/getmasteritemlist`\n        )\n        .then(res => {\n          return res.data.masteritemlist;\n        });\n    },\n    updatemasteritemlist: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/updatemasteritemlist?id=${data.id}`,\n        method: \"PATCH\",\n        data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    deletemasteritemlist: id => {\n      return axios\n      .delete(\n        `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/deletemasteritemlist?id=${id}`\n      )\n    }\n  },\n  purchaseorder: {\n    addPurchaseOrder: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/addpurchaseorder`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    updatePurchaseOrder: data =>{\n      console.log(data)\n      return axios\n      .post(\n        `${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res;\n      });\n    },\n    getPurchaseOrderList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorderrlist`\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    searchponumber: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/searchpurchaseorderrlist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.purchaseordervalue;\n        });\n    }\n  },\n  addorupdateitemsinlocation: {\n    addorupdateitemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/addorupdateitems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    additemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/additems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    getitemlistavaliable: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/getitemlistavaliable/?locationid=${data.locationid}&itemid=${data.itemid}`\n        )\n        .then(res => {\n          return res.data.totalitemlistvalues;\n        });\n    }\n  },\n  receipt: {\n    getReceiptList: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/receiptinfo/getreceiptinfolist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.receiptlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport {\n  MASTER_ITEM_TYPES,\n  MASTER_ITEM_LIST,\n  PURCHASE_ORDER_LIST,\n  PO_RECEIPT_LIST,\n  DELETE_MASTER_ITEM_LIST\n} from \"../Services/types\";\nimport {\n  masterItemTypeNameSchema,\n  masterItemTypeListSchema,\n  purchaseOrderListSchema,\n  receiptListSchema\n} from \"../Schemas/schemas\";\n\nexport const masterItemTypeNameFetched = MasterItemTypeName => {\n  return {\n    type: MASTER_ITEM_TYPES,\n    MasterItemTypeName\n  };\n};\n\nexport const masterItemTypeListFetched = MasterItemTypeList => {\n  return {\n    type: MASTER_ITEM_LIST,\n    MasterItemTypeList\n  };\n};\n\nexport const purchaseOrderListFetched = purchaseorderlistvalues => {\n  return {\n    type: PURCHASE_ORDER_LIST,\n    purchaseorderlistvalues\n  };\n};\n\nexport const ReceiptListFetched = receiptlistvalues => {\n  return {\n    type: PO_RECEIPT_LIST,\n    receiptlistvalues\n  };\n};\nexport const addMasterItemType = data => {\n  return dispatch => {\n    return api.transaction.addMasterItemType(data);\n  };\n};\n\nexport const updateMasterItemTypes = data => {\n  return dispatch => {\n    return api.transaction.updateMasterItemType(data);\n  };\n};\n\nexport const updatemasteritemlist = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.updatemasteritemlist(data);\n  };\n};\nexport const getMasterItemTypes = () => {\n  return dispatch => {\n    return api.transaction.getMasterItemType().then(masteritemtypes => {\n      const masteritemtypenamevalue = masteritemtypes.masteritemtypenamedata;\n      return dispatch(\n        masterItemTypeNameFetched(\n          normalize(masteritemtypenamevalue, [masterItemTypeNameSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const addMasterItemList = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.addMasterItemList(data);\n  };\n};\n\nexport const deleteMasterItemList = id => {\n  return dispatch => {\n    return api.transactionMasterItemList.deletemasteritemlist(id).then(deletedData => {\n      return dispatch({\n        type: DELETE_MASTER_ITEM_LIST,\n        payload: id\n     })\n    })\n  };\n}\n\nexport const getMasterItemList = () => {\n  return dispatch => {\n    return api.transactionMasterItemList\n      .getMasterItemList()\n      .then(masteritemlist => {\n        const masteritemtypelistvalues = masteritemlist.masteritemtypelistdata;\n        return dispatch(\n          masterItemTypeListFetched(\n            normalize(masteritemtypelistvalues, [masterItemTypeListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const addPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.addPurchaseOrder(data);\n  };\n};\n\n\nexport const updatePurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.updatePurchaseOrder(data);\n  };\n};\n\nexport const getPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.getPurchaseOrderList().then(purchaseorderlist => {\n      const purchaseorderlistvalues = purchaseorderlist.purchaseorderlistdata;\n      return dispatch(\n        purchaseOrderListFetched(\n          normalize(purchaseorderlistvalues, [purchaseOrderListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const searchPoNumber = data => {\n  return dispatch => {\n    return api.purchaseorder.searchponumber(data);\n  };\n};\n\nexport const addorupdateitemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.addorupdateitemsinlocation(data);\n  };\n};\n\nexport const additemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.additemsinlocation(data);\n  };\n};\n\nexport const getReceiptlist = data => {\n  return dispatch => {\n    return api.receipt.getReceiptList(data);\n    // .then(receiptlist => {\n    //   if (receiptlist.count > 0) {\n    //     const receiptlistvalues = receiptlist.receiptlist;\n    //     return dispatch(\n    //       ReceiptListFetched(normalize(receiptlistvalues, [receiptListSchema]))\n    //     );\n    //   }\n    //   return receiptlist;\n    // });\n  };\n};\nexport const totalitemvaluesearch = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.getitemlistavaliable(data);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    data: {\n      product: \"\",\n      profit: \"\",\n      qty: \"\",\n      labourcost: \"\"\n    },\n    productlistvalues: [],\n    errors: {},\n    materiallistvalues: {},\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    this.setState({ ...this.state, productlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const productlistvalues = Object.values(props.productlistvalues);\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const productlistvalues = this.state.productlistvalues;\n    const materiallistvalues = this.state.materiallistvalues;\n    productlistvalues\n      .map((option, i) => option)\n      .filter((option, i) => {\n        if (materiallistvalues[option.productname._id]) {\n          items.push(\n            <option key={i} value={option.id}>\n              {materiallistvalues[option.productname._id].masteritemdescription}\n            </option>\n          );\n        }\n      });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const data = this.props.submit(this.state.data);\n    console.log(data);\n    if (data) {\n      this.setState({ loading: false, errors: {}, success: true });\n    }\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Product Billing</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"product\">Product Id</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"product\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">Please select value</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"profit\">Profit %</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"profit\"\n                      type=\"text\"\n                      id=\"profit\"\n                      value={data.profit}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter profit value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"profit value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"qty\">Quantity</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"qty\"\n                      type=\"text\"\n                      id=\"qty\"\n                      value={data.qty}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter product quantity value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"quantity value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"labourcost\">Labour Cost</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"labourcost\"\n                      type=\"text\"\n                      id=\"labourcost\"\n                      value={data.labourcost}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter labour cost value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"labour cost value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{'textAlign':'center'}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductBilling);\n","import React from \"react\";\n\nclass BillingTable extends React.Component {\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.props;\n    const materialTotalCost =\n      selectedProduct.productMaterial\n        .map((productMaterialData, i) => {\n          return (\n            parseFloat(productMaterialData.productqty) *\n            // parseFloat(productMaterialData.product_id.materialrate) *\n            parseFloat(productMaterialData.product_id.masteritemcostperunit)\n          );\n        })\n        .reduce((a, b) => a + b, 0) * parseFloat(productformvalues.qty);\n    const subTotal =\n      materialTotalCost + parseFloat(productformvalues.labourcost);\n    const profit = (parseFloat(productformvalues.profit) / 100) * subTotal;\n    const grandTotal = subTotal + profit;\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th colSpan=\"4\">\n                {\n                  materiallistvalues[selectedProduct.productname._id]\n                    .masteritemdescription\n                }\n              </th>\n            </tr>\n            <tr>\n              <th>Item Name</th>\n              <th>UOM</th>\n              <th>Unit per Cost</th>\n              <th>Item Qty</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selectedProduct.productMaterial.map((productMaterialData, i) => {\n              return (\n                <tr>\n                  <td>{productMaterialData.product_id.masteritemname}</td>\n                  <td>\n                    {productMaterialData.product_id.masteritemuom.uomname}\n                  </td>\n                  <td>\n                    {productMaterialData.product_id.masteritemcostperunit}\n                  </td>\n                  <td>{productMaterialData.productqty}</td>\n                  <td>\n                    {parseFloat(productMaterialData.productqty).toFixed(2) *\n                      // parseFloat(productMaterialData.product_id.materialrate) *\n                      parseFloat(\n                        productMaterialData.product_id.masteritemcostperunit\n                      ).toFixed(2)}\n                  </td>\n                </tr>\n              );\n            })}\n            <tr>\n              <td colSpan=\"4\">Product Quantity</td>\n              <td>{parseFloat(productformvalues.qty)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Material Total Cost</td>\n              <td>{materialTotalCost}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Labour charge</td>\n              <td>{parseInt(productformvalues.labourcost)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Sub Total</td>\n              <td>{subTotal}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Profit % </td>\n              <td>{profit}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Grand Total</td>\n\n              <td>{grandTotal}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default BillingTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport BillingForm from \"./BillingForm/BillingForm\";\nimport BillingTable from \"./BillingTable\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    productformvalues: {},\n    productlistvalue: {},\n    materiallistvalues: {},\n    selectedProduct: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.props.getMasterItemList();\n  }\n  componentWillReceiveProps(props) {\n    const productlistvalues = props.productlistvalues;\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n  submit = productformvalues => {\n    const selectedProduct = this.props.productlistvalues[\n      productformvalues.product\n    ];\n    if (selectedProduct) {\n      this.setState({ ...this.state, productformvalues, selectedProduct });\n      return {\n        success: { gloabl: \"data exist\" }\n      };\n    } else {\n      return {\n        errors: { global: \"something went wrong\" }\n      };\n    }\n  };\n\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.state;\n\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Cost</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <BillingForm submit={this.submit} />\n        {!!selectedProduct && (\n          <BillingTable\n            selectedProduct={selectedProduct}\n            productformvalues={productformvalues}\n            materiallistvalues={materiallistvalues}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts, getMasterItemList }\n)(ProductBilling);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginForm.scss\";\n\nclass LoginForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    errors: {},\n    loading: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props.submit(this.state.data).catch(err => {\n      console.log(JSON.stringify(err))\n      this.setState({ errors: err.response.data.errors, loading: false });\n      this.props.error(false);\n    });\n  };\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading } = this.state;\n    return (\n      <div className=\"center login-form-parent mg-20\">\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <AvGroup>\n            <div>\n              {!!errors.global ? (\n                <Alert color=\"danger\">{errors.global}</Alert>\n              ) : null}\n\n              {!!errors.email ? (\n                <Alert color=\"danger\">{errors.email}</Alert>\n              ) : null}\n            </div>\n            <Label className='small-font-size' for=\"Email\">Email</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"email\"\n              id=\"Email\"\n              type=\"email\"\n              value={data.email}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a Email\"\n                },\n                pattern: {\n                  value:\n                    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                  errorMessage: \"Please enter valid Email\"\n                }\n              }}\n            />\n          </AvGroup>\n          <AvGroup>\n            <Label className='small-font-size' for=\"password\">Password</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a password\"\n                }\n              }}\n            />\n          </AvGroup>\n          <div style={{ textAlign: \"center\" }}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","export const Roles = {\n  ADMIN: 'management',\n  EMPLOYEE: 'employee',\n  ITADMIN: 'itadmin',\n  FINANCE: 'finance',\n  PURCHASE: 'purchase',\n  SALES: 'sales',\n  STORE: 'stores',\n  PRODUCTION:'production'\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginForm from './LoginForm/LoginForm';\nimport { login } from '../../actions/actions';\nimport { Roles } from '../../Services/Roles';\nimport CustomLoader from '../../Components/loader/loader';\nimport Alert2 from '../../Components/Alert/Alert';\n\nclass LoginPage extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.login(data).then(() => {\n\n      this.dataHandler(false);\n      console.log(this.props.role);\n      if (this.props.role === Roles.ADMIN) {\n        // return this.props.history.push(`/adduser`);\n        return this.props.history.push(`/admin_dashboard`);\n      } else if (this.props.role === Roles.ITADMIN) {\n        return this.props.history.push(`/adminlist`);\n      } else if (\n        this.props.role === Roles.FINANCE ||\n        this.props.role === Roles.PURCHASE ||\n        this.props.role === Roles.SALES ||\n        this.props.role === Roles.STORE ||\n        this.props.role === Roles.PRODUCTION\n      ) {\n        return this.props.history.push(`/transaction_page`);\n      } else {\n\n        return this.props.history.push(`/admin_dashboard`);\n      }\n    });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n\n        <LoginForm submit={this.submit} error={this.dataHandler} />\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  role: PropTypes.string.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  submit: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(LoginPage);\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass Alert2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  render() {\n    return (\n      <div>\n        {/* <Button color=\"danger\" onClick={this.toggle}>\n          {this.props.buttonLabel}\n        </Button> */}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Pondhan Scaffolding</ModalHeader>\n          <ModalBody>\n          {this.props.errormessage}\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"secondary\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Alert2;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass AddMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: null,\n      materialrate: null\n    },\n    materialoptionlistvalues: [],\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Material is added successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Itemname\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid Itemname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">Item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Please select value</option>\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemdescription\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">Item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                       \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                   \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddMaterialForm);\n","import React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./DataTable.css\";\n\nconst DatatablePage = props => {\n  let scroll = false;\n  if(props.scrollx) {\n    scroll = props.scrollx\n  }\n  const data = {\n    columns: props.columnvalue,\n    rows: props.rowvalues\n  };\n\n  return (\n    <MDBDataTable\n      scrollX={scroll}\n      striped\n      bordered\n      small\n      data={data}\n      className={props.className}\n    />\n  );\n};\n\nexport default DatatablePage;\n","import React from \"react\";\nimport AddMaterialForm from \"./MaterialForms/AddMaterialForm\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  addMaterial,\n  getMaterial,\n  getMaterialsTypes\n} from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\n\nclass AddMaterial extends React.Component {\n  state = {\n    materiallist: \"\",\n    count: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_material/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentWillReceiveProps(props) {\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    const materiallist = materiallistvalues.map((materialdata, i) => {\n      return {\n        materialtype: materialdata.materialtype.materialname,\n        materialname: materialdata.materialname,\n        materialdescription: materialdata.materialdescription,\n        materialuom: materialdata.materialuom,\n        materialrate: materialdata.materialrate,\n        costperunit: materialdata.costperunit,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            View / Edit\n          </Button>\n        )\n      };\n    });\n    const count = materiallistvalues.length;\n    this.setState({ ...this.state, materiallist, count });\n  }\n\n  submit = data => {\n    return this.props.addMaterial(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { count, materiallist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"material Type\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Name\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"materialdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"unit of measure\",\n        field: \"materialuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Rate\",\n        field: \"materialrate\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"cost per unit\",\n        field: \"costperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"view / Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Item</BreadcrumbItem>\n        </Breadcrumb>\n        <AddMaterialForm submit={this.submit} />\n        <div>\n          {count > 0 && (\n            <div className=\"container mg-20\">\n              <DataTable columnvalue={columnvalue} rowvalues={materiallist} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAddMaterial.propTypes = {\n  addMaterial: PropTypes.func.isRequired,\n  getMaterial: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMaterial, getMaterial, getMaterialsTypes }\n)(AddMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass AddMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            material:\"\"\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    handleValidSubmit = () => {\n        console.log(this.state.data);\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Material details is Added successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Material data already exist.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Add Item Type</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"material\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.option}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item\"\n                                            },\n                                   \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid materialname\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <AvGroup className=\"mg-20\">\n                                    <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                                        Submit\n                                        {/* {loading} */}\n                                    </Button>\n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nAddMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nexport default AddMaterialTypesForm;","import React from \"react\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport AddMaterialOptions from \"./MaterialForms/AddMaterialTypesForm\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport { addMaterialTypes, getMaterialsTypes } from \"../../actions/Product\";\n\nclass AddMaterialType extends React.Component {\n  state = {\n    count: \"\",\n    materialoptions: []\n  };\n  componentDidMount() {\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_itemtype/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const materialoptionslist = Object.values(props.materialoptions);\n    const materialoptions = materialoptionslist.map((materialdata, i) => {\n      return {\n        materialname: materialdata.materialname,\n        view: (\n          <MDBBtn\n            color=\"info\"\n            size=\"sm\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            view / Edit\n          </MDBBtn>\n        )\n      };\n    });\n    const count = materialoptions.length;\n    this.setState({ ...this.state, materialoptions, count });\n  }\n  submit = data => {\n    return this.props.addMaterialTypes(data).then(data => {\n      this.props.getMaterialsTypes();\n      return data;\n    });\n  };\n  render() {\n    const { count, materialoptions } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div>\n        <div className=\"container mg-20\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Inventory</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Add Item Type</BreadcrumbItem>\n          </Breadcrumb>\n\n          <AddMaterialOptions submit={this.submit} />\n        </div>\n        {count > 0 && (\n          <div className=\"container mg-20\">\n            <DataTable columnvalue={columnvalue} rowvalues={materialoptions} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAddMaterialType.propTypes = {\n  addMaterialTypes: PropTypes.func.isRequired,\n  getMaterialsTypes: PropTypes.func.isRequired,\n  materialoptions: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    materialname: PropTypes.string.isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptions: state.materialoption\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { addMaterialTypes, getMaterialsTypes }\n)(AddMaterialType);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UpdateMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: \"\",\n      materialrate: \"1\"\n    },\n\n    errors: {},\n    materialoptionlistvalues: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.materialvalues;\n    data.materialtype = props.materialvalues.materialtype._id;\n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Item is updated successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader>Add Material</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemname\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid materialname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                      value={data.materialtype}\n                    >\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                      value={data.materialuom}\n                    >\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"ea\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                      \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                 \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateMaterialForm);\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMaterialForm from \"./MaterialForms/UpdateMaterialForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatematerialdetails, getMaterial } from \"../../actions/Product\";\n\nclass updateMaterial extends React.Component {\n  state = {\n    materialvalues: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    const materialid = this.props.match.params.id;\n    const materialvalues = this.props.materiallistvalues[materialid];\n    this.setState({ materialvalues });\n  }\n\n  submit = data => {\n    return this.props.updatematerialdetails(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { materialvalues } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/additem\">Add Item</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <UpdateMaterialForm\n          submit={this.submit}\n          materialvalues={materialvalues}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updatematerialdetails, getMaterial }\n)(updateMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass UpdateMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            materialname:this.props.materialoption.materialname,\n            id:this.props.materialoption.id\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    componentWillReceiveProps(props){\n        const dataRecord = props.materialoption;\n        this.setState({...this.state.data, data:dataRecord});\n    }\n\n    handleValidSubmit = () => {\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            // this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        console.log(this.props);\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Item details is updated successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Item data already exist.</Alert>\n                ) : null}\n                {!!errors.global ? (\n                    <Alert color=\"danger\">Something went wrong,Please try again later.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Update Item</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"materialname\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.materialname}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item name\"\n                                            },\n                                      \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid item name\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                    <div className=\"mg-20\">\n                        <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                            update\n                            {/* {loading} */}\n                        </Button>\n                    </div>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nUpdateMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n      materialoptionobjectlist: state.materialoption\n    };\n}\n\nexport default connect(mapStateToProps,{})(UpdateMaterialTypesForm);","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport UpdateMaterialTypeForm from \"./MaterialForms/UpdateMaterialTypesForm\";\nimport { updateMaterialType,getMaterialsTypes } from \"../../actions/Product\";\n\nclass UpdateMaterialType extends React.Component{\n    state={\n        materialoption:''\n    }\n    \n    componentDidMount(){\n        const materialid = this.props.match.params.id;\n        const materialoption = this.props.materialoptions[materialid];\n        this.setState({materialoption});\n    }\n\n    submit = (data) => this.props.updateMaterialType(data);\n\n\n    render(){\n        const { materialoption } = this.state;\n        return(\n            <div className=\"container mg-20\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/inventory_page\">Inventory</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to=\"/add_itemtype\">Item type</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Item View/Edit</BreadcrumbItem>\n                </Breadcrumb>\n                <UpdateMaterialTypeForm materialoption={materialoption} submit={this.submit} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        materialoptions: state.materialoption\n    }\n}\n\nexport default connect(mapStateToProps,{updateMaterialType,getMaterialsTypes})(UpdateMaterialType);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nclass ProductForm extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      data: {\n        productname: \"\",\n        values: [\"\"],\n        products: [\"\"],\n        productsqty: [\"\"],\n        productsuom: [\"\"],\n        productsqtyinmeter: [\"\"],\n        productsweight: [\"\"]\n      },\n      materiallistvalues: [],\n      uomlistvalues:[],\n      materiallistvaluesObject: {},\n      loading: false,\n      errors: {},\n      success: false\n    };\n  }\n  componentDidMount() {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(this.props.materiallistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n    this.getUnitmeasures()\n  }\n\n  componentWillReceiveProps(props) {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    //const uomlistvalues = Object.values(props.uomlistvalues);\n    // console.log(uomlistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n  }\n\n\n\n  getUnitmeasures(){\n    \n    this.setState({ loading: true });\n \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n    .then(res => {\n      console.log(res.data)\n      if(res.data.uomlist.uomdata.length > 0){\n        this.setState({\n          uomlistvalues:res.data.uomlist.uomdata\n        });\n      }\n      this.setState({ loading: false });\n    },\n    error =>{\n      this.setState({ loading: false });\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n\n  createSelectItems3 = optionvalue => {\n\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues\n    uomlistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.uomname}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItems = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'id': '1',\n    //     'itemname': 'Props'\n    //   },\n    //   {\n    //     'id': '2',\n    //     'itemname': 'MS Span'\n    //   },\n    //   {\n    //     'id': '3',\n    //     'itemname': 'MS Centering sheet'\n    //   },\n    //   {\n    //     'id': '4',\n    //     'itemname': 'Cuplock Vertical'\n    //   },\n    //   {\n    //     'id': '5',\n    //     'itemname': 'Cuoplock horizontal'\n    //   },\n    //   {\n    //     'id': '6',\n    //     'itemname': 'H Frame Scaffolding'\n    //   },\n    //   {\n    //     'id': '7',\n    //     'itemname': 'U Jack/ Base Jack'\n    //   },\n    //   {\n    //     'id': '8',\n    //     'itemname': 'Spigot pins'\n    //   },\n    //   {\n    //     'id': '9',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '10',\n    //     'itemname': 'pressed right cuplers'\n    //   },\n    //   {\n    //     'id': '11',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '12',\n    //     'itemname': 'Shttering clamps'\n    //   }\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    console.log(\"__MATERIAL_LIST_VALUES___\");\n    console.log(materiallistvalues);\n    materiallistvalues.filter((option, i) => {\n      if(option.masteritemtypename != \"\"){\n        if(option.masteritemtypename.split('')[0] == \"3\"){\n          items.push(\n            <option key={i} value={option.masteritemdescription}>\n              {option.masteritemdescription}\n            </option>\n          );\n        }\n      }\n   \n    });\n    return items;\n  };\n\n\n  createSelectItems2 = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'itemname': '50 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '6 mm MS Plate'\n    //   },\n    //   {\n    //     'itemname': 'Prop nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R sheet'\n    //   },\n    //   {\n    //     'itemname': 'Dia10 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': '65mm*6mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '75mm*75mm*8mm L Angle'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS span Bolt'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS Hexagonal nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R. Sheet'\n    //   },\n    //   {\n    //     'itemname': '25mm*25mm*5mm L angle.'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Top cup'\n    //   },\n    //   {\n    //     'itemname': 'Bottom cup'\n    //   },\n    //   {\n    //     'itemname': 'Dia 8 mm Rod'\n    //   },\n    //   {\n    //     'itemname': '20 NB H.R Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Ledger blade'\n    //   },\n    //   {\n    //     'itemname': 'locking pins'\n    //   },\n    //   {\n    //     'itemname': 'Dia 32 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': 'MS pLate'\n    //   },\n    //   {\n    //     'itemname': 'Cup nuts'\n    //   },\n    //   {\n    //     'itemname': 'dia 38 OD pipe'\n    //   },\n    //   {\n    //     'itemname': '40mm*40mm'\n    //   },\n    //   {\n    //     'itemname': '40mm*50mm'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm Ms flat'\n    //   }\n\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.masteritemdescription}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectunfinishedItems = optionvalue => {\n    let items = [];\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      if (option.masteritemtype.masteritemtypename !== optionvalue) {\n        items.push(\n          <option key={i} value={option.id}>\n            {option.masteritemtypename}\n          </option>\n        );\n      }\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        products: [...this.state.data.products, \"\"],\n        productsqty: [...this.state.data.productsqty, \"\"],\n        productsuom: [...this.state.data.productsuom, \"\"],\n        productsqtyinmeter: [...this.state.data.productsqtyinmeter, \"\"]\n      }\n    });\n  };\n  handleChange = (e, index) => {\n    this.state.data.products[index] = e.target.value;\n    const materialuom = this.state.materiallistvaluesObject[\n      this.state.data.products[index]\n    ];\n    this.state.data.productsqty[index] = \"1\";\n    this.state.data.productsuom[index] = materialuom.masteritemuom.uomname;\n    this.state.data.productsqtyinmeter[index] = \"\"\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        products: this.state.data.products,\n        productsuom: this.state.data.productsuom,\n        productsqty: this.state.data.productsqty,\n        productsqtyinmeter: this.state.data.productsqtyinmeter\n      }\n    });\n  };\n\n  ProductqtyhandleChange = (e, index) => {\n    console.log(index);\n    let arr = this.state.materiallistvalues.filter((item) =>{\n      return item.masteritemdescription == e.target.value\n    })\n    console.log(arr)\n    this.state.data.productsqty[index] = e.target.value;\n    this.state.data.productsweight[index] = \n    arr.length > 0 ? (arr[0].masteritemunitwt != 'undefined' && arr[0].masteritemunitwt != 'null' && arr[0].masteritemunitwt != '' ? arr[0].masteritemunitwt : 0) : 0\n    \n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, \n        productsqty: this.state.data.productsqty,\n        productsweight: this.state.data.productsweight\n      }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  ProductuomhandleChange = (e, index) => {\n    console.log(index);\n    this.state.data.productsuom[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsuom: this.state.data.productsuom }\n    });\n  };\n  \n  ProductqtyinmeterhandleChange = (e, index) => {\n    console.log(e.target.value);\n    this.state.data.productsqtyinmeter[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsqtyinmeter: this.state.data.productsqtyinmeter }\n    });\n  };\n  \n  removeClick = (e, index) => {\n    const removeProduct = { ...this.state.data };\n    const products = removeProduct.products;\n    const productsqty = removeProduct.productsqty;\n    const productsuom = removeProduct.productsuom;\n    const productsqtyinmeter = removeProduct.productsqtyinmeter;\n    const values = removeProduct.values;\n    products.splice(index, 1);\n    productsqty.splice(index, 1);\n    productsuom.splice(index, 1);\n    productsqtyinmeter.splice(index, 1);\n    values.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products, productsqty, productsuom,productsqtyinmeter, values }\n    });\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(\"product form data\");\n    console.log(this.state.data);\n    const products = this.state.data.products;\n    const productsqty = this.state.data.productsqty;\n    console.log(productsqty)\n    let productMaterials = [];\n    products.forEach(function (v, i) {\n      var obj = {};\n      obj.product_id = v;\n      obj.productqty = productsqty[i];\n      productMaterials.push(obj);\n    });\n\n    const data = { ...this.state.data, productMaterials };\n    delete data.products;\n    delete data.productsqty;\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            productname: \"\",\n            values: [\"\"],\n            products: [\"\"],\n            productsqty: [\"\"],\n            productsuom: [\"\"],\n            productsqtyinmeter: [\"\"]\n          },\n          materiallistvalues: this.initialState.materiallistvalues,\n          materiallistvaluesObject: this.initialState.materiallistvaluesObject\n        });\n        this.myFormRef.reset();\n\n      })\n      .catch(err => {\n        alert(\"Same product sub assembly is already added.\")\n        window.location.reload()\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  toggelbutton = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,uomlistvalues } = this.state;\n    console.log(\"__STATE_VALUE___DATA_\");\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Product detail is added successfully.</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className='small-font-size-bold'>Subassembly</ModalHeader>\n            <ModalBody >Subassembly is added successfully.</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggelbutton}>\n                Ok\n              </Button>{\" \"}\n\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.productname ? (\n          <Alert Label color=\"danger\">Product Name must be unique id.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Product Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"productname\" Label>Product Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"productname\"\n                      id=\"productname\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">select</option>\n          \n                      {this.createSelectItems(\"FinishedGoods\")}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={12}>\n                  <div>\n                    <div className=\"mg-20\">\n                      <Button color=\"info\" onClick={this.handleClick}>\n                        Add Component\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n\n              {data.values.map((value, index) => {\n                return (<Row key={index}>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qty+${index}`}>\n                        Sub assembly\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n\n                      <AvField\n                        Label\n                        type=\"select\"\n                        name=\"material_qty\"\n                        id={`Material-qty+${index}`}\n                        value={data.productsqty[index] || null}\n                        onChange={e =>\n                          this.ProductqtyhandleChange(e, index)\n                        }\n                      >\n                        <option value=\"\">select</option>\n             \n                        {this.createSelectItems2(\"\")}\n                      </AvField>\n                    </AvGroup>\n\n\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qtymeter+${index}`}>\n                        Quantity\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"text\"\n                      name=\"Material-qtymeter\"\n                      id={`Material-qtymeter+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsqtyinmeter[index]}\n                      onChange={e =>\n                        this.ProductqtyinmeterhandleChange(e, index)\n                      }\n                    >\n                     \n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-uom+${index}`}>\n                        UOM\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"Material-uom\"\n                      id={`Material-uom+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsuom[index]}\n                      onChange={e =>\n                        this.ProductuomhandleChange(e, index)\n                      }\n                    >\n                      <option value=\"\">Select unit</option>\n          \n                      {this.createSelectItems3(\"FinishedGoods\")}\n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  \n                  <Col sm={2}>\n                    <AvGroup style={{ marginTop: \"28px\" }}>\n                      <Button\n                        Label\n                        Label\n                        color='danger'\n                        type=\"button\"\n                        onClick={e => this.removeClick(e, index)}\n                      >\n                        -\n                  </Button>\n\n                    </AvGroup>\n\n                  </Col>\n                </Row>)\n              })}\n              {/* <div>\n                                    <button onClick={this.handleSubmit}>submit</button>\n                                </div> */}\n\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{paddingLeft: 15, paddingTop: 10}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader small-font-size\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.masteritemlistvalues\n    // masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductForm);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport { UOM_LIST } from \"../Services/types\";\nimport { uomListSchema } from \"../Schemas/schemas\";\n\nfunction uomListFetched(uomlist) {\n  return {\n    type: UOM_LIST,\n    uomlist\n  };\n}\n\nexport const getUomList = () => {\n  return dispatch => {\n    return api.uom.getUomDetails().then(uomlist => {\n      const uomlistvalue = uomlist.uomdata;\n      return dispatch(uomListFetched(normalize(uomlistvalue, [uomListSchema])));\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProductForm from \"./ProductForm/ProductForm\";\nimport { addproduct } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport { getUomList } from \"../../actions/uom\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass Product extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    //this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addproduct(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem  Label>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem  Label active>Add Subassembly</BreadcrumbItem>\n        </Breadcrumb>\n        <ProductForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  addproduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addproduct, getMasterItemList,getUomList }\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport axios from \"axios\";\n\nclass ViewProduct extends React.Component {\n  state = {\n    productlistvalue: \"\",\n    productMaterialslist: [],\n    productname: \"\"\n  };\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/product/getproduct/${this.props.match.params.id}`)\n      .then(res => {\n\n        console.log(res)\n        if (res.data.productlist.productdata.length > 0) {\n          let product = res.data.productlist.productdata[0]\n          let obj = {}, arr = []\n          const productname = product.productname;\n\n          for (var i = 0; i < product.productMaterial.length; i++) {\n            obj = {}\n            obj['materialitemtype'] = product.productname;\n            obj['materialname'] = product.productMaterial[i].productqty;\n            obj['materialuom'] = product.productsuom[i];\n            obj['productqty'] = product.productsqtyinmeter[i]\n            arr.push(obj)\n          }\n\n          this.setState({ 'productname': productname, 'productMaterialslist': arr });\n        }\n\n      },\n        error => {\n\n          alert(\"Server error\")\n        });\n\n    /* const productid = this.props.match.params.id;\n     const productlistvalue = this.props.productlistvalues[productid];\n     const productname = productlistvalue.productname.masteritemdescription;\n     const productMaterialslist = productlistvalue.productMaterial.map(\n       productMaterialData => {\n         let totalcost =\n           parseFloat(productMaterialData.productqty) *\n           parseFloat(productMaterialData.product_id.masteritemcostperunit);\n         let materialcostperunit =\n           productMaterialData.product_id.masteritemcostperunit;\n         return {\n           materialitemtype:\n             productMaterialData.product_id.masteritemtype.masteritemtypename,\n           materialname: productMaterialData.product_id.masteritemname,\n \n           materialdescription:\n             productMaterialData.product_id.masteritemdescription,\n \n           materialuom: productMaterialData.product_id.masteritemuom.uomname,\n           materialcostperunit:\n             materialcostperunit !== \"null\" ? materialcostperunit : \" \",\n           materialqty: productMaterialData.productqty,\n           totalcost: isNaN(totalcost) ? \" \" : totalcost\n         };\n       }\n     );\n     this.setState({ ...this.state, productMaterialslist, productname });*/\n  }\n  render() {\n    const { productMaterialslist, productname } = this.state;\n    let product;\n    if (productMaterialslist.length) {\n      product = productMaterialslist[0].materialitemtype;\n    }\n\n    const tablerows = productMaterialslist.map((itemlist, i) => {\n      return (\n        <tr key={i}>\n          {/* <td>{itemlist.materialitemtype}</td> */}\n          <td style={{textAlign:'left'}}>{itemlist.materialname}</td>\n          <td style={{textAlign:'left'}}>{itemlist.materialuom}</td>\n          <td style={{textAlign:'left'}}>{itemlist.productqty}</td>\n          \n          {/* <td>{itemlist.materialcostperunit}</td>\n          <td>{itemlist.materialqty}</td>\n          <td>{itemlist.totalcost}</td> */}\n        </tr>\n      );\n    });\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/viewproductlist\">View subassembly</Link>\n            </BreadcrumbItem>\n\n          </Breadcrumb>\n        </div>\n        {/* <h5>Product Name: {productname}</h5> */}\n        {/* <DataTable columnvalue={columnvalue} rowvalues={productMaterialslist} /> */}\n        <div style={{\n              marginBottom: 16}}>\n          <span\n            style={{\n              fontSize: 12,\n              fontWeight: 900,\n              marginRight: 16\n            }}>Product</span>\n          <span\n            style={{\n              fontSize: 12\n            }}>{product ? product : ''}</span>\n        </div>\n        <Table bordered style={{'width':'40%'}}>\n          <thead>\n            <tr>\n              {/* <th>Product Type</th> */}\n              <th>Subassembly</th>\n\n              <th>UOM</th>\n              <th>Quantity</th>\n              {/* (Meter) */}\n              {/* <th>Unit Cost</th>\n              <th>Item QTY</th>\n              <th>Total cost</th> */}\n            </tr>\n          </thead>\n          <tbody>{tablerows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ViewProduct);\n","import React from \"react\";\nimport { Alert, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass ViewProductList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    productlistvalues: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.dataHandler(true);\n  }\n  updateButton = id => {\n    let path = `/viewproduct/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const productlist = Object.values(props.productlistvalues);\n    const productlistvalues = productlist.map((productdata, i) => {\n      console.log(productdata)\n      return {\n        materialname: productdata.productname,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(productdata.id);\n            }}\n          >\n            View Sub assembly\n          </Button>\n        )\n      };\n    });\n    const count = productlistvalues.length;\n    this.setState({ ...this.state, count, productlistvalues });\n    this.dataHandler(false);\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading, count, productlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Product Name\",\n        field: \"productname\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"View\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 10\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Products</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        {count > 0 ? (\n          <DataTable columnvalue={columnvalue} \n          rowvalues={productlistvalues}\n          className=\"viewproductlist\" />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts }\n)(ViewProductList);\n","import { AvField, AvForm, AvGroup } from 'availity-reactstrap-validation';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Alert, Button, Card,\n  CardBody,\n  CardHeader, Col, Label, Modal, ModalBody,\n  ModalFooter, ModalHeader, Row\n} from 'reactstrap';\n\nclass CustomerForm extends React.Component {\n  state = {\n    data: {\n      customernumber: '',\n      customername: '',\n      customercontactnumber: '',\n      customergstnumber: '',\n      customeraddress1: '',\n      customeraddress2: '',\n      city: '',\n      pincode: '',\n      state: '',\n      country: '',\n      codate: new Date().getTime(),\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    sameAsBilling: false,\n    suppliercontactlistvalue: []\n  };\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.keys(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customernumber = count ? 1001 + count : 1001;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customernumber\n      }\n    });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        deliveryAddress: {\n          ...this.state.data.deliveryAddress,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n  sameAsBilling = e => {\n    let val = e.target.value === 'false' ? true : false;\n    this.setState({ ...this.state, sameAsBilling: val });\n    if (val) {\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          deliveryAddress: {\n            address1: this.state.data.customeraddress1,\n            address2: this.state.data.customeraddress2,\n            city: this.state.data.city,\n            pincode: this.state.data.pincode,\n            state: this.state.data.state,\n            country: this.state.data.country\n          }\n        }\n      });\n    }\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const {\n      data,\n      errors,\n      loading,\n      success,\n      visible,\n      sameAsBilling\n    } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is added successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color='danger' isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      value={data.customernumber.toString()}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customername'\n                      type='text'\n                      id='customername'\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Name'\n                        }\n                    \n                        // pattern: {\n                        //   value: '^[a-zA-Z ]+$',\n                        //   errorMessage: 'Please enter valid Supplier Name'\n                        // }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customercontactnumber'>Contact Number </Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customercontactnumber'\n                      type='text'\n                      id='customercontactnumber'\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer contact number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GSTN </Label>\n                    <AvField\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Billing Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress1'>Address 1</Label>\n                        <AvField\n                          name='customeraddress1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                      \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress2'>Address 2</Label>\n                        <AvField\n                          name='customeraddress2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Delivery Address */}\n              <Card>\n                <CardHeader>\n                  Delivery Address ({' '}\n                  <input\n                    type='checkbox'\n                    className='same_checkbox'\n                    value={sameAsBilling}\n                    name='same'\n                    onChange={this.sameAsBilling}\n                  ></input>{' '}\n                  Same as billing address)\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                         \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain atleast 1 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              <div className='mg-20'>\n                <Button\n                  color='primary'\n                  disabled={loading}\n                  className='lgn-loader'\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{' '}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CustomerForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col\n} from \"reactstrap\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    data: {\n      searchcustomername: '',\n      searchfromdate: null,\n      searchtodate: null\n    },\n    count: 0,\n    customerlistvalues: [],\n    backupcustomerlistvalues: [],\n    fromdatetimestamp: '',\n    todatetimestamp: '',\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n  };\n\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        // id: customerdata.id,\n        // customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber != '' ? customerdata.customercontactnumber : '-',\n        codate: customerdata.codate != undefined ? customerdata.codate : '-',\n\n        Transaction: (\n          <Button\n            // style={{ fontSize: '0.8rem' }}\n            Label\n            color=\"primary\"\n            onClick={() => {\n              localStorage.setItem('customername', customerdata.customername)\n              this.getTransaction(customerdata.id);\n            }}\n          >\n            Transaction\n          </Button>\n        )\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, backupcustomerlistvalues: customervalues, count });\n    this.setState({ customerlistvalues: customervalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n\n  getTransaction = id => {\n    this.props.history.push(`/transaction/${id}`);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n\n  onChange = e => {\n    console.log(e)\n    this.setState({\n      //data: { ...this.state.data, [e.target.name]: e.target.value }\n      data: {\n        searchcustomername: e.target.value,\n        searchfromdate: null,\n        searchtodate: null\n      },\n      fromdatetimestamp: '',\n      todatetimestamp: ''\n    }, () => {\n      this.filterCustomer(this.state.data.searchcustomername)\n    });\n\n  };\n\n  getDateByMMDDYYYY(date) {\n    let searchdate = date != '-' ?\n      (new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n      + \"/\" +\n      (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n  handleDateChanges(dateName, dateValue) {\n\n    let { data, fromdatetimestamp, todatetimestamp } = this.state;\n    if (dateName === 'startDateTime') {\n      data.searchfromdate = dateValue;\n      fromdatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    } else {\n      data.searchtodate = dateValue;\n      todatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    }\n    data.searchcustomername = ''\n    this.setState({\n      data,\n      fromdatetimestamp,\n      todatetimestamp\n    }, () => {\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        this.filterBydates(this.state.fromdatetimestamp, this.state.todatetimestamp)\n      }\n      else {\n        this.initializeCustomers();\n      }\n    });\n  };\n\n  filterCustomer(ev) {\n    this.initializeCustomers();\n    setTimeout(() => {\n      const val = ev\n      if (val && val.trim() != '') {\n        let filtereddata = this.state.customerlistvalues.filter((item) => {\n          return (item.customername.toLowerCase().indexOf(val.toLowerCase()) > -1\n          )\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  filterBydates(date1, date2) {\n    this.initializeCustomers();\n    setTimeout(() => {\n\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        let filtereddata = this.state.customerlistvalues.filter((customer) => {\n          let comparedate =\n            (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1)\n            + \"/\" + (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate())\n            + \"/\" + new Date(parseInt(customer.codate)).getFullYear()\n\n          return (new Date(this.getDateByMMDDYYYY(comparedate)).getTime() >= date1 && new Date(this.getDateByMMDDYYYY(comparedate)).getTime() <= date2)\n\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  initializeCustomers() {\n    this.setState({\n      customerlistvalues: this.state.backupcustomerlistvalues\n    })\n  }\n\n\n  render() {\n    const { count, customerlistvalues, data, loading } = this.state;\n\n    const customerBlock = customerlistvalues.map(customer => {\n      customer['codate2'] = customer.codate != '-' ? (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate()) +\n        \"/\" + (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1) + \"/\" + new Date(parseInt(customer.codate)).getFullYear() : '-'\n      return (\n        <tr key={customer.customernumber}>\n\n          <td style={{'width' : '15%'}}>{customer.customername}</td>\n          {/* <td style={{ textAlign: 'center' }}>{customer.customernumber}</td> */}\n          <td style={{ textAlign: 'center','width' : '12%' }}>{customer.customercontactnumber}</td>\n\n          <td style={{ textAlign: 'center','width' : '8%' }}>{customer.Transaction}</td>\n        </tr>\n      )\n    });\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            {/* <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            /> */}\n\n            {/* <Card>\n           \n            <CardBody> */}\n            <Row>\n              <Col sm={3}>\n                <Label className='small-font-size' for=\"searchcustomername\">Search Customer Name</Label>\n\n\n                <input\n                  name=\"searchcustomername\"\n                  type=\"text\"\n                  id=\"searchcustomername\"\n                  className=\"form-control small-font-size\"\n                  value={data.searchcustomername}\n\n                  onChange={this.onChange}\n                />\n\n              </Col>\n\n\n\n              {/* <Col sm={3}>\n                  <Label for=\"searchfromdate\">Transaction from date</Label>\n                \n\n                     <DatePicker\n                    selected={data.searchfromdate}\n     \n                    onChange={date => this.handleDateChanges('startDateTime', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchfromdate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n                 <Col sm={3}>\n                  <Label for=\"searchtodate\">Transaction to date</Label>\n                 \n                  \n                  <DatePicker\n                    selected={data.searchtodate}\n                    onChange={date => this.handleDateChanges('endDateTime', date)}\n                    className=\"form-control\"\n                    isClearable={true}\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchtodate\"\n                  />\n                 \n                </Col> */}\n\n            </Row>\n            {/* </CardBody>\n                </Card> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{ 'marginTop': '10px','width': '40%' }}>\n              <thead>\n                <tr>\n\n                  <th style={{'width': '15%'}}>Customer Name</th>\n                  {/* <th>Customer Number</th> */}\n                  <th style={{'width': '12%'}}>Contact</th>\n                  <th style={{'width': '8%'}}>Transaction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerBlock}\n              </tbody>\n            </table>\n\n\n\n\n          </div>\n        ) : (\n            <div>\n              <Alert color=\"info\" Label>Loading Customer data</Alert>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import axios from \"axios\";\n\nexport default {\n  customer: {\n    addcustomer: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/customer/addcustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.customerdata;\n        });\n    },\n    getcustomer: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customer/getcustomer`)\n        .then(res => {\n          return res.data.customerlist;\n        });\n    },\n    updatecustomer: data => {\n      return axios\n        .patch(`${process.env.REACT_APP_BASE_URL}/customer/updatecustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  customerTransaction: {\n    getcustomerTransaction: (id) => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/${id}`)\n        .then(res => {\n          \n          return res.data.customerlist;\n        });\n    },\n  \n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/customerapi\";\nimport {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED,\n  CUSTOMERTRANSACTION_FETCHED\n} from \"../Services/types\";\nimport { customerListSchema,customerTransactionSchema } from \"../Schemas/schemas\";\n\nconst customerCreated = customerlist => {\n  return {\n    type: ADD_CUSTOMER_CONTACT,\n    customerlist\n  };\n};\n\nconst customerListFetched = customerlist => {\n\n  return {\n    type: CUSTOMER_CONTACT_FETCHED,\n    customerlist\n  };\n};\n\nconst customerTransactionFetched = customerlist => {\n\n  return {\n    type: CUSTOMERTRANSACTION_FETCHED,\n    customerlist\n  };\n};\n\nexport const addCustomerContact = data => {\n  return dispatch => {\n    return api.customer.addcustomer(data).then(customerlistvalues => {\n      return dispatch(\n        customerCreated(normalize(customerlistvalues, customerListSchema))\n      );\n    });\n  };\n};\n\nexport const getCustomerList = () => {\n  return dispatch => {\n    return api.customer.getcustomer().then(customerlist => {\n      const customerlistvalue = customerlist.customerdata;\n      return dispatch(\n        customerListFetched(normalize(customerlistvalue, [customerListSchema]))\n      );\n    });\n  };\n};\n\nexport const getCustomerTransaction = (id) => {\n  return dispatch => {\n    return api.customerTransaction.getcustomerTransaction(id).then(customerlist => {\n      const customertransationvalues = customerlist.customerdata;\n      console.log(customertransationvalues)\n      if(customertransationvalues.length != 0){\n        return dispatch(\n          customerTransactionFetched(normalize(customertransationvalues, [customerTransactionSchema]))\n        );\n      }\n      // console.log(normalize(customertransationvalues, [customerTransactionSchema]))\n\n    });\n  };\n};\n\nexport const updateCustomerContact = data => {\n  return dispatch => {\n    return api.customer.updatecustomer(data).then(customerlistvalues => {\n      return customerlistvalues;\n      // return dispatch(\n      //   customerCreated(normalize(customerlistvalues, customerListSchema))\n      // );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport AddCustomerForm from \"./AddCustomer/CustomerForm/CustomerForm\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass Customer extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddCustomerForm submit={this.submit} />\n        </div>\n        {/* <div>\n          <ViewCustomerList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n    getCustomerTransaction\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\n\n\nclass Transaction extends React.Component {\n  \n  state = {\n    data: {\n      enquirydate:null,\n      quotationdate:null,\n      podate:null\n    },\n    enquirytimestamp:null,\n    quotationtimestamp:null,\n    podatetimestamp:null,\n    userid : this.props.match.params.id,\n    loading: false,\n    count:0,\n    success: false,\n    message:'',\n    ponum:'',\n    podate:'',\n    customerName:localStorage.getItem('customername') !=null ? localStorage.getItem('customername') : '',\n    transactionID:'',\n    customertransationvalues:[],\n    backupcustomertransationvalues:[]\n  };\n  componentDidMount = () => {\n    // this.props.match.params.id\n    // 5d7245b928e146194b806e38\n    \n    this.getTransaction(this.props.match.params.id);\n  };\n\n  componentWillReceiveProps(props) {\n    let customervalues = Object.values(props.customertransationvalues).map(customerdata => {\n      return {\n        customerid: customerdata.customerid,\n        Transactionhistory: customerdata.Transactionhistory,\n        id:new Date().getTime()\n      };\n    });\n    if(customervalues.length > 0){\n      customervalues = customervalues.filter((item) =>{\n        return item.customerid == this.props.match.params.id\n      })\n      this.setState({ \n        customertransationvalues: customervalues,\n        backupcustomertransationvalues:customervalues,\n        count:customervalues.length\n      }, () => {\n        console.log(JSON.stringify(this.state.backupcustomertransationvalues))\n      })\n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  \n  initializeTransactions = () => {\n    this.setState({\n      customertransationvalues:this.state.backupcustomertransationvalues\n    },() =>{\n      console.log(this.state.backupcustomertransationvalues)\n    })\n  }\n\n  newEnquiry(){\n    localStorage.setItem('ids',this.state.userid)\n    this.setState({ success: true, message:'Are you sure want to add new enquiry' });\n  }\n\n  getTransaction(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n    .then(res => {\n      this.dataHandler(false)\n      if(res.data.customerlist.customerdata.length > 0){\n        let customervalues = res.data.customerlist.customerdata;\n        if(customervalues.length > 0){\n          customervalues = customervalues.filter((item) =>{\n            return item.customerid == this.props.match.params.id\n          })\n          this.setState({ customertransationvalues: customervalues,\n            backupcustomertransationvalues:customervalues,\n            count:customervalues.length}, () => {\n            console.log(JSON.stringify(this.state.customertransationvalues))\n          })\n        }\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  addenquiry(){\n    this.dataHandler(true)\n    let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) + \n    \"/\" + ( new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n     axios\n    .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`,\n    {\n      \"customerid\":this.state.userid,\n      \"enq_Date\" : date\n    })\n    .then(res => {\n      this.getTransaction(this.state.userid)\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  poreceived = value =>{\n    this.setState({\n      transactionID:value._id,\n      ponum:'',\n      podate:''\n    },() =>{\n      this.setState({ success: true, message:'update transaction' });\n    })\n  }\n\n  gotoPDF = value => {\n    console.log(\"the pdf page is\",  value)\n    this.props.history.push(value);\n  }\n\n  updatePO = () => {\n    if(this.state.ponum != '' && this.state.podate != ''){\n      let podates = this.state.podate.split('-')[2] + '/' + this.state.podate.split('-')[1] + '/' + this.state.podate.split('-')[0]\n      let obj = {}\n      obj['_id'] = this.state.transactionID\n      obj['po'] = podates\n      obj['ponum'] = this.state.ponum\n      this.dataHandler(true)\n      axios\n      .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n      .then(res => {\n        this.toggle()\n        this.getTransaction(this.state.userid)\n      },\n      error =>{\n        this.dataHandler(false)\n        this.toggle()\n        this.setState({ success: false, message:'Server error.' });\n      });\n    }\n    else\n      this.toggle()\n  }\n\n  onChange1 = e => {\n    this.setState({\n      'ponum' : e.target.value\n    });\n  }\n\n  onChange2 = e => {\n    console.log(e.target.value)\n    this.setState({\n      'podate' : e.target.value\n    });\n  }\n\n  getDateByMMDDYYYY(date){\n    let searchdate = date != '-' ? \n\n    (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" +\n    ( new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n    + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n    \n  handleDateChanges(dateName, dateValue) {\n\n    let { data,enquirytimestamp,quotationtimestamp,podatetimestamp } = this.state;\n    if (dateName === 'enquirydate') {\n      data.enquirydate = dateValue;\n      enquirytimestamp = this.getDateByMMDDYYYY(dateValue)\n    }\n    this.setState({\n      data,\n      enquirytimestamp\n    }, () => {\n      if (this.state.data.enquirydate != null) {\n        this.filterBydates()\n      }\n      else{\n        this.initializeTransactions();\n      }\n    });\n  };\n\n  filterBydates(){\n    this.initializeTransactions();\n    setTimeout(() => {\n        let filtereddata = this.state.customertransationvalues.filter((item) => {\n            return (this.state.enquirytimestamp != null && item.enq_Date == this.state.enquirytimestamp)\n            \n        })\n        this.setState({\n          customertransationvalues:filtereddata\n        })\n    })\n  }\n\n  render() {\n    let modaldata;\n\n    const { customertransationvalues,loading,count,success,message,data,customerName } = this.state;\n    if(message == 'update transaction' && success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Add customer PO</ModalHeader>\n        <ModalBody>\n          <input type=\"text\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.ponum} style={{'marginBottom': '15px'}} onChange={this.onChange1}/>\n          <input type=\"date\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.podate} onChange={this.onChange2}/>\n        </ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={this.updatePO}>\n            Update\n          </Button>\n        </ModalFooter>\n      </Modal>\n      )\n    }\n    else if(message == 'Server error.' && !success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Transaction</ModalHeader>\n        <ModalBody>{this.state.message}</ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n      )\n    }\n\n\n\n    const customerTransactionBlock = customertransationvalues.map((customer,index) => {\n      \n      let invoice = customer.invoice_link ? (<td style={{textAlign:'center'}}> \n      Invoice PDF<br/>\n      <Button color=\"primary\" onClick={() => this.gotoPDF(customer.invoice_link)} style={{fontSize: '12px'}}>\n       Print\n     </Button>\n </td>) : (<td style={{textAlign:'center'}}>---</td>);\n      let dc = customer.challan_link ? (\n      <td style={{textAlign:'center'}}>{customer.challan_link}</td>\n      ) : (\n        <td style={{textAlign:'center'}}>---</td>)\n      let enquiry = '',quote = '',PO=(<td style={{textAlign:'center'}}>---</td>)\n      enquiry = customer.enq_Date !=undefined ? (<td style={{textAlign:'center'}}> {customer.enq_Date}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      quote = customer.quotation !=undefined && customer.quotation != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.Qno} </b> <br/>{customer.quotation}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      PO = customer.po !=undefined && customer.po != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.ponum} </b> <br/> {customer.po}</td>) \n      : (<td style={{textAlign:'center'}}> \n           Customer PO not reveived<br/>\n           <Button color=\"primary\" onClick={() => this.poreceived(customer)} style={{fontSize: '12px'}}>\n            Add customer PO\n          </Button>\n      </td>)\n\n      if(customer.quotation == ''){\n        PO = (<td style={{textAlign:'center'}}>---</td>)\n      }\n\n      \n      return (\n        \n        <tr>\n          {/* <td></td>\n          {enquiry} */}\n          {quote}\n          {PO}\n          {invoice}\n          {dc}\n\n          </tr>\n             \n      )\n \n    })\n\n\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerlist\">CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{customerName}</BreadcrumbItem>\n        </Breadcrumb>\n     \n\n            {modaldata}\n \n        <h5 style={{ 'fontWeight': 'bold','margin': '15px'}}>{count} transaction found.</h5>\n        {customertransationvalues.length > 0 ?\n        (\n\n        <div>\n{/*           \n          <Row style={{ 'width': '75%','marginLeft': '9%'}}>\n                <Col sm={3} >\n                    <Label for=\"enquirydate\">Search enquiry date</Label>\n                    \n\n                      <DatePicker\n                    selected={data.enquirydate}\n\n                    onChange={date => this.handleDateChanges('enquirydate', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"enquirydate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n        \n\n                \n\n                </Row> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{'marginTop':'10px', 'width': '75%','marginLeft': '10%','background':'#fff'}}>\n\n              <tr>\n                {/* <th></th>\n                <th>Enquiry</th> */}\n                <th>Quotation</th>\n                <th>PO</th>\n                <th>Invoice</th>\n                <th>Delivary challan</th>\n                </tr>\n                {customerTransactionBlock}\n              </table>\n          </div>\n        ) : null\n       }\n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    customertransationvalues: state.customertransationvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getCustomerTransaction }\n)(Transaction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateCustomerForm extends React.Component {\n  state = {\n    data: {\n      id: \"\",\n      customernumber: \"\",\n      customername: \"\",\n      customercontactnumber: \"\",\n      customergstnumber: \"\",\n      customeraddress1: \"\",\n      customeraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    suppliercontactlistvalue: []\n  };\n  componentDidMount() {\n    const id = this.props.id;\n    const data = this.props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const data = props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({ ...this.state, data: {\n      ...this.state.data,\n      deliveryAddress:{\n        ...this.state.data.deliveryAddress,\n        [e.target.name] : e.target.value\n      }\n    } });\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success, visible } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is Updated successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color=\"danger\" isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customernumber\"\n                      type=\"number\"\n                      id=\"customernumber\"\n                      value={data.customernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Number\"\n                        },\n    \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customername\"\n                      type=\"text\"\n                      id=\"customername\"\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Name\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z ]+$\",\n                          errorMessage: \"Please enter valid Supplier Name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customercontactnumber\">Contact Number </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customercontactnumber\"\n                      type=\"text\"\n                      id=\"customercontactnumber\"\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer contact number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage:\n                            \"Your phone number must be composed only with numbers\"\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            \"Your phone number must be between 10 and 12 numbers\"\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            \"Your phone number be between 10 and 12 numbers\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GSTN </Label>\n                    <AvField\n                      name=\"customergstnumber\"\n                      type=\"text\"\n                      id=\"customergstnumber\"\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress1\">Address 1</Label>\n                        <AvField\n                          name=\"customeraddress1\"\n                          type=\"text\"\n                          id=\"customeraddress1\"\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress2\">Address 2</Label>\n                        <AvField\n                          name=\"customeraddress2\"\n                          type=\"text\"\n                          id=\"customeraddress2\"\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"city\">City</Label>\n                        <AvField\n                          name=\"city\"\n                          type=\"text\"\n                          id=\"city\"\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid city Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                        <AvField\n                          name=\"pincode\"\n                          type=\"text\"\n                          id=\"pincode\"\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                \"Pincode should contain atleast 6 characters\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                \"Pincode should contain between 6 to 10 characters\"\n                            },\n                            pattern: {\n                              value: \"^[0-9]+$\",\n                              errorMessage: \"Please enter valid PinCode\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"state\">State</Label>\n                        <AvField\n                          name=\"state\"\n                          type=\"text\"\n                          id=\"state\"\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid State Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"country\">Country</Label>\n                        <AvField\n                          name=\"country\"\n                          type=\"text\"\n                          id=\"country\"\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid Country Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                {/* Delivery Address */}\n                {/* Delivery Address */}\n              <Card>\n                <CardHeader>Delivery Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              </Card>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Update\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{\" \"}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateCustomerForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport UpdateCustomerForm from \"./UpdateCustomer/CustomerForm/UpdateCustomerForm\";\nimport {\n  updateCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader\n} from \"reactstrap\";\n\nclass Customer extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getCustomerList();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer List</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n\n          <UpdateCustomerForm submit={this.submit} id={id} />\n\n           \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\n\nclass ViewCustomerTable extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Link to=\"/crmlist\">CRM</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem active>Customer Transaction</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(ViewCustomerTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    count: 0,\n    customerlistvalues: []\n  };\n  componentWillReceiveProps(props) {\n    let customerlistvalues = Object.values(props.customerlistvalues);\n    //customerlistvalues= customerlistvalues.sort((a, b) => b.customernumber.toString().toLowerCase().localeCompare(a.customernumber.toString().toLowerCase()));\n    console.log(customerlistvalues)\n    customerlistvalues.sort(function(a, b){\n      return parseInt(b.customernumber) - parseInt(a.customernumber);\n    });\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber,\n        customergstnumber: customerdata.customergstnumber,\n        customeraddress1: customerdata.customeraddress1 != '' ? customerdata.customeraddress1 : '-',\n        customeraddress2: customerdata.customeraddress2 != '' ? customerdata.customeraddress2 : '-',\n        city: customerdata.city != '' ? customerdata.city : '-',\n        pincode: customerdata.pincode != '' ? customerdata.pincode : '-',\n        state: customerdata.state != '' ? customerdata.state : '-',\n        country: customerdata.country != '' ? customerdata.country : '-',\n        view: (\n          <Button\n            Label\n            // style={{ fontSize: '0.8rem' }}\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(customerdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, count });\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { count, customerlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Customer Number\",\n        field: \"customernumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Name\",\n        field: \"customername\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Contact\",\n        field: \"customercontactnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"GST Number\",\n        field: \"customergstnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address1\",\n        field: \"customeraddress1\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address2\",\n        field: \"customeraddress2\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"City\",\n        field: \"city\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Pincode\",\n        field: \"pincode\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"State\",\n        field: \"state\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Country\",\n        field: \"country\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n    return (\n      <div className=\"mg-t-20\">\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCustomerList } from \"../../../actions/customerContact\";\nimport ViewCustomerList from \"./ViewCustomerList\";\n\nclass CustomerInfo extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer Information</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(CustomerInfo);\n","import axios from \"axios\";\n\nexport default {\n  quotation: {\n    addquotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/addquotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    updatequotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/updatequotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    getquotation: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/quotation/getquotation`)\n        .then(res => {\n          return res.data.quotationlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/quotationapi\";\nimport { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\nimport { quotationListSchema } from \"../Schemas/schemas\";\n\nconst quotationCreated = quotationlist => {\n  return {\n    type: ADD_QUOTATION,\n    quotationlist\n  };\n};\n\nconst quotationFetched = quotationlist => {\n  return {\n    type: QUOTATION_FETCHED,\n    quotationlist\n  };\n};\n\nexport const addquotation = data => {\n  return dispatch => {\n    return api.quotation.addquotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\nexport const updatequotation = data => {\n  return dispatch => {\n    return api.quotation.updatequotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getquotation = () => {\n  return dispatch => {\n    return api.quotation.getquotation().then(quotationlist => {\n      const quotationlistvalues = quotationlist.quotationdata;\n      return dispatch(\n        quotationFetched(normalize(quotationlistvalues, [quotationListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { searchquotation } from \"../../../../actions/quotation\";\n\nclass CustomerQuotationList extends React.Component {\n  componentDidMount() {\n    const customerid = this.props.match.params.id;\n    this.props\n      .searchquotation(customerid)\n      .then(data => {})\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer list</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer status</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { searchquotation }\n)(CustomerQuotationList);\n","import { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Alert, Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nclass AddYearForm extends React.Component {\r\n  state = {\r\n    data: {\r\n      addyear: \"\",\r\n      updateyear: \"\",\r\n      updateid: \"\",\r\n    },\r\n    exists: false,\r\n    errors: {},\r\n    loading: false,\r\n    success: false,\r\n    visible: false,\r\n    updated: false,\r\n    suppliercontactlistvalue: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ loading: true });\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\r\n      (res) => {\r\n        if(res.data.year) {\r\n          this.setState({\r\n            ...this.state,\r\n            data: {\r\n              ...this.state.data,\r\n              updateid: res.data.year._id,\r\n              updateyear: res.data.year.currentyear\r\n            },\r\n          });\r\n          this.setState({ exists: true });\r\n        }\r\n        this.setState({ loading: false });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: {\r\n            ...this.state.errors,\r\n            error,\r\n          },\r\n          loading: false,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n  handleValidSubmit = () => {\r\n    this.setState({ loading: true });\r\n    const { data } = this.state;\r\n    console.log(JSON.stringify(data));\r\n    this.props\r\n      .submit(data)\r\n      .then((data) => {\r\n        this.setState({ success: true, loading: false, errors: {} });\r\n        this.onShowAlert();\r\n        this.myFormRef.reset();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ errors: err.response.data.errors, loading: false });\r\n        this.onShowAlert();\r\n      });\r\n  };\r\n\r\n  onShowAlert = () => {\r\n    this.setState({ visible: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ visible: false });\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ ...this.state, success: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, errors, loading, success, exists, visible } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {!!success ? (\r\n            // <Alert color=\"info\" isOpen={visible}>\r\n            //   Customer is added successfully.\r\n            // </Alert>\r\n            <Modal\r\n              isOpen={success}\r\n              toggle={this.toggle}\r\n              className={this.props.className}\r\n            >\r\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\r\n              <ModalBody>Year Added successfully</ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>\r\n                  Ok\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={(el) => (this.myFormRef = el)}\r\n        >\r\n          <div>\r\n            {!!errors.global ? (\r\n              <Alert color=\"danger\">{errors.global}</Alert>\r\n            ) : null}\r\n          </div>\r\n          {!!exists ? (\r\n            <Card>\r\n              <CardHeader>Update Year</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Update Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"updateyear\"\r\n                        type=\"text\"\r\n                        placeholder={data.updateyear.toString()}\r\n                        id=\"addyear\"\r\n                        value={data.updateyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>AddYear</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Add Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"addyear\"\r\n                        type=\"text\"\r\n                        placeholder=\"ex: 2020-21\"\r\n                        id=\"addyear\"\r\n                        value={data.addyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </AvForm>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(AddYearForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport {\r\n  addYear, updateYear\r\n} from \"../../../actions/financialYearAdd\";\r\nimport CustomLoader from \"../../../Components/loader/loader\";\r\nimport AddYearForm from \"./AddYear/AddYearForm/AddYearForm\";\r\n\r\nclass AddFinancialYear extends React.Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  submit = data => {\r\n    if(data.updateid !== \"\") {\r\n      this.dataHandler(true);\r\n    return this.props\r\n      .updateYear(data)\r\n      .then(data => {\r\n        this.dataHandler(false);\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        this.dataHandler(false);\r\n        throw err;\r\n      });    \r\n    }\r\n    else {\r\n      this.dataHandler(true);\r\n      return this.props\r\n        .addYear(data)\r\n        .then(data => {\r\n          this.dataHandler(false);\r\n          return data;\r\n        })\r\n        .catch(err => {\r\n          this.dataHandler(false);\r\n          throw err;\r\n        });\r\n    }\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"container mg-t-20\">\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/admin_dashboard\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/inventory_page\">Setup</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/financialYearAdd\">Add Year</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Add Year</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddYearForm submit={this.submit} />\r\n        </div>\r\n        {/* <div>\r\n          <ViewCustomerList />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { addYear,updateYear }\r\n)(AddFinancialYear);\r\n","import api from \"../Services/api\";\r\n\r\n\r\n export const addYear = data => {\r\n    return dispatch => {\r\n      return api.year.addyear(data);\r\n    }\r\n  }\r\n\r\n  export const updateYear = data => {\r\n    return dispatch => {\r\n      return api.year.updateyear(data);\r\n    }\r\n  }","import axios from 'axios';\n\nexport default {\n  challan: {\n    addchallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/addchallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    updatechallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/updatechallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    \n    getchallan: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n        .then(res => {\n          return res.data.challanlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport { challanListSchema } from \"../Schemas/schemas\";\nimport api from \"../Services/challanapi\";\nimport { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nconst challanCreated = challanlist => {\n  return {\n    type: ADD_CHALLAN,\n    challanlist\n  };\n};\n\nconst challanFetched = challanlist => {\n  return {\n    type: CHALLAN_FETCHED,\n    challanlist\n  };\n};\n\nexport const addChallan = data => {\n  return dispatch => {\n    return api.challan.addchallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\nexport const updateChallan = data => {\n  return dispatch => {\n    return api.challan.updatechallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getChallan = () => {\n  return dispatch => {\n    return api.challan.getchallan().then(challanlist => {\n      console.log(challanlist)\n      const challanlistvalues = challanlist.challandata;\n      console.log(challanlistvalues)\n      return dispatch(\n        challanFetched(normalize(challanlistvalues, [challanListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  invoice: {\n    addinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/addinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    updateinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/updateinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    \n    getinvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    getproformainvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/invoiceapi\";\nimport { ADD_INVOICE, INVOICE_FETCHED,PROFORMAINVOICE_FETCHED } from \"../Services/types\";\nimport { invoiceListSchema,proformainvoiceListSchema } from \"../Schemas/schemas\";\n\nconst invoiceCreated = invoicelist => {\n  return {\n    type: ADD_INVOICE,\n    invoicelist\n  };\n};\n\nconst invoiceFetched = invoicelist => {\n  return {\n    type: INVOICE_FETCHED,\n    invoicelist\n  };\n};\n\nconst proformainvoiceFetched = proformainvoicelist => {\n  return {\n    type: PROFORMAINVOICE_FETCHED,\n    proformainvoicelist\n  };\n};\n\nexport const addinvoice = data => {\n  return dispatch => {\n    return api.invoice.addinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\nexport const updateinvoice = data => {\n  return dispatch => {\n    return api.invoice.updateinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getinvoice = () => {\n  return dispatch => {\n    return api.invoice.getinvoice().then(invoicelist => {\n      const invoicelistvalues = invoicelist.invoicedata;\n      console.log(invoicelistvalues)\n      return dispatch(\n        invoiceFetched(normalize(invoicelistvalues, [invoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const getproformainvoice = () => {\n  return dispatch => {\n    return api.invoice.getproformainvoice().then(invoicelist => {\n      const proformainvoicelist = invoicelist.invoicedata;\n      console.log(proformainvoicelist)\n      return dispatch(\n        proformainvoiceFetched(normalize(proformainvoicelist, [proformainvoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass ChallanForm extends React.Component {\n  state = {\n    data: {\n      invoicenumber: null,\n      transactionid: null,\n      invoiceid: \"\",\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [],\n        itemlocation: [null],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      },\n      customerdetail: {\n        id: \"\",\n        customername: \"\",\n        customernumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      deliverychallanno: '',\n      toaddress: '',\n      mobilenumber: '',\n      site: '',\n      date: new Date(),\n      ponumber: '',\n      podate: new Date(),\n      vehiclenumber: '',\n      gstno: '',\n      otherreference: '',\n      values: ['']\n    },\n    errors: {},\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedInvoiceId: null,\n    selectedInvoiceNumber: null,\n    customerobjects: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    invoicelistvalues: [],\n    invoicelistselectedOptions: [],\n    itemlistSelectedOption: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    customerlistvalues: [],\n    customerlistSelect: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:'',\n    counts:1\n  };\n\n  componentDidMount() {\n  \n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const invoicelistvalues = Object.values(this.props.invoicelistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n\n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n      \n      let arrayInvoiceSet = [];\n      invoicelistvalues.map((option, i) => {\n        let objset = {\n          value: option._id, label: option.invoicenumber\n        }\n        arrayInvoiceSet.push(objset);\n      });\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        invoicelistvalues,\n        invoicelistselectedOptions: arrayInvoiceSet,\n        itemlistSelectedOption: newArraySet,\n        currencylistvalues,\n        locationlistvalue,\n        customerlistvalues,\n        customerobjects,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data\n        }\n      },() =>{\n        if (this.props.ID != undefined) {\n          this.getDCDetails(this.props.ID)\n        }\n        else{\n          //if(Object.keys(this.props.challanlistvalues).length == 0){\n            this.getChallandata()\n          //}\n        }\n      });\n    \n  }\n\n  getChallandata(){\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n      // if (res.data.challanlist.challandata.length > 0) {\n         \n        let deliverychallanno =\n        res.data.challanlist.challandata.length > 0 ? 1 + res.data.challanlist.challandata.length : 1;\n\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        });\n      //}\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n  getDCDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/challan/getsinglechallan/${id}`)\n      .then(res => {\n\n        console.log(res.data)\n         if (res.data.challanlist.challandata.length > 0) {\n           let founddata = res.data.challanlist.challandata;\n            console.log(founddata[0])\n           if(founddata[0].invoicenumber) {\n            this.handleInvoiceChange(founddata[0].invoiceid);\n           }\n           const newState = Object.assign({}, this.state);\n           newState.data.deliverychallanno = founddata[0].deliverychallanno;\n           newState.data.toaddress = founddata[0].toaddress;\n           newState.data.site = founddata[0].site;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.ponumber = founddata[0].ponumber;\n           newState.data.podate =  new Date(founddata[0].podate);\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.otherreference = founddata[0].otherreference;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.mobilenumber = founddata[0].mobilenumber ? founddata[0].mobilenumber : ''\n           newState.data.customerdetail.id = founddata[0].customerid ? founddata[0].customerid._id : '';\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n          \n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState);\n\n         \n         \n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.ID == undefined){\n      const materialoptionlistvalues = Object.values(\n        props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n      const masteritemlistvaluesobject = props.masteritemlistvalues;\n      const currencylistvalues = Object.values(props.currencylistvalues);\n      const invoicelistvalues = Object.values(this.props.invoicelistvalues);\n      const uomlistvalues = Object.values(props.uomlistvalues);\n      const locationlistvalue = Object.values(props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const challanlistvalues = Object.keys(this.props.challanlistvalues);\n      \n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      let arraySet = [];    \n      customerlistvalues.map((option, i) => {\n        let objset = {\n          value: option.id, label: option.customername\n        }\n        arraySet.push(objset);\n      });\n\n      let arrayInvoiceSet = [];\n      invoicelistvalues.map((option, i) => {\n        let objset = {\n          value: option._id, label: option.invoicenumber\n        }\n        arrayInvoiceSet.push(objset);\n      });\n      \n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n      \n\n      let deliverychallanno =\n        challanlistvalues.length > 0 ? 1 + challanlistvalues.length : 1;\n  \n        this.setState({\n          ...this.state,\n          masteritemlistvalues,\n          masteritemlistvaluesobject,\n          materialoptionlistvalues,\n          currencylistvalues,\n          invoicelistvalues,\n          invoicelistselectedOptions: arrayInvoiceSet,\n          locationlistvalue,\n          customerlistvalues,\n          itemlistSelectedOption: newArraySet,\n          customerlistSelect: arraySet,\n          customerobjects,\n          uom: uomlistvalues,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        },()=>{\n          console.log(this.state.customerlistvalues)\n        });\n    }\n \n    \n\n      \n \n  }\n\n\n  handleInvoiceChange = async(e) => {\n    console.log(e)\n    let selectedinvoice = e.value ? e.value : e\n    console.log(selectedinvoice)\n    const invoicelistvalues = this.state.invoicelistvalues;\n    let invoiceselected = invoicelistvalues.filter(\n      invoice => invoice._id === selectedinvoice || invoice.invoicenumber === selectedinvoice\n    );\n    console.log(\"invoice selected is\",invoiceselected)\n    if(invoiceselected && invoiceselected.length > 0){\n      invoiceselected = invoiceselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = invoiceselected.customerid ? invoiceselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let purchaseordernumber = invoiceselected.quotationnumber;\n      let transId = null;\n      const invoicenumber = invoiceselected.invoicenumber;\n      const invoiceid = selectedinvoice;\n      this.setState({ loading: true });\n      transId = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + invoiceselected.customerid)\n      .then(res => {\n        this.setState({ loading: false });\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            console.log(\"customer values is\", customervalues);\n            console.log(\"invoice selected is\", invoiceselected);\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == invoiceselected.quotationnumber\n            });\n            if(customervalues.length > 0)\n            {\n              return customervalues[0]['_id'];\n            }\n            else {\n              return \"\";\n            }\n          }\n        }\n      },\n      error =>{\n        this.setState({ loading: false });\n      });\n      let purchaseorderdate = new Date();\n      if(invoiceselected.purchaseorderdate) {\n        purchaseorderdate = new Date(invoiceselected.purchaseorderdate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      }\n      let values = invoiceselected.addeditemlist\n      if (invoiceselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < invoiceselected.addeditemlist.length; i++) {\n          invoiceselected.addeditemlist[i].itemdiscount = invoiceselected.addeditemlist[i].itemdiscount == null || invoiceselected.addeditemlist[i].itemdiscount == '' ?\n          invoiceselected.addeditemlist[i].itemdiscount = 0 : invoiceselected.addeditemlist[i].itemdiscount\n          invoiceselected.addeditemlist[i].itemdiscount = (invoiceselected.addeditemlist[i].itemdiscount).toString()\n\n\n          invoiceselected.addeditemlist[i].quantity = invoiceselected.addeditemlist[i].quantity == null || invoiceselected.addeditemlist[i].quantity == '' ?\n          invoiceselected.addeditemlist[i].quantity = 0 : invoiceselected.addeditemlist[i].quantity\n          invoiceselected.addeditemlist[i].quantity = (invoiceselected.addeditemlist[i].quantity).toString()\n\n          invoiceselected.addeditemlist[i].costperunit = invoiceselected.addeditemlist[i].costperunit == null || invoiceselected.addeditemlist[i].costperunit == '' ?\n          invoiceselected.addeditemlist[i].costperunit = 0 : invoiceselected.addeditemlist[i].costperunit\n          invoiceselected.addeditemlist[i].costperunit = (invoiceselected.addeditemlist[i].costperunit).toString()\n\n          invoiceselected.addeditemlist[i].totalcost = invoiceselected.addeditemlist[i].totalcost == null || invoiceselected.addeditemlist[i].totalcost == '' ?\n          invoiceselected.addeditemlist[i].totalcost = 0 : invoiceselected.addeditemlist[i].totalcost\n          invoiceselected.addeditemlist[i].totalcost = (invoiceselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(invoiceselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(invoiceselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(invoiceselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(invoiceselected.addeditemlist[i].itemdiscount)\n          selectedItemlist.remarks.push(\"\");\n          selectedItemlist.itemlocation.push(\"\");\n\n\n         \n          selectedItemlist.itemuom.push(invoiceselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(invoiceselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(invoiceselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(invoiceselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(invoiceselected.addeditemlist[i].id)\n\n        }\n      }\n\n      const mobilenumber = invoiceselected.customercontactnumber;\n      const toaddress = invoiceselected.billingaddress;\n      let vehiclenumber = this.state.vehiclenumber;\n      if(invoiceselected.vehiclenumber) {\n        vehiclenumber = invoiceselected.vehiclenumber\n      }\n      let gstno = this.state.gstno;\n      if(invoiceselected.customergstnumber) {\n        gstno = invoiceselected.customergstnumber;\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          invoicenumber,\n          transactionid: transId,\n          invoiceid,\n          selectedCustomerID: invoiceselected.customerid,\n          selectedCustomerName: invoiceselected.customername,\n          selectedInvoiceId: selectedinvoice,\n          selectedInvoiceNumber: invoiceselected.invoicenumber,\n          ponumber: purchaseordernumber,\n          podate: purchaseorderdate,\n          selectedItemlist,\n          mobilenumber,\n          toaddress,\n          gstno,\n          vehiclenumber,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            invoicenumber : invoicenumber,\n            invoiceid : invoiceid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (invoiceselected.addeditemlist.length > 0) {\n            invoiceselected.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          if(invoiceselected.customerid) {\n            this.handleChange2(invoiceselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: date\n      }\n    });\n  };\n\n  handlePODate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        podate: date\n      }\n    });\n  };\n\n  handleChange = e => {\n    console.log( e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChange2 = e => {\n\n    let selected_id = e.value ? e.value : e\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n\n    let toaddress = customerdetail ? customerdetail.customeraddress1 +\n    \" \" +\n    customerdetail.customeraddress2 +\n    \" \" +\n    customerdetail.city +\n    \" \" +\n    customerdetail.state +\n    \" \" +\n    customerdetail.country +\n    \" \" +\n    customerdetail.pincode : ''\n\n  \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail,\n        toaddress,\n      },\n      selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n    },()=>{\n      localStorage.setItem('custname',this.state.data.customerdetail.customername)\n      console.log(this.state.data.customerdetail)\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n\n  createSelectcustomer = () => {\n    let items = [];\n    let customerlistvalues = this.state.customerlistvalues;\n    console.log(this.state.customerlistvalues)\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.value ? e.value : e;\n    console.log(this.state.masteritemlistvaluesobject)\n    console.log(selected_id)\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //   : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        \n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        }\n  \n        this.setState({\n  \n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          this.totalValue();\n        });\n      }\n      \n      }\n\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    const remarks = removeItem.selectedItemlist.remarks;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    remarks.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks\n        }\n      }\n    },() =>{\n      console.log(this.state.data.selectedItemlist)\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    console.log(this.state.data.customerdetail)\n    const { supplierdetail, selectedItemlist,customerdetail } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    data['customerdetail'].customername = localStorage.getItem('custname')\n    \n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    \n\n    this.props\n      .submit(data)\n      .then(() => {\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n        }\n\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n\n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n          }\n        \n      });\n  };\n\n  \n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let SelINV;\n    if(this.state.selectedInvoiceId != undefined) {\n      SelINV = {\n        value: this.state.selectedInvoiceId, label: this.state.selectedInvoiceNumber\n      }\n    }\n    const customerID = this.state.selectedCustomerID ? (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n    //   value={data.customerdetail.id}\n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />    \n    ) : (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n  \n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />        \n    )\n\n    let invoiceDisp = this.state.selectedInvoiceId ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleInvoiceChange.bind(this)} styles={customStyles} required value={SelINV} options={this.state.invoicelistselectedOptions} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleInvoiceChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.invoicelistselectedOptions} />\n    )\n    return (\n      <div>\n\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Delivery Challan</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Delivery Challan</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallanno'>DC</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='deliverychallanno'\n                      type='text'\n                      id='deliverychallanno'\n                      value={data.deliverychallanno || null}\n                      onChange={this.handleChange}\n                 \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Invoice No</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {invoiceDisp}\n                  </AvGroup>\n                </Col>                \n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To address </Label>\n                    <AvField\n                      Label\n                      name='toaddress'\n                      type='text'\n                      id='toaddress'\n                      value={data.toaddress}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='site'>Site</Label>\n                  <AvField\n                    Label\n                    name='site'\n                    type='text'\n                    id='site'\n                    value={data.site || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='mobilenumber'>Mobile No</Label>\n                  <AvField\n                    Label\n                    name='mobilenumber'\n                    type='text'\n                    id='mobilenumber'\n                    value={data.mobilenumber || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='quotationno'>Date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChallanDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>PO no</Label>\n                    <AvField\n                      Label\n                      type='text'\n                      name='ponumber'\n                      id='ponumber'\n                      value={data.ponumber || null}\n                      onChange={e => this.handleChange(e)}\n                    ></AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='podate'>PO Date</Label>\n                  <DatePicker\n                    selected={data.podate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handlePODate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='podate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='vehiclenumber'>Vehicle Number</Label>\n                    <AvField\n                      Label\n                      name='vehiclenumber'\n                      type='text'\n                      id='vehiclenumber'\n                      value={data.vehiclenumber}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      Label\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='otherreference'>Other reference</Label>\n                    <AvField\n                      Label\n                      name='otherreference'\n                      type='text'\n                      id='otherreference'\n                      value={data.otherreference}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              {/* className='purchaseorder-item-row' */}\n              <div >\n                {data.values.map((values, index) => {\n                            let optionsel = \"\";\n                            let SelVal = {};\n                            if(values.id != undefined) {\n                              if(values.itemshortdescription) {\n                                optionsel = values.itemshortdescription;\n                              }\n                              else {\n                                optionsel = values.itemdescription;\n                              }\n                              SelVal = {\n                                value: values.id._id, label: optionsel\n                              }\n                            }\n                            const itemnameinfo = values.id != undefined ? (\n                              // <AvField\n                              //   type=\"select\"\n                              //   value={values.id._id}\n                              //   name={`selectitem${index}`}\n                              //   onChange={e => this.selectitemchange(e, index)}\n                              //   required={true}\n                              // >\n                              //   <option value=\"\">select Item</option>\n                              //   {this.createSelectItems()}\n                              // </AvField>\n                              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                              ) :\n                              (\n                                // <AvField\n                                //   type=\"select\"\n                                //   name={`selectitem${index}`}\n                                //   value={\n                                //     data.selectedItemlist.id[index]\n                                //   }\n                                //   onChange={e => this.selectitemchange(e, index)}\n                                //   required={true}\n                                // >\n                                //   <option value=\"\">select Item</option>\n                                //   {this.createSelectItems()}\n                                // </AvField>\n                                <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                              )\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                readOnly\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                \n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                            \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                readOnly\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] || null\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='remarks'>Remarks</Label>\n                              <AvField\n                                Label\n                                name='remarks'\n                                type='text'\n                                id='remarks'\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    invoicelistvalues: state.invoicelistvalues,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChallanForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addChallan } from '../../../../actions/challan';\nimport { getChallan } from '../../../../actions/challan';\nimport { updateChallan } from '../../../../actions/challan';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport axios from 'axios';\n\nimport ChallanForm from './ChallanForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddChallan extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    this.props.getinvoice();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n\n      return this.props\n      .updateChallan(data)\n      .then(submitdata => {\n        console.log(\"data received is \", data);\n        let obj = {};\n        obj['_id'] = data.transactionid;\n        obj['challan_link'] = data.deliverychallanno;\n        axios\n        .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n        .then(res => {\n          this.dataHandler(false);\n          return submitdata;\n        },\n        error =>{\n          this.dataHandler(false);\n          throw error;\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n        .addChallan(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['challan_link'] = data.deliverychallanno;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return submitdata;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n    }\n  \n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Challan</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ChallanForm submit={this.submit}  ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addChallan,\n    updateChallan,\n    getCustomerList,\n    getChallan,\n    getinvoice\n  }\n)(AddChallan);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getChallan } from '../../../../actions/challan';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nclass ViewChallan extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    challanlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    \n    console.log(this.props);\n    if (this.props.challanlistvalues) {\n      let quotationlist = Object.values(this.props.challanlistvalues);\n\n      quotationlist.sort(function(a, b){\n        return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n      });\n      const challanlistvalues = quotationlist.map(quotationvalue => {\n        return {\n          deliverychallanno: quotationvalue.deliverychallanno,\n          ponumber: quotationvalue.ponumber,\n          vehiclenumber: quotationvalue.vehiclenumber,\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, challanlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.challanlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.deliverychallanno.toLowerCase().localeCompare(a.deliverychallanno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n    });\n    const challanlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        deliverychallanno: quotationvalue.deliverychallanno,\n        ponumber: quotationvalue.ponumber,\n        vehiclenumber: quotationvalue.vehiclenumber,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, challanlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_challanpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  updatechallan(id) {\n    let path = `/editchallan/${id}`;\n    this.props.history.push(path);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, challanlistvalues } = this.state;\n    console.log(challanlistvalues)\n    const columnvalue = [\n      {\n        label: 'Delivery Challan',\n        field: 'deliverychallanno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'PO Number',\n        field: 'ponumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Vehicle Number',\n        field: 'vehiclenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={challanlistvalues} \n          columnvalue={columnvalue}\n          className=\"challanlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getChallan \n    }\n)(ViewChallan);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ challanlistvalues, data_cond }) => {\n  console.log(JSON.stringify(challanlistvalues));\n  const data = challanlistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = challanlistvalues.totalvalue\n    ? challanlistvalues.totalvalue\n    : '';\n  const taxableAmount = challanlistvalues.taxableamount;\n  const date = moment(challanlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(challanlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(challanlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = challanlistvalues.billingaddress;\n  const deliveryaddress = challanlistvalues.deliveryaddress;\n  const vendorcode = challanlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = challanlistvalues;\n\n  let {\n    deliverychallanno,\n    toaddress,\n    site,\n    ponumber,\n    vehiclenumber,\n    otherreference,\n    gstno,\n    customername\n  } = challanlistvalues;\n  let arr = [],toAD='',arr1 = [],siteAD='',customername1 = ''\n  let mobileno = challanlistvalues.mobilenumber ? challanlistvalues.mobilenumber : ''\n  // if(toaddress.indexOf(',') > -1){\n  //   arr = toaddress.split(',');\n  //   customername = arr[0]\n  //   if(arr.length > 2){\n  //     for(var i=1;i<arr.length;i++){\n  //       toAD = i > 1 ? toAD + ',' + arr[i] : toAD + arr[i]\n  //     }\n  //   }\n  // }\n  // else\n  //   toAD = toaddress\n\n\n    toAD = toaddress\n  \n    // if(site.indexOf(',') > -1){\n    //   arr1 = site.split(',');\n    //   customername1 = arr1[0]\n    //   if(arr1.length > 2){\n    //     for(var i=1;i<arr1.length;i++){\n    //       siteAD = i > 1 ? siteAD + ',' + arr1[i] : siteAD + arr1[i]\n    //     }\n    //   }\n    // }\n    // else\n    //   siteAD = site\n\n    \n\n\n  const purchaseordernumber = challanlistvalues.purchaseordernumber;\n  const tax = challanlistvalues.tax ? challanlistvalues.tax : '';\n  const taxpercentage = challanlistvalues.tax\n    ? challanlistvalues.tax / 100\n    : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = challanlistvalues.selectedcontactlist[0]\n  //     ? challanlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, { color: 'red', paddingLeft: 16 }]}>{deliverychallanno}</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{toAD}</Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={styles.dcaddress}>Site</Text>\n              <Text style={styles.dcaddress}>{site}</Text>\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={styles.header_tintext}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.weighteach}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.costperunit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.totalcost}</Text>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text>\n\n    \n\n        {/* <Text>{'\\n'}</Text> */}\n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, {\n                  color: 'red',\n                  paddingLeft: 16,\n                }]}>{deliverychallanno}/2020-21</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{toAD}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}> Phone no : {mobileno} </Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>Site</Text>\n              {/* <Text style={styles.dcaddress}>{site}</Text> */}\n              {/* <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername1}</Text> */}\n\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{site}</Text>\n\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Text>{'\\n'}</Text>\n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>REMARKS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getChallan } from '../../../../actions/challan';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewChallan';\n\nclass ViewChallanPdf extends React.Component {\n  state = {\n    challanlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getChallan();\n    const quotationid = this.props.match.params.id;\n    const challanlistvalues = this.props.challanlistvalues[quotationid];\n    challanlistvalues.requestdeliverydate = moment(\n      challanlistvalues.date\n    ).format('DD MMM, YYYY');\n    challanlistvalues.addeditemlist = challanlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          itemdiscount: 0,\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = challanlistvalues.customerid;\n    const customernumber = challanlistvalues.customernumber;\n    const customername = challanlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(challanlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        challanlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/challanlist');\n          }, 300);\n        });\n   \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, challanlistvalues, link } = this.state;\n    console.log(this.state);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                challanlistvalues={this.state.challanlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getChallan }\n)(ViewChallanPdf);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../../Components/loader/loader\";\nimport axios from \"axios\";\n\n\nclass EnquiryPage extends React.Component {\n  state = {\n    searchtodate: null,\n    count: null,\n    success: false,\n    update: false,\n    enquirylistvalues: [],\n    backupenquirylistvalues: [],\n    loading: false,\n    errorMsg: '',\n    data: {\n      eno: '',\n      company: '',\n      name: '',\n      phone: '',\n      email: '',\n      detail: '',\n      enquiryFrom: '',\n //   quoteno: '',\n      quotationCreated: false\n    }\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n    this.getEnquiries()\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  quotationCreated = e => {\n    const val = this.state.data.quotationCreated;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [\"quotationCreated\"]: !val }\n    })\n  }\n  updateButton = e => {\n    console.log(e);\n    if (!e.quotationCreated) { e.quotationCreated = false; }\n    this.setState({ ...this.state, success: true, update: true, data: e });\n  }\n  getEnquiries() {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/Enquiry/getenquiry`)\n      .then(res => {\n        this.dataHandler(false)\n        if (res.data.enquirylist.enquirydata.length > 0) {\n          let enquiryvalues = res.data.enquirylist.enquirydata;\n          if (enquiryvalues.length > 0) {\n            enquiryvalues = enquiryvalues.reverse()\n            enquiryvalues = enquiryvalues.map(enquiry => {\n              console.log(enquiry)\n              let created = \"No\"\n              if (enquiry.quotationCreated) {\n                created = \"Yes\"\n              }\n              return {\n                date: enquiry.date,\n                name: enquiry.name,\n                phone: enquiry.phone,\n                company: enquiry.company,\n                email: enquiry.email,\n                detail: enquiry.detail,\n                enquiryFrom: enquiry.enquiryFrom || null,\n            //    quoteno: enquiry.quoteno || null,\n                view: (\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(enquiry);\n                    }}\n                  >\n                    Edit\n                </Button>\n                )\n\n              };\n            });\n\n            this.setState({\n              enquirylistvalues: enquiryvalues,\n              count: enquiryvalues.length\n            }, () => {\n            })\n          }\n        }\n        else {\n          this.setState({ count: 0 })\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  addenquiry = () => {\n    this.setState({\n      success: true, update: false,\n      data: {\n        eno: '',\n        company: '',\n        name: '',\n        phone: '',\n        email: '',\n        detail: '',\n        enquiryFrom: '',\n   //   quoteno: '',\n        quotationCreated: false\n      }\n    });\n  }\n\n  addnewenquiry = () => {\n    const { data } = this.state;\n    if (data.company == '' || data.name == '' || data.phone == '' || data.email == '' || data.detail == '' || data.enquiryFrom == '') {\n      this.setState({ 'errorMsg': 'Fill all fields' });\n    }\n    else {\n      console.log(this.state.data)\n\n      this.dataHandler(true)\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      axios\n        .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/addenquiry`,\n          {\n            \"eno\": \"\",\n            \"company\": data.company,\n            \"name\": data.name,\n            \"phone\": data.phone,\n            \"email\": data.email,\n            \"detail\": data.detail,\n            \"date\": date,\n            \"enquiryFrom\": data.enquiryFrom,\n          //  \"quoteno\": data.quoteno,\n            \"quotationCreated\": data.quotationCreated\n          })\n        .then(res => {\n          this.getEnquiries()\n          this.toggle();\n        },\n          error => {\n            this.dataHandler(false)\n            this.setState({ success: false, message: 'Server error.' });\n          });\n    }\n  }\n\n  updateenquiry = () => {\n    const { data } = this.state;\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/updateenquiry`,\n        {\n          \"_id\": data._id,\n          \"eno\": \"\",\n          \"company\": data.company,\n          \"name\": data.name,\n          \"phone\": data.phone,\n          \"email\": data.email,\n          \"detail\": data.detail,\n          \"date\": data.date,\n          \"enquiryFrom\": data.enquiryFrom,\n        //  \"quoteno\": data.quoteno,\n          \"quotationCreated\": data.quotationCreated\n        })\n      .then(res => {\n        this.getEnquiries()\n        this.toggle();\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  }\n\n  render() {\n    const { count, enquirylistvalues, loading, success, data, errorMsg, update } = this.state;\n\n    const columnvalue = [\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Phone number\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Company name\",\n        field: \"company\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Item detail\",\n        field: \"detail\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Enquiry\",\n        field: \"enquiryFrom\",\n        sort: \"asc\",\n        width: 50\n      },\n      // {\n      //   label: \"Quotation created\",\n      //   field: \"quotationCreated\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Edit\",\n        field: \"edit\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n\n\n\n    let modaldata, errormessage;\n    errormessage = errorMsg != '' ? (<p style={{ 'textAlign': 'center', 'color': 'red' }}>{errorMsg}</p>) : null\n    if (success) {\n      modaldata = (\n        <Modal\n          isOpen={success}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Enquiry</ModalHeader>\n          <ModalBody>\n\n            <input type=\"text\" className=\"form-control\" placeholder=\"Company name\" name=\"company\" value={data.company} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Person name\" name=\"name\" value={data.name} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Mode of enquiry\" name=\"enquiryFrom\" value={data.enquiryFrom} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"number\" className=\"form-control\" placeholder=\"Phone number\" name=\"phone\" value={data.phone} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" value={data.email} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  />\n            <textarea type=\"text\" className=\"form-control\" placeholder=\"Item details\" name=\"detail\" value={data.detail} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  ></textarea>\n            {/* <input type=\"text\" className=\"form-control\" placeholder=\"Quotation Number\" name=\"quoteno\" value={data.quoteno} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} /> */}\n            {/* <input type=\"checkbox\" className=\"\" value={data.quotationCreated} onChange={this.quotationCreated} checked={data.quotationCreated} /> <span style={{position:'relative',top:'-12px'}}> Quotation created </span> */}\n            {errormessage}\n          </ModalBody>\n          <ModalFooter>\n            {update ? (\n              <Button\n                Label\n                style={{ float: 'right' }}\n                color=\"primary\"\n                onClick={this.updateenquiry}\n              >\n                Update\n          </Button>\n            ) : (\n                <div>\n                  <Button color=\"primary\" onClick={this.toggle} style={{ fontSize: '0.8rem' }}>\n                    Cancel\n          </Button>\n                  <Button\n                    Label\n                    style={{ float: 'right' }}\n                    color=\"primary\"\n                    onClick={this.addnewenquiry}\n                  >\n                    Submit\n        </Button>\n                </div>\n              )}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n \n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/crmlist\">CRM</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Enquiries</BreadcrumbItem>\n\n            </Breadcrumb>\n\n\n            <Button\n              Label\n              style={{ float: 'right' }}\n              color=\"primary\"\n              onClick={this.addenquiry}\n            >\n              Add Enquiry\n          </Button>\n\n            {modaldata}\n\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={enquirylistvalues}\n              className=\"customerlist\"\n            />\n\n          </div>\n         \n      </div>\n    );\n  }\n}\n\n\n\nexport default EnquiryPage\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass InvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        itemshortdescription: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      quotationnumber: '',\n      transactionid: null,\n      quotationid: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      tcs: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      advanceamountreceived:'',\n      values: ['']\n    },\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedQuotationId: null,\n    selectedQuotationNumber: null,\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    quotationlistvalues: [],\n    customerlistSelect: [],\n    quotationlistSelect: [],\n    itemlistSelectedOption: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    const quotationlistvalues = Object.values(this.props.quotationlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      quotationlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n      if(Object.keys(this.props.invoicelistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n         // if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          //}\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n      else{\n        const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n        this.setState({\n          data: {\n            ...this.state.data,\n            invoicenumber\n          }\n        })\n      }\n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/invoice/getsingleinvoice/${id}`)\n      .then(async (res) => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.tcs = founddata[0].tcs;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.customerID = founddata[0].customerid;\n           newState.selectedCustomerID = founddata[0].customerID;\n           newState.selectedCustomerName = founddata[0].customername;\n           newState.selectedQuotationId = founddata[0].quotationid;\n           newState.data.quotationid = founddata[0].quotationid;\n           newState.selectedQuotationNumber = founddata[0].quotationnumber;\n           newState.data.quotationnumber = founddata[0].quotationnumber;\n\n           const transactionid = await axios\n           .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + founddata[0].customerid)\n           .then(res => {\n             this.dataHandler(false)\n             if(res.data.customerlist.customerdata.length > 0){\n               let customervalues = res.data.customerlist.customerdata;\n               if(customervalues.length > 0){\n                 customervalues = customervalues.filter((item) =>{\n                   return item.Qno == founddata[0].quotationnumber\n                 });\n                 if(customervalues.length > 0)\n                 {\n                  console.log(\"customer values is\", customervalues)\n                   return customervalues[0]['_id'];\n                 }\n                 else {\n                   return \"\";\n                 }\n               }\n             }\n           },\n           error =>{\n             this.dataHandler(false);\n           });\n\n           newState.data.transactionid = transactionid;\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n              console.log(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          \n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const quotationlistvalues = Object.values(props.quotationlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      quotationlistvalues,\n      customerlistSelect: arraySet,\n      masteritemlistvalues,\n      itemlistSelectedOption: newArraySet,\n      quotationlistSelect: arrayQuotationSet,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'tcs') {\n      console.log(\"tcs value is\", e.target.value);\n      if(e.target.value == \"false\") {\n        this.setState(\n          {\n            ...this.state,\n            data: {\n              ...this.state.data,\n              [e.target.name]: '0.1'\n            }\n          },\n          () => {\n            this.calculatePercentageAmount();\n          }\n        );\n      }\n      else if(e.target.value == \"true\") {\n        this.setState(\n          {\n            ...this.state,\n            data: {\n              ...this.state.data,\n              [e.target.name]: ''\n            }\n          },\n          () => {\n            this.calculatePercentageAmount();\n          }\n        );\n      }\n    }\n     else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // TCS\n    let tcs = this.state.data.tcs;    \n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n    tcs = (subTotal * tcs) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(tcs) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        if(selected_item.masteritemshortdescription){\n          selectedItemlist.itemshortdescription[index] =\n          selected_item.masteritemshortdescription;\n        }\n          // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n          // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    },()=>{\n      this.totalValue();\n    });\n  \n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    console.log(\"customer id is\", selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    \n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }, selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            ''\n          ],          \n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemshortdescription = removeItem.selectedItemlist.itemshortdescription;    \n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      });\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleQuotationChange = async(e) => {\n    console.log(e)\n    let selectedquotation = e.value ? e.value : e\n    console.log(selectedquotation)\n    const quotationlistvalues = this.state.quotationlistvalues;\n    let quotationselected = quotationlistvalues.filter(\n      quotation => quotation._id === selectedquotation || quotation.quotationnumber === selectedquotation\n    );\n    console.log(quotationselected)\n    if(quotationselected && quotationselected.length > 0){\n      quotationselected = quotationselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = quotationselected.customerid ? quotationselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let transId = null;\n      const quotationnumber = quotationselected.quotationnumber;\n      const quotationid = selectedquotation;\n      this.dataHandler(true);\n      const purchaseordernumber = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + quotationselected.customerid)\n      .then(res => {\n        this.dataHandler(false)\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == quotationselected.quotationnumber\n            });\n            transId = customervalues[0]['_id'];\n            poDate = customervalues[0]['po'];\n            return customervalues[0]['ponum'];\n          }\n        }\n      },\n      error =>{\n        this.dataHandler(false);\n      });\n      const date = new Date(quotationselected.date);\n      let purchaseorderdate = new Date();\n      if(poDate) {\n        purchaseorderdate = new Date(poDate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = quotationselected.addeditemlist\n      if (quotationselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < quotationselected.addeditemlist.length; i++) {\n          quotationselected.addeditemlist[i].itemdiscount = quotationselected.addeditemlist[i].itemdiscount == null || quotationselected.addeditemlist[i].itemdiscount == '' ?\n          quotationselected.addeditemlist[i].itemdiscount = 0 : quotationselected.addeditemlist[i].itemdiscount\n          quotationselected.addeditemlist[i].itemdiscount = (quotationselected.addeditemlist[i].itemdiscount).toString()\n\n\n          quotationselected.addeditemlist[i].quantity = quotationselected.addeditemlist[i].quantity == null || quotationselected.addeditemlist[i].quantity == '' ?\n          quotationselected.addeditemlist[i].quantity = 0 : quotationselected.addeditemlist[i].quantity\n          quotationselected.addeditemlist[i].quantity = (quotationselected.addeditemlist[i].quantity).toString()\n\n          quotationselected.addeditemlist[i].costperunit = quotationselected.addeditemlist[i].costperunit == null || quotationselected.addeditemlist[i].costperunit == '' ?\n          quotationselected.addeditemlist[i].costperunit = 0 : quotationselected.addeditemlist[i].costperunit\n          quotationselected.addeditemlist[i].costperunit = (quotationselected.addeditemlist[i].costperunit).toString()\n\n          quotationselected.addeditemlist[i].totalcost = quotationselected.addeditemlist[i].totalcost == null || quotationselected.addeditemlist[i].totalcost == '' ?\n          quotationselected.addeditemlist[i].totalcost = 0 : quotationselected.addeditemlist[i].totalcost\n          quotationselected.addeditemlist[i].totalcost = (quotationselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(quotationselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(quotationselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(quotationselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(quotationselected.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(quotationselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(quotationselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(quotationselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(quotationselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(quotationselected.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          quotationnumber,\n          transactionid: transId,\n          quotationid,\n          selectedCustomerID: quotationselected.customerid,\n          selectedCustomerName: quotationselected.customername,\n          selectedQuotationId: selectedquotation,\n          selectedQuotationNumber: quotationselected.quotationnumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            quotationnumber : quotationnumber,\n            quotationid : quotationid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (quotationselected.addeditemlist.length > 0) {\n            quotationselected.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(quotationselected.customerid) {\n            this.handleChange(quotationselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      \n\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(selectedChallan.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n\n      \n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(selectedChallan.customerid) {\n            this.handleChange(selectedChallan.customerid._id);\n          }\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let customerDisp = this.state.selectedCustomerID != undefined ? (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />\n    ) : (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    );\n    let SelQuota;\n    if(this.state.selectedQuotationId) {\n      SelQuota = {\n        value: this.state.selectedQuotationId, label: this.state.selectedQuotationNumber\n      }\n    }\n    let quotationdisp = this.state.selectedQuotationId != undefined ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required value={SelQuota} options={this.state.quotationlistSelect} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required defaultValue={data.deliverychallannumber} options={this.state.quotationlistSelect} />\n    );\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n               \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Quotation No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  {/* <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField> */}\n                  {quotationdisp}\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Quotation date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n\n                {/* <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> */}\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n         \n                   <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    required\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerDisp}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n              {/* <Row>\n                <div className='mg-t-20' style={{ 'marginLeft': '15px','fontSize': '16px','fontWeight': 'bold'}}>\n                   For Proforma Invoice:\n                </div>\n              </Row>\n              \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Despath </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n              </Row> */}\n\n\n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                let optionsel = \"\";\n                let SelVal = {};\n                if(values.id != undefined) {\n                  if(values.itemshortdescription) {\n                    optionsel = values.itemshortdescription;\n                  }\n                  else {\n                    optionsel = values.itemdescription;\n                  }\n                  SelVal = {\n                    value: values.id._id, label: optionsel\n                  }\n                }                  \n\n                const itemnameinfo = values.id != undefined ? (\n                  // <AvField\n                  //   type=\"select\"\n                  //   value={values.id._id}\n                  //   name={`selectitem${index}`}\n                  //   onChange={e => this.selectitemchange(e, index)}\n                  //   required={true}\n                  // >\n                  //   <option value=\"\">select Item</option>\n                  //   {this.createSelectItems()}\n                  // </AvField>\n                  <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                  ) :\n                  (\n                    // <AvField\n                    //   type=\"select\"\n                    //   name={`selectitem${index}`}\n                    //   value={\n                    //     data.selectedItemlist.id[index]\n                    //   }\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                  )\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='tcs'>TCS</Label>\n                    <AvField\n                      Label\n                      name='tcs'\n                      type='checkbox'\n                      id='tcs'\n                      value={data.tcs}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>                \n           \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(InvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport { getquotation } from \"../../../../actions/quotation\";\nimport InvoiceForm from \"./InvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport axios from 'axios';\n\nclass AddInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n    this.props.getquotation();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n  submit = data => {\n    console.log(data)\n    this.dataHandler(true);\n      if(this.props.match.params.id != undefined){\n        data['_id'] = this.props.match.params.id;\n        return this.props\n        .updateinvoice(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['invoice_link'] = \"/view_invoicepdf/\"+submitdata.invoicelist.result;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n      else{\n        return this.props\n        .addinvoice(data)\n        .then(submitdata => {\n          let obj = {};\n          obj['_id'] = data.transactionid;\n          obj['invoice_link'] = \"/view_invoicepdf/\"+submitdata.invoicelist.result;\n          axios\n          .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n          .then(res => {\n            return submitdata;\n          },\n          error =>{\n          });\n          this.dataHandler(false);\n          return submitdata;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <InvoiceForm submit={this.submit} ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan,\n    getquotation\n  }\n)(AddInvoice);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ProformaInvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    proformainvoicelist: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemshortdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      quotationnumber: '',\n      transactionid: null,\n      quotationid: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      transportationgst:'',\n      advanceamountreceived:'',\n      transportchargerequired: 'Yes',\n      values: ['']\n    },\n    selectedCustomerID: null,\n    selectedCustomerName: null,\n    selectedQuotationId: null,\n    selectedQuotationNumber: null,\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    quotationlistvalues: [],\n    customerlistSelect: [],\n    quotationlistSelect: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    itemlistSelectedOption: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const quotationlistvalues = Object.values(this.props.quotationlistvalues);\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      quotationlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          }\n          else{\n            const invoicenumber = 1\n            this.setState({\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            })\n          }\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n    \n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getsingleproformainvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.transportationgst = founddata[0].transportationgst ?  founddata[0].transportationgst : ''\n           \n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.data.transportchargerequired = founddata[0].transportchargerequired ? founddata[0].transportchargerequired : ''\n           \n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const quotationlistvalues = Object.values(props.quotationlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    console.log(\"quotation values is \", quotationlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let arrayQuotationSet = [];\n    quotationlistvalues.map((option, i) => {\n      let objset = {\n        value: option._id, label: option.quotationnumber\n      }\n      arrayQuotationSet.push(objset);\n    });\n\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerlistSelect: arraySet,\n      customerobjects,\n      quotationlistvalues,\n      masteritemlistvalues,\n      quotationlistSelect: arrayQuotationSet,\n      quotationlistSelect: arrayQuotationSet,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    console.log(e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }, selectedCustomerID: selected_id, selectedCustomerName: customerdetail.customername\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            ''\n          ],                    \n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemshortdescription = removeItem.selectedItemlist.itemshortdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n\n    if (this.props.ID != undefined) {\n      data['_id'] = this.props.ID;\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/updateproformainvoice`, {\n        data\n      })\n      .then(res => {\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      },(err) =>{\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      });\n    }\n\n    else{\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/addproformainvoice`, {\n        data\n      })\n      .then(res => {\n        \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      },(err) =>{\n \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n\n  handleQuotationChange = async(e) => {\n    console.log(e)\n    let selectedquotation = e.value ? e.value : e\n    console.log(selectedquotation)\n    const quotationlistvalues = this.state.quotationlistvalues;\n    console.log(\"quotation list values \", quotationlistvalues);\n    let quotationselected = quotationlistvalues.filter(\n      quotation => quotation._id === selectedquotation || quotation.quotationnumber === selectedquotation\n    );\n    console.log(quotationselected)\n    if(quotationselected && quotationselected.length > 0){\n      quotationselected = quotationselected[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = quotationselected.customerid ? quotationselected.customerid : '';\n      \n\n      let poDate = \"\";\n      let transId = null;\n      const quotationnumber = quotationselected.quotationnumber;\n      const quotationid = selectedquotation;\n      this.dataHandler(true);\n      const purchaseordernumber = await axios\n      .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + quotationselected.customerid)\n      .then(res => {\n        this.dataHandler(false)\n        if(res.data.customerlist.customerdata.length > 0){\n          let customervalues = res.data.customerlist.customerdata;\n          if(customervalues.length > 0){\n            customervalues = customervalues.filter((item) =>{\n              return item.Qno == quotationselected.quotationnumber\n            });\n            if(customervalues.length > 0) {\n              transId = customervalues[0]['_id'];\n              poDate = customervalues[0]['po'];\n              return customervalues[0]['ponum'];\n            }\n            else {\n              transId = \"\";\n              poDate = \"\";\n              return \"\";\n            }\n          }\n        }\n      },\n      error =>{\n        this.dataHandler(false);\n      });\n      const date = new Date(quotationselected.date);\n      let purchaseorderdate = new Date();\n      if(poDate) {\n        purchaseorderdate = new Date(poDate);\n      }\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = quotationselected.addeditemlist\n      if (quotationselected.addeditemlist.length > 0) {\n\n        for (var i = 0; i < quotationselected.addeditemlist.length; i++) {\n          quotationselected.addeditemlist[i].itemdiscount = quotationselected.addeditemlist[i].itemdiscount == null || quotationselected.addeditemlist[i].itemdiscount == '' ?\n          quotationselected.addeditemlist[i].itemdiscount = 0 : quotationselected.addeditemlist[i].itemdiscount\n          quotationselected.addeditemlist[i].itemdiscount = (quotationselected.addeditemlist[i].itemdiscount).toString()\n\n\n          quotationselected.addeditemlist[i].quantity = quotationselected.addeditemlist[i].quantity == null || quotationselected.addeditemlist[i].quantity == '' ?\n          quotationselected.addeditemlist[i].quantity = 0 : quotationselected.addeditemlist[i].quantity\n          quotationselected.addeditemlist[i].quantity = (quotationselected.addeditemlist[i].quantity).toString()\n\n          quotationselected.addeditemlist[i].costperunit = quotationselected.addeditemlist[i].costperunit == null || quotationselected.addeditemlist[i].costperunit == '' ?\n          quotationselected.addeditemlist[i].costperunit = 0 : quotationselected.addeditemlist[i].costperunit\n          quotationselected.addeditemlist[i].costperunit = (quotationselected.addeditemlist[i].costperunit).toString()\n\n          quotationselected.addeditemlist[i].totalcost = quotationselected.addeditemlist[i].totalcost == null || quotationselected.addeditemlist[i].totalcost == '' ?\n          quotationselected.addeditemlist[i].totalcost = 0 : quotationselected.addeditemlist[i].totalcost\n          quotationselected.addeditemlist[i].totalcost = (quotationselected.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(quotationselected.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(quotationselected.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(quotationselected.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(quotationselected.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(quotationselected.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(quotationselected.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(quotationselected.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(quotationselected.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(quotationselected.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          quotationnumber,\n          transactionid: transId,\n          quotationid,\n          selectedCustomerID: quotationselected.customerid,\n          selectedCustomerName: quotationselected.customername,\n          selectedQuotationId: selectedquotation,\n          selectedQuotationNumber: quotationselected.quotationnumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            quotationnumber : quotationnumber,\n            quotationid : quotationid,\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (quotationselected.addeditemlist.length > 0) {\n            quotationselected.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(quotationselected.customerid) {\n            this.handleChange(quotationselected.customerid);\n          }\n        });\n      });\n    }\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      this.setState(newState);\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n      let addeditemlist = selectedChallan.addeditemlist;\n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemshortdescription.push(selectedChallan.addeditemlist[i].itemshortdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n       \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n          this.handleChange(selectedChallan._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    let SelVal;\n    if(this.state.selectedCustomerID != undefined) {\n      SelVal = {\n        value: this.state.selectedCustomerID, label: this.state.selectedCustomerName\n      }\n    }\n    let customerDisp = this.state.selectedCustomerID != undefined ? (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required value={SelVal} options={this.state.customerlistSelect} />\n    ) : (\n      <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    );\n    let SelQuota;\n    if(this.state.selectedQuotationId) {\n      SelQuota = {\n        value: this.state.selectedQuotationId, label: this.state.selectedQuotationNumber\n      }\n    }\n    let quotationdisp = this.state.selectedQuotationId != undefined ? (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required value={SelQuota} options={this.state.quotationlistSelect} />\n    ) : (\n      <Select name={`deliverychallannumber`} classNamePrefix=\"select\" onChange={this.handleQuotationChange.bind(this)} styles={customStyles} required defaultValue={data.deliverychallannumber} options={this.state.quotationlistSelect} />\n    );\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Proforma Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Proforma Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Proforma Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n              \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Quotation No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  {/* <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField> */}\n                  {quotationdisp}\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Quotation date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n               \n\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n           \n\n                 <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    required\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> \n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerDisp}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n            \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Dispatch </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationgst'>Transportation GST </Label>\n                    <AvField\n                      Label\n                      name='transportationgst'\n                      type='text'\n                      id='transportationgst'\n                      value={data.transportationgst}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportchargerequired'>GST required for Transport charge </Label>\n                    <AvField\n                      Label\n                      name='transportchargerequired'\n                      type='select'\n                      id='transportchargerequired'\n                      value={data.transportchargerequired}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    >\n                    <option value='Yes'>Yes</option>\n                    <option value='No'>No</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n\n             \n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                let optionsel = \"\";\n                let SelVal = {};\n                if(values.id != undefined) {\n                  if(values.itemshortdescription) {\n                    optionsel = values.itemshortdescription;\n                  }\n                  else {\n                    optionsel = values.itemdescription;\n                  }\n                  SelVal = {\n                    value: values.id._id, label: optionsel\n                  }\n                }  \n\n                const itemnameinfo = values.id != undefined ? (\n                  // <AvField\n                  //   type=\"select\"\n                  //   value={values.id._id}\n                  //   name={`selectitem${index}`}\n                  //   onChange={e => this.selectitemchange(e, index)}\n                  //   required={true}\n                  // >\n                  //   <option value=\"\">select Item</option>\n                  //   {this.createSelectItems()}\n                  // </AvField>\n                  <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                  ) :\n                  (\n                    // <AvField\n                    //   type=\"select\"\n                    //   name={`selectitem${index}`}\n                    //   value={\n                    //     data.selectedItemlist.id[index]\n                    //   }\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index, true)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                  )\n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}                              \n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n         \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProformaInvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport ProformaInvoiceForm from \"./ProformaInvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddProformaInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n    this.props.getquotation();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Proforma Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProformaInvoiceForm ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan,\n    getquotation\n  }\n)(AddProformaInvoice);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n\n    console.log(this.props);\n    if (this.props.invoicelistvalues) {\n      let quotationlist = Object.values(this.props.invoicelistvalues);\n      quotationlist.sort(function(a, b){\n        return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n      });\n      const invoicelistvalues = quotationlist.map(quotationvalue => {\n        return {\n          invoicenumber: quotationvalue.invoicenumber,\n          customername: quotationvalue.customername,\n          customernumber: quotationvalue.customernumber,\n          customercontactnumber: quotationvalue.customercontactnumber,\n\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, invoicelistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.invoicelistvalues);\n    console.log(quotationlist)\n    //quotationlist= quotationlist.sort((a, b) => b.invoicenumber.toString().toLowerCase().localeCompare(a.invoicenumber.toString().toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n    });\n    const invoicelistvalues = quotationlist.map(quotationvalue => {\n      return {\n        invoicenumber: quotationvalue.invoicenumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, invoicelistvalues });\n    this.dataHandler(false);\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = id => {\n    let path = `/view_invoicepdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editinvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, invoicelistvalues,success } = this.state;\n    console.log(invoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={invoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(ViewInvoice);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport './ViewInvoice.scss';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  padding1: {\n    paddingTop: 6\n  },\n  pagepadding: {\n   padding:5,\n   paddingLeft:10,\n   paddingRight:10,\n\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n    border: 'none',\n    boxShadow: 'none',\n    border: '30px solid green',\n    background:'#000'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  nobordertable: {\n    borderWidth: 0, borderRightWidth: 0, borderBottomWidth: 0\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument = ({ invoicelistvalues, data_cond }) => {\n  const financialYear = invoicelistvalues.financialyear;\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = invoicelistvalues.taxableamount;\n  taxableAmount = parseFloat(taxableAmount)\n  taxableAmount = taxableAmount.toFixed(2)\n  console.log(taxableAmount)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    tcs,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername\n  } = invoicelistvalues;\n  let purchaseordernumber = invoicelistvalues.purchaseordernumber;\n\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n   \n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n\n\n\n\n  freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n  freightcharges = freightcharges.toFixed(2)\n  subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n  subtotal = parseFloat(subtotal)\n  subtotal = subtotal.toFixed(2)\n  \n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n\n  let tcsval = tcs != '' && tcs != null ? (parseFloat(subtotal) * parseFloat(tcs)) / 100 : 0\n  if (tcsval == 0)\n    tcs = 0\n\n  tcsval = tcsval.toFixed(2)\n\n\n  total = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval) + parseFloat(tcsval)\n  total = total.toFixed(2)\n\n  roundoffamount = roundoffamount != '' && roundoffamount != null ? parseFloat(roundoffamount) : 0\n  roundoffamount = roundoffamount.toFixed(2)\n\n  grandtotal = parseFloat(total) + parseFloat(roundoffamount)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 2 && data.length < 4) {\n      return ( <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n            <Text style={styles.headerwidth}>INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n           \n           \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/ {financialYear}\n                 \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}/2020-21\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table styles={{'borderWidth':'0'}}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n               \n                  {deliveryaddress} \n                </Text>\n              </TableCell>\n\n              <TableCell weighting={0.5} >\n                <Table style={styles.section} style={{borderWidth: 0}}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                {/* style={styles.headerfont} */}\n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n              {/* <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell> */}\n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            */}\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n          \n          {/* Two */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n      \n              </TableCell>\n            </TableHeader>\n          </Table> */}\n          {/* Three */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                {amountinwords}\n                </Text>\n              </TableCell>\n   \n            </TableHeader>\n          </Table> */}\n          {/* ends here */}\n          <Text> {'\\n'}</Text>\n          </Page> )\n    }\n    else if(i == 0 && i <= 8 && data.length < 9) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      return ( \n      <>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <View style={styles.invoice_header}>\n        <Image style={styles.logo} src={logo} />\n        <View style={{ flex: 1, paddingLeft: 25 }}>\n          <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n          <Text style={styles.headerwidth}>INVOICE</Text>\n          <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n          <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n         \n         \n        </View>\n      </View>\n      {/* <View style={styles.section}>\n        <Text style={styles.headerwidth}></Text>\n\n        <Text style={styles.headerwidthdate}>\n          Date:{invoicelistvalues.requestdeliverydate}\n        </Text>\n      </View> */}\n      <View>\n        {/*  style={styles.section} */}\n        <Table>\n          <TableHeader>\n            <TableCell weighting={0.9}>\n              <Text style={styles.descriptionText}>\n              Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n              <Image style={styles.seal} src={seal} />\n            </TableCell>\n          </TableHeader>\n        </Table>\n        {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n          <Text>Hello World!</Text>\n        </View> */}\n        \n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                Invoice No: {invoicenumber}/{financialYear}\n               \n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n              <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                {invoicedate}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        \n        <Text> {'\\n'}</Text>\n        <Table>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              {/* <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    \n                  </TableCell>\n                </TableHeader>\n              </Table> */}\n              <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                Billing To\n              </Text>\n              <Text style={[styles.billingaddress]}>\n                {customername}  {'\\n'}\n                {billingaddress} {'\\n'}\n                GST No: {customergstnumber}\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Delivery Challan No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {deliverychallannumber}/2020-21\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>{date}</Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Purchase Order No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {purchaseordernumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Purchase Order Date:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {podate}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n\n              \n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>\n                      Vendor Code No:\n                        </Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {vendorcode}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>Date:</Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {purchaseorderdate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Text> {'\\n'}</Text>\n        <Table styles={{'borderWidth':'0'}}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              {/* <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    \n                  </TableCell>\n                </TableHeader>\n              </Table> */}\n              <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                Delivery To\n              </Text>\n              <Text style={[styles.shippingaddress]}>\n             \n                {deliveryaddress} \n              </Text>\n            </TableCell>\n\n            <TableCell weighting={0.5} >\n              <Table style={styles.section} style={{borderWidth: 0}}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>Vehicle No:</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {vehiclenumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>HSN Code</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>{hsncode}</Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              <Table style={styles.section}>\n                <TableHeader>\n                  <TableCell weighting={0.5}>\n                    <Text style={styles.headerfont2}>SAC Code:</Text>\n                  </TableCell>\n                  <TableCell weighting={0.5}>\n                    <Text style={[styles.headerfont]}>\n                      {saccode}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Time of invoice:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}></Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Date of invoice:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {invoicedate}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n              {/* <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={0.5}>\n                        <Text style={styles.headerfont2}>\n                          Description of Excisible Goods:\n                        </Text>\n                      </TableCell>\n                      <TableCell weighting={0.5}>\n                        <Text style={[styles.headerfont]}>\n                          {goodsDescription}\n                        </Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table> */}\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Text> {'\\n'}</Text>\n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={firstDat}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ backgroundColor: 'tomato' }}\n          >\n            <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n              <Small>SL No</Small>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              {/* style={styles.headerfont} */}\n              <Description >Description</Description>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>UOM</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Qty</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Rate</Small>\n            </TableCell>\n            {/* <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>\n                After Dist Rate/Each{'\\n'}Rs\n              </Text>\n            </TableCell> */}\n\n            <TableCell weighting={0.2}>\n              <Small>Amount</Small>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n            <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n          */}\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        </View>\n        </Page>\n        <Page style={styles.pagepadding} wrap>\n         <View> \n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={secondDat}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ backgroundColor: 'tomato' }}\n          >\n            <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n              <Small>SL No</Small>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              {/* style={styles.headerfont} */}\n              <Description >Description</Description>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>UOM</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Qty</Small>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Small>Rate</Small>\n            </TableCell>\n            {/* <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>\n                After Dist Rate/Each{'\\n'}Rs\n              </Text>\n            </TableCell> */}\n\n            <TableCell weighting={0.2}>\n              <Small>Amount</Small>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n            <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n          */}\n            <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>        \n        <Text> {'\\n'}</Text>\n        {/* Three divs for remarks, tax details and amount */}\n        </View>\n        \n        {/* Two */}\n        {/* <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              <Text style={styles.headerfont3}>\n                {'\\n'}\n                {'\\n'}\n\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.5}>\n    \n            </TableCell>\n          </TableHeader>\n        </Table> */}\n        {/* Three */}\n        {/* <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={0.5}>\n              <Text style={styles.headerfont3}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n \n          </TableHeader>\n        </Table> */}\n        {/* ends here */}\n        <Text> {'\\n'}</Text>\n        </Page> \n        </>\n         )\n    }\n  })\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader style={styles.section}>\n              <TableCell weighting={1.087} style={styles.section}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13} style={styles.section}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n          \n                      GST No: {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                      GST No. {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              \n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            \n         \n\n\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n          {dispDyn}\n          <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={[styles.section,styles.nobordertable]}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  Remarks:\n                  {'\\n'}\n                  {'\\n'}\n                  {remarks}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n                <Text style={styles.headerfont3}>{amountinwords}</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.087}>\n                        <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                      </TableCell>\n                      <TableCell weighting={0.45}>\n                        <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>TCS@{tcs}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcsval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>                \n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                      <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n            \n              </TableCell>\n            </TableHeader>\n          </Table>            \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n          \n            </View>\n\n       \n\n          </View>\n\n          <View style={styles.main}>\n            \n              <View>\n              <Text style={styles.brandname} > Note:</Text>\n          \n              <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n              <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n              <Text style={styles.padding1}>3, Delivery Schedule: 8 to 10 days after confirmation.</Text>\n              <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n              <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n              <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n              <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n              <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n              <Text style={styles.padding1}>9, Any Legal matter will be under \"Bangalore Jurisdiction\".</Text>          \n              </View>\n            \n          </View>\n          </Page>\n\n     \n     \n    </Document >\n  );\n};\n\nexport default MyDocument;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport axios from \"axios\";\nimport \"./ViewInvoice\";\n\nclass ViewInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\",\n    text: null,\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    const invoicelistvalues = this.props.invoicelistvalues[quotationid];\n    console.log(\"invoice list values is\", invoicelistvalues);\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        invoicelistvalues,\n        status: true,\n        text: quotationid.toString()+customername.toString()+\".pdf\"\n      });\n    },2000);\n   \n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.goBack();\n          }, 300);\n        });\n  \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link,text } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewInvoicePdf);\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproformainvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport axios from 'axios';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewProformaInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.getProformaInvoice();\n    this.props.getChallan();\n  }\n\n\n  getProformaInvoice(){\n     axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n         console.log(res)\n         this.dataHandler(false);\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let invoicelist = res.data.invoicelist.invoicedata;\n           //invoicelist= invoicelist.sort((a, b) => b.invoicenumber.toLowerCase().localeCompare(a.invoicenumber.toLowerCase()));\n           invoicelist.sort(function(a, b){\n            return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n          });\n          const proformainvoicelistvalues = invoicelist.map(quotationvalue => {\n            return {\n              invoicenumber: quotationvalue.invoicenumber,\n              customername: quotationvalue.customername,\n              customernumber: quotationvalue.customernumber,\n              customercontactnumber: quotationvalue.customercontactnumber,\n      \n              view: (\n                <div className=\"actionbuttons\">\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(quotationvalue);\n                    }}\n                  >\n                    Print\n                  </Button>\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateinvoice(quotationvalue._id);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  </div>\n              )\n            };\n          });\n          this.setState({ ...this.state, proformainvoicelistvalues });\n         }\n        },error =>{\n          this.dataHandler(false)\n         \n        });\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = obj => {\n    sessionStorage.setItem(\"pformadata\",JSON.stringify(obj))\n    let path = `/view_proformainvoicepdf/123`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editproformainvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, proformainvoicelistvalues,success } = this.state;\n    console.log(proformainvoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={proformainvoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    proformainvoicelistvalues: state.proformainvoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getproformainvoice,\n    getChallan\n  }\n)(ViewProformaInvoice);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport moment from 'moment';\nimport React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\nimport './ViewInvoice.scss';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  \n  pagepadding: {\n    padding:5,\n    paddingLeft:10,\n    paddingRight:10,\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  padding1: {\n    paddingTop: 6\n  },\n  section: {\n    // position: 'relative',\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument2 = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  const financialYear = invoicelistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = parseFloat(invoicelistvalues.taxableamount)\n  taxableAmount = taxableAmount.toFixed(2)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  let workorderdate = invoicelistvalues.workorderdate != '' ? moment(invoicelistvalues.workorderdate).format('DD MMM, YYYY') : '';\n  let despathdate = invoicelistvalues.despathdate != '' ? moment(invoicelistvalues.despathdate).format('DD MMM, YYYY') : '-';\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername,\n    deliverychallandata,\n    workorderno,\n    removaltime,\n    transportationcharge,\n    transportationgst,\n    advanceamountreceived,\n    transportchargerequired\n  } = invoicelistvalues;\n  deliverychallannumber = deliverychallannumber && deliverychallannumber != '' ? deliverychallannumber.toString() + '/2020-21': ''\n  let purchaseordernumber = deliverychallannumber && deliverychallannumber != '' ? invoicelistvalues.purchaseordernumber : ''\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n\n\n  \n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n   freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n   freightcharges = freightcharges.toFixed(2)\n   subtotal = 0;\n   subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n   subtotal = parseFloat(subtotal)\n   subtotal = subtotal.toFixed(2)\n  // total = parseFloat(total)\n  // total = total.toFixed(2)\n\n\n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n  let total2 = 0\n  total2 = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total2 = parseFloat(total2)\n  total2 = total2.toFixed(2)\n  let transportationgstper=0;\n  transportationgst = transportationgst && transportationgst != '' ? parseFloat(transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n  transportationcharge = transportationcharge != '' && transportationcharge != null ? parseFloat(transportationcharge) : 0\n  transportationcharge = transportationcharge.toFixed(2)\n  let transportationchargegst = transportationcharge * transportationgst\n  transportationchargegst = transportationchargegst.toFixed(2)\n  transportationchargegst = transportchargerequired != '' && transportchargerequired == 'No' ? 0.00 : transportationchargegst\n  let totalaftertransportcharge = parseFloat(total2) + parseFloat(transportationchargegst) + parseFloat(transportationcharge)\n  totalaftertransportcharge = parseFloat(totalaftertransportcharge)\n  totalaftertransportcharge = totalaftertransportcharge.toFixed(2)\n\n\n  advanceamountreceived = advanceamountreceived != '' && advanceamountreceived != null ? parseFloat(advanceamountreceived) : 0\n  advanceamountreceived = advanceamountreceived.toFixed(2)\n  grandtotal = parseFloat(totalaftertransportcharge) - parseFloat(advanceamountreceived)\n  grandtotal = parseFloat(grandtotal)\n  grandtotal = grandtotal.toFixed(2)\n\n  \n  RsPaise(grandtotal)\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 2 && data.length < 4) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n            <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n            \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Proforma Invoice No: {invoicenumber}/{financialYear}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Dispatch Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {despathdate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n         \n                  {deliveryaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n        </Page>\n      )\n    }\n    else if(i == 0 && i <= 8 && data.length < 10) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n            <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n            \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Proforma Invoice No: {invoicenumber}/{financialYear}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Dispatch Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {despathdate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n         \n                  {deliveryaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={firstDat}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n        </Page>\n        <Page  size='A4' style={styles.pagepadding} wrap>\n          <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={secondDat}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          </View>\n        </Page>\n        </>\n      )\n    }\n  })\n\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n        {dispDyn}\n        <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n   \n                   <Text style={styles.headerfont3}>\n                  {amountinwords}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges </Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {subtotal}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n              \n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                     <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total2}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation Charge</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation @ {transportationgstper}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationchargegst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalaftertransportcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Advance Received</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {advanceamountreceived}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Balance Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n          {'\\n'}\n          {'\\n'}\n            {'\\n'}\n          </Text> \n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.0}>\n                <Text style={styles.headerfont3}>\n                 \n                  \n                  Our Bank details:-  {'\\n'} {'\\n'}\n                  Company Name : Pondhan Scaffolding Pvt Ltd  {'\\n'}\n                  Bank : Bank Of Baroda, Branch: Byatarayanapura, Bangalore-92  {'\\n'}\n                  A/c No: 73690500000003 Transportation {'\\n'}\n                  IFSC Code: BARBOVJBYAT\n                </Text>\n              </TableCell>\n             \n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* Three */}\n\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                  {'\\n'}{'\\n'}{'\\n'}{'\\n'}\n                </Text>\n\n                <View style={{fontSize: '10'}}>\n              <Text style={styles.brandname} > Note:</Text>\n          \n              <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n              <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n              <Text style={styles.padding1}>3, Delivery Schedule: 8 to 10 days after confirmation.</Text>\n              <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n              <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n              <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n              <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n              <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n              <Text style={styles.padding1}>9, Any Legal matter will be under \"Bangalore Jurisdiction\".</Text>          \n              </View>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                \n         \n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n              \n                      <View style={{ flexDirection: 'row', justifyContent: 'center', padding: 5  }}>\n                        <Image style={{ width: 53, height: 53 }} src={sign} />\n                        <Image style={{ width: 53, height: 53 }} src={seal} />\n                      </View>\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                   \n                  </TableCell>\n                </TableHeader>\n               \n              </Table>\n          \n            </View>\n\n       \n            \n          </View>\n          </Page>\n    </Document >\n  );\n};\n\nexport default MyDocument2;","import { PDFViewer } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport logo from \"../../../../Images/logo.png\";\nimport MyDocument2 from \"./Component2\";\nimport \"./ViewInvoice\";\n\nclass ViewProformaInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\",\n    text: null\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    let invoicelistvalues = JSON.parse(sessionStorage.getItem('pformadata'))\n    console.log(\"invoice list iss\", invoicelistvalues);\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.invoicelistvalues,\n        invoicelistvalues,\n        status: true,\n        text: invoicelistvalues._id.toString()+customername.toString()+\".pdf\"\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/proformainvoicelist\");\n          }, 300);\n        });\n       \n      }\n    } else {\n    }\n  }\n  \n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link, text } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument2\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewProformaInvoicePdf);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass AddItemListForm extends React.Component {\n  state = {\n    data: {\n      masteritemtype: '',\n      masteritemname: null,\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      costperunit: null,\n      masteritemrate: null,\n      masteritemunitwt: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null,\n      masteritemimagefile: null\n    },\n    materialoptionlistvalues: [],\n    masteritemlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    filename:''\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  onItemTypeChange = e => {\n    const selecteditemtype = e.target.value;\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    const masteritemlistvalues = this.state.masteritemlistvalues;\n    const selecteditemtypevalue = materialoptionlistvalues.filter(\n      (option, i) => {\n        if (option.id === selecteditemtype) {\n          return option;\n        }\n      }\n    );\n    const selectitemid = selecteditemtypevalue[0].id;\n    if (selectitemid) {\n      const selecteditemvalues = masteritemlistvalues.filter(item => {\n        if (item.masteritemtype._id == selectitemid) {\n          return item;\n        }\n      });\n      console.log(selecteditemtypevalue);\n      console.log(selecteditemvalues);\n      const count = selecteditemvalues.length;\n      if ((selectitemid === '5d263475917f5e27146d9ee4' || selectitemid === '5df361a6f57a6f7c679da493' || selectitemid === '5f0830f14d38d207245a37eb')) {\n        const itemname = count > 0 ? 1002 + count : 1001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d263480917f5e27146d9ee5' || selectitemid == '5df361e1f57a6f7c679da494'  || selectitemid === '5f0831104d38d207245a37ec')) {\n        const itemname = count > 0 ? 2002 + count : 2001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d270f30136e660798dce139' || selectitemid == '5df361eaf57a6f7c679da495'  || selectitemid === '5f0831204d38d207245a37ed')) {\n        const itemname = count > 0 ? 3002 + count : 3001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n\n      if ((selectitemid === '5d5e206ea24f1806712491b7' || selectitemid == '5df361f3f57a6f7c679da496'  || selectitemid === '5f08312c4d38d207245a37ee')) {\n        const itemname = count > 0 ? 4002 + count : 4001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n    }\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleValidSubmit = () => {\n    let { data } = this.state;\n    this.setState({ loading: true });\n    let formdata = new FormData();\n    console.log(data)\n    formdata.append('imagefile', data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    formdata.append('itemName', data.itemName);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('costperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n        })\n        .catch(err => {\n          this.props.error(false);\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(this.state.data)\n    console.log('invalid submit');\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is added successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is added successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>{' '}\n             \n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onItemTypeChange}\n                      required={true}\n                      Label\n                    >\n                      <option value=''>select</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='Number'\n                      id='masteritemname'\n                      value={data.masteritemname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Code'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=''>Please select value</option>\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit Cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      Label\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className=\"required-label\">*</span> */}\n        \n\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader small-font-size'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddItemListForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert, Modal,ModalHeader,ModalBody,ModalFooter } from \"reactstrap\";\nimport { getMasterItemList } from \"../../../../actions/Transaction\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { deleteMasterItemList } from \"../../../../actions/Transaction\";\n\nclass ViewMasterItemList extends React.Component {\n  state = {\n    loading: false,\n    showModal: false,\n    setDeleteId: '',\n    masteritemlist: [],\n    count: 0\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemList();\n    console.log(\"master item list\", this.props);\n    if(this.props.masteritemlistvalues) {\n      let masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n      const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n        return {\n          masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n          masteritemtypename: masteritemdata.masteritemtypename,\n          masteritemdescription: masteritemdata.masteritemdescription,\n          masteritemshortdescription:masteritemdata.masteritemshortdescription,\n          masteritemuom: masteritemdata.masteritemuom.uomname,\n          // masteritemrate: masteritemdata.masteritemrate,\n          masteritemcostperunit: masteritemdata.masteritemcostperunit,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(masteritemdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          ),\n          delete: (\n            <Button\n            color=\"danger\"\n            onClick={() => {\n              this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n            }}\n          >\n            Delete\n          </Button>\n          )        \n        };\n      });\n      const count = masteritemlistvalues.length;\n      this.setState({ ...this.state, masteritemlist, count });\n      this.dataHandler(false);    \n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, showModal: false });\n  };\n\n  componentWillReceiveProps(props) {\n    console.log(\"master item list in props\", this.props);\n    let masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n    const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n      return {\n        masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n        masteritemtypename: masteritemdata.masteritemtypename,\n        masteritemdescription: masteritemdata.masteritemdescription,\n        masteritemshortdescription:masteritemdata.masteritemshortdescription,\n        masteritemuom: masteritemdata.masteritemuom.uomname,\n        // masteritemrate: masteritemdata.masteritemrate,\n        masteritemcostperunit: masteritemdata.masteritemcostperunit,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(masteritemdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n          }}\n        >\n          Delete\n        </Button>\n        )        \n      };\n    });\n    const count = masteritemlistvalues.length;\n    this.setState({ ...this.state, masteritemlist, count });\n    this.dataHandler(false);\n  }\n\n  deleteItem = () => {\n    return this.props.deleteMasterItemList(this.state.setDeleteId)\n    .then((data) => {\n      this.props.getMasterItemList();\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  };\n\n  updateButton = id => {\n    let path = `/m_updateitemlist/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { loading, count, masteritemlist, showModal } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"masteritemtype\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Code\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"masteritemdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Short Description\",\n        field: \"masteritemshortdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"UOM\",\n        field: \"masteritemuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      // {\n      //   label: \"Item Rate\",\n      //   field: \"masteritemrate\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Unit Cost\",\n        field: \"masteritemcostperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        {showModal ? (\n                      <Modal\n                      isOpen={showModal}\n                      className={this.props.className}\n                    >\n                      <ModalHeader toggle={this.toggle}>Delete</ModalHeader>\n                      <ModalBody>Do you want to delete this product?</ModalBody>\n                      <ModalFooter>\n                        <Button color='primary' onClick={this.deleteItem}>\n                          Yes\n                        </Button>\n                        <Button color='primary' onClick={this.toggle}>\n                          No\n                        </Button>                        \n                      </ModalFooter>\n                    </Modal>\n        ) : null\n        }\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={masteritemlist}\n              className=\"masteritemlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getMasterItemList, deleteMasterItemList }\n  )(ViewMasterItemList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddmasterItemList extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemList(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemList();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemListForm submit={this.submit} error={this.errorHandler}/>\n        </div>\n        {loading ? (\n        <CustomLoader/>\n        ) : null}\n        {/* <div>\n          <ViewMasterItemList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nAddmasterItemList.propTypes = {\n  addMasterItemList: PropTypes.func.isRequired,\n  getMasterItemList: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addMasterItemList, getMasterItemList, getUomList, getMasterItemTypes }\n)(AddmasterItemList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\n\nclass MasterItemListValues extends React.Component {\n  render() {\n    return (\n      <div class=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <ViewMasterItemList />\n      </div>\n    );\n  }\n}\n\nexport default MasterItemListValues;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass UpdateItemListForm extends React.Component {\n  state = {\n    data: {\n      id: null,\n      masteritemtype: '',\n      masteritemname: '',\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      itemImage: '',\n      costperunit: null,\n      // masteritemrate: null,\n      masteritemunitwt: null,\n      masteritemimagefile: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null\n    },\n    materialoptionlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    imageChanged: false,\n    filename:''\n  };\n\n  componentDidMount() {\n    const id = this.props.id;\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const masteritemlistvalues = props.masteritemlistvalues[id];\n    console.log(masteritemlistvalues)\n    const data = {};\n    data.id = masteritemlistvalues.id;\n\n    data.masteritemname = masteritemlistvalues.masteritemtypename;\n    data.masteritemdescription = masteritemlistvalues.masteritemdescription;\n    data.masteritemshortdescription = masteritemlistvalues.masteritemshortdescription;\n    data.itemName = masteritemlistvalues.itemName;\n    \n    data.permeter = masteritemlistvalues.permeter;\n    data.masteritemunitwt = masteritemlistvalues.masteritemunitwt;\n\n    data.perfeet =  masteritemlistvalues.permeter / 3.2808.toFixed(2)\n    data.perinch =  masteritemlistvalues.permeter / 39.3701.toFixed(2)\n    data.itemImage = masteritemlistvalues.masteritemimage != undefined && \n                     masteritemlistvalues.masteritemimage != null &&\n                     masteritemlistvalues.masteritemimage != '' ? `${process.env.REACT_APP_IMAGE_BASE_URL}` + '/' + masteritemlistvalues.masteritemimage : ''\n    \n    console.log(data.itemImage)\n    data.masteritemtype = masteritemlistvalues.masteritemtype._id;\n    data.masteritemuom = masteritemlistvalues.masteritemuom._id;\n    data.costperunit = masteritemlistvalues.masteritemcostperunit != undefined && \n                       masteritemlistvalues.masteritemcostperunit != null ? \n                      masteritemlistvalues.masteritemcostperunit.toString() : 0\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      data\n    });\n  }\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      ...this.state,\n      imageChanged: true,\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleInvalidSubmit = () =>{\n    console.log(this.state.data)\n  }\n\n  handleValidSubmit = () => {\n\n    const { data, imageChanged } = this.state;\n    this.setState({ loading: true });\n    const formdata = new FormData();\n    if (imageChanged) {\n      formdata.append('imagefile', data.masteritemimagefile);\n    }\n    // formdata.append(\"imagefile\", data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('id', data.id);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('masteritemcostperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    const itemimg = this.state.data.itemImage != '' ?\n    (<img src={data.itemImage} style={{'maxWidth': '150px','maxHeight' : '130px'}}/>) : ''\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is Updated successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemtype || null}\n                    >\n                      <option value=''>select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='text'\n                      id='masteritemname'\n                      value={data.masteritemname || null}\n                      readOnly\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription || null}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n\n                {/* <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemrate\">Item Rate</Label>\n                    <AvField\n                      name=\"masteritemrate\"\n                      type=\"text\"\n                      id=\"masteritemrate\"\n                      value={data.masteritemrate}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        maxLength: {\n                          value: 150,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Item Rate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col> */}\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemuom || null}\n                    >\n                      <option value=''>Please select value</option>\n                      {/* <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option> */}\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      className='small-font-size'\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      \n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className='required-label'>*</span> */}\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n                  </AvGroup>\n                </Col>\n\n                 <Col sm={6}>\n                {itemimg}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport UpdateMasterItemListForm from \"../Form/ItemList/UpdateItemListForm\";\nimport { updatemasteritemlist } from \"../../../../actions/Transaction\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateMasterItemList extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updatemasteritemlist(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/mitemlistvalues\">Item List</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Update Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <UpdateMasterItemListForm id={id} submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    updatemasteritemlist,\n    addMasterItemList,\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList\n  }\n)(UpdateMasterItemList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass MasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      itemtype: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type data is Added successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Added successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item Type data already exist.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item Type</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"itemtype\"\n                      type=\"text\"\n                      id=\"masteritemtype\"\n                      value={data.option}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item Type\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid Item Type name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup className=\"mg-20\">\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader\"\n                    >\n                      Submit\n                      {/* {loading} */}\n                    </Button>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default MasterItemTypeForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport MasterItemTypeForm from \"../Form/MasterItemTypeForm\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass MasterItemType extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemType(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemTypes();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Type</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemTypeForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(MasterItemType);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nclass ItemMasterTypeList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    masteritemtypesvalues: []\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemTypes();\n  }\n  componentWillReceiveProps(props) {\n    const masteritemtypenamevaluelist = Object.values(\n      props.masteritemtypenamevalue\n    );\n    const masteritemtypesvalues = masteritemtypenamevaluelist.map(\n      (masteritemtypedata, i) => {\n        return {\n          masteritemtypename: masteritemtypedata.masteritemtypename,\n          view: (\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                this.updateButton(masteritemtypedata.id);\n              }}\n            >\n              view / Edit\n            </MDBBtn>\n          )\n        };\n      }\n    );\n    const count = masteritemtypesvalues.length;\n    this.setState({ ...this.state, masteritemtypesvalues, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/update_mitemtype/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { loading, count, masteritemtypesvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 && (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={masteritemtypesvalues}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(ItemMasterTypeList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateMasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      id: this.props.masteritemtypenamevalue.id,\n      masteritemtypename: this.props.masteritemtypenamevalue.masteritemtypename\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const dataRecord = props.masteritemtypenamevalue;\n    this.setState({ ...this.state.data, data: dataRecord });\n  }\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type is updated successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Updated successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>{\" \"}\n         \n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item data already exist.</Alert>\n        ) : null}\n        {!!errors.global ? (\n          <Alert color=\"danger\">\n            Something went wrong,Please try again later.\n          </Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Update Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"item\">Item</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"masteritemtypename\"\n                      type=\"text\"\n                      id=\"item\"\n                      value={data.masteritemtypename}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item name\"\n                        },\n                   \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid item name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalueobjectlist: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateMasterItemTypeForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMasterItemTypeForm from \"../Form/UpdateMasterItemTypeForm\";\nimport {\n  getMasterItemTypes,\n  updateMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateItemMasterType extends React.Component {\n  state = {\n    loading: false,\n    masteritemtypenamevalue: {}\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    const masteritemid = this.props.match.params.id;\n    const masteritemtypenamevalue = this.props.masteritemtypenamevalue[\n      masteritemid\n    ];\n    this.setState({ masteritemtypenamevalue });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updateMasterItemTypes(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { loading, masteritemtypenamevalue } = this.state;\n\n    return (\n      <div className=\"mg-t-20 container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/masteritemtypelist\">Item Type</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <UpdateMasterItemTypeForm\n            submit={this.submit}\n            masteritemtypenamevalue={masteritemtypenamevalue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMasterItemTypes, updateMasterItemTypes }\n)(UpdateItemMasterType);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../loader/loader\";\n\nclass EditTable extends React.Component {\n  state = {\n    data: {\n      poid: null,\n      ponumber: null,\n      poitemid: [],\n      itemid: [],\n      itemuom: [],\n      itemquantity: [],\n      receivedqty: [],\n      recevingqty: [],\n      itemlocation: [],\n      totalqty: [],\n      date: []\n    },\n    receiptnumber: null,\n    selectedItem: [],\n    locationlistvalue: [],\n    sucess: false,\n    errors: {},\n    uomlistvalues: [],\n    loading: false,\n    loadingvalue: false,\n    visible: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const ponumber = this.props.ponumber;\n    const poid = this.props.poid;\n    const selectedItemlistvalues = this.props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const poid = props.poid;\n    const ponumber = props.ponumber;\n    const selectedItemlistvalues = props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const itemlocation = [...this.state.data.itemlocation];\n    itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        itemlocation\n      }\n    });\n  };\n  quantityChange = (e, index) => {\n    const selected_qty = e.target.value;\n    const recevingqty = [...this.state.data.recevingqty];\n    const totalqty = [...this.state.data.totalqty];\n    const receivedqty = [...this.state.data.receivedqty];\n    recevingqty[index] = selected_qty;\n    totalqty[index] =\n      parseFloat(receivedqty[index]) + parseFloat(recevingqty[index]);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        recevingqty,\n        totalqty\n      }\n    });\n  };\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n  handleValidSubmit = () => {\n    this.dataHandler(true);\n    let data = {};\n    let AddedIteminfo = [];\n    const {\n      poid,\n      ponumber,\n      poitemid,\n      itemid,\n      itemuom,\n      itemquantity,\n      receivedqty,\n      recevingqty,\n      itemlocation,\n      totalqty,\n      date\n    } = this.state.data;\n    data.ponumber = ponumber;\n    data.poid = poid;\n    itemid.forEach(function(id, i) {\n      let obj = {};\n      obj.poitemid = poitemid[i];\n      obj.itemid = itemid[i];\n      obj.itemuom = itemuom[i];\n      obj.itemquantity = itemquantity[i];\n      obj.receivedqty = receivedqty[i];\n      obj.recevingqty = recevingqty[i];\n      obj.itemlocation = itemlocation[i];\n      obj.totalqty = totalqty[i];\n      AddedIteminfo.push(obj);\n    });\n    data.iteminfo = AddedIteminfo;\n    this.props\n      .itemlistsubmit(data)\n      .then(data => {\n        this.onShowAlert();\n        this.dataHandler(false);\n        this.setState({\n          success: true,\n          loading: false,\n          receiptnumber: data.receiptnumber\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ errors: err.response.data.error, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  dataHandler = value => {\n    this.setState({ loadingvalue: value });\n  };\n\n  render() {\n    // const { selectedItem } = this.props;\n    const {\n      loading,\n      data,\n      success,\n      errors,\n      selectedItem,\n      receiptnumber,\n      visible,\n      loadingvalue\n    } = this.state;\n    const tableBody = selectedItem.map((itemlist, i) => {\n      let nowDate = new Date();\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={itemlist.poitemid}>\n          <td>{i + 1}</td>\n          <td>{itemlist.itemname}</td>\n          <td>{itemlist.itemdescription}</td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`uom${i}`}\n              onChange={this.onChange}\n              required={true}\n              value={itemlist.itemuom || \" \"}\n            >\n              <option value=\"\">uom</option>\n              {this.createSelectUomItems()}\n            </AvField>\n          </td>\n          <td>{itemlist.quantity}</td>\n          <td>{itemlist.receivedqty}</td>\n          <td>\n            <AvField\n              name={`quantity${i}`}\n              type=\"number\"\n              id={`quantity${i}`}\n              value={itemlist.recevingqty.toString() || null}\n              min={0}\n              max={itemlist.recevingqty}\n              onChange={e => this.quantityChange(e, i)}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter Item Quantity\"\n                },\n                minLength: {\n                  value: 1,\n                  errorMessage: \"quantity value is required\"\n                },\n                pattern: {\n                  value: \"^[0-9.]*$\",\n                  errorMessage: \"Please enter valid quantity\"\n                }\n              }}\n            />\n          </td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`location${i}`}\n              onChange={e => this.locationChange(e, i)}\n              required={true}\n              value={itemlist.itemlocation}\n            >\n              {this.createSelectLocationItems()}\n            </AvField>\n          </td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loadingvalue ? <CustomLoader /> : null}\n        {success && (\n          // <Alert color=\"info\" isOpen={visible}>\n          //   Receipt {receiptnumber} created Successfully\n          // </Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Receipt {receiptnumber} created Successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        )}\n        {!!errors.global ? <Alert color=\"danger\">{errors.global}</Alert> : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>SI No</th>\n                    <th>Item Name</th>\n                    <th>Item Description</th>\n                    <th>UOM</th>\n                    <th>PO Qty</th>\n                    <th>Received Qty</th>\n                    <th>Receiving Qty</th>\n                    <th>location</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>{tableBody}</tbody>\n              </table>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    uomlistvalues: state.uomlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditTable);\n","import axios from \"axios\";\n\nexport default {\n  location: {\n    getLocationList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/location/getlocation`)\n        .then(res => {\n          return res.data.locationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/locationapi\";\nimport { Location_LIST } from \"../Services/types\";\nimport { locationListSchema } from \"../Schemas/schemas\";\n\nfunction locationListFetched(locationlist) {\n  return {\n    type: Location_LIST,\n    locationlist\n  };\n}\n\nexport const getLocationList = () => {\n  return dispatch => {\n    return api.location.getLocationList().then(locationlist => {\n      const locationlistvalue = locationlist.locationdata;\n      return dispatch(\n        locationListFetched(normalize(locationlistvalue, [locationListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert\n} from \"reactstrap\";\n\nclass ReceiptScreenForm extends React.Component {\n  state = {\n    data: {\n      ponumber: null\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onhandleChange = e => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        // eslint-disable-next-line prettier/prettier\n        this.setState({ errors: err.response.data.errors, loading: false, success: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Receipt Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    {!!errors.global ? (\n                      <Alert color=\"danger\" Label>Result Not Found</Alert>\n                    ) : null}\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\" Label>PO Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"ponumber\"\n                        type=\"number\"\n                        id=\"ponumber\"\n                        value={data.ponumber}\n                        onChange={this.onChange}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader small-font-size\"\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      Find\n                      {/* {loading} */}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptScreenForm;\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\n\nclass ReceiptTable extends React.Component {\n  state = {\n    receiptlistitems: []\n  };\n  componentDidMount() {\n    const receiptlistitems = this.props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const receiptlistitems = props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n  render() {\n    const { receiptlistitems } = this.state;\n    const receiptlisttable = receiptlistitems.map((receiptvalue, i) => {\n      let loc = receiptvalue.itemlocation ? receiptvalue.itemlocation.locationname : '-'\n      let nowDate = new Date(receiptvalue.date);\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={receiptvalue.id}>\n          <td>{i + 1}</td>\n          <td>{receiptvalue.itemid.masteritemname}</td>\n          <td>{receiptvalue.itemid.masteritemdescription}</td>\n          <td>{receiptvalue.itemuom.uomname}</td>\n          <td>{receiptvalue.itemquantity}</td>\n          <td>{receiptvalue.recevingqty}</td>\n          <td>{loc}</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>SI No</th>\n              <th>Item Name</th>\n              <th>Item Description</th>\n              <th>UOM</th>\n              <th>PO Qty</th>\n              <th>Received Qty</th>\n              <th>location</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>{receiptlisttable}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport async from \"async\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Button\n} from \"reactstrap\";\nimport EditTable from \"../../../../Components/EditTable/EditTable\";\nimport {\n  getPurchaseOrder,\n  searchPoNumber,\n  addorupdateitemsinlocation,\n  getReceiptlist\n} from \"../../../../actions/Transaction\";\nimport { getLocationList } from \"../../../../actions/Location\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport ReceiptScreenForm from \"./ReceiptScreenForm/ReceiptScreenForm\";\nimport ReceiptTable from \"./ReceiptScreenForm/ReceiptTable\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ReceiptScreen extends React.Component {\n  state = {\n    count: 0,\n    poid: null,\n    ponumber: null,\n    selectedItem: [],\n    success: false,\n    receiptlistitems: [],\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getLocationList();\n    this.props.getUomList();\n    const purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  componentWillReceiveProps(props) {\n    const purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  submit = data => {\n    this.dataHandler(true);\n    this.props.getReceiptlist(data).then(receiptlist => {\n      this.dataHandler(false);\n      const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n        return receiptvalue;\n      });\n      this.setState({\n        ...this.state,\n        receiptlistitems: receiptlistitems\n      });\n    });\n\n    return this.props\n      .searchPoNumber(data)\n      .then(podata => {\n        this.dataHandler(false);\n        const selectedItem = podata.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n        const ponumber = data.ponumber;\n        const poid = podata._id;\n        this.setState({\n          ...this.state,\n          selectedItem,\n          ponumber,\n          poid,\n          success: true\n        });\n        return podata;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ ...this.state, success: false });\n        throw err;\n      });\n  };\n\n  itemlistsubmit = data => {\n    const datavalue = {};\n    datavalue.ponumber = data.ponumber;\n    this.dataHandler(true);\n    this.props.getReceiptlist(datavalue).then(receiptlist => {\n      this.dataHandler(false);\n      if (receiptlist) {\n        const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n          return receiptvalue;\n        });\n        this.setState({\n          ...this.state,\n          receiptlistitems: receiptlistitems\n        });\n      }\n    });\n\n    return this.props\n      .addorupdateitemsinlocation(data)\n      .then(async data => {\n        this.dataHandler(false);\n        const receiptlist = await this.props.getReceiptlist(datavalue);\n        const searchporesult = await this.props.searchPoNumber(datavalue);\n        data = {\n          searchdata: data,\n          receiptlist: receiptlist,\n          searchporesult: searchporesult\n        };\n        return data;\n      })\n      .then(data => {\n        console.log(data);\n        const receiptlistitems = data.receiptlist.receiptlist.map(\n          receiptvalue => {\n            return receiptvalue;\n          }\n        );\n\n        const selectedItem = data.searchporesult.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n\n        this.setState({\n          ...this.state,\n          receiptlistitems,\n          selectedItem\n        });\n\n        return data.searchdata;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  savereport = value => {\n    sessionStorage.setItem(\"Receipt\",JSON.stringify(value))\n    let path = `/viewreceipt`;\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      poid,\n      ponumber,\n      count,\n      success,\n      selectedItem,\n      receiptlistitems,\n      loading\n    } = this.state;\n\n    const receiptlisttable = receiptlistitems.map(receiptvalue => {\n      return (\n        <div className=\"container mg-t-20\" key={receiptvalue.id}>\n          {loading ? <CustomLoader /> : null}\n          <Card>\n            <CardHeader>\n              <span> Receipt No : {receiptvalue.receiptnumber} </span>\n              <span> || </span>\n              <span> PO Number : {receiptvalue.ponumber} </span>\n              <div style={{ 'float':'right','marginTop': '-8px','marginBottom':'-5px'}}>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        this.savereport(receiptvalue);\n                      }}\n                      className=\"lgn-loader small-font-size\"\n                      \n                    >\n                      Save Report\n                     \n                    </Button>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <ReceiptTable itemlist={receiptvalue.itemlist} />\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Receipt Screen</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <ReceiptScreenForm submit={this.submit} />\n              {success && (\n                <EditTable\n                  selectedItem={selectedItem}\n                  ponumber={ponumber}\n                  poid={poid}\n                  itemlistsubmit={this.itemlistsubmit}\n                />\n              )}\n              {receiptlistitems.length > 0 && receiptlisttable}\n            </div>\n          ) : (\n              <Alert color=\"info\" Label>Please Add purchase order </Alert>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPurchaseOrder,\n    searchPoNumber,\n    addorupdateitemsinlocation,\n    getReceiptlist,\n    getLocationList,\n    getUomList\n  }\n)(ReceiptScreen);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 50,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height:50,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n\nconst today = new Date().getDate() + '/' +  (new Date().getMonth()+1) + '/' + new Date().getFullYear()\nconst data = orderlistvalues.addeditemlist;\n  const {\n    ponumber,\n    receiptnumber\n  } = orderlistvalues;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small>\n              </View>\n       \n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : 40 & 41 (corner) Road,no.5, Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>Off: +91 080 23339150, Mob: +91 9900069150</Bold>\n    \n        </Text>\n        <Text> {'\\n'}</Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black',textAlign:'center' }]}>\n          <Bold>Goods Received Note</Bold>\n        </Text>\n\n        \n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>GRN No. </Text>\n                <Text style={[styles.dcaddress, {\n                \n                  paddingLeft: 16,\n                }]}>{receiptnumber}/2019-20 \n                {'\\n'}\n                </Text>\n              </View>\n            \n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>PO No.</Text>\n                <Text style={[styles.dcaddress, {\n                    paddingLeft: 16,\n                    wordWrap: 'break-word'\n                }]}> PSPL/2019-20/{ponumber}\n                {'\\n'}\n                </Text>\n             </View>\n            </View>\n           \n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {today}\n                  {'\\n'}\n                </Text>\n              </View>\n            </View>\n            <Text>{'\\n'}</Text> \n          </View>\n          <Text>{'\\n'}</Text> \n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>UOM</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>PO Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Received Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>Received Date</Text>\n              </TableCell>\n              \n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Remaining Qty</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemuom}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.poqty}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receivedqty}</Text>} />\n            <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receiptDate}</Text>} />\n                \n                <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.availqty}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             Authorised : Yes {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspection Required : Yes {'\\n'}\n             \n            </Text>\n          </View>\n          <Text>{'\\n'}</Text> \n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             EDP Prepared by {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Store incharge {'\\n'}\n             \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspected By {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Manager {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Accounts Department {'\\n'}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\n//import './ViewOrder';\n\nclass ViewReceiptPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    let data = JSON.parse(sessionStorage.getItem(\"Receipt\"))\n    let receipts = JSON.parse(sessionStorage.getItem(\"SelectedItem\"))\n    receipts.map((item)=>{\n      for(var j=0;j<data.itemlist.length;j++){\n        if( data.itemlist[j].itemid.masteritemname == item.itemname){\n          data.itemlist[j]['TotalRecQty'] = item.recevingqty;break\n        }\n      }\n    })\n    let poreceiptvalues = {}\n    poreceiptvalues['ponumber'] = data['ponumber']\n    poreceiptvalues['receiptnumber'] = data['receiptnumber']\n    console.log(data.itemlist)\n    poreceiptvalues['addeditemlist'] = data.itemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemid.masteritemdescription ? itemlist.itemid.masteritemdescription : '',\n          itemcode: itemlist.itemid.masteritemname ? itemlist.itemid.masteritemname : '',\n          itemuom: itemlist.itemuom.uomname ? itemlist.itemuom.uomname : '',\n          poqty: itemlist.itemquantity ? itemlist.itemquantity.toString() : '',\n          receivedqty: itemlist.recevingqty ? itemlist.recevingqty.toString() : '',\n          receiptDate:  itemlist.date ? new Date(itemlist.date).getDate() + \"/\" + (new Date(itemlist.date).getMonth() + 1) + \"/\" + new Date(itemlist.date).getFullYear() : '',\n          availqty: itemlist.TotalRecQty ? itemlist.TotalRecQty : 0\n        };\n      }\n    );\n\n    setTimeout(() => {\n      this.setState({\n        orderlistvalues : poreceiptvalues,\n        status: true\n      },()=>{\n        console.log(this.state.orderlistvalues)\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 6000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/receipt_screen');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n           {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )} \n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps\n)(ViewReceiptPdf);\n","import axios from 'axios';\n\nexport default {\n  moveorder: {\n    addmoveorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/moveorder/addmoveorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.moveorderdata;\n        });\n    },\n    getmoveorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n        .then(res => {\n          return res.data.moveorderlist;\n        });\n    },\n    getItemsMoveOrder: (id) => {\n      return axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getItemsMoveOrder/`+id)\n      .then(res => {\n        return res.data.itemlist;\n      });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/moveorderapi';\nimport { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\nimport { moveorderListSchema } from '../Schemas/schemas';\n\nconst moveorderCreated = moverorderlist => {\n  return {\n    type: ADD_MOVEORDER,\n    moverorderlist\n  };\n};\n\nconst moveorderFetched = moverorderlist => {\n  return {\n    type: MOVEORDER_FETCHED,\n    moverorderlist\n  };\n};\n\nexport const addMoveOrder = data => {\n  return dispatch => {\n    return api.moveorder.addmoveorder(data).then(moverorderlistvalues => {\n      return dispatch(\n        moveorderCreated(normalize(moverorderlistvalues, moveorderListSchema))\n      );\n    });\n  };\n};\n\nexport const getMoveOrder = () => {\n  return dispatch => {\n    return api.moveorder.getmoveorder().then(moverorderlist => {\n      console.log(moverorderlist);\n      const moverorderlistvalues = moverorderlist.moveorderdata;\n      console.log(moverorderlistvalues);\n      return dispatch(\n        moveorderFetched(normalize(moverorderlistvalues, [moveorderListSchema]))\n      );\n    });\n  };\n};\n\nexport const getItemsMoveOrder = (id) => {\n    return api.moveorder.getItemsMoveOrder(id).then(itemorderlist => {\n      console.log(itemorderlist);\n      const itemorderlistvalues = itemorderlist.itemdata;\n      console.log(itemorderlistvalues);\n      return itemorderlistvalues;\n    });\n}\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass MoveOrderScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        availableQuantity: [null],\n        totalcost: [null],\n        remarks: [null]\n      },\n      moveorderno: '1',\n      fromaddress: '',\n      toaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const moveorderlistvalues = Object.keys(this.props.moveorderlistvalues);\n    const moveorderno =\n      moveorderlistvalues.length > 0 ? 1 + moveorderlistvalues.length : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        moveorderno\n      }\n    },()=>{\n      if(moveorderlistvalues.length == 0)\n        this.getMovedata()\n    });\n  }\n\n  getMovedata(){\n    if(Object.keys(this.props.moveorderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n      .then(res => {\n         //if (res.data.moveorderlist.moveorderdata.length > 0) {\n           \n          let moveorderno =\n          res.data.moveorderlist.moveorderdata.length > 0 ? 1 + res.data.moveorderlist.moveorderdata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              moveorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    console.log(this.state.masteritemlistvalues)\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      let itemdesc = ''\n      this.state.masteritemlistvalues.map((item) =>{\n        if(item.masteritemtypename == selected_item.itemname)\n          itemdesc = item.masteritemshortdescription != '' ? item.masteritemshortdescription : item.masteritemdescription\n       })\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc;\n  \n      // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n      // : selected_item.masteritemshortdescription\n      // selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      // selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      // selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n      // selectedItemlist.itemlocation[index] = null;\n      // selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      selectedItemlist.quantity[index] = selected_item.itemquantity;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity;\n      // selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(\n      item => item.id !== e.target.value\n    );\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n      const itemlist = data.itemlist.map(item => {\n        return {\n          id: item.id,\n          locationname: item.locationname,\n          itemid:item.itemid,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'itemname')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          availableQuantity: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n    \n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    availableQuantity.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          availableQuantity,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n\n   \n \n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    if(Number(e.target.value) > selectedItemlist.availableQuantity[index]){\n      window.alert('Move quantity cannot be greater than available quantity')\n      console.log(this.state.data.selectedItemlist.quantity)\n      selectedItemlist.quantity[index] = '0'\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n    else{\n      selectedItemlist.quantity[index] = e.target.value;\n      const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n      this.totalValue();\n    }\n\n\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>Order moved successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Move Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='moveorderno'>Move Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='moveorderno'\n                      type='text'\n                      id='moveorderno'\n                      value={data.moveorderno || null}\n                      onChange={this.handleChange}\n    \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Move Order No'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>From location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To location </Label>\n                    <AvField\n                      type='select'\n                      name='toaddress'\n                      onChange={this.onhandlerToChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createToLocationList()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Name</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Available quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                disabled='true'\n                                value={\n                                  data.selectedItemlist.availableQuantity[\n                                    index\n                                  ]\n                                }\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`movequantity${index}`}>\n                                Move quantity\n                              </Label>\n                              <AvField\n                                name={`movequantity${index}`}\n                                type='number'\n                                id={`movequantity${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.quantity[\n                                    index\n                                  ]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { totalitemvaluesearch }\n)(MoveOrderScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport MoveOrderScreenForm from './MoveOrderScreenForm/MoveOrderScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\n\nclass MoveOrderScreen extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addMoveOrder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Move</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <MoveOrderScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList\n  }\n)(MoveOrderScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getMoveOrder } from '../../../../actions/moveorder';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewProduction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    moveorderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getMoveOrder();\n    // console.log(this.props);\n    // if (this.props.moveorderlistvalues) {\n    //   const quotationlist = Object.values(this.props.moveorderlistvalues);\n    //   const moveorderlistvalues = quotationlist.map(quotationvalue => {\n    //     return {\n    //       moveorderno: quotationvalue.moveorderno,\n    //       fromaddress: quotationvalue.fromaddress,\n    //       toaddress: quotationvalue.toaddress\n    //     };\n    //   });\n    //   this.setState({ ...this.state, moveorderlistvalues });\n    //   this.dataHandler(false);\n    // }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.moveorderlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\n    });\n    const moveorderlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        moveorderno: quotationvalue.moveorderno,\n        fromaddress: quotationvalue.fromaddress,\n        toaddress: quotationvalue.toaddress,\n        view: (\n          <Button\n          color=\"primary\"\n          onClick={() => {\n            let path = `/view_ItemsOrder/${quotationvalue._id}`;\n            this.props.history.push(path);\n          }}\n        >\n          View Items\n        </Button>\n        )\n      };\n    });\n    this.setState({ ...this.state, moveorderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_invoicepdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, moveorderlistvalues } = this.state;\n    console.log(moveorderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Move Order No',\n        field: 'moveorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'From Address',\n        field: 'fromaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'To Address',\n        field: 'toaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'view',\n        width: 100,\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={moveorderlistvalues}\n            columnvalue={columnvalue}\n            className=\"moveorderlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMoveOrder }\n)(ViewProduction);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItemsMoveOrder } from '../../../../actions/moveorder';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewMoveOrderProduction extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    itemorderlistvalues: []\r\n  };\r\n  async componentDidMount() {\r\n    const moveorderid = this.props.match.params.id;\r\n    let receivedData = await getItemsMoveOrder(moveorderid);\r\n    console.log(\"itemorder list values\", receivedData);\r\n    let quotationlist = Object.values(receivedData);\r\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\r\n    quotationlist.sort(function(a, b){\r\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\r\n    });\r\n    const itemorderlistvalues = quotationlist.map(quotationvalue => {\r\n      return {\r\n        itemname: quotationvalue.itemname,\r\n        itemdescription: quotationvalue.itemdescription,\r\n        quantity: quotationvalue.quantity\r\n      };\r\n    });\r\n    this.setState({ ...this.state, itemorderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n  async componentWillReceiveProps(props) {\r\n    const moveorderid = this.props.match.params.id;\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_invoicepdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, itemorderlistvalues } = this.state;\r\n    console.log(itemorderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Item Name',\r\n        field: 'itemname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Item Description',\r\n        field: 'itemdescription',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'quantity',\r\n        field: 'quantity',\r\n        sort: 'asc',\r\n        width: 40\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/move-order'>Move Order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/moveorderlist'>Move Order List</Link>\r\n          </BreadcrumbItem>          \r\n          <BreadcrumbItem active>Items</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable\r\n            rowvalues={itemorderlistvalues}\r\n            columnvalue={columnvalue}\r\n            className=\"moveorderlist\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    moveorderlistvalues: state.moveorderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getItemsMoveOrder }\r\n)(ViewMoveOrderProduction);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch, getMasterItemList } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass AddOnHandScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemlocation: [null],\n        quantity: [null],\n        availableQuantity: [null],\n      },\n      fromaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false,\n    masterItemList: []\n  };\n\n  componentDidMount() {\n    // this.props.getLocationList();\n    this.props.getMasterItemList().then((result) => {\n      console.log('result..............................');\n      console.log(result);\n\n      let items = [];\n      //MasterItemTypeList.entities.masteritemtypelistvalues\n      for (let key in result.MasterItemTypeList.result) {\n        const data = result.MasterItemTypeList.entities.masteritemtypelistvalues[result.MasterItemTypeList.result[key]];\n        console.log(data);\n        items.push({\n          id: data['id'],\n          itemid: data['id'],\n          itemname: data['masteritemtypename'],\n          itemdescription: data['masteritemshortdescription'] != '' ? data['masteritemshortdescription'] : data['masteritemdescription'],\n          quantity: 0,\n          availableQuantity: 0\n        });\n      }\n\n      console.log('UUUUUUUUUUUUUUUUUUUUUUUU');\n      console.log(items);\n      this.setState({\n        masterItemList: items\n      });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data\n      }\n    }, () => {\n\n    });\n  }\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      console.log(this.state.masterItemList)\n      let itemdesc = ''\n      this.state.masterItemList.map((item) =>{\n        if(item.itemname == selected_item.itemname)\n          itemdesc = item.itemdescription\n      })\n\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc != '' ? itemdesc : selected_item.itemdescription;\n      selectedItemlist.quantity[index] = selected_item.itemquantity || 0;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity || 0;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(item => item.id !== e.target.value);\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    let location = e.target.value;\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n\n\n      const isAdded = [];\n      const itemlist = [];\n      data.itemlist.forEach(item => {\n        if (item['itemname']) {\n          itemlist.push({\n            id: item.id,\n            locationname: item.locationname,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n\n      itemlist.forEach(data => {\n        if (data['itemname']) {\n          isAdded.push(data['itemname'])\n        }\n      });\n\n      console.log('Before Adding Remaining');\n      console.log(itemlist);\n\n      const allItems = this.state.masterItemList;\n      allItems.forEach((item, index) => {\n        if (!(isAdded.indexOf(item.itemname) > -1)) {\n          itemlist.push({\n            id: item.id,\n            locationname: location,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n      console.log('After Adding Remaining');\n      console.log(itemlist);\n\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    console.log('###################################');\n    console.log(masteritemlistvalues);\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues, 'itemname');\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues = masteritemlistvalues.sort((a,b)=>{return a['itemname'].toLowerCase().localeCompare(b['itemname'].toLowerCase())})\n    \n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          availableQuantity: [...this.state.data.selectedItemlist.quantity, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemlocation.splice(index, 1);\n    quantity.splice(index, 1);\n    availableQuantity.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemlocation,\n          availableQuantity,\n          quantity\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n\n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    selectedItemlist.quantity[index] = e.target.value;\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let iteminfo = [];\n    const { supplierdetail, selectedItemlist, fromaddress } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    // const itemlocation = selectedItemlist.itemlocation;\n    const quantity = selectedItemlist.quantity;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemid = id[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemlocation = fromaddress;//itemlocation[i] || null;\n      obj.recevingqty = quantity[i] || null;\n      iteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['iteminfo'] = iteminfo;\n    this.setState({ loading: true });\n    // console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            selectedItemlist: {\n              id: [null],\n              itemname: [null],\n              itemdescription: [null],\n              itemlocation: [null],\n              quantity: [null],\n              availableQuantity: [null],\n            },\n            fromaddress: '',\n            values: ['']\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>On Hand Updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>On Hand</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>Select location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={data.selectedItemlist.availableQuantity[index]}\n                                disabled={true}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`newquantity${index}`}>\n                                New Quantity\n                              </Label>\n                              <AvField\n                                name={`newquantity${index}`}\n                                type='number'\n                                id={`newquantity${index}`}\n                                value={data.selectedItemlist.quantity[index]}\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    totalitemvaluesearch,\n    // getLocationList,\n    getMasterItemList\n  }\n)(AddOnHandScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport AddOnHandScreenForm from './AddOnHandScreenForm/AddOnHandScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\nimport { additemsinlocation } from '../../../actions/Transaction';\n\nclass AddOnHand extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .additemsinlocation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add On Hand</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddOnHandScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList,\n    additemsinlocation\n  }\n)(AddOnHand);","import axios from 'axios';\n\nexport default {\n  production: {\n    addproduction: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/production/addproduction`, {\n          data\n        })\n        .then(res => {\n          return res.data.productiondata;\n        });\n    },\n    getproduction: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n        .then(res => {\n          return res.data.productionlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/productionapi';\nimport { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\nimport { productionListSchema } from '../Schemas/schemas';\n\nconst productionCreated = productionlist => {\n  return {\n    type: ADD_PRODUCTION,\n    productionlist\n  };\n};\n\nconst productionFetched = productionlist => {\n  return {\n    type: PRODUCTION_FETCHED,\n    productionlist\n  };\n};\n\nexport const addproduction = data => {\n  return dispatch => {\n    return api.production.addproduction(data).then(productionlistvalues => {\n      return dispatch(\n        productionCreated(normalize(productionlistvalues, productionListSchema))\n      );\n    });\n  };\n};\n\nexport const getproduction = () => {\n  return dispatch => {\n    return api.production.getproduction().then(productionlist => {\n      const productionlistvalues = productionlist.productiondata;\n      console.log(productionlistvalues);\n      return dispatch(\n        productionFetched(\n          normalize(productionlistvalues, [productionListSchema])\n        )\n      );\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass ProductionForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        totalcost: [null],\n        remarks: [null],\n        totalweight: [null],\n        readystock: [null],\n        firstround: [null],\n        secondround: [null],\n        thirdround: [null]\n      },\n      products: [],\n      productionorderno: '',\n      customerid: '',\n      item: '',\n      date: new Date(),\n      quantity: '',\n      subAssembly: [],\n      values: ['']\n    },\n    errors: {},\n    itemname:'',\n    materialoptionlistvalues: [],\n    productMaterial: [],\n    customerlistvalues: [],\n    productlistvalues: [],\n    supplierdetaillistvalue: [],\n    itemlistSelectedOption: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    customerlistSelect: [],\n    loading: false,\n    success: false\n  };\n  dummyProductMapping = {\n    props: [\n      { assembly: '50 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '40 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '6 mm MS Plate', unit: 'Kgs' },\n      { assembly: 'Prop nut', unit: 'Kgs' }\n    ]\n  };\n\n \n\n  componentWillReceiveProps(props) {\n   \n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    console.log(productlistvalues)\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const productionlistvalues = Object.keys(this.props.productionlistvalues);\n    const productionorderno =\n      productionlistvalues.length > 0\n        ? 1 + productionlistvalues.length\n        : 1;\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      customerlistvalues,\n      productlistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      customerlistSelect: arraySet,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        productionorderno\n      }\n    },()=>{\n      if(productionlistvalues.length == 0)\n        this.getProddata()\n    });\n  }\n\n  getProddata(){\n    if(Object.keys(this.props.productionlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n      .then(res => {\n         //if (res.data.productionlist.productiondata.length > 0) {\n           \n          let productionorderno =\n          res.data.productionlist.productiondata.length > 0 ? 1 + res.data.productionlist.productiondata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              productionorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChangeCust = (e,index) => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, customerid:  e.value}\n    });\n  }\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let products2 = this.state.data.products;\n    console.log(products2[index].quantity)\n\n    let item = e.label;\n    console.log(item)\n    const selected_id = e.value ? e.value : e;\n    console.log(selected_id)\n    let productMaterial2 = [],found=0;\n    let obj = {},arr = []\n    productMaterial2.push(this.props.masteritemlistvalues[selected_id])\n    let itemname = productMaterial2[0].masteritemtypename\n    console.log(productMaterial2)\n \n    for(var i=0;i<this.state.productlistvalues.length;i++){\n      if(this.state.productlistvalues[i].productname.toString().trim().toLowerCase() == productMaterial2[0].masteritemdescription.toString().trim().toLowerCase()){\n        found = 1;\n        break;\n      }\n    }\n    if(found == 1){\n      if(this.state.productlistvalues[i].productMaterial != null && this.state.productlistvalues[i].productMaterial.length > 0){\n        this.state.productlistvalues[i].productMaterial.map((item,index) =>{\n          console.log(item)\n          obj = {}\n          obj['masteritemdescription'] = item.productqty\n          obj['masteritemuom'] = new Object()\n          obj['permeter'] = this.state.productlistvalues[i].permeter\n          obj['perfeet'] = this.state.productlistvalues[i].perfeet\n          obj['perinch'] = this.state.productlistvalues[i].perinch\n          obj['quantityPerMeter'] = this.state.productlistvalues[i].productsqtyinmeter[index] ? this.state.productlistvalues[i].productsqtyinmeter[index] : 0\n          obj['quantityPerKg'] = this.state.productlistvalues[i].productsweight[index] ? this.state.productlistvalues[i].productsweight[index] : 0\n          obj['masteritemuom']['uomname'] =  this.state.productlistvalues[i].productsuom[index]\n          arr.push(obj)\n        })\n      }\n      productMaterial2 = arr\n    }\n    console.log(arr)\n    let subAssembly = [];\n    console.log(productMaterial2)\n    let calculationArray = [];\n    productMaterial2.map(product => {\n\n      let calculationdata = { permeter: null, perfeet: null, perinch: null };\n      product.quantityPerMeter = parseInt(product.quantityPerMeter)\n      product.quantityPerKg = parseInt(product.quantityPerKg)\n      product.quantityPerMeter = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) : product.quantityPerMeter\n      product.quantityPerKg = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) * product.quantityPerKg : product.quantityPerMeter * product.quantityPerKg\n\n      subAssembly.push({\n        name: product.masteritemdescription,\n        unit: product.masteritemuom.uomname,\n        thickness: 0,\n        quantity: 0,\n        quantityPerMeter:product.quantityPerMeter,\n        quantityPerKg: product.quantityPerKg,\n        total: 0\n      });\n      if (product.permeter && product.permeter !== null) {\n        calculationdata.permeter = Number(product.permeter);\n      }\n\n      if (product.perfeet && product.perfeet !== null) {\n        calculationdata.perfeet = Number(product.perfeet);\n      }\n\n      if (product.perinch && product.perinch !== null) {\n        calculationdata.perinch = Number(product.perinch);\n      }\n      calculationArray.push(calculationdata);\n    });\n    console.log(this.state.data.products)\n    let products = this.state.data.products;\n    products[index].subAssembly = subAssembly;\n    products[index].item = item;\n    products[index].calculationArray = calculationArray;\n    console.log(\"item selected is \",item);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, item, subAssembly, products },\n      itemname: 'Item code: ' + '\\n' + itemname,\n      productMaterial2\n    });\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    let productlistvalues = this.state.masteritemlistvalues;\n    console.log(productlistvalues)\n    productlistvalues = productlistvalues.filter((item) =>{\n      return item.masteritemtype.masteritemtypename == 'FinishedGoods'\n    })\n    productlistvalues.map((option, i) => {\n     option['masteritemdescription2'] = option.masteritemshortdescription != '' ?  option.masteritemshortdescription : option.masteritemdescription\n      \n     items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            products: [],\n            subAssembly: []\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggelreload = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  onthicknessChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['thickness'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onQuantityChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantity'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // METER\n  onQuantityChangeMeter = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerMeter'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) / Number(calc.permeter);\n      subAssembly[index]['quantityPerKg'] = kg;\n    }\n\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // KG\n  onQuantityChangeKg = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerKg'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) * Number(calc.permeter);\n      subAssembly[index]['quantityPerMeter'] = kg;\n    }\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onTotalChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['total'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  addItemComp = () => {\n    let products = this.state.data.products;\n    let items = { item: '', quantity: 0, subAssembly: [] };\n    products.push(items);\n    this.setState({\n      ...this.state.data,\n      products\n    });\n  };\n  changeQuantity = (e, index) => {\n    let products = this.state.data.products;\n    products[index].quantity = e.target.value;\n    console.log(products[index])\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, productMaterial,itemname } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Production</ModalHeader>\n              <ModalBody>Production order is generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggelreload}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>\n              Production\n              <Button\n                color='primary'\n                disabled={loading}\n                className='lgn-loader'\n                style={{ float: 'right' }}\n              >\n                Submit\n                {/* {loading} */}\n              </Button>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='productionorderno'>Production No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='productionorderno'\n                      type='text'\n                      id='productionorderno'\n                      value={data.productionorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter production order no'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customerid'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      type='select'\n                      name={`customerid`}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    <Select name={`customerid`} classNamePrefix=\"select\" onChange={this.handleChangeCust.bind(this)} styles={customStyles} defaultValue={this.state.customerlistSelect[0]} options={this.state.customerlistSelect} />\n                  </AvGroup>\n                </Col>\n              </Row>\n              {data.products &&\n                data.products.map((item, maninindex) => {\n                  let optionsel = \"\";\n                  let SelVal = {};\n                  if(item.id != undefined) {\n                    if(item.itemshortdescription) {\n                      optionsel = item.itemshortdescription;\n                    }\n                    else {\n                      optionsel = item.itemdescription;\n                    }\n                    SelVal = {\n                      value: item.id._id, label: optionsel\n                    }\n                  }\n                  const itemnameinfo = item.id != undefined ? (\n                    // <AvField\n                    //   type=\"select\"\n                    //   value={values.id._id}\n                    //   name={`selectitem${index}`}\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${maninindex}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, maninindex)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                    ) :\n                    (\n                      // <AvField\n                      //   type=\"select\"\n                      //   name={`selectitem${index}`}\n                      //   value={\n                      //     data.selectedItemlist.id[index]\n                      //   }\n                      //   onChange={e => this.selectitemchange(e, index)}\n                      //   required={true}\n                      // >\n                      //   <option value=\"\">select Item</option>\n                      //   {this.createSelectItems()}\n                      // </AvField>\n                      <Select name={`selectitem${maninindex}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, maninindex)} styles={customStyles} required defaultValue={data.selectedItemlist.id[maninindex]} options={this.state.itemlistSelectedOption} />\n                    )\n                  return (\n                    <div>\n                      <Row>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='item'>Item</Label>\n                          {/* <AvField\n                            type='select'\n                            name='item'\n                          \n                            onChange={e => this.selectitemchange(e, maninindex)}\n                            //required={true}\n                          >\n                            <option value=''>select Item</option>\n                            {this.createSelectItems()}\n                          </AvField> */}\n                          {itemnameinfo}\n                          <div style={{'color':'#707070','fontSize':'12px','fontWeight':'bold'}}>{itemname}</div>\n                        </Col>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='quantity'>Quantity</Label>\n                          <AvField\n                            name='quantity'\n                            type='number'\n                            id='quantity'\n                            value={data.quantity || ' ' || null}\n                            onChange={e => this.changeQuantity(e, maninindex)}\n                          />\n                        </Col>\n                      </Row>\n                      {/* Get table based on selected value */}\n                      {data.products[maninindex].subAssembly.length > 0 && (\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>Sub Assembly</th>\n                              <th>UOM</th>\n                              <th>Thickness</th>\n                              <th>Quantity (in meters)</th>\n                              <th>Quantity (in Kgs)</th>\n                              {/* <th>Total</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data.products[maninindex].subAssembly.map(\n                              (product, index) => {\n                                return (\n                                  <tr>\n                                    <td>{product.name}</td>\n                                    <td>{product.unit}</td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`thickness${index}`}\n                                          type='number'\n                                          id={`thickness${index}`}\n                                          placeholder='thickness'\n                                          onChange={e =>\n                                            this.onthicknessChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In meterts'\n                                          onChange={e =>\n                                            this.onQuantityChangeMeter(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerMeter}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In Kgs'\n                                          onChange={e =>\n                                            this.onQuantityChangeKg(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerKg}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    {/* <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`total${index}`}\n                                          type='number'\n                                          id={`total${index}`}\n                                          placeholder='total'\n                                          onChange={e =>\n                                            this.onTotalChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td> */}\n                                  </tr>\n                                );\n                              }\n                            )}\n                          </tbody>\n                        </Table>\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                    onClick={e => this.addItemComp()}\n                  >\n                    Add item\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    productionlistvalues: state.productionlistvalues,\n    customerlistvalues: state.customerlistvalues,\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductionForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addproduction } from '../../../../actions/Production';\nimport { getproduction } from '../../../../actions/Production';\nimport { getproducts } from '../../../../actions/Product';\nimport ProductionForm from './ProductionForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddProduction extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getproduction();\n    this.props.getproducts();\n  }\n  componentWillReceiveProps() {\n    \n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addproduction(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Production</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProductionForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getproduction,\n    getCustomerList,\n    addproduction,\n    getproducts\n  }\n)(AddProduction);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Modal,\n  Label,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproduction } from '../../../../actions/Production';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nclass ViewProudction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success: false,\n    quantity : '',\n    productiondate:'',\n    description:'',\n    id:'',\n    qtyAvaillength:0,\n    isViewList:false,\n    productionTodayList: [],\n    productionlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getproduction();\n    console.log(this.props);\n\n    if (this.props.productionlistvalues) {\n      let quotationlist = Object.values(this.props.productionlistvalues);\n      //quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n      quotationlist.sort(function(a, b){\n        return parseInt(b.productionorderno) - parseInt(a.productionorderno);\n      });\n      let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            obj['items'].push(subitem.item)\n          })\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n        \n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n          \n        };\n      });\n      this.setState({ ...this.state, productionlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.productionlistvalues);\n    quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n    let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            if(parseInt(subitem.quantity) > 0)\n              obj['items'].push(subitem.item)\n\n          })\n        }\n        if(obj['items'].length > 0){\n          obj['items'] = obj['items'].join(\", \")\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n\n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n        };\n      });\n    this.setState({ ...this.state, productionlistvalues });\n    this.dataHandler(false);\n  }\n\n  viewTransaction(arr){\n    this.setState({\n      isViewList:true,\n      productionTodayList : arr\n    })\n  }\n  addTransaction(data,totalqty){\n    console.log(data)\n    let usedqty = 0\n    if(data.transactionHistrory && data.transactionHistrory.length > 0){\n      data.transactionHistrory.map((item) =>{\n        usedqty = usedqty + parseInt(item.qty)\n      })\n    }\n    this.setState({success:true,id:data._id,quantity:'',productiondate:'',description:'',qtyAvaillength: totalqty - usedqty},() =>{\n      console.log(this.state.qtyAvaillength)\n    })\n  }\n\n  updateTransaction = () => {\n    // updateproductionqty\n    if(this.state.quantity == '' || this.state.productiondate == ''){\n      window.alert('All fields are manditory.')\n      return\n    }\n    if(parseInt(this.state.quantity) > this.state.qtyAvaillength){\n      window.alert('Quantity should be less than or equal to : ' + this.state.qtyAvaillength)\n      return\n    }\n    console.log(this.state.id)\n    let data = {}\n    data['_id'] = this.state.id\n    data['transactionHistrory'] = [{'qty' : this.state.quantity,\n              'productiondate' : this.state.productiondate,\n              'description' : this.state.description}]\n\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/production/updateproductionqty`, {\n      data\n      })\n      .then(res => {\n          this.toggle();\n          this.props.getproduction();\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggle2 = () => {\n    this.setState({ ...this.state, isViewList: false });\n  };\n  \n  onhandlerChange = e => { \n    this.setState({\n      quantity : e.target.value\n    });\n  };\n\n  onhandlerChange2 = e => { \n    this.setState({\n      description : e.target.value\n    });\n  };\n\n  \n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      productiondate : date\n    });\n  };\n\n  render() {\n    const { loading, count, isViewList,productionlistvalues,success,quantity,productiondate,description,qtyAvaillength,productionTodayList } = this.state;\n    console.log(\"productionlistvalues is \",productionlistvalues);\n    let headerBlock = '',contentBlock = ''\n    if(isViewList){\n      headerBlock = \n      (\n      <div className=\"row meetingspace\">\n        <div className=\"col split1\">Quantity</div>\n        <div className=\"col split1\">Date</div>\n        <div className=\"col split1\">Remarks</div>\n      </div>\n    )\n\n\n    contentBlock = productionTodayList.map((value,index) => {\n    value['description'] = value.description ? value.description : '-'\n    value.productiondate = \n    (new Date(value.productiondate).getDate() < 10 ? ('0' + new Date(value.productiondate).getDate()) : new Date(value.productiondate).getDate()) + '/' +\n    (new Date(value.productiondate).getMonth()+1 < 10 ? ('0' + (new Date(value.productiondate).getMonth()+1) ) : (new Date(value.productiondate).getMonth()+1)) + '/' + new Date(value.productiondate).getFullYear()\n    return (\n      <div key={index} className=\"row meetingspace\">\n        <div className=\"col split2\">{value.qty}</div>\n        <div className=\"col split2\" >{value.productiondate}</div>\n        <div className=\"col split2\" >{value.description}</div>\n\n      </div>\n    )\n  });\n\n  }\n\n\n\n\n    const columnvalue = [\n      {\n        label: 'Production no',\n        field: 'productionorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'item',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Quantity',\n        field: 'quantity',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: \"View Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      },\n      {\n        label: \"Add Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n\n         {!!isViewList ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={isViewList}\n              toggle={this.toggle2}\n              className={this.props.className}\n            >\n              <ModalHeader toggle2={this.toggle2}>View transaction <br/>\n              \n              </ModalHeader>\n              <ModalBody style={{'margin': '10px'}}>\n                {headerBlock}\n                {contentBlock}\n               \n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle2}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Add transaction <br/>\n              <span style={{ 'fontSize': '14px','fontWeight': 'bold'}}>Note: Available quantity is {qtyAvaillength}</span>\n              </ModalHeader>\n              <ModalBody>\n                \n                 <Label className='small-font-size' for=\"Quantity\">Quantity(*)</Label>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Quantity\" name=\"Quantity\" value={quantity} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n                 \n                  <Label className='small-font-size' for=\"productiondate\">Production Date(*)</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={productiondate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"productiondate\"\n                  />\n\n                 <Label className='small-font-size' for=\"description\">Remarks</Label>\n                  <textarea className=\"form-control\" placeholder=\"Remarks\" name=\"description\" value={description} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange2} ></textarea>\n                 \n\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.updateTransaction}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={productionlistvalues}\n            columnvalue={columnvalue}\n            className=\"productionlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productionlistvalues: state.productionlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproduction }\n)(ViewProudction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./purchaseorder.css\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass PurchaseOrderForm extends React.Component {\n  \n  state = {\n    data: {\n      isEditdone:false,\n      supplierdetail: {\n        id: null,\n        suppliernumber: \"\",\n        suppliername: \"\",\n        supplieraddress1: \"\",\n        supplieraddress2: \"\",\n        suppliercontactlistvalue: [],\n        city: \"\",\n        pincode: \"\",\n        state: \"\",\n        country: \"\",\n        suppliergstnumber: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      ponumber: \"\",\n      refno: \"\",\n      subject: \"\",\n      requestdeliverydate: \"\",\n      suppliercontactid: \"\",\n      values: [\"\"],\n      quotationno: null,\n      currency: \"5d3437e21c9d4400008624b7\",\n      totalvalue: null,\n      gst: null,\n      cgst:'',\n      sgst:'',\n      igst:'',\n      scheduledays:'',\n      schedulepayment:''\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:''\n   \n  };\n  \n  componentDidMount(){\n    console.log( Object.keys(this.props.purchaseorderlistvalues))\n    if(this.props.ID != undefined){\n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const supplierdetaillistvalue = Object.values(\n        this.props.supplierdetaillistvalue\n      );\n      const supplierdetaillistvalueobject = this.props.supplierdetaillistvalue;\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n\n      let newArraySet = [];\n      masteritemlistvalues.map((option, i) => {\n        let name = \"\";\n        if(option.masteritemshortdescription) {\n          name = option.masteritemshortdescription;\n        }\n        else {\n          name = option.masteritemdescription;\n        }\n        let objset = {\n          value: option.id, label: name\n        }\n        newArraySet.push(objset);\n      });\n  \n\n      this.setState({\n        ...this.state,\n        supplierdetaillistvalue,\n        supplierdetaillistvalueobject,\n        masteritemlistvalues,\n        itemlistSelectedOption: newArraySet,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      },()=>{\n        this.getPODetails(this.props.ID)\n      });\n    }\n    else{\n      \n\n      if(Object.keys(this.props.purchaseorderlistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder//getpurchaseorderrlist`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n     \n            const purchaseorderlistlength =\n\n            res.data.purchaseorderlist.purchaseorderlistdata.length > 0 ? res.data.purchaseorderlist.purchaseorderlistdata.length : 0;\n      \n            let ponumber = (1 + purchaseorderlistlength).toString();\n       \n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                ponumber\n              }\n            });\n          \n            \n          }\n        \n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n    }\n\n  }\n\n  getPODetails(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorder/${id}`)\n    .then(res => {\n\n      this.dataHandler(false)\n      if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n        let founddata = res.data.purchaseorderlist.purchaseorderlistdata;\n        let podetail = {...this.state.data}\n \n         podetail.supplierdetail.suppliername = founddata[0].suppliername;\n         podetail.supplierdetail.supplierid = founddata[0].supplierid;\n        \n        const newState = Object.assign({}, this.state);\n        newState.data.ponumber = founddata[0].ponumber;\n        newState.data.refno = founddata[0].referenceno;\n        newState.data.values = founddata[0].addeditemlist;\n        newState.data.subject = founddata[0].subject;\n        newState.data.requestdeliverydate = new Date(founddata[0].requestdeliverydate);\n        newState.data.currency = founddata[0].currencyid;\n        newState.data.totalvalue =  founddata[0].totalvalue;\n        newState.data.gst = '0';\n        newState.data.cgst = founddata[0].cgst;\n        newState.data.sgst = founddata[0].sgst;\n        newState.data.igst = founddata[0].igst;\n        newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n        newState.data.schedulepayment = founddata[0].schedulepayment ? founddata[0].schedulepayment : \"\";\n        \n        newState.data.suppliercontactid = founddata[0].suppliercontactid;\n        if(founddata[0].addeditemlist.length > 0){\n          \n          for(var i=0;i<founddata[0].addeditemlist.length;i++){\n            newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n            newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom)\n            newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n            newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n            newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n            newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n            newState.data.selectedItemlist.itemlocation.push(founddata[0].addeditemlist[i].itemlocation)\n          }\n        }\n\n\n        this.setState(newState);\n      \n        console.log(this.state)\n      }\n      else{\n        this.setState({count:0})\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    \n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const purchaseorderlistlength =\n      purchaseorderlist.length > 0 ? purchaseorderlist.length : 0;\n\n    let ponumber = (1 + purchaseorderlistlength).toString();\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n    if(this.props.ID != undefined){\n      ponumber = this.state.data.ponumber\n    }\n    this.setState({\n      ...this.state,\n      supplierdetaillistvalue,\n      supplierdetaillistvalueobject,\n      masteritemlistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        ponumber\n      }\n    });\n\n    if(this.state.data.supplierdetail.supplierid && this.state.data.supplierdetail.supplierid != '' && this.props.ID != undefined && !this.state.isEditdone){\n        this.setState({isEditdone:true},()=>{\n          this.handleChange2(this.state.data.supplierdetail.supplierid)\n        })\n    }\n    //console.log(props.supplierdetaillistvalue)\n    \n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    \n    const selected_id = e.target.value;\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        supplierdetail\n      }\n    });\n\n  };\n\n  handleChange2 = e => {\n    const selected_id = e\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    console.log(supplierdetail)\n    \n    if(supplierdetail != undefined){\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          supplierdetail\n        }\n      });\n    }\n \n    \n\n  };\n\n  totalValue = () => {\n    // const { totalcost } = this.state.data.selectedItemlist;\n    // if (totalcost.length > 0) {\n    //   let totalvalue = totalcost\n    //     .map((value, i) => {\n    //       if (value) {\n    //         return parseFloat(value);\n    //       } else {\n    //         return 0;\n    //       }\n    //     })\n    //     .reduce((a, b) => {\n    //       return a + b;\n    //     });\n    //   // Check if tax exists and handle tax  \n    //   let {gst} = this.state.data;\n    //   if(gst !== null) {\n    //     gst = parseFloat(gst).toFixed(2);\n    //   let per = (gst * totalvalue) / 100;\n    //   totalvalue = parseFloat(Number(per)+Number(totalvalue)).toFixed(2);\n    //   }\n    //   this.setState({\n    //     ...this.state.data,\n    //     data: {\n    //       ...this.state.data,\n    //       totalvalue\n    //     }\n    //   });\n    // }\n    this.calculatePercentageAmount()\n  };\n\n\n\n  calculatePercentageAmount = () => {\n\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n\n            // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(totalvalue)\n      ? Number(parseFloat(totalvalue).toFixed(2))\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n      console.log(cgst)\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['totalvalue']: grandtotal\n      }\n    });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        console.log(selected_item)\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        //  selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //                                                                                           : selected_item.masteritemshortdescription\n        selectedItemlist.itemdescription[index] = selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },() =>{\n          this.totalValue();\n        });\n\n      }\n    \n      }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  createSelectSupplier = () => {\n    let items = [];\n    const supplierdetaillistvalue = this.state.supplierdetaillistvalue;\n    supplierdetaillistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.suppliername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      this.totalValue()\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectSupplierContact = () => {\n    let items = [];\n    const suppliercontactlistvalues = this.state.data.supplierdetail\n      .suppliercontactlistvalue;\n    suppliercontactlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option._id}>\n          {option.suppliercontactname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    },()=>{\n      console.log(this.state.data.values)\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    console.log(values)\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    },()=>{\n      this.totalValue()\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || \"\";\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const {\n      values,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      totalvalue,\n      ponumber,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const data = {\n      supplierdetail,\n      AddedIteminfo,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      ponumber,\n      totalvalue,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        \n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order edited successfully' });\n          }\n         \n      \n        \n   \n      })\n      .catch(err => {\n        \n          this.setState({ errors: err.response.data.errors, loading: false });\n        \n        \n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  \n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Purchase Order</ModalHeader>\n              <ModalBody>{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Purchase Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">PO Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"ponumber\"\n                      type=\"number\"\n                      id=\"ponumber\"\n  \n                      value={data.ponumber || null}\n                      onChange={this.onChange}\n                      \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter PO Number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"refno\">Reference No </Label>\n                   \n                    <AvField\n                      name=\"refno\"\n                      type=\"text\"\n                      id=\"refno\"\n                      value={data.refno}\n                      onChange={e => this.onhandlerChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"totalcost\">Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"currency\">Currency</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`currency`}\n                      required={true}\n                      value={data.currency || null}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select currency</option>\n                      {this.createSelectCurrencyItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"quotationno\">Request Delivery Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.requestdeliverydate}\n                    required={true}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"schedulepayment\">Payment Schedule</Label>\n                  <AvField\n                      name=\"schedulepayment\"\n                      type=\"text\"\n                      id=\"schedulepayment\"\n                      value={data.schedulepayment || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                \n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`suppliername`}\n                      value={data.supplierdetail.supplierid}\n                      //required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select supplier name</option>\n                      {this.createSelectSupplier()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliernumber\"\n                      type=\"number\"\n                      readOnly\n                      id=\"suppliernumber\"\n                      value={data.supplierdetail.suppliernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier Number\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GST </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliergstnumber\"\n                      type=\"text\"\n                      readOnly\n                      id=\"suppliergstnumber\"\n                      value={data.supplierdetail.suppliergstnumber}\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier GST Number\"\n                        },\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliercontactinfo\">\n                      Supplier Contact Name\n                    </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      \n                      name={`suppliercontactid`}\n                      value={data.suppliercontactid}\n                      required={true}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select contact</option>\n                      {this.createSelectSupplierContact()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"supplieraddress\">Supplier Address</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"supplieraddress\"\n                      type=\"text\"\n                      id=\"supplieraddress\"\n                      readOnly\n                      value={\n                        data.supplierdetail.supplieraddress1 ||\n                        \"\" + \" \" + data.supplierdetail.supplieraddress2 ||\n                        \"\" + \" \" + data.supplierdetail.city ||\n                        \"\" + \" \" + data.supplierdetail.state ||\n                        \"\" + \" \" + data.supplierdetail.country ||\n                        \"\" + \" \" + data.supplierdetail.pincode ||\n                        \"\"\n                      }\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                  <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>  \n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                \n                    <AvField\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                 \n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"cgst\">CGST(%)</Label>\n                    \n                    <AvField\n                      name=\"cgst\"\n                      type=\"text\"\n                      id=\"cgst\"\n                      value={data.cgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"sgst\">SGST(%)</Label>\n                    \n                    <AvField\n                      name=\"sgst\"\n                      type=\"text\"\n                      id=\"sgst\"\n                      value={data.sgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"igst\">IGST(%)</Label>\n                    \n                    <AvField\n                      name=\"igst\"\n                      type=\"text\"\n                      id=\"igst\"\n                      value={data.igst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className=\"purchaseorder-item-row\">\n                {data.values.map((values, index) => {\n                  \n                  let optionsel = \"\";\n                  let SelVal = {};\n                  if(values.id != undefined) {\n                    if(values.itemshortdescription) {\n                      optionsel = values.itemshortdescription;\n                    }\n                    else {\n                      optionsel = values.itemdescription;\n                    }\n                    SelVal = {\n                      value: values.id._id, label: optionsel\n                    }\n                  }\n                  const itemnameinfo = values.id != undefined ? (\n                    // <AvField\n                    //   type=\"select\"\n                    //   value={values.id._id}\n                    //   name={`selectitem${index}`}\n                    //   onChange={e => this.selectitemchange(e, index)}\n                    //   required={true}\n                    // >\n                    //   <option value=\"\">select Item</option>\n                    //   {this.createSelectItems()}\n                    // </AvField>\n                    <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                    ) :\n                    (\n                      // <AvField\n                      //   type=\"select\"\n                      //   name={`selectitem${index}`}\n                      //   value={\n                      //     data.selectedItemlist.id[index]\n                      //   }\n                      //   onChange={e => this.selectitemchange(e, index)}\n                      //   required={true}\n                      // >\n                      //   <option value=\"\">select Item</option>\n                      //   {this.createSelectItems()}\n                      // </AvField>\n                      <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={values.id} options={this.state.itemlistSelectedOption} />\n                    )\n                  \n        // const itemnameinfo = values.id != undefined ? (   \n        //   <AvField\n        //   type=\"select\"\n        //   value={values.id}\n        //   name={`selectitem${index}`}\n        //   onChange={e => this.selectitemchange(e, index)}\n        //   required={true}\n        // >\n        //   <option value=\"\">select Item</option>\n        //   {this.createSelectItems()}\n        // </AvField>\n  \n        // ) : \n        //   (\n        //        <AvField\n        //        type=\"select\"\n        //        name={`selectitem${index}`}\n        //        value={\n        //         data.selectedItemlist.id[index]\n        //       }\n        //        onChange={e => this.selectitemchange(e, index)}\n        //        required={true}\n        //      >\n        //        <option value=\"\">select Item</option>\n        //        {this.createSelectItems()}\n        //      </AvField>\n             \n        //   )\n\n\n\n                  return (\n                    <div key={index}>\n                      <div className=\"purchaseorder-table\">\n                      \n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for=\"selectitem\">Item Code</Label>\n                              <span className=\"required-label\">*</span>\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type=\"text\"\n                                readOnly\n                                id=\"masteritemdescription\"\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      \"Please enter Item Description\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                style={{ width: \"150px\" }}\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] \n                                }\n                              >\n                                <option value=\"\">select</option>\n                                {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] \n                                }\n                              >\n                                <option value=\"\">uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`location${index}`}>\n                                Delivery Location\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                name={`location${index}`}\n                                onChange={e => this.locationChange(e, index)}\n                                \n                                 value={data.selectedItemlist.itemlocation[index]}\n                              >\n                                <option value=\"\">select location</option>\n                                {this.createSelectLocationItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                name={`costperunit${index}`}\n                                type=\"number\"\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index] \n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage:\n                                      \"Please enter valid costperunit\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type=\"number\"\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: \"Please enter Item Quantity\"\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage: \"Please enter valid quantity\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                name={`totalcost${index}`}\n                                type=\"number\"\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : \" \"\n                                }\n                                onChange={e => this.onChange(e, index)}\n                                // validate={{\n                                //   minLength: {\n                                //     value: 1,\n                                //     errorMessage: \"Total Cost value is required\"\n                                //   }\n                                // }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type=\"button\"\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: \"30px\" }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PurchaseOrderForm);\n","import axios from \"axios\";\n\nexport default {\n  suppliercontact: {\n    addSupplierContact: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/addsuppliercontact`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.supplierContactdata;\n        });\n    },\n    getSupplierContact: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/getsuppliercontact`\n        )\n        .then(res => {\n          return res.data.suppliercontactlist;\n        });\n    }\n  },\n  supplierdetail: {\n    addsupplierdetails: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/addsupplierdetail`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getSupplierDetails: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/getSupplierdetail`\n        )\n        .then(res => {\n          return res.data.supplierdetaillist;\n        });\n    },\n    updateSupplierContact: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/updateSupplierdetail?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/supplierapi\";\nimport { SUPPLIER_CONTACT_LIST, SUPPLIER_DETAIL_LIST } from \"../Services/types\";\nimport {\n  supplierContactListSchema,\n  supplierDetailListSchema\n} from \"../Schemas/schemas\";\n\nexport const suppplierContactListFetched = suppliercontactlistvalue => {\n  return {\n    type: SUPPLIER_CONTACT_LIST,\n    suppliercontactlistvalue\n  };\n};\n\nexport const suppplierDetailListFetched = supplierdetaillistvalue => {\n  return {\n    type: SUPPLIER_DETAIL_LIST,\n    supplierdetaillistvalue\n  };\n};\nexport const addSupplierContact = data => {\n  return dispatch => {\n    return api.suppliercontact.addSupplierContact(data);\n  };\n};\n\nexport const addSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.addsupplierdetails(data);\n  };\n};\n\nexport const getSupplierContact = () => {\n  return dispatch => {\n    return api.suppliercontact\n      .getSupplierContact()\n      .then(suppliercontactlist => {\n        const suppliercontactlistvalue =\n          suppliercontactlist.suppliercontactlistdata;\n        return dispatch(\n          suppplierContactListFetched(\n            normalize(suppliercontactlistvalue, [supplierContactListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const getSupplierDetails = () => {\n  return dispatch => {\n    return api.supplierdetail.getSupplierDetails().then(supplierdetaillist => {\n      const supplierdetaillistvalue = supplierdetaillist.supplierdetaillistdata;\n      return dispatch(\n        suppplierDetailListFetched(\n          normalize(supplierdetaillistvalue, [supplierDetailListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const updateSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.updateSupplierContact(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  currency: {\n    getCurrencyList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/currency/getcurrency`)\n        .then(res => {\n          return res.data.currencylist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/currency\";\nimport { CURRENCY_LIST } from \"../Services/types\";\nimport { currencyListSchema } from \"../Schemas/schemas\";\n\nfunction currencyListFetched(currencylist) {\n  return {\n    type: CURRENCY_LIST,\n    currencylist\n  };\n}\n\nexport const getCurrencyList = () => {\n  return dispatch => {\n    return api.currency.getCurrencyList().then(currencylist => {\n      const currencylistvalue = currencylist.currencydata;\n      return dispatch(\n        currencyListFetched(normalize(currencylistvalue, [currencyListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport PurchaseOrderForm from \"./PurchaseOrderForm/PurchaseOrderForm\";\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  addPurchaseOrder,\n  updatePurchaseOrder,\n  getPurchaseOrder,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport axios from \"axios\";\nclass purchaseOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n    \n    \n  }\n  submit = data => {\n\n    this.dataHandler(true);\n    if(this.props.match.params.id != undefined){\n      \n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatePurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n      \n      // axios\n      // .post(`${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,{\n      //   data\n      // })\n      // .then(res => {\n  \n      //   this.dataHandler(false)\n      //   if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n  \n      //   }\n      //   else{\n      //     this.setState({count:0})\n      //   }\n      // },\n      // error =>{\n      //   this.dataHandler(false)\n      //   this.setState({ success: false, message:'Server error.' });\n      // });\n\n      \n    }\n    else{\n      return this.props\n      .addPurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/view_purchaseorderlist\">Purchase Order</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <PurchaseOrderForm submit={this.submit} ID={ID} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    addPurchaseOrder,\n    updatePurchaseOrder,\n    getPurchaseOrder,\n    getMasterItemTypes\n  }\n)(purchaseOrder);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getPurchaseOrder } from \"../../../actions/Transaction\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\n\nclass ViewPurchaseOrderlist extends React.Component {\n  state = {\n    loading: true,\n    purchaseorderlistvalues: [],\n    count: 0\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  componentDidMount() {\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n\n    this.props.getPurchaseOrder();\n    \n    let purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.supplierstate +\n            \"\" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    // this.dataHandler(false);\n  }\n\n  componentWillReceiveProps(props) {\n    let purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    console.log(purchaseorderlist)\n    //purchaseorderlist= purchaseorderlist.sort((a, b) => b.ponumber.toString().toLowerCase().localeCompare(a.ponumber.toString().toLowerCase()));\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\" style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updatePO(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/view_purchaseorderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updatePO = id => {\n    let path = `/purchase_order_update/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { count, purchaseorderlistvalues, loading } = this.state;\n    const columnvalue = [\n\n      {\n        label: \"PO Number\",\n        field: \"ponumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Reference Number\",\n        field: \"referenceno\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Address\",\n        field: \"address\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Action\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Purchase Order List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {loading ? <CustomLoader /> : null}\n          <div className=\"container mg-20\">\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={purchaseorderlistvalues}\n                className=\"viewpurchaseorder\"\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    getMasterItemTypes,\n    getPurchaseOrder }\n)(ViewPurchaseOrderlist);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport React from 'react';\nimport client from '../../../Images/client.png';\nimport logo from '../../../Images/logo.png';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: '6px',\n    paddingRight: 20,\n    backgroundColor: 'white'\n  },\n  columnSection: {\n    paddingRight: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  padd6: {\n    paddingTop: '6px',\n    paddingBottom: '6px'\n  },\n  padding2: {\n    padding: 5\n  },\n\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: '100%',\n    paddingTop: 20,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  headerwidthNew: {\n    width: 140,\n    padding: 20\n  },\n  headerwidthdate: {\n    fontSize: 12,\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 210,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  fontsize18bold: {\n    fontSize: 10,\n    fontWeight: 900,\n    paddingBottom: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, textAlign: 'left', paddingLeft: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ purchaseorderlistvalue, data_cond }) => {\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n  const ponumber = purchaseorderlistvalue.ponumber.toString();\n  const financialYear = purchaseorderlistvalue.financialyear.toString();\n  const data = purchaseorderlistvalue.addeditemlist;\n  let totaleachitem = 0\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n\n\n\n  let totalrs = purchaseorderlistvalue.totalvalue\n    ? purchaseorderlistvalue.totalvalue\n    : '';\n    RsPaise(totalrs)\n  const tax = purchaseorderlistvalue.cgst ? purchaseorderlistvalue.cgst : '';\n  let cgst = purchaseorderlistvalue.cgst && purchaseorderlistvalue.cgst != '' ? purchaseorderlistvalue.cgst : 0\n  cgst = parseFloat(cgst)\n  let cgstval = parseFloat(totaleachitem) * (cgst/100)\n  cgstval = parseFloat(cgstval)\n  cgstval = cgstval.toFixed(2)\n\n  let sgst = purchaseorderlistvalue.sgst && purchaseorderlistvalue.sgst != '' ? purchaseorderlistvalue.sgst : 0\n  sgst = parseFloat(sgst)\n  let sgstval = parseFloat(totaleachitem) * (sgst/100)\n  sgstval = parseFloat(sgstval)\n  sgstval = sgstval.toFixed(2)\n\n  let igst = purchaseorderlistvalue.igst && purchaseorderlistvalue.igst != '' ? purchaseorderlistvalue.igst : 0\n  igst = parseFloat(igst)\n  let igstval = parseFloat(totaleachitem) * (igst/100)\n  igstval = parseFloat(igstval)\n  igstval = igstval.toFixed(2)\n\n  console.log(purchaseorderlistvalue.scheduledays)\n\n  let scheduledays = purchaseorderlistvalue.scheduledays ? purchaseorderlistvalue.scheduledays : ''\n  let schedulepayment = purchaseorderlistvalue.schedulepayment ? purchaseorderlistvalue.schedulepayment : ''\n  const taxpercentage = purchaseorderlistvalue.gst\n    ? purchaseorderlistvalue.gst / 100\n    : '';\n  const grandtotal =  totalrs+igstval+cgstval+sgstval;\n  const selectecontactlist = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactname\n    : '';\n  const suppliercontactnumber = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactnumber\n    : '';\n  const cond_data = data_cond;\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          {/* <Text style={styles.logo}></Text> */}\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works:</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            visit us: www.pondhan.com\n          </Text>\n        </View> */}\n        <Text style={styles.headerwidth}><Header>Purchase Order</Header> \n        \n        \n        \n        </Text>\n\n        <View style={[styles.section, { paddingBottom: 15, marginTop: 8 }]}>\n        \n        <Text style={styles.refstyle}>\n            PO No. PSPL/{financialYear}/{ponumber}\n          </Text>\n          {/* <Text style={styles.refstyle}>\n            Ref No.{purchaseorderlistvalue.referenceno}\n          </Text> */}\n          <Text style={styles.headerwidthdate}>\n            Date:{purchaseorderlistvalue.requestdeliverydate}\n          </Text>\n        </View>\n\n        <View style={styles.columnSection}>\n          <View>\n            <View>\n              <Text style={styles.fontsize18bold}>Vendor Address:</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>M/S {purchaseorderlistvalue.suppliername}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.supplieraddress1}{' '}\n                {purchaseorderlistvalue.supplieraddress2}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.suppliercity}{' '}\n                {purchaseorderlistvalue.supplierstate}{' '}\n                {purchaseorderlistvalue.supplierpincode}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>{purchaseorderlistvalue.suppliercountry}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>Mobile: {suppliercontactnumber}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>GSTIN No: {purchaseorderlistvalue.suppliergstnumber}</Text>\n            </View>\n          </View>\n          <View>\n            <Text style={styles.fontsize18}>Billing & Delivery Address: {'\\n'}{'\\n'}\n              Pondhan Scaffolding Pvt Ltd.{'\\n'}\n              Plot No : 40&41, Rd. No 5{'\\n'}\n              3rd Phase, KIADB- Obadenahalli{'\\n'}\n              Industrial Area, Doddabalapura,{'\\n'}\n              Bangalore Rural- 561203{'\\n'}\n              GSTIN No : 29AAGCP4018E1ZJ{'\\n'}\n              Contact Number : 8971769150 / 9900069150\n\n      </Text>\n          </View>\n        </View>\n        <View >\n          <Text style={styles.kindattend}>Kind Attn:{selectecontactlist}</Text>\n        </View>\n  \n        <View >\n          <Text style={styles.kindattend}>{'\\n'}</Text>\n        </View>\n        <View>\n          <Text style={styles.main}>Dear Sir,</Text>\n        </View>\n        <View>\n          <Text style={[styles.main, styles.padd6]}>\n            With ref to the discussions we had with you, we are pleased to place our order for the below mentioned\n  material as per the rates quoted by you and as per the T&C given below. ( Ref No ({purchaseorderlistvalue.referenceno}))\n          </Text>\n        </View>\n        <Table style={(styles.section, styles.padding)} data={data}>\n          <TableHeader textAlign={'center'}>\n            <TableCell weighting={0.08}>\n              <Text style={styles.headerfont}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.headerfont}>Material Description</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Rate</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              \n              weighting={0.08}\n              getContent={r => <Small>{r.slno}</Small>}\n            />\n            <DataTableCell\n              style={{ maxWidth: 200, wordWrap: 'break-word' }}\n              weighting={0.6}\n              getContent={r => <Description>{r.itemname}</Description>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.itemdescription}</Small>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Total.</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>CGST@{cgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{cgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>SGST@{sgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{sgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>IGST@{igst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{igstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>\n                {totalrs}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>        \n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n      \n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n     \n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View> */}\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}>Terms & conditions:</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>1. Payment Schedule: {schedulepayment} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>2. Delivery Schedule: {scheduledays} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            3. Unloading : Exclusive . (M/S Pondhan’s Scope)\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            4. Painting of material : If applicable\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            5. The weight mentioned above will be subject to toleranc of +/-\n            0.5%. Difference in weight beyond tolerance limit will not be\n            accepted and any shortfall in weight will be deducted from your\n            Invoice as applicable.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            6. All material shall be as per IS standard and acceptable quality.\n            You will take rejected material back at your cost.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            7. Weighing slip shall be sent along with each supply.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            8. Please specify the order No on challan & Bills.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            9. All your bills must contain our PO number, receipt along with the\n            bill, failing which the same will not be passed for the payment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            10. In the event you fail to mention GST number & HSN code of\n            purchaser and seller on the Invoice, the GST component will be\n            released only after the compliance of the same. (mandatory as per\n            the provision of GST ACT.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            11. Please ensure your GST Invoice is submitted to us immediately\n            after supply of materials, which should contain our GST number also.\n            Our GST no is : 29AAGCP4018E1ZJ & PAN is AAGCP4018E.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            12. We will recover the GST amount in case of mismatch of GST credit\n            with the GST return filed by the vendor.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            13. Above price is inclusive of loading but excludes transportation\n            charges & unloading comes under the perview of Pondhan Scaffolding\n            Pvt Ltd.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            14. The Transport Vehicle must have fitness certificate, emission\n            certificate, Inscurance, RC documents and all statutory vehicle\n            documents & Driver should have valid driving Liscenceas well as\n            driver alongwith unloaders compulsory to wear safety helmets,\n            reflection jackets and Shoes also.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            15. Special Terms : Relevant Eway bill has to be attached alongwith\n            each and every consignment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            16. Special Note : Relevant manufacturer test certificate has to be\n            submittedalongwith the material. (if applicable).\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            17. Special Note : Please ensure to put up your signature alongwith\n            your company seal, on TAX INVOICE without fail.\n          </Text>\n        </View>\n        <View >\n          <Text>{'\\n'}</Text>\n        </View>\n\n        <View>\n          <Text style={styles.main}>Note: {purchaseorderlistvalue.subject}</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            Kindly sign and return the duplicate copy of this PO as a token of\n            acceptance. {'\\n'} Thanking you, {'\\n'} {'\\n'} For Pondhan\n            Scaffolding Pvt Ltd. {'\\n'} {'\\n'} Authorised Signatory {'\\n'}\n          </Text>\n        </View>\n        <View style={styles.row}>\n          <Text style={styles.main}>Prepared By:</Text>\n          <Text style={styles.main}>Checked By:</Text>\n        </View>\n\n        <View>\n        <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getSupplierDetails } from '../../../actions/Supplier';\nimport { getPurchaseOrder } from '../../../actions/Transaction';\nimport logo from '../../../Images/logo.png';\nimport MyDocument from './Component';\nimport './ViewPurchaseOrder.scss';\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    purchaseorderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getSupplierDetails();\n    const purchaseorderid = this.props.match.params.id;\n    const purchaseorderlistvalues = this.props.purchaseorderlistvalues[\n      purchaseorderid\n    ];\n    console.log(purchaseorderlistvalues)\n    purchaseorderlistvalues.requestdeliverydate = moment(\n      purchaseorderlistvalues.requestdeliverydate\n    ).format('DD MMM, YYYY');\n    purchaseorderlistvalues.addeditemlist = purchaseorderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          itemdescription: itemlist.quantity\n            ? itemlist.quantity.toString()\n            : '',\n          quantity: itemlist.costperunit ? itemlist.costperunit.toString() : '',\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : ''\n        };\n      }\n    );\n    const supplierid = purchaseorderlistvalues.supplierid;\n    const suppliercontactid = purchaseorderlistvalues.suppliercontactid;\n    const supplierlistvalue = this.props.supplierdetaillistvalue[supplierid];\n    const selectedcontact = supplierlistvalue.suppliercontactlistvalue.filter(\n      contactid => {\n        if (contactid._id == suppliercontactid) {\n          return contactid;\n        }\n      }\n    );\n    console.log('__SELECTED_CONTACT_LIST____');\n    console.log(selectedcontact);\n    purchaseorderlistvalues.selectedcontactlist = selectedcontact;\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          purchaseorderlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          purchaseorderlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        purchaseorderlistvalues.financialyear = \"2020-21\";\n      }\n    );\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        purchaseorderlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/view_purchaseorderlist');\n          }, 300);\n        });\n      \n      }\n    } else {\n    }\n  }\n\n  render() {\n    //const link = \"blob:http://localhost:3000/0ef925bb-e930-4ea4-b861-2621aa6447ad\"\n\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                purchaseorderlistvalue={this.state.purchaseorderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getPurchaseOrder, getSupplierDetails }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport client from '../../../../../Images/client.png';\nimport CustomLoader from \"../../../../../Components/loader/loader\";\nclass QuotationForm extends React.Component {\n\n  state = {\n    customerID: null,\n    isRemovedCalled: false,\n    isVisible: true,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: \"\",\n        customernumber: \"\",\n        customergstnumber: \"\",\n        customercontactnumber: \"\",\n        customeraddress1: \"\",\n        customeraddress2: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\",\n        pincode: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemshortdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemdiscountamount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      quotationnumber: null,\n      subject: \"\",\n      gst: null,\n      totalvalue: \"\",\n      values: [],\n      tcharge: \"\",\n      transportationgst: \"\",\n      transitinsurance:\"\",\n      ws: \"\",\n      loadingcharge: \"\",\n      scheduledays:\"\",\n      date: new Date()\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    uom: [],\n    customerlistSelect: [],\n    itemlistSelectedOption: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: true,\n    success: false,\n    visible: false\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getQuotationDetails(id) {\n    this.dataHandler(true)\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/quotation/getsinglequotation/${id}`)\n      .then(res => {\n\n\n        if (res.data.quotationlist.quotationdata.length > 0) {\n          let founddata = res.data.quotationlist.quotationdata;\n\n          const newState = Object.assign({}, this.state);\n          newState.data.customerdetail.id = founddata[0].customerid;\n\n          newState.data.values = founddata[0].addeditemlist;\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n\n\n          newState.data.subject = founddata[0].subject;\n          newState.data.date = new Date(founddata[0].date);\n          newState.data.quotationnumber = founddata[0].quotationnumber;\n          localStorage.setItem('QTno', founddata[0].quotationnumber)\n          newState.data.totalvalue = founddata[0].totalvalue;\n          newState.data.gst = founddata[0].tax;\n          newState.data.ws = founddata[0].ws != undefined && founddata[0].ws != null ? founddata[0].ws : '';\n          newState.data.tcharge = founddata[0].tcharge != undefined && founddata[0].tcharge != null ? founddata[0].tcharge : '';\n          newState.data.transportationgst = founddata[0].transportationgst != undefined && founddata[0].transportationgst != null ? founddata[0].transportationgst : '';\n          \n          newState.data.transitinsurance = founddata[0].transitinsurance != undefined && founddata[0].transitinsurance != null ? founddata[0].transitinsurance : '';\n          \n          newState.data.loadingcharge = founddata[0].loadingcharge != undefined && founddata[0].loadingcharge != null ? founddata[0].loadingcharge : '';\n          newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].itemdiscountamount = founddata[0].addeditemlist[i].itemdiscountamount == null || founddata[0].addeditemlist[i].itemdiscountamount == '' ?\n                founddata[0].addeditemlist[i].itemdiscountamount = 0 : founddata[0].addeditemlist[i].itemdiscountamount\n              founddata[0].addeditemlist[i].itemdiscountamount = (founddata[0].addeditemlist[i].itemdiscountamount).toString()\n\n\n\n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              if(founddata[0].addeditemlist[i].itemshortdescription) {\n                newState.data.selectedItemlist.itemshortdescription.push(founddata[0].addeditemlist[i].itemshortdescription)\n              }\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n              newState.data.selectedItemlist.itemdiscountamount.push(founddata[0].addeditemlist[i].itemdiscountamount)\n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.ID != undefined) {\n      this.getQuotationDetails(this.props.ID)\n    }\n    else{\n      setTimeout(() =>{\n        this.dataHandler(false)\n      },100)\n      // quotation/getquotation\n    }\n      \n    const quotationlistvalues = Object.keys(this.props.quotationlistvalues);\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n\n\n    if (this.props.ID == undefined) {\n\n      let quotationnumber = '';\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n      this.setState({\n        data: {\n          ...this.state.data,\n          quotationnumber\n        }\n      })\n\n    }\n    // else{\n    //   alert(this.state.data.quotationnumber)\n    // }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    //this.dataHandler(false)\n  }\n\n  componentWillReceiveProps(props) {\n    const quotationlistvalues = Object.keys(props.quotationlistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n    let quotationnumber = ''\n    if (this.props.ID == undefined) {\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n    }\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      itemlistSelectedOption: newArraySet,\n      masteritemtypelistvaluesobject,\n      customerlistSelect: arraySet,\n      uom,\n      data: {\n        ...this.state.data,\n        quotationnumber\n      }\n    });\n  }\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      if (name === 'gst') {\n        this.totalValue();\n      }\n    });\n  };\n\n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onSubjectHandler = e => {\n\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },()=>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange2 = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      }, () => {\n        console.log(this.state.data.values)\n      });\n    }\n  }\n\n  selectitemchange = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        if(selected_item.masteritemshortdescription){\n          selectedItemlist.itemshortdescription[index] =\n          selected_item.masteritemshortdescription;\n        }\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate._id;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n  \n        if (this.props.ID == undefined) {\n          selectedItemlist.itemdiscount[index] = \"0\";\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n          selectedItemlist.quantity[index] = (1).toString();\n          selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n        }\n  \n  \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        }, () => {\n          this.totalValue();\n        });\n      }\n     \n    }\n   \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || \"\";\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : \"\";\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    console.log(unitcost)\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      //   selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost) - (parseFloat(unitcost) * discount) / 100).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(selectedItemlist.costperunit[index]) -\n        (parseFloat(selectedItemlist.costperunit[index]) * selectedItemlist.itemdiscount[index]) / 100).toFixed(2);\n\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n\n  /*itemdiscountChange = (e, index) => {\n    \n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n    \n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n        selectedItemlist.itemdiscountamount[index] = null;\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };*/\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      // Check if tax exists and handle tax  \n      let { gst } = this.state.data;\n      if (gst !== null) {\n        gst = parseFloat(gst).toFixed(2);\n        let per = (gst * totalvalue) / 100;\n        totalvalue = parseFloat(Number(per) + Number(totalvalue)).toFixed(2);\n      }\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail\n      }\n    });\n\n  };\n\n  handleClick = e => {\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, [\"\"]],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemshortdescription: [\n            ...this.state.data.selectedItemlist.itemshortdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, \"0\"],\n          itemdiscountamount: [...this.state.data.selectedItemlist.itemdiscountamount, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"1\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    }, () => {\n      console.log(this.state.data.values)\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    console.log(index)\n\n    let removeItem = { ...this.state.data };\n    console.log(removeItem.selectedItemlist)\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemshortdescription = removeItem.selectedItemlist.itemshortdescription;    \n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n    let itemdiscountamount = removeItem.selectedItemlist.itemdiscountamount;\n\n    values.splice(index, 1);\n\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemshortdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n\n    costperunit.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    quantity.splice(index, 1);\n    itemdiscountamount.splice(index, 1);\n\n    totalcost.splice(index, 1);\n\n    console.log(removeItem.selectedItemlist)\n\n\n\n    //setTimeout(() =>{\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemshortdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          itemdiscountamount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      },\n      isVisible: false,\n      isRemovedCalled: true\n    }, () => {\n      // setTimeout(() =>{\n      this.setState({\n        'isVisible': true\n      })\n      console.log(this.state.data.values)\n      console.log(this.state.data.selectedItemlist)\n      if (this.state.data.selectedItemlist.id.length > 0) {\n        this.state.data.selectedItemlist.id.filter((item, index) => {\n          if (typeof item == 'string' && item != '') {\n\n            this.selectitemchange2(item, index)\n          }\n\n        })\n\n      }\n      // },200)\n\n      this.totalValue();\n\n    });\n    //},200)\n\n\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const {\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemshortdescription = selectedItemlist.itemshortdescription || null;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const itemdiscountamount = selectedItemlist.itemdiscountamount;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemshortdescription = itemshortdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.itemdiscountamount = itemdiscountamount[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    let data = {\n      customerdetail,\n      AddedIteminfo,\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    };\n    console.log(transportationgst)\n    data['quotationnumber'] = data['quotationnumber'] == '' ? localStorage.getItem('QTno') : data['quotationnumber']\n    data['customeraddress'] = document.getElementById('customeraddress').value ? document.getElementById('customeraddress').value : ''\n\n    this.setState({ loading: true });\n\n    if (localStorage.getItem('customerId') != null) {\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      let obj = {}\n      obj['customerid'] = localStorage.getItem('customerId')\n      obj['Qno'] = this.state.data.quotationnumber\n      obj['quotation'] = date\n\n\n\n      if (this.props.ID != undefined) {\n        console.log(data)\n        this.props\n          .submit(data)\n          .then(() => {\n            this.dataHandler(false)\n            this.setState({ loading: false, errors: {}, success: true });\n            this.onShowAlert();\n          })\n          .catch(err => {\n            this.setState({ loading: false, errors: {}, success: true });\n            if (err.response) {\n              this.setState({ errors: err.response.data.errors, loading: false });\n              this.onShowAlert();\n            }\n\n          });\n\n      }\n      else {\n        axios\n          .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`, obj)\n          .then(res => {\n            this.props\n              .submit(data)\n              .then(() => {\n                this.setState({ loading: false, errors: {}, success: true });\n                this.myFormRef.reset();\n                this.onShowAlert();\n              })\n              .catch(err => {\n                this.setState({ errors: err.response.data.errors, loading: false });\n                this.onShowAlert();\n              });\n          },\n            error => {\n              this.setState({ errors: error.response.data.errors, loading: false });\n              this.onShowAlert();\n            });\n      }\n    }\n    else {\n      this.props\n        .submit(data)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n          this.onShowAlert();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n          this.onShowAlert();\n        });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id)\n      // this.setState({ loading: true,transaction:[] });\n      // axios\n      // .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n      // .then(res => {\n      //   this.setState({ loading: false });\n      //   if(res.data.customerlist.customerdata.length > 0){\n      //     let customervalues = res.data.customerlist.customerdata;\n      //     if(customervalues.length > 0){\n      //       customervalues = customervalues.filter((item,index) =>{\n      //         return index == customervalues.length-1\n      //       })\n      //       if(customervalues.length == 1){\n      //         this.setState({ transaction: customervalues },() =>{\n      //           console.log(this.state.transaction)\n      //         });\n      //       }\n      //     }\n      //   }\n      // },\n      // error =>{\n      //   this.setState({ loading: false });\n      // });\n    }\n\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible, isVisible } = this.state;\n    const successmsg = this.props.ID != undefined ? 'Quotation is updated successfully' : 'Quotation is added successfully'\n    const customerID = data.customerdetail ? (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n    //   value={data.customerdetail.id}\n    //   required={true}\n    //   onChange={e => this.handleChange(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    ) : (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n  \n    //   required={true}\n    //   onChange={e => this.handleChange(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />    \n    )\n\n    const customerNumber = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      value={data.customerdetail.customernumber}\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerGST = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" readOnly\n      id=\"customergstnumber\"\n      value={data.customerdetail.customergstnumber}\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" \n      readOnly\n      id=\"customergstnumber\"\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerAddress = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n      value={\n        data.customerdetail.customeraddress1 +\n        \" \" +\n        data.customerdetail.customeraddress2 +\n        \" \" +\n        data.customerdetail.city +\n        \" \" +\n        data.customerdetail.state +\n        \" \" +\n        data.customerdetail.country +\n        \" \" +\n        data.customerdetail.pincode\n      }\n      onChange={this.onCustomerChange}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n\n      onChange={this.onCustomerChange}\n    />\n    )\n\n\n\n\n\n    const dataelem = isVisible ? (\n\n      <div className=\"purchaseorder-item-row\">\n        {data.values.map((values, index) => {\n          \n          let optionsel = \"\";\n          let SelVal = {};\n          if(values.id != undefined) {\n            if(values.itemshortdescription) {\n              optionsel = values.itemshortdescription;\n            }\n            else {\n              optionsel = values.itemdescription;\n            }\n            SelVal = {\n              value: values.id._id, label: optionsel\n            }\n          }\n          const itemnameinfo = values.id != undefined ? (\n            // <AvField\n            //   type=\"select\"\n            //   value={values.id._id}\n            //   name={`selectitem${index}`}\n            //   onChange={e => this.selectitemchange(e, index)}\n            //   required={true}\n            // >\n            //   <option value=\"\">select Item</option>\n            //   {this.createSelectItems()}\n            // </AvField>\n            <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n            ) :\n            (\n              // <AvField\n              //   type=\"select\"\n              //   name={`selectitem${index}`}\n              //   value={\n              //     data.selectedItemlist.id[index]\n              //   }\n              //   onChange={e => this.selectitemchange(e, index)}\n              //   required={true}\n              // >\n              //   <option value=\"\">select Item</option>\n              //   {this.createSelectItems()}\n              // </AvField>\n              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n            )\n          return (\n            <div key={index}>\n\n              <div className=\"purchaseorder-table\">\n                <Row key={index}>\n                  <Col sm={2}>\n\n                    <AvGroup>\n\n                      <Label for=\"selectitem\">Item Code</Label>\n                      <span className=\"required-label\">*</span>\n                      {itemnameinfo}\n\n\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label for={`masteritemdescription${index}`}>\n                        Description\n                    </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`masteritemdescription${index}`}\n                        type=\"text\"\n                        readOnly\n                        id=\"masteritemdescription\"\n                        value={\n                          data.selectedItemlist.itemdescription[index]\n                        }\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              \"Please enter Item Description\"\n                          }\n\n\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemtype${index}`}>Type</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        style={{ width: \"150px\" }}\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemtype${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemtype[index]\n                        }\n                      >\n                        <option value=\"\">select</option>\n                        {this.createSelectItemTypes()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemuom${index}`}>UOM</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemuom${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemuom[index]\n                        }\n                      >\n                        <option value=\"\">uom</option>\n                        {this.createSelectUomItems()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`discount${index}`}>Discount %</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`itemdiscount${index}`}\n                        type=\"number\"\n                        id={`itemdiscount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscount[index]\n                        }\n                        onChange={e =>\n                          this.itemdiscountChange(e, index)\n                        }\n                        validate={{\n                          minLength: {\n                            value: 1,\n                            errorMessage:\n                              \"item Discount value is required\"\n                          },\n                          maxLength: { value: 100 },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid value\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`quantity${index}`}>Quantity</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`quantity${index}`}\n                        type=\"number\"\n                        id={`quantity${index}`}\n                        value={\n                          data.selectedItemlist.quantity[index]\n                        }\n                        onChange={e => this.quantityChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Item Quantity\"\n                          },\n                          minLength: {\n                            value: 1,\n                            errorMessage: \"quantity value is required\"\n                          },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid quantity\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`costperunit${index}`}>\n                        MRP Cost\n                    </Label>\n                      <AvField\n                        name={`costperunit${index}`}\n                        type=\"number\"\n                        id={`costperunit${index}`}\n                        value={\n                          data.selectedItemlist.costperunit[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Please enter cost'\n                          },\n\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage:\n                              \"Please enter valid costperunit\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`itemdiscountamount${index}`}>\n                        Discount Cost\n                    </Label>\n                      <AvField\n                        name={`itemdiscountamount${index}`}\n                        type=\"number\"\n                        id={`itemdiscountamount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscountamount[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`totalcost${index}`}>\n                        Total Cost\n                    </Label>\n                      <AvField\n                        name={`totalcost${index}`}\n                        type=\"number\"\n                        id={`totalcost${index}`}\n                        value={\n                          data.selectedItemlist.totalcost[index]\n                            ? data.selectedItemlist.totalcost[index]\n                            : \" \"\n                        }\n                        onChange={e => this.onChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <Button\n                      type=\"button\"\n                      onClick={e => this.removeClick(e, index)}\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      -\n                  </Button>\n                  </Col>\n                </Row>\n              </div>\n\n\n            </div>\n          );\n        })}\n      </div>\n\n\n    ) : null\n\n\n\n    return (\n      <div>\n        <div>\n\n          {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Quotation</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert color=\"danger\" isOpen={visible} Label>\n              Quotation number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Quotation</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">Quotation Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"quotationnumber\"\n                      type=\"number\"\n                      id=\"quotationnumber\"\n                      value={data.quotationnumber || null}\n                      onChange={this.onhandlerChange}\n\n                      validate={{\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"totalcost\" Label>Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"date\">Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.date}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control small-font-size\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label F\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    {customerNumber}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GST </Label>\n                    {customerGST}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customeraddress\">Customer Address</Label>\n                    {customerAddress}\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n              <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={this.onSubjectHandler}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                  \n                    <AvField\n                      Label\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                  \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"loadingcharge\">\n                      Loading and Handling Charges </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"loadingcharge\"\n                      type=\"number\"\n                      id=\"loadingcharge\"\n                      value={data.loadingcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Loading and Handling Charges\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ws\">\n                      W.S</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"ws\"\n                      type=\"number\"\n                      id=\"ws\"\n                      value={data.ws || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter W.S\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transitinsurance\">\n                    Transit Insurance</Label>\n     \n                    <AvField\n                      Label\n                      name=\"transitinsurance\"\n                      type=\"number\"\n                      id=\"transitinsurance\"\n                      value={data.transitinsurance || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />  \n                  </AvGroup>\n                </Col>\n\n                \n\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"tcharge\">\n                      Transportation Charges</Label>\n     \n                    <AvField\n                      Label\n                      name=\"tcharge\"\n                      type=\"number\"\n                      id=\"tcharge\"\n                      value={data.tcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transportationgst\">Transportation GST(%) </Label>\n                    <AvField\n                      Label\n                      name=\"transportationgst\"\n                      type=\"number\"\n                      id=\"transportationgst\"\n                      value={data.transportationgst || \"\"} \n                      onChange={this.onSubjectHandler}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n\n              {dataelem}\n\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(QuotationForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addquotation } from \"../../../../actions/quotation\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updatequotation } from \"../../../../actions/quotation\";\n\nimport QuotationForm from \"./QuotationForm/QuotationForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddQuotation extends React.Component {\n\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  }\n\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    \n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatequotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      \n      return this.props\n      .addquotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n          <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <QuotationForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addquotation,\n    updatequotation,\n    getCustomerList,\n    getquotation\n  }\n)(AddQuotation);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getquotation } from '../../../../actions/quotation';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\nclass ViewQuotation extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    quotationlistvalues: []\n  };\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n\n    let quotationlist = Object.values(this.props.quotationlistvalues);\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n  \n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              // style={{ 'fontSize': '0.8rem' }}\n              Label\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              Label\n              // style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.quotationlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.quotationnumber.toLowerCase().localeCompare(a.quotationnumber.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateQuotation(id) {\n    let path = `/editquotation/${id}`;\n    this.props.history.push(path);\n  }\n\n  updateButton = id => {\n    let path = `/view_quotationpdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, quotationlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: 'Quotation Number',\n        field: 'quotationnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n    \n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Action',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n       \n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <DataTable\n            rowvalues={quotationlistvalues}\n            columnvalue={columnvalue}\n            className=\"quotationlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getquotation \n  }\n)(ViewQuotation);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport justDial from '../../../../Images/js.jpg';\nimport makeInIdia from '../../../../Images/mk.jpg';\nimport proud from '../../../../Images/proud.jpg';\nimport scaff from '../../../../Images/scaff.jpg';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\n\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n\n  pagepadding: {\n    padding: 35\n  },\n  section: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  tableHeader: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    // backgroundColor: '#548DD4',\n    // width: '100%',\n    // height: 40,\n    // color: 'white',\n    // textAlign: 'center',\n    // padding: 5\n  },\n  refno: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  cutoff: {\n    // overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n    // width:'150px',\n    //wordBreak: 'break-all'\n\n    'whiteSpace': 'normal',\n    'wordBreak': 'breakAll',\n\n  },\n\n  bgblue: {\n    backgroundColor: '#000'\n  },\n  padding5: {\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  fontbold: {\n    fontWeight: 'bolder'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  smallicon: {\n    width: 25\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 300,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n\n  padding1: {\n    paddingTop: 6\n  },\n\n  kindattend: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  padding: {\n    padding: 0\n  },\n  main: {\n    fontSize: 10\n  },\n  flexview: {\n    fontSize: 10,\n    display: 'flex'\n  },\n  tableheaderbgcolor: {\n    backgroundColor: '#000',\n    color: 'red',\n    background: '#000'\n  },\n  footerfixed: {\n    // position: 'absolute',\n    // bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst RedBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'red'}}>{children}</Text>\n  )\n}\n\nconst BlackBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'black'}}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ quotationlistvalues, data_cond }) => {\n  console.log(quotationlistvalues)\n\n  let amountinwords = ''\n  const financialYear = quotationlistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n\n  const data = quotationlistvalues.addeditemlist;\n  let totaleachitem = 0;\n  console.log('data');\n  console.log(data);\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n  // const data = [\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   }\n  // ];\n  console.log(quotationlistvalues)\n\n  let customeraddress = quotationlistvalues.customeraddress ? quotationlistvalues.customeraddress : ''\n  let loadingcharges = quotationlistvalues.loadingcharge != undefined\n    && quotationlistvalues.loadingcharge != null ?\n    parseFloat(quotationlistvalues.loadingcharge) : 0.00\n\n  let ws = quotationlistvalues.ws != undefined\n    && quotationlistvalues.ws != null ?\n    parseFloat(quotationlistvalues.ws) : 0.00\n\n  let transitinsurance = quotationlistvalues.transitinsurance != undefined\n    && quotationlistvalues.transitinsurance != null ?\n    parseFloat(quotationlistvalues.transitinsurance) : 0.00\n\n    \n\n  let tcharge = quotationlistvalues.tcharge != undefined\n    && quotationlistvalues.tcharge != null ?\n    parseFloat(quotationlistvalues.tcharge) : 0.00\n\n\n  loadingcharges = loadingcharges.toFixed(2)\n  let tchargegst = 0.00\n  ws = ws.toFixed(2)\n  transitinsurance = transitinsurance.toFixed(2)\n  tcharge = tcharge.toFixed(2)\n  let subtotal = parseFloat(totaleachitem) + parseFloat(loadingcharges) + parseFloat(ws) + parseFloat(transitinsurance)\n  subtotal = subtotal.toFixed(2)\n  let subtotalgst = parseFloat(subtotal * 0.18)\n  subtotalgst = subtotalgst.toFixed(2)\n  let totalincludegst = parseFloat(subtotal) + parseFloat(subtotalgst)\n  totalincludegst = totalincludegst.toFixed(2)\n\n  let transportationgstper=0,transportationgst;\n  transportationgst = quotationlistvalues.transportationgst && quotationlistvalues.transportationgst != '' ? parseFloat(quotationlistvalues.transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n\n  tchargegst = tcharge * transportationgst\n  tchargegst = tchargegst.toFixed(2)\n  let grandtotal = parseFloat(tcharge) + parseFloat(totalincludegst) + parseFloat(tchargegst)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  let scheduledays = quotationlistvalues.scheduledays ? quotationlistvalues.scheduledays + ' days' : ''\n\n  const totalrs = quotationlistvalues.totalvalue\n    ? quotationlistvalues.totalvalue\n    : '';\n  const tax = quotationlistvalues.tax ? quotationlistvalues.tax : '';\n  const taxpercentage = quotationlistvalues.tax\n    ? quotationlistvalues.tax / 100\n    : '';\n  //const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = quotationlistvalues.selectedcontactlist[0]\n  //     ? quotationlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n\n  const refno = 'Quotation no:PSPL/Quote/' + quotationlistvalues.quotationnumber + '/'+financialYear;\n  const dispDyn = data.map((datanew, i) => {\n    if(i == 0 && i <= 2 && data.length < 4) {\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={data}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      </>\n      );\n    }\n    else if(i == 0 && i <= 5 && data.length < 7) {\n      let firstDat = [];\n      let secondDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 5) {\n          secondDat.push(data[i])\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      </>\n      );\n    }\n    else if(i == 0 && i <= 8 && data.length < 10) {\n      let firstDat = [];\n      let secondDat = [];\n      let thirdDat = [];\n      data.forEach((element,i) => {\n        if(i <= 2) {\n          firstDat.push(data[i])\n        }\n        if(i > 2 && i <= 8) {\n          secondDat.push(data[i])\n        }\n      });\n      return (\n        <>\n        <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={firstDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>\n      <Page size='A4' style={styles.pagepadding} wrap>\n      <Table\n        style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n        data={secondDat}\n      >\n        <TableHeader\n          textAlign={'center'}\n          style={{ background: '#000' }}\n        >\n          <TableCell weighting={0.08}>\n            <Text style={[styles.headerfont, {}]}>SL No</Text>\n          </TableCell>\n          <TableCell weighting={0.6}>\n            <Text style={styles.tableHeader}>Particular</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Dist %</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>\n              After Dist Rate/Each{'\\n'}\n            </Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Qty</Text>\n          </TableCell>\n          <TableCell weighting={0.2}>\n            <Text style={styles.tableHeader}>Total</Text>\n          </TableCell>\n        </TableHeader>\n        <TableBody textAlign={'center'}>\n          <DataTableCell\n            weighting={0.08}\n            style={styles.padding}\n            getContent={r => r.slno}\n          />\n          <DataTableCell\n            style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n            weighting={0.6}\n            getContent={r => {\n              return (\n                <View>\n                  <Text style={{ fontSize: 11 }}><Small\n                  >{r.itemname}</Small>{'\\n'}</Text>\n                  {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                    <Image\n                      src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                    />\n                    <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                </View>\n              );\n            }}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n          />\n          <DataTableCell\n            weighting={0.2}\n            style={styles.padding}\n            getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n          />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n          <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n        </TableBody>\n      </Table>\n      </Page>    \n      </>\n      );\n    }\n  })\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: '#000' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n         {dispDyn}\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Loading and Handling Charges per ton Rs185.00 x (No of tons)</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{loadingcharges}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>W.S</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{ws}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}> Transit Insurance</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transitinsurance}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Sub Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@18%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotalgst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalincludegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Transportation Charges</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@{transportationgstper}%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tchargegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                {grandtotal}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n{/* \n        <Text style={[styles.headerfont, { textAlign: 'right' }]}>\n        {'\\n'} \n            {amountinwords}\n        </Text> */}\n\n       \n\n        {/* <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View> */}\n        {/* <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View> */}\n\n        <View style={[styles.section]}>\n          <Text style={{fontSize: '10'}}>We hope the rates quoted are reasonable and looking forward for your kind orders.</Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} >Thanking you </Text>\n          <Text style={styles.padding1}>Yours truly,</Text>\n          <View style={[styles.section]}>\n            <Text style={styles.brandname}>For PONDHAN SCAFFOLING PVT LTD</Text>\n            <Text style={{fontSize: \"12\", fontWeight: \"600\", paddingTop: \"10\", paddingBottom: \"10\"}}>Sales Team Contact:</Text>\n          </View>\n        </View>\n\n\n\n        <View style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\n          <Image style={{ width: 70, height: 70 }} src={sign} />\n          <Image style={{ width: 70, height: 70 }} src={seal} />\n          <View style={{ paddingLeft: '300' }}>\n          <Text style={{fontSize: \"12\", fontWeight: \"600\", paddingTop: \"10\", paddingBottom: \"10\"}}>9900069150</Text>\n          </View>\n        </View>\n\n        <View>\n          {/* <Image src={seal} style={styles.smallicon} />\n          <Image src={sign} style={styles.smallicon} /> */}\n          <Text style={styles.brandname}>A.B. Ponnappa {'\\n'}\n            Managing Director\n          </Text>\n          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} > Note:</Text>\n          <Text style={styles.padding1}>1,  Advance payment 60% against Purchase order  & Balance against Pro-forma invoice / deduction of advance on Pro Rata basis..</Text>\n          <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n          <Text style={styles.padding1}>3, Delivery Schedule: 8 to 10 days after confirmation.</Text>\n          <Text style={styles.padding1}>4, Transportation Charges extra as actual.</Text>\n          <Text style={styles.padding1}>5, In case of any Uncircumstances, The Advance Amount paid to materials will be returned within 7 working days.</Text>\n          <Text style={styles.padding1}>6, Unloading should be done by party.</Text>\n          <Text style={styles.padding1}>7, After Delivery if not satisfied you should return within 2 days from the supply date & collect payment within 5 working days but materials should not be used.</Text>\n          <Text style={styles.padding1}>8, We are not responsible for Breakage & Damage while Transportaion or Unloading.</Text>          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} > Bank Details:-</Text>\n          <Text style={styles.padding1}>Name: Pondhan scaffolding Pvt ltd.</Text>\n          <Text style={styles.padding1}>Bank: Bank Of Baroda Branch: Byatarayanapura</Text>\n          <Text style={styles.padding1}>City: Bangalore-560092</Text>\n          <Text style={styles.padding1}>A/C No: 73690500000003.</Text>\n          <Text style={styles.padding1}>IFSC: Code: BARBOVJBYAT.</Text>\n        </View>\n\n        <View>\n            <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={[styles.footerfixed]}>\n          <Image src={client} />\n        </View>\n\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport axios from \"axios\";\nimport \"./ViewQuotation.scss\";\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    quotationlistvalues: {},\n    status: false,\n    text: null\n  };\n  async componentDidMount() {\n    this.props.getquotation();\n\n    const quotationid = this.props.match.params.id;\n    const quotationlistvalues = this.props.quotationlistvalues[quotationid];\n    quotationlistvalues.requestdeliverydate = moment(\n      quotationlistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    quotationlistvalues.addeditemlist = quotationlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        console.log(itemlist)\n        itemlist.itemdiscountamount = parseFloat(itemlist.itemdiscountamount)\n        itemlist.itemdiscountamount = itemlist.itemdiscountamount.toFixed(2)\n        itemlist.quantity = parseInt(itemlist.quantity)\n        if(itemlist.itemdiscountamount != '0.00' && itemlist.itemdiscountamount != 'NaN' && itemlist.itemdiscountamount != null) {\n          itemlist.totalcost = parseFloat(itemlist.itemdiscountamount) * parseInt(itemlist.quantity);\n        }\n        else {\n          itemlist.totalcost = parseFloat(itemlist.totalcost) * parseInt(itemlist.quantity);  \n        }\n  \n        itemlist.totalcost = parseFloat(itemlist.totalcost)\n        itemlist.totalcost = itemlist.totalcost.toFixed(2)\n\n        if(itemlist.itemdiscountamount == '0.00' || itemlist.itemdiscountamount == 'NaN' || itemlist.itemdiscountamount == null) {\n          itemlist.itemdiscountamount = \"0\";\n        }\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.id.masteritemunitwt && itemlist.id.masteritemunitwt != \"undefined\" && \n          itemlist.id.masteritemunitwt != \"null\"\n            ? itemlist.id.masteritemunitwt\n            : \"-\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n          itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n            itemdiscountamount:itemlist.itemdiscountamount\n            ? itemlist.itemdiscountamount\n            : \"0\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost\n            : \"\"\n        };\n      }\n    );\n    const customerid = quotationlistvalues.customerid;\n    const customernumber = quotationlistvalues.customernumber;\n    const customername = quotationlistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          quotationlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          quotationlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        quotationlistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(quotationlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        quotationlistvalues,\n        status: true,\n        text: quotationid.toString()+customername.toString()\n      });\n    }, 2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        });\n\n        setTimeout(() => {\n          document.getElementById(\"D1\").click();\n          this.props.history.push(\"/quotationlist\");\n        }, 200);\n    \n      }\n    } else {\n    }\n  }\n\n\n\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, quotationlistvalues,link,text } = this.state;\n    return (\n      <div>\n        <div className=\"pdf-class\">\n        Downloading file.Please wait.\n          <a href={link} download={text} id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                \n                quotationlistvalues={this.state.quotationlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getquotation }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass SupplierContactForm extends React.Component {\n  state = {\n    data: {\n      suppliercontactname: \"\",\n      suppliercontactnumber: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Supplier Contact is added Successfully</Alert>\n          ) : null}\n          {!!errors.suppliercontactnumber ? (\n            <Alert color=\"danger\">Supplier Contact Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\">Full Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliercontactname\"\n                        type=\"text\"\n                        id=\"fullname\"\n                        value={data.suppliercontactname}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Your Name\"\n                          },\n                      \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"phone\">Phone</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"text\"\n                        name=\"suppliercontactnumber\"\n                        id=\"phone\"\n                        value={data.suppliercontactnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter your phone number\"\n                          },\n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage:\n                              \"Your phone number must be composed only with numbers\"\n                          },\n                          minLength: {\n                            value: 10,\n                            errorMessage:\n                              \"Your phone number must be between 10 and 12 numbers\"\n                          },\n                          maxLength: {\n                            value: 12,\n                            errorMessage:\n                              \"Your phone number be between 10 and 12 numbers\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierContactForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierContactForm from \"../SupplierForm/SupplierContact\";\nimport {\n  addSupplierContact,\n  getSupplierContact\n} from \"../../../../actions/Supplier\";\n\nclass SupplierContact extends React.Component {\n  componentDidMount() {\n    this.props.getSupplierContact();\n  }\n  submit = data => {\n    return this.props.addSupplierContact(data);\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Admin Dashboard</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/transaction_page\">Transaction</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/supplier\">Supplier</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Supplier Contact</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div>\n          <SupplierContactForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierContact.propTypes = {\n  addSupplierContact: PropTypes.func.isRequired,\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addSupplierContact, getSupplierContact }\n)(SupplierContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [\"\"],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const suppliercontactlistvalue = Object.values(\n      props.suppliercontactlistvalue\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const count = supplierdetaillistvalue.length;\n    const suppliernumber = count > 0 ? 10001 + count : 10001;\n    this.setState({\n      ...this.state,\n      suppliercontactlistvalue,\n      data: { ...this.state.data, suppliernumber }\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function (value, i) {\n      var obj = {};\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is added successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody >Supplier data is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>{\" \"}\n               \n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert Label color=\"danger\">Supplier Number alreadt exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert Label color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString()}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                        \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                          minLength: {\n                            value: 3,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          maxLength: {\n                            value: 300,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader Label>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader Label>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            designation{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              maxLength: {\n                                value: 100,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          Label\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                  <AvGroup>\n                                    <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                    <span className=\"required-label\">*</span>\n                                    <AvField\n                                      type=\"select\"\n                                      name=\"contactnumber\"\n                                      onChange={this.onChange}\n                                      required={true}\n                                      disabled={true}\n                                    >\n                                      <option value=\"\">123</option>\n                                      <option value=\"\">345</option>\n                                      <option value=\"\"></option>\n                                      {this.createSelectNumbers()}\n                                    </AvField>\n                                  </AvGroup>\n                                </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    suppliercontactlistvalue: state.suppliercontactlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(SupplierDetail);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailForm from \"../SupplierForm/SupplierDetail\";\nimport {\n  getSupplierContact,\n  addSupplierDetails,\n  getSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierContact();\n    this.props.getSupplierDetails();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetail.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { getSupplierContact, addSupplierDetails, getSupplierDetails }\n)(SupplierDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetailUpdateForm extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [null],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"],\n      mongoid: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.supplierdetaillistvalue;\n    const suppliercontactname = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactname\n    );\n\n    const mongoid = data.suppliercontactlistvalue.map(obj => obj._id);\n    const suppliercontactnumber = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactnumber\n    );\n\n    const suppliercontactdesignation = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactdesignation\n    );\n\n    const suppliercontactemail = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactemail\n    );\n    data.mongoid = mongoid;\n    data.values = suppliercontactname;\n    data.suppliercontactnamelist = suppliercontactname;\n    data.suppliercontactdesignation = suppliercontactdesignation;\n    data.suppliercontactnumber = suppliercontactnumber.map((item, i) => {\n      return item ? item.toString() : item;\n    });\n    data.suppliercontactemail = suppliercontactemail;\n    this.setState({ ...this.state.data, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactid = this.state.data.mongoid;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function(value, i) {\n      var obj = {};\n      obj.id = suppliercontactid[i] || null;\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is updated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody>Supplier data is updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert color=\"danger\">Supplier Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString() || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                  \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                       \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            Contact designation{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact designation name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact designation name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                      <AvGroup>\n                                        <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                        <span className=\"required-label\">*</span>\n                                        <AvField\n                                          type=\"select\"\n                                          name=\"contactnumber\"\n                                          onChange={this.onChange}\n                                          required={true}\n                                          disabled={true}\n                                        >\n                                          <option value=\"\">123</option>\n                                          <option value=\"\">345</option>\n                                          <option value=\"\"></option>\n                                          {this.createSelectNumbers()}\n                                        </AvField>\n                                      </AvGroup>\n                                    </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(SupplierDetailUpdateForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailUpdateForm from \"../SupplierForm/SupplierDetailUpdate\";\nimport {\n  getSupplierDetails,\n  updateSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetailUpdate extends React.Component {\n  state = {\n    supplierdetaillistvalue: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierDetails();\n    const supplierdetailid = this.props.match.params.id;\n    const supplierdetaillistvalue = this.props.supplierdetaillistvalue[\n      supplierdetailid\n    ];\n    this.setState({ supplierdetaillistvalue });\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, supplierdetaillistvalue } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Set Up</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail Update</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailUpdateForm\n            supplierdetaillistvalue={supplierdetaillistvalue}\n            submit={this.submit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetailUpdate.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails, updateSupplierDetails }\n)(SupplierDetailUpdate);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem, Button, Alert } from \"reactstrap\";\nimport { getSupplierDetails } from \"../../../../actions/Supplier\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass Supplierlist extends React.Component {\n  state = {\n    supplierdetaillist: [],\n    count: 0,\n    loading: false\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getSupplierDetails();\n  }\n  componentWillReceiveProps(props) {\n    let supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    //supplierdetaillistvalue= supplierdetaillistvalue.sort((a, b) => b.suppliernumber.toString().toLowerCase().localeCompare(a.suppliernumber.toString().toLowerCase()));\n\n    supplierdetaillistvalue.sort(function(a, b){\n      return parseInt(b.suppliernumber) - parseInt(a.suppliernumber);\n    });\n    const count = supplierdetaillistvalue.length;\n    const supplierdetaillist = supplierdetaillistvalue.map(\n      (supplierdata, i) => {\n        return {\n          suppliernumber: supplierdata.suppliernumber,\n          suppliername: supplierdata.suppliername,\n          suppliergstnumber: supplierdata.suppliergstnumber,\n          supplierAddress:\n            supplierdata.supplieraddress1 +\n            \" \" +\n            supplierdata.supplieraddress2 +\n            \" \" +\n            supplierdata.city +\n            \" \" +\n            supplierdata.state +\n            \" \" +\n            supplierdata.country +\n            \" \" +\n            supplierdata.pincode,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(supplierdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          )\n        };\n      }\n    );\n    this.setState({ supplierdetaillist, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/supplierdetail_update/${id}`;\n    this.props.history.push(path);\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { supplierdetaillist, count, loading } = this.state;\n    const columnvalue = [\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier GST\",\n        field: \"suppliergstnumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Address\",\n        field: \"supplierAddress\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier list</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={supplierdetaillist}\n                className=\"supplierlist\"\n              />\n            </div>\n          ) : (\n              <div>\n                <Alert color=\"info\">Please add Supplier details</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails }\n)(Supplierlist);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass ItemQuantitySearch extends React.Component {\n  state = {\n    data: {\n      locationid: \"\",\n      itemid: \"\"\n    },\n    locationlistvalue: [],\n    masteritemlistvalues: [],\n    loading: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    console.log('XXXXXXXXXXXXX');\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n  selectitemchange = () => { };\n  \n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          ...this.state,\n          loading: false\n        });\n      })\n      .catch(err => { });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Search Item Quantity</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>location</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"locationid\"\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>Item</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name={`itemid`}\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select Item</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    type=\"submit\"\n                    onClick={this.submit}\n                    style={{ marginTop: \"30px\" }}\n                  >\n                    Find\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ItemQuantitySearch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Alert } from \"reactstrap\";\nimport ItemSearch from \"./TotalQuantityForm/ItemQuantitySearch\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport {\n  totalitemvaluesearch,\n  getMasterItemList\n} from \"../../../actions/Transaction\";\nimport { ar } from \"date-fns/locale\";\n\nclass TotalQuantity extends React.Component {\n  state = {\n    itemlist: [],\n    success: false\n  };\n  componentDidMount() {\n    this.props.getLocationList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    return this.props.totalitemvaluesearch(data).then(data => {\n   \n       //console.log(itemsArray)\n      // var i=0,j,arr = [],count=0,isAllDuplicate=false;\n      // for(i=0;i<data.itemlist.length;i++){\n      //   j=i;\n      //   j = j + 1;\n      //   console.log(data.itemlist[i].itemquantity)\n      //   if(j < data.itemlist.length){\n      //     if(data.itemlist[i].itemname == data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[i].itemquantity)\n      //       isAllDuplicate = true;\n      //     }\n      //     else if(data.itemlist[i].itemname != data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[j].itemquantity)\n      //       if(count > 0)\n      //         data.itemlist[i].itemquantity = count\n      //       arr.push(data.itemlist[i])\n      //       count=0;\n      //       isAllDuplicate=false;\n      //     }\n      //   }\n      //   else if(j == data.itemlist.length){\n      //     console.log(data.itemlist[i].itemquantity)\n      //      if(count > 0)\n      //          data.itemlist[i].itemquantity = data.itemlist[i].itemquantity + count\n      //   }\n\n        \n      // }\n\n      // //console.log(count)\n      // //console.log(i)\n      // if(isAllDuplicate){\n      //   i > data.itemlist.length - 1 ?  arr.push(data.itemlist[i-1]) : arr.push(data.itemlist[i])\n      // }\n        \n\n      // console.log(arr)\n\n      // data.itemlist = arr;\n      \n      \n      const itemlist = data.itemlist.map(item => {\n        return {\n          // locationname: item.locationname,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist,\n        success: true\n      });\n   \n    });\n  };\n  render() {\n    const { success, itemlist } = this.state;\n    const columnvalue = [\n      // {\n      //   label: \"location\",\n      //   field: \"locationname\",\n      //   sort: \"asc\",\n      //   width: 40\n      // },\n      {\n        label: \"Item Code\",\n        field: \"itemname\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Item Description\",\n        field: \"itemdescription\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Quantity\",\n        field: \"itemquantity\",\n        sort: \"asc\",\n        width: 40\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transaction</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Total Item Quantity</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ItemSearch submit={this.submit} />\n        </div>\n        <div className=\"mg-t-20\">\n          {itemlist.length > 0 ? (\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={itemlist}\n              className=\"totalquantity\"\n            />\n          ) : (\n              <div>\n                <Alert color=\"info\" Label>Result Not Found.</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getLocationList, totalitemvaluesearch, getMasterItemList }\n)(TotalQuantity);\n","import axios from 'axios';\n\nexport default {\n  order: {\n    addorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/addorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    updateaddorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/updateworkorder`, {\n          data\n        })\n        .then(res => {\n          return true;\n        });\n    },\n\n    getorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n        .then(res => {\n          return res.data.orderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/order';\nimport { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\nimport { orderListSchema } from '../Schemas/schemas';\n\nconst orderCreated = orderlist => {\n  return {\n    type: ADD_ORDER,\n    orderlist\n  };\n};\n\nconst orderFetched = orderlist => {\n  return {\n    type: ORDER_FETCHED,\n    orderlist\n  };\n};\n\nexport const addorder = data => {\n  return dispatch => {\n    return api.order.addorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\nexport const updateaddorder = data => {\n  return dispatch => {\n    return api.order.updateaddorder(data).then(orderlistvalues => {\n      return true\n    });\n  };\n};\n\n\n\nexport const getorder = () => {\n  return dispatch => {\n    return api.order.getorder().then(orderlist => {\n      console.log(orderlist);\n      const orderlistvalues = orderlist.orderdata;\n      console.log(orderlistvalues);\n      return dispatch(\n        orderFetched(normalize(orderlistvalues, [orderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass OrderForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: [],\n        totalweight: [],\n        readystock: [],\n        firstround: [],\n        secondround: [],\n        thirdround: []\n      },\n      workorderno: '',\n      companydetails: '',\n      contactperson: '',\n      date: new Date(),\n      officeno: '',\n      deliveryschedule: new Date(),\n      orderdate: new Date(),\n      deliveryaddress: '',\n      distance: '',\n      sitecontactperson: '',\n      gstno: '',\n      pono: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    itemlistSelectedOption: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n\n    if (this.props.ID != undefined) {\n      this.getWorkorderDetails(this.props.ID)\n    }\n  }\n\n  getWorkorderDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getsingleworkorder/${id}`)\n      .then(res => {\n\n         if (res.data.orderlist.orderdata.length > 0) {\n           let founddata = res.data.orderlist.orderdata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.workorderno = founddata[0].workorderno;\n           newState.data.companydetails = founddata[0].companydetails;\n           newState.data.contactperson = founddata[0].contactperson;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.officeno = founddata[0].officeno;\n           newState.data.deliveryschedule =  new Date(founddata[0].deliveryschedule);\n           newState.data.orderdate =  new Date(founddata[0].orderdate);\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.distance = founddata[0].distance;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.pono = founddata[0].pono\n           newState.data.sitecontactperson = founddata[0].sitecontactperson\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n               \n              newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.totalweight.push(founddata[0].addeditemlist[i].totalweight)\n              newState.data.selectedItemlist.readystock.push(founddata[0].addeditemlist[i].readystock)\n              newState.data.selectedItemlist.firstround.push(founddata[0].addeditemlist[i].firstround)\n              newState.data.selectedItemlist.secondround.push(founddata[0].addeditemlist[i].secondround)\n              newState.data.selectedItemlist.thirdround.push(founddata[0].addeditemlist[i].thirdround)\n   \n\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState,()=>{\n              console.log(this.state.data.selectedItemlist)\n            });\n\n         \n         \n          // if (founddata[0].addeditemlist.length > 0) {\n          //   founddata[0].addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index);\n          //   })\n          // }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  componentWillReceiveProps(props) {\n\n    console.log(this.props.orderlistvalues);\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const orderlistvalues = Object.keys(this.props.orderlistvalues);\n    let newArraySet = [];\n    masteritemlistvalues.map((option, i) => {\n      let name = \"\";\n      if(option.masteritemshortdescription) {\n        name = option.masteritemshortdescription;\n      }\n      else {\n        name = option.masteritemdescription;\n      }\n      let objset = {\n        value: option.id, label: name\n      }\n      newArraySet.push(objset);\n    });\n    if (this.props.ID == undefined) {\n      const workorderno =\n      orderlistvalues.length > 0 ? 1 + orderlistvalues.length : 1;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        itemlistSelectedOption: newArraySet,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data,\n          workorderno\n        }\n      },() =>{\n        if(orderlistvalues.length == 0)\n          this.getOrderData()\n      });\n    }\n    else{\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        itemlistSelectedOption: newArraySet,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      });\n    }\n\n  }\n\n  getOrderData(){\n    if(Object.keys(this.props.orderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n      .then(res => {\n        console.log(res.data.orderlist.orderdata)\n         //if (res.data.orderlist.orderdata.length > 0) {\n           \n          let workorderno =\n          res.data.orderlist.orderdata.length > 0 ? 1 + res.data.orderlist.orderdata.length : 1;\n\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              workorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChangeDeliveryschedule = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        deliveryschedule: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.value ? e.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n      // selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        : selected_item.masteritemshortdescription\n\n      selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n     // selectedItemlist.itemlocation[index] = null;\n\n\n\n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n\n          selectedItemlist.totalweight[index] = \n          selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n          selected_item.masteritemunitwt != \"\" ? (1 * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n          \n        } \n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 1],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, ''],\n          totalweight: [...this.state.data.selectedItemlist.totalweight, ''],\n          readystock: [...this.state.data.selectedItemlist.readystock, ''],\n          firstround: [...this.state.data.selectedItemlist.firstround, ''],\n          secondround: [...this.state.data.selectedItemlist.secondround, ''],\n          thirdround: [...this.state.data.selectedItemlist.thirdround, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    let removeItem = { ...this.state.data };\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemlocation = removeItem.selectedItemlist.itemlocation;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n\n    let remarks = removeItem.selectedItemlist.remarks;\n    let totalweight = removeItem.selectedItemlist.totalweight;\n    let readystock = removeItem.selectedItemlist.readystock;\n    let firstround = removeItem.selectedItemlist.firstround;\n    let secondround = removeItem.selectedItemlist.secondround;\n    let thirdround = removeItem.selectedItemlist.thirdround;\n\n\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n    remarks.splice(index, 1);\n    totalweight.splice(index, 1);\n    readystock.splice(index, 1);\n    firstround.splice(index, 1);\n    secondround.splice(index, 1);\n    thirdround.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks,\n          totalweight,\n          readystock,\n          firstround,\n          secondround,\n          thirdround\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    console.log(selectedItemlist)\n    \n    const selected_item = this.state.masteritemlistvaluesobject[selectedItemlist.id[index]];\n    console.log(selected_item)\n\n\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    const wtperunit = selectedItemlist.totalweight[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit  \n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue ? parseFloat(totalValue).toFixed(2)\n      : '';\n\n\n    selectedItemlist.totalweight[index] = \n    selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n    selected_item.masteritemunitwt != \"\" ? (e.target.value * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n\n    const totalweight = selectedItemlist.totalweight;\n    const readystock = selectedItemlist.readystock;\n    const firstround = selectedItemlist.firstround;\n    const secondround = selectedItemlist.secondround;\n    const thirdround = selectedItemlist.thirdround;\n\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      obj.totalweight = totalweight[i] || null;\n      obj.readystock = readystock[i] || null;\n      obj.firstround = firstround[i] || null;\n      obj.secondround = secondround[i] || null;\n      obj.thirdround = thirdround[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Work Order</ModalHeader>\n              <ModalBody>Work order is edited/generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Work order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='companydetails'>Company Name & address </Label>\n                    <AvField\n                      name='companydetails'\n                      type='text'\n                      id='companydetails'\n                      value={data.companydetails}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='contactperson'>Contact Person</Label>\n                  <AvField\n                    name='contactperson'\n                    type='text'\n                    id='contactperson'\n                    value={data.contactperson || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='officeno'>Office Number</Label>\n                  <AvField\n                    name='officeno'\n                    type='number'\n                    id='officeno'\n                    value={data.officeno || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryschedule'>Delivery Schedule</Label>\n                    <DatePicker\n                    autoComplete=\"new-password\"\n                      selected={data.deliveryschedule}\n                      onChange={this.handleChangeDeliveryschedule}\n                      className='form-control'\n                      autoComplete=\"new-password\"\n                      dateFormat='dd/MM/yyyy'\n                      id='deliveryschedule'\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='orderdate'>Order Date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.orderdate}\n                    onChange={this.handleChangeDeliveryDate}\n                    className='form-control'\n                    autoComplete=\"new-password\"\n                    dateFormat='dd/MM/yyyy'\n                    id='orderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      value={data.deliveryaddress}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='distance'>Distance(KM)</Label>\n                    <AvField\n                      name='distance'\n                      type='text'\n                      id='distance'\n                      value={data.distance}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sitecontactperson'>Site contact person</Label>\n                    <AvField\n                      name='sitecontactperson'\n                      type='text'\n                      id='sitecontactperson'\n                      value={data.sitecontactperson}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='pono'>PO NO</Label>\n                    <AvField\n                      name='pono'\n                      type='number'\n                      id='pono'\n                      value={data.pono}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                            let optionsel = \"\";\n                            let SelVal = {};\n                            if(values.id != undefined) {\n                              if(values.itemshortdescription) {\n                                optionsel = values.itemshortdescription;\n                              }\n                              else {\n                                optionsel = values.itemdescription;\n                              }\n                              SelVal = {\n                                value: values.id._id, label: optionsel\n                              }\n                            }\n                            const itemnameinfo = values.id != undefined ? (\n                              // <AvField\n                              //   type=\"select\"\n                              //   value={values.id._id}\n                              //   name={`selectitem${index}`}\n                              //   onChange={e => this.selectitemchange(e, index)}\n                              //   required={true}\n                              // >\n                              //   <option value=\"\">select Item</option>\n                              //   {this.createSelectItems()}\n                              // </AvField>\n                              <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required value={SelVal} options={this.state.itemlistSelectedOption} />            \n                              ) :\n                              (\n                                // <AvField\n                                //   type=\"select\"\n                                //   name={`selectitem${index}`}\n                                //   value={\n                                //     data.selectedItemlist.id[index]\n                                //   }\n                                //   onChange={e => this.selectitemchange(e, index)}\n                                //   required={true}\n                                // >\n                                //   <option value=\"\">select Item</option>\n                                //   {this.createSelectItems()}\n                                // </AvField>\n                                <Select name={`selectitem${index}`} classNamePrefix=\"select\" onChange={(selectedOption) => this.selectitemchange(selectedOption, index)} styles={customStyles} required defaultValue={data.selectedItemlist.id[index]} options={this.state.itemlistSelectedOption} />\n                              )\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              {/* <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={data.selectedItemlist.id[index]}\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField> */}\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalweight${index}`}>Total weight</Label>\n                              <AvField\n                                name={`totalweight${index}`}\n                                type='text'\n                                id={`totalweight${index}`}\n                                value={\n                                  data.selectedItemlist.totalweight[index] \n                                \n                                }\n                                onChange={e => this.weightChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`readystock${index}`}>Ready stock</Label>\n                              <AvField\n                                name={`readystock${index}`}\n                                type='text'\n                                id={`readystock${index}`}\n                                value={\n                                  data.selectedItemlist.readystock[index]\n                                }\n                                onChange={e => this.stockChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`firstround${index}`} >1st round</Label>\n                              <AvField\n                                name={`firstround${index}`}\n                                type='text'\n                                id={`firstround${index}`}\n                                value={\n                                  data.selectedItemlist.firstround[index]\n                                }\n                                onChange={e => this.firstChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`secondround${index}`}>2nd round</Label>\n                              <AvField\n                                name={`secondround${index}`}\n                                type='text'\n                                id={`secondround${index}`}\n                                value={\n                                  data.selectedItemlist.secondround[index]\n                                }\n                                onChange={e => this.secondChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`thirdround${index}`}>3rd round</Label>\n                              <AvField\n                                name={`thirdround${index}`}\n                                type='text'\n                                id={`thirdround${index}`}\n                                value={\n                                  data.selectedItemlist.thirdround[index]\n                                }\n                                onChange={e => this.thirdChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`remarks${index}`}>Remarks</Label>\n                              <AvField\n                                name={`remarks${index}`}\n                                type='text'\n                                id={`remarks${index}`}\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OrderForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { getorder } from '../../../../actions/order';\nimport OrderForm from './OrderForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getorder();\n  }\n  \n  componentWillReceiveProps() {\n    \n  }\n\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      return this.props\n      .updateaddorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n      .addorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Work order</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <OrderForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getorder,\n    getCustomerList,\n    addorder,\n    updateaddorder\n  }\n)(AddOrder);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewOrder extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    orderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getorder();\n    console.log(this.props);\n    if (this.props.orderlistvalues) {\n      let orderlist = Object.values(this.props.orderlistvalues);\n      orderlist.sort(function(a, b){\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\n      });\n      const orderlistvalues = orderlist.map(quotationvalue => {\n        if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n          const DateNow = new Date();\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\n          return {\n            workorderno: quotationvalue.workorderno,\n            companyname: quotationvalue.companydetails,\n            contactperson: quotationvalue.contactperson,\n            officeno: quotationvalue.officeno,\n            view: (\n              <div className=\"actionbuttons\">\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateButton(quotationvalue._id);\n                  }}\n                >\n                  Print\n                </Button>\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateworkorder(quotationvalue._id);\n                  }}\n                >\n                  Edit\n                </Button>\n                </div>\n            ),\n            complete: deliveryDate.getTime() < DateNow.getTime() ? (\n              <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Complete\n            </Button>\n            ) : null\n          };\n        }\n      });  \n      this.setState({ ...this.state, orderlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let orderlist = Object.values(props.orderlistvalues);\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\n    orderlist.sort(function(a, b){\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\n    });\n    console.log(props);\n    const orderlistvalues = orderlist.map(quotationvalue => {\n      if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n      const DateNow = new Date();\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\n      return {\n        workorderno: quotationvalue.workorderno,\n        companyname: quotationvalue.companydetails,\n        contactperson: quotationvalue.contactperson,\n        officeno: quotationvalue.officeno,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        ),\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\n          <Button\n          Label\n          color='primary'\n          onClick={() => {\n            this.updateCompleteOrder(quotationvalue._id);\n          }}\n        >\n          Complete\n        </Button>\n        ) : null        \n      };\n    }\n    });\n    this.setState({ ...this.state, orderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_orderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updateCompleteOrder = id => {\n    let data = this.props.orderlistvalues[id];\n    data['_id'] = id;\n    data['AddedIteminfo'] = data.addeditemlist;\n    data['completed'] = \"yes\";\n    return this.props\n    .updateaddorder(data)\n    .then(data => {\n      this.dataHandler(false);\n      this.props.getorder();\n      window.location.reload(true);\n    })\n    .catch(err => {\n      this.dataHandler(false);\n      throw err;\n    });\n  };\n\n\n  updateworkorder= id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editworkorder/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, orderlistvalues } = this.state;\n    console.log(orderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Work order',\n        field: 'workorderno',\n        sort: 'asc',\n        width: 20\n      },\n      {\n        label: 'Company Name',\n        field: 'companyname',\n        sort: 'asc',\n        width: 30\n      },\n      {\n        label: 'Contact Person',\n        field: 'contactperson',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Office Number',\n        field: 'officeno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Complete',\n        field: 'complete',\n        sort: 'asc',\n        width: 20\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          scrollx=\"true\"\n          rowvalues={orderlistvalues} \n          columnvalue={columnvalue}\n          className=\"orderlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getorder, updateaddorder }\n)(ViewOrder);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getorder } from '../../../../actions/order';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewCompletedOrder extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    orderlistvalues: []\r\n  };\r\n  componentDidMount() {\r\n    this.props.getorder();\r\n    console.log(this.props);\r\n    if (this.props.orderlistvalues) {\r\n      let orderlist = Object.values(this.props.orderlistvalues);\r\n      orderlist.sort(function(a, b){\r\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n      });\r\n      const orderlistvalues = orderlist.map(quotationvalue => {\r\n        if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n          const DateNow = new Date();\r\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n          return {\r\n            workorderno: quotationvalue.workorderno,\r\n            companyname: quotationvalue.companydetails,\r\n            contactperson: quotationvalue.contactperson,\r\n            officeno: quotationvalue.officeno,\r\n            view: (\r\n              <div className=\"actionbuttons\">\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateButton(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Print\r\n                </Button>\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateworkorder(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                </div>\r\n            )\r\n          };\r\n        }\r\n      });  \r\n      this.setState({ ...this.state, orderlistvalues });\r\n      this.dataHandler(false);\r\n    }\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    let orderlist = Object.values(props.orderlistvalues);\r\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\r\n    orderlist.sort(function(a, b){\r\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n    });\r\n    console.log(props);\r\n    const orderlistvalues = orderlist.map(quotationvalue => {\r\n      if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n      const DateNow = new Date();\r\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n      return {\r\n        workorderno: quotationvalue.workorderno,\r\n        companyname: quotationvalue.companydetails,\r\n        contactperson: quotationvalue.contactperson,\r\n        officeno: quotationvalue.officeno,\r\n        view: (\r\n          <div className=\"actionbuttons\">\r\n            <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateButton(quotationvalue._id);\r\n              }}\r\n            >\r\n              Print\r\n            </Button>\r\n            {/* <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateworkorder(quotationvalue._id);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button> */}\r\n            </div>\r\n        ),\r\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\r\n          <Button\r\n          Label\r\n          color='primary'\r\n          onClick={() => {\r\n            this.updateCompleteOrder(quotationvalue._id);\r\n          }}\r\n        >\r\n          Complete\r\n        </Button>\r\n        ) : null        \r\n      };\r\n    }\r\n    });\r\n    this.setState({ ...this.state, orderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_orderpdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n\r\n  updateworkorder= id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/editworkorder/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, orderlistvalues } = this.state;\r\n    console.log(orderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Work order',\r\n        field: 'workorderno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Company Name',\r\n        field: 'companyname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Contact Person',\r\n        field: 'contactperson',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Office Number',\r\n        field: 'officeno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Print',\r\n        field: 'view',\r\n        sort: 'asc',\r\n        width: 20\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/work-order'>Work order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>List</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable \r\n          rowvalues={orderlistvalues} \r\n          columnvalue={columnvalue}\r\n          className=\"orderlist\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    orderlistvalues: state.orderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getorder }\r\n)(ViewCompletedOrder);\r\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  headerfont3: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  headerfont4: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold'\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 10\n  },\n  dcaddress_left: {\n    fontSize: 10\n  },\n  view_border: {\n    border: '1pt solid #000',\n    flexGrow: 1,\n    height: 100\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingLeft: 100\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 10,\n    fontWeight: 'bolder',\n    textAlign: 'center'\n  },\n  header_tintext: {\n    fontSize: 10,\n    fontWeight: 900\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, textAlign: 'left', wordWrap: 'break-word' }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n  console.log(JSON.stringify(orderlistvalues));\n  let data = orderlistvalues.addeditemlist;\n  let totalwt = 0\n  if(data.length > 0){\n   \n    for(var i=0;i<data.length;i++){\n      totalwt += parseFloat(data[i].totalweight)\n    }\n  }\n  console.log('data');\n  console.log(totalwt);\n  totalwt = parseFloat(totalwt)\n  totalwt = totalwt.toFixed(2)\n  const totalrs = orderlistvalues.totalvalue ? orderlistvalues.totalvalue : '';\n  const taxableAmount = orderlistvalues.taxableamount;\n  const date = moment(orderlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(orderlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(orderlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = orderlistvalues.billingaddress;\n  const vendorcode = orderlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = orderlistvalues;\n\n  let {\n    workorderno,\n    companydetails,\n    contactperson,\n    officeno,\n    deliveryschedule,\n    orderdate,\n    gstno,\n    deliveryaddress,\n    distance,\n    sitecontactperson,\n    pono\n  } = orderlistvalues;\n  //orderdate = new Date(orderdate)\n  const purchaseordernumber = orderlistvalues.purchaseordernumber;\n\n  const tax = orderlistvalues.tax ? orderlistvalues.tax : '';\n  const taxpercentage = orderlistvalues.tax ? orderlistvalues.tax / 100 : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = orderlistvalues.selectedcontactlist[0]\n  //     ? orderlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>PO No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{pono}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => r.itemname}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.totalweight} />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.readystock} />\n              <DataTableCell weighting={0.2} getContent={r => r.firstround} />\n              <DataTableCell weighting={0.2} getContent={r => r.secondround} />\n              <DataTableCell weighting={0.2} getContent={r => r.thirdround} />\n              <DataTableCell weighting={0.4} getContent={r => r.remarks} />\n            </TableBody>\n          </Table>\n          \n          <Text>{'\\n'}</Text>\n          \n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        <Text style={{ fontSize: 14, fontWeight: 900, textAlign: 'center', margin: 8 }}>WORK ORDER</Text>\n        <Text style={{ fontSize: 12, fontWeight: 500, textAlign: 'right', margin: 8 }}>Workorder Date : {orderdate}</Text>\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{workorderno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder Date</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{orderdate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table> */}\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>9</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Distance</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{distance} Km</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text>{'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont3}>SL</Text>\n              </TableCell>\n              <TableCell weighting={0.7}>\n                <Text style={styles.headerfont3}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n               \n                getContent={r => <Text style={styles.headerfont4}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                \n                weighting={0.7}\n                getContent={r => <Text style={styles.headerfont4}>{r.itemname}</Text>}\n              />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.totalweight}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.quantity}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.readystock}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.firstround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.secondround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.thirdround}</Text>} />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Text style={styles.headerfont4}>Total Weight : {totalwt}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getorder } from '../../../../actions/order';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewOrder';\n\nclass ViewOrderPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getorder();\n    const quotationid = this.props.match.params.id;\n    console.log(this.props.orderlistvalues);\n    const orderlistvalues = this.props.orderlistvalues[quotationid];\n    orderlistvalues.requestdeliverydate = moment(orderlistvalues.date).format(\n      'DD MMM, YYYY'\n    );\n    orderlistvalues.deliveryschedule = moment(\n      orderlistvalues.deliveryschedule\n    ).format('DD MMM, YYYY');\n    \n    orderlistvalues.orderdate = moment(\n      orderlistvalues.orderdate\n    ).format('DD MMM, YYYY');\n\n    orderlistvalues.addeditemlist = orderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          // itemdiscount: itemlist.itemdiscount.toString()\n          //   ? itemlist.itemdiscount\n          //   : \"0\",\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          totalweight: itemlist.totalweight\n            ? itemlist.totalweight.toString()\n            : '',\n          readystock: itemlist.readystock ? itemlist.readystock.toString() : '',\n          firstround: itemlist.firstround ? itemlist.firstround.toString() : '',\n          secondround: itemlist.secondround\n            ? itemlist.secondround.toString()\n            : '',\n          thirdround: itemlist.thirdround ? itemlist.thirdround.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = orderlistvalues.customerid;\n    const customernumber = orderlistvalues.customernumber;\n    const customername = orderlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(orderlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        orderlistvalues,\n        status: true\n      });\n    },5000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 4000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/orderlist');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    console.log(this.state.orderlistvalues);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrderPdf);\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../../actions/actions\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport moment from \"moment\";\nimport { deleteUser } from \"../../actions/actions\";\n\nclass AdminRole extends React.Component {\n  state = {\n    count: \"\",\n    userdata: []\n  };\n\n  updateButton = id => {\n    let path = `/updateuser/${id}`;\n    this.props.history.push(path);\n  };\n\n  deleteButton = id => {\n    this.props.deleteUser(id)\n    .then((data) => {\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  }\n\n  componentDidMount() {\n    this.props.getUser().catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const userlist = Object.values(props.userlist);\n    const userdata = userlist.map((userdata, i) => {\n      return {\n        title: userdata.title,\n        name: `${userdata.firstname} ${userdata.lastname}`,\n        email: userdata.email,\n        phone: userdata.phone,\n        startdat: moment(userdata.startdate).format(\"DD MMM, YYYY\"),\n        enddate: userdata.enddate ? moment(userdata.enddate).format(\"DD MMM, YYYY\"):\" \",\n        persontype: userdata.persontype,\n        department: userdata.department,\n        job: userdata.job,\n        location: userdata.location,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(userdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.deleteButton(userdata.id);\n          }}\n        >\n          Delete\n        </Button>\n        )\n      };\n    });\n    this.setState({ userdata });\n  }\n  render() {\n    const columnvalue = [\n      {\n        label: \"Title\",\n        field: \"title\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Full Name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 270\n      },\n      {\n        label: \"Phone\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 200\n      },\n      {\n        label: \"Start date\",\n        field: \"startdate\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"End date\",\n        field: \"enddate\",\n        sort: \"asc\",\n        width: 150\n      },\n      {\n        label: \"Person type\",\n        field: \"persontype\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Department\",\n        field: \"department\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Job\",\n        field: \"job\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Location\",\n        field: \"location\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100        \n      }\n    ];\n    return (\n      <div style={{ overflow: \"hidden\" }} className=\"mg-t-20\">\n          <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Users</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <DataTable columnvalue={columnvalue} rowvalues={this.state.userdata} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUser,deleteUser }\n)(AdminRole);\n","import React from \"react\";\n\nclass EmployeeRole extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h6>Employee List</h6>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeRole;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass BOMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>BOM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/addproduct\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/viewproductlist\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BOMPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ChallanPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Delivery challan</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addchallan'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Challan</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/challanlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Challan List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ChallanPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass CRMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>CRM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n          \n\n            <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/enquiry'>\n                    <i className='fas fa-envelope fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>New Enquiry</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                     \n                <li className='bg-color-lg-blue'>\n                  <div className='icon-eleme'>\n                    <Link to='/quotationpage'>\n                      <i className='fas fa-credit-card fa-3x'></i>\n                      <div style={{ paddingTop: '5px' }}>\n                        <span>Quotations</span>\n                      </div>\n                    </Link>\n                  </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/customerlist'>\n                    <i className='fas fa-users fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Customer Transaction</span>\n                    </div>\n                    </Link>\n                </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CRMPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass CustomerPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div class=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/AddCustomer\">\n                  <i class=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Add Customer</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n    \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customerinfo\">\n                  <i class=\"fas fa-list fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Customer List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass InventoryPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Setup</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\" style={{'top': '55%', 'width': '55%'}}>\n          <ul className=\"clearfix\">\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemtype\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/masteritemtypelist\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* \n             */}\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/itemspage\">\n                  <i className=\"fas fa-cart-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Items</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n          {/* <li className='bg-colo-lg-red'>\n            <div className='icon-eleme'>\n              <Link to='/productbilling'>\n                <i className='fas fa-kaaba fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                  <span>Item Cost</span>\n                </div>\n              </Link>\n            </div>\n          </li> */}\n\n      \n\n             <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/bomproductlist\">\n                  <i className=\"fa fa-cog fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n            \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Suppliers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customer\">\n                  <i className=\"fas fa-users fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Customers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/financialYearAdd\">\n                  <i className=\"fas fa-calendar-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add/Update FinancialYear</span>\n                  </div>\n                </Link>\n              </div>\n            </li>            \n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InventoryPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice1'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Normal Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice2'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage1 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addinvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n           \n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage1;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage2 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Proforma Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n      \n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addproformainvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/proformainvoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage2;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass ItemsPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Items</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n          <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/madditem\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Item</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemlistvalues\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ItemsPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ManufacturingPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Manufacturing</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n            <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/work-order'>\n              <i className='fas fa-shopping-cart fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Work Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/production'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Production</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ManufacturingPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass MoveOrder extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Move Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/move'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Move Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/moveorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Move Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveOrder;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass OnHandPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/quantitypage'>Quantity</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>On Hand</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addonhand'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Update On Hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>View On hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default OnHandPage;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ProductionPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n            <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Production</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/add-production'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Production</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/productionlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Production list</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProductionPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass PurchaceOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/purchase_order'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>Purchase Order</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/view_purchaseorderlist'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>View Purchase Order List</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PurchaceOrderPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuantityPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quantity</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/receipt_screen'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>PO receipts</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/onhand'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                {/* <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand Old</span>\n                    </div>\n                    </Link>\n                </div>\n                </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuantityPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuotationPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/crmlist'>CRM</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quotation</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addquotation'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Add Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/quotationlist'>\n                    <i className='fas fa-list fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>List Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuotationPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass SupplierPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Supplier</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_detail\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Supplier</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_list\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Supplier List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass TransactionPage extends React.Component {\n  render() {\n    const adminMenu = (\n      <React.Fragment>\n     \n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        {/*  */}\n        \n        {/*  */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-cart-arrow-down fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Inventory</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        \n   \n        \n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/addquotation'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Add Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quotationlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n      \n\n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n          <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const financeMenu = (\n      <React.Fragment>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const purchaseMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_order'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/view_purchaseorderlist'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const salesMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/enquiry'>\n              <i className='fas fa-envelope fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>New Enquiry</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const storeMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/receipt_screen'>\n              <i className='fas fa-dolly-flatbed fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Receive quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/totalitemquantity'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>On hand quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n         <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-folder fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      </React.Fragment>\n    );\n    const productionMenu = (\n      <React.Fragment>\n        \n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    return (\n      <div className='container mg-20'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Transactions</BreadcrumbItem>\n        </Breadcrumb>\n        <div className='admin-dashboard-icons' style={{'top': '55%','width': '55%'}}>\n          <ul className='clearfix'>\n            {this.props.role === 'management'\n              ? adminMenu\n              : this.props.role === 'finance'\n              ? financeMenu\n              : this.props.role === 'purchase'\n              ? purchaseMenu\n              : this.props.role === 'sales'\n              ? salesMenu\n              : this.props.role === 'stores'\n              ? storeMenu\n              : this.props.role === 'production'\n              ? productionMenu\n              : ''}\n              {this.props.second_role === 'finance'\n               ? financeMenu\n               : this.props.second_role === 'purchase'\n               ? purchaseMenu\n               : this.props.second_role === 'sales'\n               ? salesMenu\n               : this.props.second_role === 'stores'\n               ? storeMenu\n               : this.props.second_role === 'production'\n               ? productionMenu\n               : ''\n              }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role,\n    second_role: state.user.second_role\n  };\n}\nexport default connect(mapStateToProps)(TransactionPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass WorkOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Work order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addorder'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Work Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/orderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Current Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/completedorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Completed Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>              \n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default WorkOrderPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst GuestRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\n    }\n  />\n);\n\nGuestRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GuestRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Roles } from '../Services/Roles';\nimport { connect } from 'react-redux';\n\nconst UserRoute = ({\n  isAuthenticated,\n  roles,\n  role,\n  second_role,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      // return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      if (!isAuthenticated) {\n        return <Redirect to='/login' />;\n      }\n      if (typeof roles === 'string') {\n        if (!(role === roles || second_role === roles)) {\n          if(role === Roles.FINANCE ||\n            role === Roles.PURCHASE ||\n            role === Roles.SALES ||\n            role === Roles.STORE ||\n            role === Roles.PRODUCTION || second_role === Roles.FINANCE ||\n            second_role === Roles.PURCHASE ||\n            second_role === Roles.SALES ||\n            second_role === Roles.STORE ||\n            second_role === Roles.PRODUCTION) {\n              return <Redirect to='/transaction_page' />;\n            }\n            else {\n              return <Redirect to='/' />;\n            }\n        }\n      } else if (!(roles.includes(role) || roles.includes(second_role))) {\n        if(role === Roles.FINANCE ||\n          role === Roles.PURCHASE ||\n          role === Roles.SALES ||\n          role === Roles.STORE ||\n          role === Roles.PRODUCTION || second_role === Roles.FINANCE ||\n          second_role === Roles.PURCHASE ||\n          second_role === Roles.SALES ||\n          second_role === Roles.STORE ||\n          second_role === Roles.PRODUCTION) {\n            return <Redirect to='/transaction_page' />;\n          }\n          else {\n            return <Redirect to='/' />;\n          }\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\n\nUserRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  // role: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token,\n    role: state.user.role,\n    second_role: state.user.second_role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UserRoute);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport AddUser from './Containers/AddUser/AddUser';\nimport UpdateUser from './Containers/AddUser/UpdateUser';\nimport AdminDashboard from './Containers/Admin/AdminDashboard';\nimport ProductBilling from './Containers/Billing/ProductBilling';\nimport LoginPage from './Containers/LoginPage/LoginPage';\nimport AddMaterial from './Containers/Material/AddMaterial';\nimport AddMaterialType from './Containers/Material/AddMaterialType';\nimport UpdateMaterial from './Containers/Material/UpdateMaterial';\nimport UpdateMaterialType from './Containers/Material/UpdateMaterialType';\nimport ProductList from './Containers/Product/Product';\nimport ViewProduct from './Containers/Product/ViewProduct';\nimport ViewProductList from './Containers/Product/ViewProductList';\nimport AddCustomer from './Containers/SetUp/Customer/Customer';\nimport Transaction from './Containers/SetUp/Customer/Transaction';\nimport UpdateCustomer from './Containers/SetUp/Customer/UpdateCustomer';\nimport ViewCustomerTable from './Containers/SetUp/Customer/ViewCustomerTable';\nimport CustomerInfo from './Containers/SetUp/CustomerInfo/CustomerInfo';\nimport CustomerQuotationList from './Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList';\nimport AddFinancialYear from './Containers/SetUp/FinancialYear/AddFinancialYear';\nimport AddChalan from './Containers/Transaction/Challan/Challan/AddChalan';\nimport ViewChallan from './Containers/Transaction/Challan/View/ViewChallan';\nimport ViewChallanPdf from './Containers/Transaction/Challan/View/ViewChallanPdf';\nimport EnquiryPage from './Containers/Transaction/Enquiry';\nimport AddInvoice from './Containers/Transaction/Invoice/Invoice/AddInvoice';\nimport AddProformaInvoice from './Containers/Transaction/Invoice/Invoice/AddProformaInvoice';\nimport ViewInvoice from './Containers/Transaction/Invoice/View/ViewInvoice';\nimport ViewInvoicePdf from './Containers/Transaction/Invoice/View/ViewInvoicePdf';\nimport ViewProformaInvoice from './Containers/Transaction/Invoice/View/ViewProformaInvoice';\nimport ViewProformaInvoicePdf from './Containers/Transaction/Invoice/View/ViewProformaInvoicePdf';\nimport AddMasterItemList from './Containers/Transaction/Item/ItemList/AddMasterItemList';\nimport MasterItemList from './Containers/Transaction/Item/ItemList/MasterItemListValues';\nimport UpdateMasterItemList from './Containers/Transaction/Item/ItemList/UpdateMasterItemList';\nimport MasterItemType from './Containers/Transaction/Item/ItemType/ItemMasterType';\nimport MasterItemTypeList from './Containers/Transaction/Item/ItemType/ItemMasterTypeList';\nimport UpdateMasterItemType from './Containers/Transaction/Item/ItemType/UpdateItemMasterType';\nimport ReceiptScreen from './Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen';\nimport ViewReceiptPdf from './Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt';\nimport MoveOrderScreen from './Containers/Transaction/MoveOrder/MoveOrderScreen';\nimport ViewMoveOrder from './Containers/Transaction/MoveOrder/View/ViewMoveOrder';\nimport ViewItemsMoveOrder from './Containers/Transaction/MoveOrder/View/viewOrderItems';\nimport AddOnHand from './Containers/Transaction/OnHand/AddOnHand';\nimport AddProduction from './Containers/Transaction/ProductionScreen/Production/AddProduction';\nimport ViewProudction from './Containers/Transaction/ProductionScreen/View/ViewProudction';\nimport PurchaseOrder from './Containers/Transaction/PurchaseOrder/PurchaseOrder';\nimport ViewPurchaseOrderList from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList';\nimport ViewPurchaseOrderPdf from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf';\nimport AddQuotation from './Containers/Transaction/Quotation/Quotation/AddQuotation';\nimport ViewQuotation from './Containers/Transaction/Quotation/View/ViewQuotation';\nimport ViewQuotationPdf from './Containers/Transaction/Quotation/View/ViewQuotationPdf';\nimport SupplierContact from './Containers/Transaction/Supplier/SupplierContact/SupplierContact';\nimport SupplierDetail from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetail';\nimport SupplierDetailUpdate from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate';\nimport SupplierList from './Containers/Transaction/Supplier/SupplierDetail/Supplierlist';\nimport TotalQuantity from './Containers/Transaction/TotalQuantityScreen/TotalQuantity';\nimport AddOrder from './Containers/Transaction/WorkOrder/Order/AddOrder';\nimport ViewOrder from './Containers/Transaction/WorkOrder/View/ViewOrder';\nimport ViewCompletedOrder from './Containers/Transaction/WorkOrder/View/ViewCompletedOrder';\nimport ViewOrderPdf from './Containers/Transaction/WorkOrder/View/ViewOrderPdf';\nimport ViewAdmin from './Containers/View/AdminRole';\nimport ViewEmployee from './Containers/View/EmployeeRole';\nimport './global/global.scss';\nimport BOMPage from './Pages/BOMPage';\nimport ChallanPage from './Pages/Challan';\nimport CRMPage from './Pages/CRMPage';\nimport CustomerPage from './Pages/CustomerPage';\nimport InventoryPage from './Pages/InventoryPage';\nimport InvoicePage from './Pages/InvoicePage';\nimport InvoicePage1 from './Pages/InvoicePage1';\nimport InvoicePage2 from './Pages/InvoicePage2';\nimport ItemsPage from './Pages/ItemsPage';\nimport ManufacturingPage from './Pages/ManufacturingPage';\nimport MoveOrder from './Pages/MoveOrder';\nimport OnHandPage from './Pages/OnHandPage';\nimport ProductionPage from './Pages/Production';\nimport PurchaceOrderPage from './Pages/PurchaceOrderPage';\nimport QuantityPage from './Pages/QuantityPage';\nimport QuotationPage from './Pages/QuotationPage';\nimport SupplierPage from './Pages/SupplierPage';\nimport TransactionPage from './Pages/TransactionPage';\nimport WorkOrderPage from './Pages/WorkOrder';\nimport GuestRoute from './Routes/GuestRoute';\nimport UserRoute from './Routes/UserRoute';\nimport { Roles } from './Services/Roles';\n\n\n\n\n\n\n\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route path='/' exact component={LoginPage} />\n        <GuestRoute path='/login' exact component={LoginPage} />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/admin_dashboard'\n          exact\n          component={AdminDashboard}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adduser'\n          exact\n          component={AddUser}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adminlist'\n          exact\n          component={ViewAdmin}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/employeelist'\n          exact\n          component={ViewEmployee}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/updateuser/:id'\n          exact\n          component={UpdateUser}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/enquiry'\n          exact\n          component={EnquiryPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addproduct'\n          exact\n          component={ProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproductlist'\n          exact\n          component={ViewProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/bomproductlist'\n          exact\n          component={BOMPage}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproduct/:id'\n          exact\n          component={ViewProduct}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/add_itemtype'\n          exact\n          component={AddMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_itemtype/:id'\n          exact\n          component={UpdateMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/additem'\n          exact\n          component={AddMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_material/:id'\n          exact\n          component={UpdateMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productbilling'\n          exact\n          component={ProductBilling}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/inventory_page'\n          exact\n          component={InventoryPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[\n            Roles.ADMIN,\n            Roles.FINANCE,\n            Roles.PURCHASE,\n            Roles.SALES,\n            Roles.STORE,\n            Roles.PRODUCTION\n          ]}\n          path='/transaction_page'\n          exact\n          component={TransactionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice'\n          exact\n          component={InvoicePage}\n        />\n          <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice1'\n          exact\n          component={InvoicePage1}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice2'\n          exact\n          component={InvoicePage2}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/delivery-challan'\n          exact\n          component={ChallanPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE, Roles.PRODUCTION]}\n          path='/addonhand'\n          exact\n          component={AddOnHand}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move-order'\n          exact\n          component={MoveOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move'\n          exact\n          component={MoveOrderScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/moveorderlist'\n          exact\n          component={ViewMoveOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_ItemsOrder/:id'\n          exact\n          component={ViewItemsMoveOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/work-order'\n          exact\n          component={WorkOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/editworkorder/:id'\n          exact\n          component={AddOrder}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/manufacturing'\n          exact\n          component={ManufacturingPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customer'\n          exact\n          component={CustomerPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/financialYearAdd'\n          exact\n          component={AddFinancialYear}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/transaction/:id'\n          exact\n          component={Transaction}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier'\n          exact\n          component={SupplierPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/quotationpage'\n          exact\n          component={QuotationPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/quantitypage'\n          exact\n          component={QuantityPage}\n        />\n\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/itemspage'\n          exact\n          component={ItemsPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtype'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtypelist'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/masteritemtypelist'\n          exact\n          component={MasterItemTypeList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/madditem'\n          exact\n          component={AddMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemlistvalues'\n          exact\n          component={MasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/m_updateitemlist/:id'\n          exact\n          component={UpdateMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_mitemtype/:id'\n          exact\n          component={UpdateMasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order'\n          exact\n          component={PurchaseOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_orderpage'\n          exact\n          component={PurchaceOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderpdf/:id'\n          exact\n          component={ViewPurchaseOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderlist'\n          exact\n          component={ViewPurchaseOrderList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_detail'\n          exact\n          component={SupplierDetail}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_contact'\n          exact\n          component={SupplierContact}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order_update/:id'\n          exact\n          component={PurchaseOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplierdetail_update/:id'\n          exact\n          component={SupplierDetailUpdate}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_list'\n          exact\n          component={SupplierList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/receipt_screen'\n          exact\n          component={ReceiptScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/viewreceipt'\n          exact\n          component={ViewReceiptPdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/totalitemquantity'\n          exact\n          component={TotalQuantity}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/onhand'\n          exact\n          component={OnHandPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/AddCustomer'\n          exact\n          component={AddCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/customerlist'\n          exact\n          component={ViewCustomerTable}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/crmlist'\n          exact\n          component={CRMPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/updatecustomer/:id'\n          exact\n          component={UpdateCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerinfo'\n          exact\n          component={CustomerInfo}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/addquotation'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/editquotation/:id'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/quotationlist'\n          exact\n          component={ViewQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/view_quotationpdf/:id'\n          exact\n          component={ViewQuotationPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerquotationlist/:id'\n          exact\n          component={CustomerQuotationList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addinvoice'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addproformainvoice'\n          exact\n          component={AddProformaInvoice}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editinvoice/:id'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editproformainvoice/:id'\n          exact\n          component={AddProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addchallan'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editchallan/:id'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addorder'\n          exact\n          component={AddOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/orderlist'\n          exact\n          component={ViewOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/completedorderlist'\n          exact\n          component={ViewCompletedOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoicelist'\n          exact\n          component={ViewInvoice}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/proformainvoicelist'\n          exact\n          component={ViewProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/challanlist'\n          exact\n          component={ViewChallan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/productionlist'\n          exact\n          component={ViewProudction}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_invoicepdf/:id'\n          exact\n          component={ViewInvoicePdf}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_proformainvoicepdf/:id'\n          exact\n          component={ViewProformaInvoicePdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_orderpdf/:id'\n          exact\n          component={ViewOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_challanpdf/:id'\n          exact\n          component={ViewChallanPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/production'\n          exact\n          component={ProductionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/add-production'\n          exact\n          component={AddProduction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport user from '../reducer/user';\nimport userlist from '../reducer/userlist';\nimport materialoptionlist from '../reducer/materialoptionlist';\nimport materiallistvalues from '../reducer/materiallistvalues';\nimport productlistvalues from '../reducer/productlistvalues';\nimport masteritemtypenamevalue from '../reducer/masteritemtypenamevalue';\nimport masteritemtypelistvalues from '../reducer/masteritemlistnamevalue';\nimport suppliercontactlistvalue from '../reducer/suppliercontactlistvalue';\nimport supplierdetaillistvalue from '../reducer/supplierdetaillistvalue';\nimport uomlistvalue from '../reducer/uomlistvalue';\nimport currencylistvalue from '../reducer/currencylistvalue';\nimport locationlistvalue from '../reducer/locationlistvalue';\nimport purchaseorderlistvalue from '../reducer/purchaseorderlistvalue';\nimport receiptlistvalues from '../reducer/receiptlistvalues';\nimport customerlistvalues from '../reducer/customerlistvalues';\nimport quotationlistvalues from '../reducer/quotationlistvalues';\nimport invoicelistvalues from '../reducer/invoicelistvalues';\nimport proformainvoicelistvalues from '../reducer/proformainvoicelistvalues';\n\nimport challanlistvalues from '../reducer/challanlistvalues';\nimport orderlistvalues from '../reducer/orderlistvalues';\nimport productionlistvalues from '../reducer/productionlistvalues';\nimport moveorderlistvalues from '../reducer/moveorderlistvalues';\nimport customertransationvalues from '../reducer/customertransationvalues';\n\nimport { USER_LOGGED_OUT } from '../Services/types';\n\nconst appReducer = combineReducers({\n  user: user,\n  userlist: userlist,\n  materialoption: materialoptionlist,\n  materiallistvalues: materiallistvalues,\n  productlistvalues: productlistvalues,\n  masteritemtypenamevalue: masteritemtypenamevalue,\n  masteritemlistvalues: masteritemtypelistvalues,\n  suppliercontactlistvalue: suppliercontactlistvalue,\n  supplierdetaillistvalue: supplierdetaillistvalue,\n  uomlistvalue: uomlistvalue,\n  currencylistvalue: currencylistvalue,\n  locationlistvalue: locationlistvalue,\n  purchaseorderlistvalue: purchaseorderlistvalue,\n  receiptlistvalues: receiptlistvalues,\n  customerlistvalues: customerlistvalues,\n  customertransationvalues: customertransationvalues,\n  quotationlistvalues: quotationlistvalues,\n  invoicelistvalues: invoicelistvalues,\n  proformainvoicelistvalues: proformainvoicelistvalues,\n  challanlistvalues: challanlistvalues,\n  orderlistvalues: orderlistvalues,\n  productionlistvalues: productionlistvalues,\n  moveorderlistvalues: moveorderlistvalues\n});\n\nconst rootReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGGED_OUT:\n      state = {};\n      storage.removeItem('persist:root');\n      return {};\n    default:\n      return appReducer(state, action);\n  }\n};\n\nexport default rootReducer;\n","import storage from \"redux-persist/lib/storage\";\nimport { USER_LOGGED_IN } from \"../Services/types\";\nimport { USER_LOGGED_OUT } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return action.user;\n    case USER_LOGGED_OUT:\n      storage.removeItem(\"persist:root\");\n      return {};\n    default:\n      return state;\n  }\n}\n","import { USER_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_FETCHED:\n      return { ...state, ...action.userlist.entities.users };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_OPTIONS } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_OPTIONS:\n      return {\n        ...state,\n        ...action.materialoption.entities.materialoptions\n      };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.materialsvalues.entities.materialslistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PRODUCT_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCT_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.productlistvalues.entities.productlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_TYPES } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_TYPES:\n      return {\n        ...state,\n        ...action.MasterItemTypeName.entities.masteritemtypenamevalue\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_LIST,DELETE_MASTER_ITEM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_LIST:\n      return {\n        ...state,\n        ...action.MasterItemTypeList.entities.masteritemtypelistvalues\n      };\n    case DELETE_MASTER_ITEM_LIST  : \n      let arrayData = [];\n      Object.keys(state).forEach(function(key, index) {\n        arrayData.push(state[key]);\n      });\n      let fileteredData = arrayData.filter((item, id) => item.id !== action.payload);\n      let obj = {};\n      fileteredData.map((data,ind) => {\n        obj[data.id] = data;\n      });\n      return obj;\n    default:\n      return state;\n  }\n}","import { SUPPLIER_CONTACT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_CONTACT_LIST:\n      return {\n        ...state,\n        ...action.suppliercontactlistvalue.entities.suppliercontactlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_DETAIL_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_DETAIL_LIST:\n      return {\n        ...state,\n        ...action.supplierdetaillistvalue.entities.supplierdetaillistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { UOM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UOM_LIST:\n      return {\n        ...state,\n        ...action.uomlist.entities.uomlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { CURRENCY_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case CURRENCY_LIST:\n      return {\n        ...state,\n        ...action.currencylist.entities.currencylistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { Location_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case Location_LIST:\n      return {\n        ...state,\n        ...action.locationlist.entities.locationlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PURCHASE_ORDER_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PURCHASE_ORDER_LIST:\n      return {\n        ...state,\n        ...action.purchaseorderlistvalues.entities.purchaseorderlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PO_RECEIPT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PO_RECEIPT_LIST:\n      return {\n        ...state,\n        ...action.receiptlistvalues.entities.receiptlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED\n} from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(state)\n  switch (action.type) {\n    case CUSTOMER_CONTACT_FETCHED:\n    \n    case ADD_CUSTOMER_CONTACT:\n      return {\n        ...state,\n        ...action.customerlist.entities.customerlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    CUSTOMERTRANSACTION_FETCHED,\n    ADD_CUSTOMER_TRANSACTION\n  } from \"../Services/types\";\n  \n  export default function(state = {}, action) {\n    console.log(action)\n    switch (action.type) {\n      case CUSTOMERTRANSACTION_FETCHED:\n      return {\n        ...state,\n        ...action.customerlist.entities.customertransationvalues\n      };\n      case ADD_CUSTOMER_TRANSACTION:\n        return {\n          ...state,\n          ...action.customerlist.entities.customertransationvalues\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case QUOTATION_FETCHED:\n    case ADD_QUOTATION:\n      return {\n        ...state,\n        ...action.quotationlist.entities.quotationlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_INVOICE, INVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case INVOICE_FETCHED:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    case ADD_INVOICE:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","\n\nimport { ADD_PROFORMA_INVOICE, PROFORMAINVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PROFORMAINVOICE_FETCHED:\n    case ADD_PROFORMA_INVOICE:\n      return {\n        ...state,\n        ...action.proformainvoicelist.entities.proformainvoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(action)\n  switch (action.type) {\n    case CHALLAN_FETCHED:\n    case ADD_CHALLAN:\n      return {\n        ...state,\n        ...action.challanlist.entities.challanlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ADD_ORDER:\n    case ORDER_FETCHED:\n      return {\n        ...state,\n        ...action.orderlist.entities.orderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCTION_FETCHED:\n    case ADD_PRODUCTION:\n      return {\n        ...state,\n        ...action.productionlist.entities.productionlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MOVEORDER_FETCHED:\n    case ADD_MOVEORDER:\n      return {\n        ...state,\n        ...action.moverorderlist.entities.moveorderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport LocalStorage from \"redux-persist/lib/storage\";\nimport localforage from \"localforage\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   storage: LocalStorage\n// };\n\nconst persistConfig = {\n  key: 'root',\n  storage: localforage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n);\n\nexport default store;\n","import { persistStore } from \"redux-persist\";\nimport store from \"./store\";\n\nexport default persistStore(store);\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCalendarPlus, faCube, faDollyFlatbed, faHome, faKaaba, faUser, faUserFriends, faUsers, faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport jwtDecode from \"jwt-decode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { userLoggedIn } from \"./actions/actions\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport persistor from \"./Store/persistStore\";\nimport store from \"./Store/store\";\nimport setAuthorizationHeader from \"./utils/setAuthorizationHeader\";\n\nlibrary.add(\n  faHome,\n  faDollyFlatbed,\n  faCube,\n  faKaaba,\n  faUsers,\n  faUser,\n  faUsersCog,\n  faUserFriends,\n  faCalendarPlus\n);\n\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n\nif (localStorage.Mob_JWT) {\n  const token = localStorage.Mob_JWT;\n  setAuthorizationHeader(token);\n  var decoded = jwtDecode(localStorage.Mob_JWT);\n  const userinfo = {\n    email: decoded.email,\n    role: decoded.role,\n    second_role: decoded.sexond_role,\n    token: localStorage.Mob_JWT\n  };\n  store.dispatch(userLoggedIn(userinfo));\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App component={App} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}