{"version":3,"sources":["Images/seal.jpg","Images/sign.jpg","Images/logo.png","Images/js.jpg","Images/mk.jpg","Images/proud.jpg","Images/scaff.jpg","Images/client.png","Services/api.js","utils/setAuthorizationHeader.js","Services/types.js","Schemas/schemas.js","actions/actions.js","Components/Header/Header.js","Containers/AddUser/AddUserForm/AddUserForm.js","Containers/AddUser/AddUser.js","Components/loader/loader.js","Containers/AddUser/AddUserForm/UpdateUserForm.js","Containers/AddUser/UpdateUser.js","Containers/Admin/AdminDashboard.js","actions/Product.js","Services/transactionapi.js","actions/Transaction.js","Containers/Billing/BillingForm/BillingForm.js","Containers/Billing/BillingTable.js","Containers/Billing/ProductBilling.js","Containers/LoginPage/LoginForm/LoginForm.js","Services/Roles.js","Containers/LoginPage/LoginPage.js","Components/Alert/Alert.js","Containers/Material/MaterialForms/AddMaterialForm.js","Components/Table/DatatablePage.js","Containers/Material/AddMaterial.js","Containers/Material/MaterialForms/AddMaterialTypesForm.js","Containers/Material/AddMaterialType.js","Containers/Material/MaterialForms/UpdateMaterialForm.js","Containers/Material/UpdateMaterial.js","Containers/Material/MaterialForms/UpdateMaterialTypesForm.js","Containers/Material/UpdateMaterialType.js","Containers/Product/ProductForm/ProductForm.js","actions/uom.js","Containers/Product/Product.js","Containers/Product/ViewProduct.js","Containers/Product/ViewProductList.js","Containers/SetUp/Customer/AddCustomer/CustomerForm/CustomerForm.js","Containers/SetUp/Customer/ViewCustomerList.js","Services/customerapi.js","actions/customerContact.js","Containers/SetUp/Customer/Customer.js","Containers/SetUp/Customer/Transaction.js","Containers/SetUp/Customer/UpdateCustomer/CustomerForm/UpdateCustomerForm.js","Containers/SetUp/Customer/UpdateCustomer.js","Containers/SetUp/Customer/ViewCustomerTable.js","Containers/SetUp/CustomerInfo/ViewCustomerList.js","Containers/SetUp/CustomerInfo/CustomerInfo.js","Services/quotationapi.js","actions/quotation.js","Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList.js","Containers/SetUp/FinancialYear/AddYear/AddYearForm/AddYearForm.js","Containers/SetUp/FinancialYear/AddFinancialYear.js","actions/financialYearAdd.js","Services/challanapi.js","actions/challan.js","Containers/Transaction/Challan/Challan/ChallanForm.js","Containers/Transaction/Challan/Challan/AddChalan.js","Containers/Transaction/Challan/View/ViewChallan.js","Containers/Transaction/Challan/View/Component.js","Containers/Transaction/Challan/View/ViewChallanPdf.js","Containers/Transaction/Enquiry.js","Services/invoiceapi.js","actions/Invoice.js","Containers/Transaction/Invoice/Invoice/InvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddInvoice.js","Containers/Transaction/Invoice/Invoice/ProformaInvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddProformaInvoice.js","Containers/Transaction/Invoice/View/ViewInvoice.js","Containers/Transaction/Invoice/View/Component.js","Containers/Transaction/Invoice/View/ViewInvoicePdf.js","Containers/Transaction/Invoice/View/ViewProformaInvoice.js","Containers/Transaction/Invoice/View/Component2.js","Containers/Transaction/Invoice/View/ViewProformaInvoicePdf.js","Containers/Transaction/Item/Form/ItemList/AddItemListForm.js","Containers/Transaction/Item/ItemList/ViewMasterItemList.js","Containers/Transaction/Item/ItemList/AddMasterItemList.js","Containers/Transaction/Item/ItemList/MasterItemListValues.js","Containers/Transaction/Item/Form/ItemList/UpdateItemListForm.js","Containers/Transaction/Item/ItemList/UpdateMasterItemList.js","Containers/Transaction/Item/Form/MasterItemTypeForm.js","Containers/Transaction/Item/ItemType/ItemMasterType.js","Containers/Transaction/Item/ItemType/ItemMasterTypeList.js","Containers/Transaction/Item/Form/UpdateMasterItemTypeForm.js","Containers/Transaction/Item/ItemType/UpdateItemMasterType.js","Components/EditTable/EditTable.js","Services/locationapi.js","actions/Location.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptScreenForm.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptTable.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen.js","Containers/Transaction/ItemScreening/ReceiptScreen/Component.js","Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt.js","Services/moveorderapi.js","actions/moveorder.js","Containers/Transaction/MoveOrder/MoveOrderScreenForm/MoveOrderScreenForm.js","Containers/Transaction/MoveOrder/MoveOrderScreen.js","Containers/Transaction/MoveOrder/View/ViewMoveOrder.js","Containers/Transaction/MoveOrder/View/viewOrderItems.js","Containers/Transaction/OnHand/AddOnHandScreenForm/AddOnHandScreenForm.js","Containers/Transaction/OnHand/AddOnHand.js","Services/productionapi.js","actions/Production.js","Containers/Transaction/ProductionScreen/Production/ProductionForm.js","Containers/Transaction/ProductionScreen/Production/AddProduction.js","Containers/Transaction/ProductionScreen/View/ViewProudction.js","Containers/Transaction/PurchaseOrder/PurchaseOrderForm/PurchaseOrderForm.js","Services/supplierapi.js","actions/Supplier.js","Services/currency.js","actions/Currency.js","Containers/Transaction/PurchaseOrder/PurchaseOrder.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList.js","Containers/Transaction/PurchaseOrder/Component.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf.js","Containers/Transaction/Quotation/Quotation/QuotationForm/QuotationForm.js","Containers/Transaction/Quotation/Quotation/AddQuotation.js","Containers/Transaction/Quotation/View/ViewQuotation.js","Containers/Transaction/Quotation/View/Component.js","Containers/Transaction/Quotation/View/ViewQuotationPdf.js","Containers/Transaction/Supplier/SupplierForm/SupplierContact.js","Containers/Transaction/Supplier/SupplierContact/SupplierContact.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetail.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetail.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/Supplierlist.js","Containers/Transaction/TotalQuantityScreen/TotalQuantityForm/ItemQuantitySearch.js","Containers/Transaction/TotalQuantityScreen/TotalQuantity.js","Services/order.js","actions/order.js","Containers/Transaction/WorkOrder/Order/OrderForm.js","Containers/Transaction/WorkOrder/Order/AddOrder.js","Containers/Transaction/WorkOrder/View/ViewOrder.js","Containers/Transaction/WorkOrder/View/ViewCompletedOrder.js","Containers/Transaction/WorkOrder/View/Component.js","Containers/Transaction/WorkOrder/View/ViewOrderPdf.js","Containers/View/AdminRole.js","Containers/View/EmployeeRole.js","Pages/BOMPage.js","Pages/Challan.js","Pages/CRMPage.js","Pages/CustomerPage.js","Pages/InventoryPage.js","Pages/InvoicePage.js","Pages/InvoicePage1.js","Pages/InvoicePage2.js","Pages/ItemsPage.js","Pages/ManufacturingPage.js","Pages/MoveOrder.js","Pages/OnHandPage.js","Pages/Production.js","Pages/PurchaceOrderPage.js","Pages/QuantityPage.js","Pages/QuotationPage.js","Pages/SupplierPage.js","Pages/TransactionPage.js","Pages/WorkOrder.js","Routes/GuestRoute.js","Routes/UserRoute.js","App.js","serviceWorker.js","Store/rootReducer.js","reducer/user.js","reducer/userlist.js","reducer/materialoptionlist.js","reducer/materiallistvalues.js","reducer/productlistvalues.js","reducer/masteritemtypenamevalue.js","reducer/masteritemlistnamevalue.js","reducer/suppliercontactlistvalue.js","reducer/supplierdetaillistvalue.js","reducer/uomlistvalue.js","reducer/currencylistvalue.js","reducer/locationlistvalue.js","reducer/purchaseorderlistvalue.js","reducer/receiptlistvalues.js","reducer/customerlistvalues.js","reducer/customertransationvalues.js","reducer/quotationlistvalues.js","reducer/invoicelistvalues.js","reducer/proformainvoicelistvalues.js","reducer/challanlistvalues.js","reducer/orderlistvalues.js","reducer/productionlistvalues.js","reducer/moveorderlistvalues.js","Store/store.js","Store/persistStore.js","index.js"],"names":["module","exports","__webpack_require__","p","api","userRegister","userRegisterdata","axios","post","concat","process","then","res","data","userRecord","login","credentials","user","getUser","get","userdata","getUserbyid","id","userRecordData","updateUser","patch","success","deleteUser","delete","addmaterialtype","materialdata","getmaterialstype","materiallist","updatematerialtype","addmaterial","getmaterial","updatematerial","addproduct","getproducts","productlist","addyear","checkexists","year","updateyear","updateid","catch","err","error","setAuthorizationHeader","token","arguments","length","undefined","defaults","headers","common","authorization","UOM_LIST","CURRENCY_LIST","Location_LIST","userSchema","schema","Entity","idAttribute","uomListSchema","materialOptionSchema","materialListSchema","productListSchema","masterItemTypeNameSchema","masterItemTypeListSchema","supplierContactListSchema","supplierDetailListSchema","currencyListSchema","locationListSchema","purchaseOrderListSchema","customerListSchema","customerTransactionSchema","quotationListSchema","invoiceListSchema","proformainvoiceListSchema","challanListSchema","orderListSchema","productionListSchema","moveorderListSchema","userLoggedIn","type","Header","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","logout","window","location","reload","history","push","toggle","bind","_assertThisInitialized","state","isOpen","isAuthenticated","_createClass","key","value","setState","React","createElement","Navbar","expand","className","NavbarBrand","tag","Link","to","src","logo","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","role","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Component","withRouter","connect","e","dispatch","localStorage","removeItem","AddUserForm","_len","args","Array","_key","apply","title","firstname","lastname","email","phone","startdate","Date","enddate","username","password","repassword","active","persontype","department","job","errors","loading","onChange","_objectSpread","_defineProperty","target","name","handleValidSubmit","console","log","submit","myFormRef","reset","response","handleChangeStartDate","date","selectedDate","formattedDate","getDate","getMonth","getFullYear","handleChangeEndDate","handleInvalidSubmit","_this2","_this$state","Alert","color","AvForm","onValidSubmit","onInvalidSubmit","ref","el","Card","CardHeader","CardBody","Row","Col","sm","AvGroup","Label","for","AvField","validate","required","errorMessage","pattern","minLength","maxLength","DatePicker","selected","autoComplete","minDate","dateFormat","maxDate","match","Button","disabled","AddUser","CustomLoader","Loader","height","UpdateUserForm","count","userRecordModified","userlist","UpdateUser","userid","params","AdminDashboard","paddingTop","productlistvalues","productdata","productvalueFetched","normalize","getMaterialsTypes","materialsvalue","materialsdata","materialoption","getMaterial","materialslistvalue","materialsvalues","transactionapi","getUomDetails","uomlist","addMasterItemType","masterItemType","getMasterItemType","masteritemtypes","updateMasterItemType","addMasterItemList","url","method","Accept","Content-Type","masterItemList","getMasterItemList","masteritemlist","updatemasteritemlist","deletemasteritemlist","addPurchaseOrder","purchaseorderlist","updatePurchaseOrder","getPurchaseOrderList","searchponumber","ponumber","purchaseordervalue","addorupdateitemsinlocation","additemsinlocation","getitemlistavaliable","locationid","itemid","totalitemlistvalues","getReceiptList","receiptlist","getMasterItemTypes","masteritemtypenamevalue","masteritemtypenamedata","MasterItemTypeName","masteritemtypelistvalues","masteritemtypelistdata","MasterItemTypeList","getPurchaseOrder","purchaseorderlistvalues","purchaseorderlistdata","purchaseOrderListFetched","totalitemvaluesearch","ProductBilling","product","profit","qty","labourcost","materiallistvalues","createSelectItems","items","map","option","i","filter","productname","_id","masteritemdescription","Object","values","textAlign","masteritemlistvalues","BillingTable","_this$props","selectedProduct","productformvalues","materialTotalCost","productMaterial","productMaterialData","parseFloat","productqty","product_id","masteritemcostperunit","reduce","a","b","subTotal","grandTotal","colSpan","masteritemname","masteritemuom","uomname","toFixed","parseInt","productlistvalue","gloabl","global","Breadcrumb","BreadcrumbItem","BillingForm","LoginForm","JSON","stringify","Roles","ADMIN","EMPLOYEE","ITADMIN","FINANCE","PURCHASE","SALES","STORE","PRODUCTION","LoginPage","dataHandler","Mob_JWT","decoded","jwtDecode","userinfo","AddMaterialForm","materialtype","materialname","materialdescription","materialuom","costperunit","materialrate","materialoptionlistvalues","DatatablePage","columns","columnvalue","rows","rowvalues","MDBDataTable","striped","bordered","small","AddMaterial","updateButton","path","addMaterial","view","DataTable","label","field","sort","AddMaterialTypesForm","material","AddMaterialType","materialoptions","addMaterialTypes","MDBBtn","size","AddMaterialOptions","UpdateMaterialForm","materialvalues","updateMaterial","updatematerialdetails","materialid","UpdateMaterialTypesForm","dataRecord","materialoptionobjectlist","UpdateMaterialType","updateMaterialType","UpdateMaterialTypeForm","ProductForm","initialState","createSelectItems3","optionvalue","uomlistvalues","masteritemtypename","split","createSelectItems2","createSelectunfinishedItems","masteritemtype","handleClick","_toConsumableArray","products","productsqty","productsuom","productsqtyinmeter","handleChange","index","materiallistvaluesObject","ProductqtyhandleChange","arr","item","productsweight","masteritemunitwt","ProductuomhandleChange","ProductqtyinmeterhandleChange","removeClick","removeProduct","splice","productMaterials","forEach","v","obj","alert","toggelbutton","getUnitmeasures","uomdata","message","_this3","Modal","ModalHeader","ModalBody","ModalFooter","_React$createElement3","marginTop","paddingLeft","getUomList","uomlistvalue","uomListFetched","Product","propTypes","PropTypes","func","isRequired","ViewProduct","productMaterialslist","materialitemtype","tablerows","itemlist","marginBottom","fontSize","fontWeight","marginRight","Table","ViewProductList","CustomerForm","customernumber","customername","customercontactnumber","customergstnumber","customeraddress1","customeraddress2","city","pincode","country","codate","getTime","deliveryAddress","address1","address2","visible","sameAsBilling","suppliercontactlistvalue","onDeliveryAddressChange","val","onShowAlert","setTimeout","keys","customerlistvalues","toString","ViewCustomerList","searchcustomername","searchfromdate","searchtodate","backupcustomerlistvalues","fromdatetimestamp","todatetimestamp","componentDidMount","getTransaction","filterCustomer","customervalues","customerdata","Transaction","setItem","dateName","dateValue","getDateByMMDDYYYY","filterBydates","initializeCustomers","ev","_this4","trim","filtereddata","toLowerCase","indexOf","date1","date2","_this5","customer","comparedate","_this$state2","customerBlock","customerapi","addcustomer","getcustomer","customerlist","updatecustomer","getcustomerTransaction","getCustomerList","customerlistvalue","customerListFetched","Customer","addCustomerContact","AddCustomerForm","enquirydate","quotationdate","podate","enquirytimestamp","quotationtimestamp","podatetimestamp","ponum","customerName","getItem","transactionID","customertransationvalues","backupcustomertransationvalues","initializeTransactions","poreceived","updatePO","podates","put","onChange1","onChange2","customerid","Transactionhistory","enq_Date","_this6","modaldata","_this7","placeholder","customerTransactionBlock","quote","PO","invoice","dc","quotation","Qno","po","margin","marginLeft","background","getCustomerTransaction","customerTransactionFetched","UpdateCustomerForm","updateCustomerContact","ViewCustomerTable","CustomerInfo","quotationapi","addquotation","quotationdata","updatequotation","getquotation","quotationlist","searchquotation","customerquotationlist","quotationCreated","quotationlistvalues","quotationFetched","CustomerQuotationList","AddYearForm","exists","updated","currentyear","AddFinancialYear","updateYear","addYear","challanapi","challan","addchallan","challandata","updatechallan","getchallan","challanlist","challanCreated","getChallan","challanlistvalues","challanFetched","ChallanForm","selectedItemlist","itemname","itemdescription","itemtype","itemrate","itemuom","itemlocation","quantity","totalcost","remarks","customerdetail","deliverychallanno","toaddress","mobilenumber","site","vehiclenumber","gstno","otherreference","customerobjects","supplierdetaillistvalue","supplierdetaillistvalueobject","masteritemlistvaluesobject","currencylistvalues","customerlistSelect","uom","locationlistvalue","successmsg","counts","handleChallanDate","handlePODate","handleChange2","selected_id","totalValue","totalvalue","createSelectcustomer","selectitemchange","selected_item","masteritemrate","ID","locationChange","selected_location","onhandlerChange","onSubjectHandler","filterItems","createSelectItemTypes","createSelectCurrencyItems","currencyname","createSelectUomItems","createSelectLocationItems","locationname","quantityChange","remarkChange","unitChange","AddedIteminfo","_this$state$data","supplierdetail","getDCDetails","getChallandata","founddata","newState","assign","addeditemlist","arraySet","objset","itemarray","localeCompare","customStyles","control","base","minHeight","valueContainer","provided","padding","input","indicatorSeparator","display","indicatorsContainer","customerID","Select","classNamePrefix","styles","defaultValue","options","readOnly","currencylistvalue","purchaseorderlistvalue","AddChallan","updateChallan","addChallan","ViewChallan","quotationvalue","StyleSheet","create","textcenter","textright","textleft","paddingleft","pagepadding","section","position","flexDirection","overflow","section_column","myHeight","headerfont","descriptionText","headerfont2","headerfontleft","billingaddress","shippingaddress","row","justifyContent","dcaddress","dcaddress_left","view_border","border","flexGrow","view_border_left","borderLeft","borderTop","borderBottom","view_border_right","borderRight","column","headerwidth","headerwidthdate","headerwidthlogo","header_name","header_sub_name","paddingHorizontal","header_sub_name_phone","header_tintext","header_sub_name3","header_sub_nameB","flex","header_sub_nameA","headerwidthAddress","refstyle","paddingBottom","headerpadding","flexgrow","fontsize18","kindattend","yourref","main","tableheaderbgcolor","backgroundColor","footerfixed","bottom","dc_header","dc_gst","Small","_ref","children","Text","Medium","_ref3","textDecorationLine","Bold","_ref5","_ref6","MyDocument","_ref7","data_cond","toAD","totalrs","taxableAmount","taxableamount","moment","format","grandtotal","purchaseorderdate","deliveryaddress","vendorcode","freightcharges","subtotal","cgst","sgst","igst","total","deliverychallannumber","goodsDescription","invoicenumber","roundoffamount","mobileno","purchaseordernumber","tax","tableComponentTwo","datalength","Page","wrap","TableHeader","TableCell","weighting","TableBody","DataTableCell","getContent","r","slno","View","Image","itemimage","weighteach","itemdiscount","unit","Document","stye","paddingRight","wordWrap","ViewChallanPdf","status","link","quotationid","requestdeliverydate","masteritemimage","dynamicClick","document","getElementsByClassName","getElementById","click","href","download","PDFViewer","EnquiryPage","update","enquirylistvalues","backupenquirylistvalues","errorMsg","eno","company","detail","enquiryFrom","getEnquiries","addenquiry","addnewenquiry","updateenquiry","enquirylist","enquirydata","enquiryvalues","reverse","enquiry","errormessage","float","invoiceapi","addinvoice","invoicedata","updateinvoice","getinvoice","invoicelist","getproformainvoice","invoiceCreated","invoicelistvalues","invoiceFetched","InvoiceForm","_customerdetail","_data","transaction","hsncode","saccode","masteritemtypelistvaluesobject","_objectSpread2","sub","taxable","Number","calculatePercentageAmount","ttl","gst","gt","roa","calculateRoundoffTotal","_objectSpread7","onCustomerChange","onRemarksChange","handleDate","handleWorkorderDate","handleDespathdate","purchaseDate","invocieDate","bool","discountpercentagevalue","discountvalue","totalvaluecost","itemdiscountChange","discount","unitcost","particularindextotalvalue","_objectSpread15","updateQuotation","saveDynamicPonum","createChallanList","handleChallanChange","selecteddeliveryChallan","selectedChallan","getInvoiceDetails","lastIndexOf","invoicedate","deliverychallandata","workorderno","workorderdate","despathdate","removaltime","transportationcharge","advanceamountreceived","_React$createElement","quotationnumber","AddInvoice","valid","ProformaInvoiceForm","proformainvoicelist","transportationgst","transportchargerequired","AddProformaInvoice","ViewInvoice","invoiceid","originalInvoice","profomaInvoice","_pagepadding","boxShadow","headerfont4","headerfont5","headerfont3","seal","invoice_header","nobordertable","borderWidth","borderRightWidth","borderBottomWidth","Description","_ref2","SmallBold","_ref4","amountinwords","Rs","amount","words","number","join","n_length","words_string","n_array","received_n_array","substr","j","cgstval","sgstval","igstval","n","op","nums","whole","substring","fraction","RsPaise","alignItems","ViewInvoicePdf","ViewProformaInvoice","sessionStorage","getProformaInvoice","proformainvoicelistvalues","proformainvoiceFetched","MyDocument2","financialYear","financialyear","total2","transportationgstper","transportationchargegst","totalaftertransportcharge","sign","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","ViewProformaInvoicePdf","_componentDidMount","_asyncToGenerator","_callee","_context","parse","AddItemListForm","itemName","masteritemshortdescription","permeter","perfeet","perinch","masteritemimagefile","filename","onNameChange","_objectSpread3","_objectSpread4","onItemTypeChange","selecteditemtype","selecteditemtypevalue","selectitemid","selecteditemvalues","fileSelectedHandler","files","file_size","file_name","file_type","filesize","hasExtension","formdata","FormData","append","fileName","exts","RegExp","replace","test","encType","accept","cursor","ViewMasterItemList","showModal","setDeleteId","deleteItem","deleteMasterItemList","masteritemdata","deletedData","payload","AddmasterItemList","MasterItemListForm","errorHandler","MasterItemListValues","class","UpdateItemListForm","itemImage","imageChanged","itemimg","maxWidth","maxHeight","UpdateMasterItemList","UpdateMasterItemListForm","MasterItemTypeForm","MasterItemTypename","MasterItemType","ItemMasterTypeList","masteritemtypesvalues","masteritemtypedata","UpdateMasterItemTypeForm","masteritemtypenamevalueobjectlist","UpdateItemMasterType","updateMasterItemTypes","masteritemid","EditTable","poid","poitemid","itemquantity","receivedqty","recevingqty","totalqty","receiptnumber","selectedItem","sucess","loadingvalue","selected_qty","iteminfo","itemlistsubmit","selectedItemlistvalues","tableBody","nowDate","min","max","locationapi","getLocationList","locationlist","locationdata","locationListFetched","ReceiptScreenForm","onhandleChange","ReceiptTable","receiptlistitems","receiptlisttable","receiptvalue","ReceiptScreen","getReceiptlist","searchPoNumber","podata","poItem","datavalue","searchporesult","searchdata","_x","savereport","orderlistvalues","today","poqty","receiptDate","availqty","ViewReceiptPdf","poreceiptvalues","itemcode","TotalRecQty","moveorderapi","moveorder","addmoveorder","moveorderdata","getmoveorder","moveorderlist","getItemsMoveOrder","addMoveOrder","moverorderlistvalues","moverorderlist","getMoveOrder","moveorderFetched","itemorderlist","itemorderlistvalues","itemdata","MoveOrderScreenForm","availableQuantity","moveorderno","fromaddress","tolocationlist","handleChangeDeliveryDate","it","itemdesc","onhandlerFromChange","onhandlerToChange","createToLocationList","moveorderlistvalues","getMovedata","overflowX","MoveOrderScreen","ViewProduction","ViewMoveOrderProduction","moveorderid","receivedData","_componentWillReceiveProps","_callee2","_context2","AddOnHandScreenForm","isAdded","entities","AddOnHand","productionapi","addproduction","productiondata","getproduction","productionlist","productionlistvalues","productionFetched","ProductionForm","totalweight","readystock","firstround","secondround","thirdround","productionorderno","subAssembly","dummyProductMapping","assembly","handleChangeCust","products2","selectedIndex","text","productMaterial2","found","calculationArray","calculationdata","quantityPerMeter","quantityPerKg","thickness","weightChange","stockChange","secondChange","firstChange","thirdChange","toggelreload","onthicknessChange","mainindex","onQuantityChange","onQuantityChangeMeter","calc","kg","onQuantityChangeKg","onTotalChange","addItemComp","changeQuantity","getProddata","maninindex","AddProduction","ViewProudction","productiondate","description","qtyAvaillength","isViewList","productionTodayList","updateTransaction","toggle2","onhandlerChange2","subitem","usedqty","transactionHistrory","view2","viewTransaction","addTransaction","headerBlock","contentBlock","PurchaseOrderForm","isEditdone","suppliernumber","suppliername","supplieraddress1","supplieraddress2","suppliergstnumber","refno","subject","suppliercontactid","quotationno","currency","scheduledays","schedulepayment","createSelectSupplier","createSelectSupplierContact","suppliercontactname","_this$state$data2","getPODetails","podetail","supplierid","referenceno","currencyid","itemnameinfo","supplierapi","addSupplierContact","supplierContactdata","getSupplierContact","suppliercontactlist","addsupplierdetails","getSupplierDetails","supplierdetaillist","updateSupplierContact","suppliercontactlistdata","suppplierContactListFetched","supplierdetaillistdata","suppplierDetailListFetched","getCurrencyList","currencylist","currencydata","currencyListFetched","purchaseOrder","ViewPurchaseOrderlist","purchaseorder","address","suppliercity","supplierstate","supplierpincode","suppliercountry","columnSection","padd6","padding2","headerwidthNew","fontsize18bold","totaleachitem","selectecontactlist","selectedcontactlist","suppliercontactnumber","client","ViewPurchaseOrderPdf","purchaseorderid","selectedcontact","contactid","QuotationForm","isRemovedCalled","isVisible","itemdiscountamount","tcharge","transitinsurance","ws","loadingcharge","selectitemchange2","totaldiscountcost","getQuotationDetails","customerNumber","customerGST","customerAddress","dataelem","F","AddQuotation","ViewQuotation","tableHeader","cutoff","whiteSpace","wordBreak","bgblue","padding5","fontbold","smallicon","brandname","padding1","flexview","RedBold","BlackBold","customeraddress","loadingcharges","tchargegst","subtotalgst","totalincludegst","proud","makeInIdia","justDial","scaff","SupplierContactForm","SupplierContact","SupplierDetail","suppliercontactnamelist","suppliercontactdesignation","suppliercontactemail","supplierContacthandleChange","removeContact","contactnameChange","contactdesignationChange","contactnumberChange","contactemailChange","supplierContactinfo","suppliercontactarray","suppliercontactdesignationarray","suppliercontactnumberarray","suppliercontactemailarray","addSupplierDetails","SupplierDetailForm","SupplierDetailUpdateForm","mongoid","SupplierDetailUpdate","updateSupplierDetails","supplierdetailid","Supplierlist","supplierdata","supplierAddress","ItemQuantitySearch","TotalQuantity","ItemSearch","order","addorder","orderdata","updateaddorder","getorder","orderlist","orderFetched","OrderForm","companydetails","contactperson","officeno","deliveryschedule","orderdate","distance","sitecontactperson","pono","handleChangeDeliveryschedule","getWorkorderDetails","getOrderData","_React$createElement2","AddOrder","ViewOrder","updateCompleteOrder","updateworkorder","completed","DateNow","deliveryDate","companyname","ViewCompletedOrder","totalwt","ViewOrderPdf","AdminRole","deleteButton","startdat","userlistvalue","userFetched","EmployeeRole","BOMPage","_Component","ChallanPage","padding-top","CRMPage","CustomerPage","InventoryPage","top","InvoicePage","InvoicePage1","InvoicePage2","ItemsPage","ManufacturingPage","MoveOrder","OnHandPage","ProductionPage","PurchaceOrderPage","QuantityPage","QuotationPage","SupplierPage","TransactionPage","adminMenu","Fragment","financeMenu","purchaseMenu","salesMenu","storeMenu","productionMenu","WorkOrderPage","component","rest","_objectWithoutProperties","_excluded","Route","render","Redirect","roles","includes","App","exact","GuestRoute","UserRoute","ViewAdmin","ViewEmployee","ProductList","UpdateMaterial","ViewMoveOrder","ViewItemsMoveOrder","AddMasterItemList","MasterItemList","UpdateMasterItemType","PurchaseOrder","ViewPurchaseOrderList","SupplierList","AddCustomer","UpdateCustomer","ViewQuotationPdf","AddChalan","Boolean","hostname","appReducer","combineReducers","action","storage","users","arrayData","fileteredData","ind","receiptlistvalues","rootReducer","persistConfig","LocalStorage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","persistStore","library","add","faHome","faDollyFlatbed","faCube","faKaaba","faUsers","faUser","faUsersCog","faUserFriends","faCalendarPlus","ReactDOM","BrowserRouter","Provider","PersistGate","persistor","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ddc53e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seal.0511c619.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign.83a51cee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd12c247.png\";","module.exports = __webpack_public_path__ + \"static/media/js.15986e52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mk.e7f890af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proud.b1a70432.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scaff.184bf216.jpg\";","module.exports = __webpack_public_path__ + \"static/media/client.e1af59ba.png\";","import axios from \"axios\";\n\nexport default {\n  user: {\n    userRegister: userRegisterdata => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/auth`, {\n          userRegisterdata\n        })\n        .then(res => {\n          return res.data.userRecord;\n        });\n    },\n    login: credentials => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/login`, {\n          credentials\n        })\n        .then(res => {\n          return res.data.user;\n        });\n    },\n    getUser: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuser`)\n        .then(res => {\n          return res.data.userdata;\n        });\n    },\n    getUserbyid: id => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuserbyid?id=${id}`)\n        .then(res => {\n          return res.data.userRecordData;\n        });\n    },\n    updateUser: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/api/updateuser?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    deleteUser: id => {\n      return axios\n      .delete(`${process.env.REACT_APP_BASE_URL}/api/deleteUser?id=${id}`)\n    }\n  },\n  material: {\n    addmaterialtype: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/materialtype/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterialstype: data => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/materialtype/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerialtype: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/materialtype/updatematerialtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    addmaterial: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/material/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterial: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/material/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerial: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/material/updatematerial?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  product: {\n    addproduct: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/product/addproduct`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getproducts: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/product/getproducts`)\n        .then(res => {\n          return res.data.productlist;\n        });\n    }\n  },\n  year: {\n    addyear: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/year/addyear`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    checkexists: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/year/getyear`)\n        .then(res => {\n          return res.data.year;\n        });\n    },\n    updateyear: data => {\n      return axios\n      .patch(\n        `${process.env.REACT_APP_BASE_URL}/year/updateyear?id=${data.updateid}`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res.data.success;\n      })\n      .catch(err => {\n        return err.data.error;\n      });\n    }\n  }\n};\n","import axios from \"axios\";\nexport default (token = null) => {\n  if (token) {\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.headers.common.authorization;\n  }\n};\n","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\nexport const USER_FETCHED = 'USER_FETCHED';\nexport const MATERIAL_OPTIONS = 'MATERIAL_OPTIONS';\nexport const MATERIAL_VALUES_FETCHED = 'MATERIAL_VALUES_FETCHED';\nexport const PRODUCT_VALUES_FETCHED = 'PRODUCT_VALUES_FETCHED';\nexport const MASTER_ITEM_TYPES = 'MASTER_ITEM_TYPES';\nexport const MASTER_ITEM_LIST = 'MASTER_ITEM_LIST';\nexport const DELETE_MASTER_ITEM_LIST = 'DELETE_MASTER_ITEM_LIST';\nexport const SUPPLIER_CONTACT_LIST = 'SUPPLIER_CONTACT_LIST';\nexport const SUPPLIER_DETAIL_LIST = 'SUPPLIER_DETAIL_LIST';\nexport const UOM_LIST = 'UOM_LIST';\nexport const CURRENCY_LIST = 'CURRENCY_LIST';\nexport const Location_LIST = 'LOCATION_LIST';\nexport const PURCHASE_ORDER_LIST = 'PURCHASE_ORDER_LIST';\nexport const PO_RECEIPT_LIST = 'PO_RECEIPT_LIST';\nexport const ADD_CUSTOMER_CONTACT = 'ADD_CUSTOMER_CONTACT';\nexport const CUSTOMER_CONTACT_FETCHED = 'CUSTOMER_CONTACT_FETCHED';\nexport const CUSTOMERTRANSACTION_FETCHED = 'CUSTOMERTRANSACTION_FETCHED';\nexport const ADD_CUSTOMER_TRANSACTION = 'ADD_CUSTOMER_TRANSACTION';\n\nexport const QUOTATION_FETCHED = 'QUOTATION_FETCHED';\nexport const ADD_QUOTATION = 'ADD_QUOTATION';\n\nexport const INVOICE_FETCHED = 'INVOICE_FETCHED';\nexport const PROFORMAINVOICE_FETCHED = 'PROFORMAINVOICE_FETCHED';\nexport const ADD_PROFORMA_INVOICE = 'ADD_PROFORMA_INVOICE';\n\nexport const ADD_INVOICE = 'ADD_INVOICE';\n\nexport const CHALLAN_FETCHED = 'CHALLAN_FETCHED';\nexport const ADD_CHALLAN = 'ADD_CHALAN';\n\nexport const ORDER_FETCHED = 'ORDER_FETCHED';\nexport const ADD_ORDER = 'ADD_ORDER';\n\nexport const PRODUCTION_FETCHED = 'PRODUCTION_FETCHED';\nexport const ADD_PRODUCTION = 'ADD_PRODUCTION';\n\nexport const MOVEORDER_FETCHED = 'MOVEORDER_FETCHED';\nexport const ADD_MOVEORDER = 'ADD_MOVEORDER';\n","import { schema } from 'normalizr';\n\nexport const userSchema = new schema.Entity('users', {}, { idAttribute: 'id' });\n\nexport const uomListSchema = new schema.Entity(\n  'uomlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialOptionSchema = new schema.Entity(\n  'materialoptions',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialListSchema = new schema.Entity(\n  'materialslistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const productListSchema = new schema.Entity(\n  'productlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeNameSchema = new schema.Entity(\n  'masteritemtypenamevalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeListSchema = new schema.Entity(\n  'masteritemtypelistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierContactListSchema = new schema.Entity(\n  'suppliercontactlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierDetailListSchema = new schema.Entity(\n  'supplierdetaillistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const currencyListSchema = new schema.Entity(\n  'currencylistvalue',\n  {},\n  { idAttribute: 'id' }\n);\nexport const locationListSchema = new schema.Entity(\n  'locationlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const purchaseOrderListSchema = new schema.Entity(\n  'purchaseorderlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const receiptListSchema = new schema.Entity(\n  'receiptlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerListSchema = new schema.Entity(\n  'customerlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerTransactionSchema = new schema.Entity(\n  'customertransationvalues',\n  {},\n  { idAttribute: 'customerid' }\n);\n\nexport const quotationListSchema = new schema.Entity(\n  'quotationlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const invoiceListSchema = new schema.Entity(\n  'invoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const proformainvoiceListSchema = new schema.Entity(\n  'proformainvoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const challanListSchema = new schema.Entity(\n  'challanlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const orderListSchema = new schema.Entity(\n  'orderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const productionListSchema = new schema.Entity(\n  'productionlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const moveorderListSchema = new schema.Entity(\n  'moveorderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport setAuthorizationHeader from \"../utils/setAuthorizationHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  USER_FETCHED\n} from \"../Services/types\";\nimport { userSchema } from \"../Schemas/schemas\";\n\nexport const userLoggedIn = user => {\n  return {\n    type: USER_LOGGED_IN,\n    user: user\n  };\n};\n\nexport const userLoggedOut = () => {\n  return {\n    type: USER_LOGGED_OUT,\n    user: {}\n  };\n};\n\nexport const userFetched = userlist => {\n  return {\n    type: USER_FETCHED,\n    userlist\n  };\n};\n\nexport const userRegister = data => {\n  return dispatch => {\n    return api.user.userRegister(data);\n  };\n};\n\nexport const getUser = () => {\n  console.log(\"dispatch action calling\");\n  return dispatch => {\n    return api.user.getUser().then(userlist => {\n      const userlistvalue = userlist.userdata;\n      return dispatch(userFetched(normalize(userlistvalue, [userSchema])));\n    });\n  };\n};\n\nexport const updateUser = data => {\n  return dispatch => {\n    return api.user.updateUser(data);\n  };\n};\n\nexport const deleteUser = id => {\n  return dispatch => {\n    return api.user.deleteUser(id);\n  }\n}\n\nexport const login = credentials => {\n  return dispatch => {\n    return api.user.login(credentials).then(user => {\n      localStorage.Mob_JWT = user.token;\n      setAuthorizationHeader(user.token);\n      var decoded = jwtDecode(localStorage.Mob_JWT);\n      console.log(\"Decoded \", decoded)\n      const userinfo = {\n        email: decoded.email,\n        role: decoded.role,\n        token: localStorage.Mob_JWT\n      };\n      dispatch(userLoggedIn(userinfo));\n    });\n  };\n};\n\nexport const logout = e => {\n  return dispatch => {\n    localStorage.removeItem(\"Mob_JWT\");\n    dispatch(userLoggedOut());\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/actions';\nimport logo from '../../Images/logo.png';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      isAuthenticated: this.props.isAuthenticated\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logout = () => {\n    this.props.logout();\n    window.location.reload();\n    this.props.history.push('/login');\n  };\n  render() {\n    return (\n      <div>\n        <Navbar  expand='md'>\n          <div className='container'>\n            <NavbarBrand tag={Link} to='/'>\n              <div>\n                <img src={logo} alt='scaffolding' style={{ width: '90px' }} />\n              </div>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'admin'\n                ) && (\n                  <NavItem>\n                    <NavLink tag={Link} to='/admin_dashboard'>\n                      <i className='fas fa-home fa-2x'></i>\n                    </NavLink>\n                  </NavItem>\n                )}\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'management' || this.props.role == 'itadmin'\n                ) && (\n                  <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                      Users\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem tag={Link} to='/adduser'>\n                        Add User\n                      </DropdownItem>\n                      <DropdownItem tag={Link} to='/adminlist'>\n                        Registered user details\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                )}\n                {/* {!!(this.props.isAuthenticated && this.props.role == \"admin\") &&\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Material & product\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag={Link} to=\"/addmaterialtype\">\n                    Add MaterialTypes \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addmaterial\">\n                    Add Material \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addproduct\">\n                    Add Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/viewproductlist\">\n                    View Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/productbilling\">\n                    Product Billing \n                  </DropdownItem>  \n                </DropdownMenu>\n              </UncontrolledDropdown>\n              } */}\n                {this.props.isAuthenticated ? (\n                  <NavItem>\n                    <NavLink tag={Link} onClick={this.logout}>\n                      Logout\n                    </NavLink>\n                  </NavItem>\n                ) : (\n                  <NavItem>\n                    <NavLink tag={Link} to='/login'>\n                      Login\n                    </NavLink>\n                  </NavItem>\n                )}\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  if (state && state.user) {\n    return {\n      isAuthenticated: !!state.user.token,\n      role: state.user.role\n    };\n  } else {\n    return {\n      isAuthenticated: false,\n      role: 'admin'\n    };\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { logout }\n  )(Header)\n);\n","import React from 'react';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass AddUserForm extends React.Component {\n  state = {\n    data: {\n      title: 'Mr',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: null,\n      username: 'nA',\n      password: '',\n      repassword: '',\n      active: '1',\n      persontype: 'admin',\n      department: '1',\n      job: '1',\n      location: '1'\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? <Alert color='info'>user is added</Alert> : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='password'\n                      type='password'\n                      id='password'\n                      value={data.password}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                       \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Re Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='repassword'\n                      type='password'\n                      id='re-password'\n                      value={data.repassword}\n                      onChange={this.onChange}\n                      validate={{\n                        match: { value: 'password' },\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                      \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {loading}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default AddUserForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { userRegister } from \"../../actions/actions\";\nimport AddUserForm from \"./AddUserForm/AddUserForm\";\n\nclass AddUser extends React.Component {\n  submit = data => this.props.userRegister(data);\n\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <AddUserForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nAddUser.propTypes = {\n  userRegister: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { userRegister }\n)(AddUser);\n","import React from \"react\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport \"./loader.css\";\nclass CustomLoader extends React.Component {\n    render() {\n        return(\n         <Loader className=\"loaderposition\"\n            type=\"ThreeDots\"\n            color=\"#ed272f\"\n            height=\"100\"\n            width=\"100\"\n         />\n        );\n       }\n}\n\nexport default CustomLoader;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\nimport CustomLoader from '../../../Components/loader/loader';\n\nclass UpdateUserForm extends React.Component {\n  state = {\n    data: {\n      id: '',\n      title: '',\n      firstname: this.props.firstname,\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: '',\n      username: '',\n      password: '',\n      repassword: '',\n      active: '',\n      persontype: '',\n      department: '',\n      job: '',\n      location: ''\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    count: ''\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const userRecord = props.userRecord;\n    const userRecordModified = userRecord;\n    userRecordModified.startdate = new Date(userRecord.startdate);\n    // userRecordModified.enddate = new Date(userRecord.enddate);\n    userRecordModified.enddate =\n      userRecord.enddate === null ? null : new Date(userRecord.enddate);\n    this.setState({ ...this.state.data, data: userRecordModified });\n  }\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(data => {\n        console.log('updateuserform page');\n        console.log(data);\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          {!!success ? (\n            <Alert color='info'>User details is updated successfully</Alert>\n          ) : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                      value={data.title}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n            \n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        disabled={true}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Super Admin</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                        {data.enddate ? (\n                        <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />                        \n                      ): null}\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\nUpdateUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateUserForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport UpdateUserForm from \"./AddUserForm/UpdateUserForm\";\n// import api from \"../api\";\nimport { updateUser } from \"../../actions/actions\";\n\nclass UpdateUser extends React.Component {\n  state = {\n    userRecord: \"\"\n  };\n\n  componentDidMount() {\n    const userid = this.props.match.params.id;\n    const userRecord = this.props.userlist[userid];\n    this.setState({ userRecord });\n    // api.user.getUserbyid(userid)\n    // .then((userRecord)=>{\n    //     this.setState({userRecord});\n    // })\n    // .catch((err)=>{\n    //     console.log(\"updateuserfile err\");\n    //     console.log(err);\n    // });\n  }\n\n  submit = data => this.props.updateUser(data);\n\n  render() {\n    const { userRecord, userid } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <UpdateUserForm userRecord={userRecord} submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nUpdateUser.propTypes = {\n  userlist: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  userRecord: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    firstname: PropTypes.string.isRequired,\n    lastname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    startdate: PropTypes.string.isRequired,\n    enddate: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    persontype: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    job: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updateUser }\n)(UpdateUser);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AdminDashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/inventory_page\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Setup</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/transaction_page\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Transactions</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n            {/* <li className=\"bg-color-lg-pk\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-user fa-3x\"></i>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-org\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-users-cog fa-3x\"></i>\n                </Link>\n              </div>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport {\n  MATERIAL_OPTIONS,\n  MATERIAL_VALUES_FETCHED,\n  PRODUCT_VALUES_FETCHED\n} from \"../Services/types\";\nimport {\n  materialOptionSchema,\n  materialListSchema,\n  productListSchema\n} from \"../Schemas/schemas\";\n\nexport const productvalueFetched = productlistvalues => {\n  return {\n    type: PRODUCT_VALUES_FETCHED,\n    productlistvalues\n  };\n};\nexport const materialoptionFetched = materialoption => {\n  return {\n    type: MATERIAL_OPTIONS,\n    materialoption\n  };\n};\n\nexport const materialsFetched = materialsvalues => {\n  return {\n    type: MATERIAL_VALUES_FETCHED,\n    materialsvalues\n  };\n};\n\nexport const addproduct = data => {\n  return dispatch => {\n    return api.product.addproduct(data);\n  };\n};\n\nexport const getproducts = data => {\n  return dispatch => {\n    return api.product.getproducts(data).then(data => {\n      const productlistvalues = data.productdata;\n      return dispatch(\n        productvalueFetched(normalize(productlistvalues, [productListSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterialTypes = data => {\n  return dispatch => {\n    return api.material.addmaterialtype(data);\n  };\n};\n\nexport const updateMaterialType = data => {\n  return dispatch => {\n    return api.material.updatematerialtype(data);\n  };\n};\n\nexport const getMaterialsTypes = () => {\n  return dispatch => {\n    return api.material.getmaterialstype().then(materiallist => {\n      const materialsvalue = materiallist.materialsdata;\n      return dispatch(\n        materialoptionFetched(normalize(materialsvalue, [materialOptionSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterial = data => {\n  return dispatch => {\n    return api.material.addmaterial(data);\n  };\n};\n\nexport const getMaterial = () => {\n  return dispatch => {\n    return api.material.getmaterial().then(materiallist => {\n      const materialslistvalue = materiallist.materialsdata;\n      return dispatch(\n        materialsFetched(normalize(materialslistvalue, [materialListSchema]))\n      );\n    });\n  };\n};\n\nexport const updatematerialdetails = data => {\n  return dispatch => {\n    return api.material.updatematerial(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  uom: {\n    getUomDetails: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n        .then(res => {\n          return res.data.uomlist;\n        });\n    }\n  },\n  transaction: {\n    addMasterItemType: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/transaction/addmasteritemtype`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getMasterItemType: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/transaction/getmasteritemtype`)\n        .then(res => {\n          return res.data.masteritemtypes;\n        });\n    },\n    updateMasterItemType: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/transaction/updatemasteritemtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  transactionMasterItemList: {\n    addMasterItemList: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/addmasteritemlist`,\n        method: \"POST\",\n        data: data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    getMasterItemList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/getmasteritemlist`\n        )\n        .then(res => {\n          return res.data.masteritemlist;\n        });\n    },\n    updatemasteritemlist: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/updatemasteritemlist?id=${data.id}`,\n        method: \"PATCH\",\n        data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    deletemasteritemlist: id => {\n      return axios\n      .delete(\n        `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/deletemasteritemlist?id=${id}`\n      )\n    }\n  },\n  purchaseorder: {\n    addPurchaseOrder: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/addpurchaseorder`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    updatePurchaseOrder: data =>{\n      console.log(data)\n      return axios\n      .post(\n        `${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res;\n      });\n    },\n    getPurchaseOrderList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorderrlist`\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    searchponumber: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/searchpurchaseorderrlist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.purchaseordervalue;\n        });\n    }\n  },\n  addorupdateitemsinlocation: {\n    addorupdateitemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/addorupdateitems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    additemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/additems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    getitemlistavaliable: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/getitemlistavaliable/?locationid=${data.locationid}&itemid=${data.itemid}`\n        )\n        .then(res => {\n          return res.data.totalitemlistvalues;\n        });\n    }\n  },\n  receipt: {\n    getReceiptList: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/receiptinfo/getreceiptinfolist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.receiptlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport {\n  MASTER_ITEM_TYPES,\n  MASTER_ITEM_LIST,\n  PURCHASE_ORDER_LIST,\n  PO_RECEIPT_LIST,\n  DELETE_MASTER_ITEM_LIST\n} from \"../Services/types\";\nimport {\n  masterItemTypeNameSchema,\n  masterItemTypeListSchema,\n  purchaseOrderListSchema,\n  receiptListSchema\n} from \"../Schemas/schemas\";\n\nexport const masterItemTypeNameFetched = MasterItemTypeName => {\n  return {\n    type: MASTER_ITEM_TYPES,\n    MasterItemTypeName\n  };\n};\n\nexport const masterItemTypeListFetched = MasterItemTypeList => {\n  return {\n    type: MASTER_ITEM_LIST,\n    MasterItemTypeList\n  };\n};\n\nexport const purchaseOrderListFetched = purchaseorderlistvalues => {\n  return {\n    type: PURCHASE_ORDER_LIST,\n    purchaseorderlistvalues\n  };\n};\n\nexport const ReceiptListFetched = receiptlistvalues => {\n  return {\n    type: PO_RECEIPT_LIST,\n    receiptlistvalues\n  };\n};\nexport const addMasterItemType = data => {\n  return dispatch => {\n    return api.transaction.addMasterItemType(data);\n  };\n};\n\nexport const updateMasterItemTypes = data => {\n  return dispatch => {\n    return api.transaction.updateMasterItemType(data);\n  };\n};\n\nexport const updatemasteritemlist = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.updatemasteritemlist(data);\n  };\n};\nexport const getMasterItemTypes = () => {\n  return dispatch => {\n    return api.transaction.getMasterItemType().then(masteritemtypes => {\n      const masteritemtypenamevalue = masteritemtypes.masteritemtypenamedata;\n      return dispatch(\n        masterItemTypeNameFetched(\n          normalize(masteritemtypenamevalue, [masterItemTypeNameSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const addMasterItemList = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.addMasterItemList(data);\n  };\n};\n\nexport const deleteMasterItemList = id => {\n  return dispatch => {\n    return api.transactionMasterItemList.deletemasteritemlist(id).then(deletedData => {\n      return dispatch({\n        type: DELETE_MASTER_ITEM_LIST,\n        payload: id\n     })\n    })\n  };\n}\n\nexport const getMasterItemList = () => {\n  return dispatch => {\n    return api.transactionMasterItemList\n      .getMasterItemList()\n      .then(masteritemlist => {\n        const masteritemtypelistvalues = masteritemlist.masteritemtypelistdata;\n        return dispatch(\n          masterItemTypeListFetched(\n            normalize(masteritemtypelistvalues, [masterItemTypeListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const addPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.addPurchaseOrder(data);\n  };\n};\n\n\nexport const updatePurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.updatePurchaseOrder(data);\n  };\n};\n\nexport const getPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.getPurchaseOrderList().then(purchaseorderlist => {\n      const purchaseorderlistvalues = purchaseorderlist.purchaseorderlistdata;\n      return dispatch(\n        purchaseOrderListFetched(\n          normalize(purchaseorderlistvalues, [purchaseOrderListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const searchPoNumber = data => {\n  return dispatch => {\n    return api.purchaseorder.searchponumber(data);\n  };\n};\n\nexport const addorupdateitemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.addorupdateitemsinlocation(data);\n  };\n};\n\nexport const additemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.additemsinlocation(data);\n  };\n};\n\nexport const getReceiptlist = data => {\n  return dispatch => {\n    return api.receipt.getReceiptList(data);\n    // .then(receiptlist => {\n    //   if (receiptlist.count > 0) {\n    //     const receiptlistvalues = receiptlist.receiptlist;\n    //     return dispatch(\n    //       ReceiptListFetched(normalize(receiptlistvalues, [receiptListSchema]))\n    //     );\n    //   }\n    //   return receiptlist;\n    // });\n  };\n};\nexport const totalitemvaluesearch = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.getitemlistavaliable(data);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    data: {\n      product: \"\",\n      profit: \"\",\n      qty: \"\",\n      labourcost: \"\"\n    },\n    productlistvalues: [],\n    errors: {},\n    materiallistvalues: {},\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    this.setState({ ...this.state, productlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const productlistvalues = Object.values(props.productlistvalues);\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const productlistvalues = this.state.productlistvalues;\n    const materiallistvalues = this.state.materiallistvalues;\n    productlistvalues\n      .map((option, i) => option)\n      .filter((option, i) => {\n        if (materiallistvalues[option.productname._id]) {\n          items.push(\n            <option key={i} value={option.id}>\n              {materiallistvalues[option.productname._id].masteritemdescription}\n            </option>\n          );\n        }\n      });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const data = this.props.submit(this.state.data);\n    console.log(data);\n    if (data) {\n      this.setState({ loading: false, errors: {}, success: true });\n    }\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Product Billing</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"product\">Product Id</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"product\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">Please select value</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"profit\">Profit %</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"profit\"\n                      type=\"text\"\n                      id=\"profit\"\n                      value={data.profit}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter profit value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"profit value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"qty\">Quantity</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"qty\"\n                      type=\"text\"\n                      id=\"qty\"\n                      value={data.qty}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter product quantity value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"quantity value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"labourcost\">Labour Cost</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"labourcost\"\n                      type=\"text\"\n                      id=\"labourcost\"\n                      value={data.labourcost}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter labour cost value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"labour cost value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{'textAlign':'center'}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductBilling);\n","import React from \"react\";\n\nclass BillingTable extends React.Component {\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.props;\n    const materialTotalCost =\n      selectedProduct.productMaterial\n        .map((productMaterialData, i) => {\n          return (\n            parseFloat(productMaterialData.productqty) *\n            // parseFloat(productMaterialData.product_id.materialrate) *\n            parseFloat(productMaterialData.product_id.masteritemcostperunit)\n          );\n        })\n        .reduce((a, b) => a + b, 0) * parseFloat(productformvalues.qty);\n    const subTotal =\n      materialTotalCost + parseFloat(productformvalues.labourcost);\n    const profit = (parseFloat(productformvalues.profit) / 100) * subTotal;\n    const grandTotal = subTotal + profit;\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th colSpan=\"4\">\n                {\n                  materiallistvalues[selectedProduct.productname._id]\n                    .masteritemdescription\n                }\n              </th>\n            </tr>\n            <tr>\n              <th>Item Name</th>\n              <th>UOM</th>\n              <th>Unit per Cost</th>\n              <th>Item Qty</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selectedProduct.productMaterial.map((productMaterialData, i) => {\n              return (\n                <tr>\n                  <td>{productMaterialData.product_id.masteritemname}</td>\n                  <td>\n                    {productMaterialData.product_id.masteritemuom.uomname}\n                  </td>\n                  <td>\n                    {productMaterialData.product_id.masteritemcostperunit}\n                  </td>\n                  <td>{productMaterialData.productqty}</td>\n                  <td>\n                    {parseFloat(productMaterialData.productqty).toFixed(2) *\n                      // parseFloat(productMaterialData.product_id.materialrate) *\n                      parseFloat(\n                        productMaterialData.product_id.masteritemcostperunit\n                      ).toFixed(2)}\n                  </td>\n                </tr>\n              );\n            })}\n            <tr>\n              <td colSpan=\"4\">Product Quantity</td>\n              <td>{parseFloat(productformvalues.qty)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Material Total Cost</td>\n              <td>{materialTotalCost}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Labour charge</td>\n              <td>{parseInt(productformvalues.labourcost)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Sub Total</td>\n              <td>{subTotal}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Profit % </td>\n              <td>{profit}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Grand Total</td>\n\n              <td>{grandTotal}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default BillingTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport BillingForm from \"./BillingForm/BillingForm\";\nimport BillingTable from \"./BillingTable\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    productformvalues: {},\n    productlistvalue: {},\n    materiallistvalues: {},\n    selectedProduct: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.props.getMasterItemList();\n  }\n  componentWillReceiveProps(props) {\n    const productlistvalues = props.productlistvalues;\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n  submit = productformvalues => {\n    const selectedProduct = this.props.productlistvalues[\n      productformvalues.product\n    ];\n    if (selectedProduct) {\n      this.setState({ ...this.state, productformvalues, selectedProduct });\n      return {\n        success: { gloabl: \"data exist\" }\n      };\n    } else {\n      return {\n        errors: { global: \"something went wrong\" }\n      };\n    }\n  };\n\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.state;\n\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Cost</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <BillingForm submit={this.submit} />\n        {!!selectedProduct && (\n          <BillingTable\n            selectedProduct={selectedProduct}\n            productformvalues={productformvalues}\n            materiallistvalues={materiallistvalues}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts, getMasterItemList }\n)(ProductBilling);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginForm.scss\";\n\nclass LoginForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    errors: {},\n    loading: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props.submit(this.state.data).catch(err => {\n      console.log(JSON.stringify(err))\n      this.setState({ errors: err.response.data.errors, loading: false });\n      this.props.error(false);\n    });\n  };\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading } = this.state;\n    return (\n      <div className=\"center login-form-parent mg-20\">\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <AvGroup>\n            <div>\n              {!!errors.global ? (\n                <Alert color=\"danger\">{errors.global}</Alert>\n              ) : null}\n\n              {!!errors.email ? (\n                <Alert color=\"danger\">{errors.email}</Alert>\n              ) : null}\n            </div>\n            <Label className='small-font-size' for=\"Email\">Email</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"email\"\n              id=\"Email\"\n              type=\"email\"\n              value={data.email}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a Email\"\n                },\n                pattern: {\n                  value:\n                    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                  errorMessage: \"Please enter valid Email\"\n                }\n              }}\n            />\n          </AvGroup>\n          <AvGroup>\n            <Label className='small-font-size' for=\"password\">Password</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a password\"\n                }\n              }}\n            />\n          </AvGroup>\n          <div style={{ textAlign: \"center\" }}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","export const Roles = {\n  ADMIN: 'management',\n  EMPLOYEE: 'employee',\n  ITADMIN: 'itadmin',\n  FINANCE: 'finance',\n  PURCHASE: 'purchase',\n  SALES: 'sales',\n  STORE: 'stores',\n  PRODUCTION:'production'\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginForm from './LoginForm/LoginForm';\nimport { login } from '../../actions/actions';\nimport { Roles } from '../../Services/Roles';\nimport CustomLoader from '../../Components/loader/loader';\nimport Alert2 from '../../Components/Alert/Alert';\n\nclass LoginPage extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.login(data).then(() => {\n\n      this.dataHandler(false);\n      console.log(this.props.role)\n      if (this.props.role === Roles.ADMIN) {\n        // return this.props.history.push(`/adduser`);\n        return this.props.history.push(`/admin_dashboard`);\n      } else if (this.props.role === Roles.ITADMIN) {\n        return this.props.history.push(`/adminlist`);\n      } else if (\n        this.props.role === Roles.FINANCE ||\n        this.props.role === Roles.PURCHASE ||\n        this.props.role === Roles.SALES ||\n        this.props.role === Roles.STORE ||\n        this.props.role === Roles.PRODUCTION\n      ) {\n        return this.props.history.push(`/transaction_page`);\n      } else {\n\n        return this.props.history.push(`/admin_dashboard`);\n      }\n    });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n\n        <LoginForm submit={this.submit} error={this.dataHandler} />\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  role: PropTypes.string.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  submit: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(LoginPage);\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass Alert2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  render() {\n    return (\n      <div>\n        {/* <Button color=\"danger\" onClick={this.toggle}>\n          {this.props.buttonLabel}\n        </Button> */}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Pondhan Scaffolding</ModalHeader>\n          <ModalBody>\n          {this.props.errormessage}\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"secondary\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Alert2;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass AddMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: null,\n      materialrate: null\n    },\n    materialoptionlistvalues: [],\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Material is added successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Itemname\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid Itemname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">Item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Please select value</option>\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemdescription\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">Item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                       \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                   \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddMaterialForm);\n","import React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./DataTable.css\";\n\nconst DatatablePage = props => {\n  const data = {\n    columns: props.columnvalue,\n    rows: props.rowvalues\n  };\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n      className={props.className}\n    />\n  );\n};\n\nexport default DatatablePage;\n","import React from \"react\";\nimport AddMaterialForm from \"./MaterialForms/AddMaterialForm\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  addMaterial,\n  getMaterial,\n  getMaterialsTypes\n} from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\n\nclass AddMaterial extends React.Component {\n  state = {\n    materiallist: \"\",\n    count: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_material/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentWillReceiveProps(props) {\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    const materiallist = materiallistvalues.map((materialdata, i) => {\n      return {\n        materialtype: materialdata.materialtype.materialname,\n        materialname: materialdata.materialname,\n        materialdescription: materialdata.materialdescription,\n        materialuom: materialdata.materialuom,\n        materialrate: materialdata.materialrate,\n        costperunit: materialdata.costperunit,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            View / Edit\n          </Button>\n        )\n      };\n    });\n    const count = materiallistvalues.length;\n    this.setState({ ...this.state, materiallist, count });\n  }\n\n  submit = data => {\n    return this.props.addMaterial(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { count, materiallist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"material Type\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Name\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"materialdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"unit of measure\",\n        field: \"materialuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Rate\",\n        field: \"materialrate\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"cost per unit\",\n        field: \"costperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"view / Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Item</BreadcrumbItem>\n        </Breadcrumb>\n        <AddMaterialForm submit={this.submit} />\n        <div>\n          {count > 0 && (\n            <div className=\"container mg-20\">\n              <DataTable columnvalue={columnvalue} rowvalues={materiallist} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAddMaterial.propTypes = {\n  addMaterial: PropTypes.func.isRequired,\n  getMaterial: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMaterial, getMaterial, getMaterialsTypes }\n)(AddMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass AddMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            material:\"\"\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    handleValidSubmit = () => {\n        console.log(this.state.data);\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Material details is Added successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Material data already exist.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Add Item Type</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"material\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.option}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item\"\n                                            },\n                                   \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid materialname\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <AvGroup className=\"mg-20\">\n                                    <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                                        Submit\n                                        {/* {loading} */}\n                                    </Button>\n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nAddMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nexport default AddMaterialTypesForm;","import React from \"react\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport AddMaterialOptions from \"./MaterialForms/AddMaterialTypesForm\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport { addMaterialTypes, getMaterialsTypes } from \"../../actions/Product\";\n\nclass AddMaterialType extends React.Component {\n  state = {\n    count: \"\",\n    materialoptions: []\n  };\n  componentDidMount() {\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_itemtype/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const materialoptionslist = Object.values(props.materialoptions);\n    const materialoptions = materialoptionslist.map((materialdata, i) => {\n      return {\n        materialname: materialdata.materialname,\n        view: (\n          <MDBBtn\n            color=\"info\"\n            size=\"sm\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            view / Edit\n          </MDBBtn>\n        )\n      };\n    });\n    const count = materialoptions.length;\n    this.setState({ ...this.state, materialoptions, count });\n  }\n  submit = data => {\n    return this.props.addMaterialTypes(data).then(data => {\n      this.props.getMaterialsTypes();\n      return data;\n    });\n  };\n  render() {\n    const { count, materialoptions } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div>\n        <div className=\"container mg-20\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Inventory</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Add Item Type</BreadcrumbItem>\n          </Breadcrumb>\n\n          <AddMaterialOptions submit={this.submit} />\n        </div>\n        {count > 0 && (\n          <div className=\"container mg-20\">\n            <DataTable columnvalue={columnvalue} rowvalues={materialoptions} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAddMaterialType.propTypes = {\n  addMaterialTypes: PropTypes.func.isRequired,\n  getMaterialsTypes: PropTypes.func.isRequired,\n  materialoptions: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    materialname: PropTypes.string.isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptions: state.materialoption\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { addMaterialTypes, getMaterialsTypes }\n)(AddMaterialType);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UpdateMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: \"\",\n      materialrate: \"1\"\n    },\n\n    errors: {},\n    materialoptionlistvalues: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.materialvalues;\n    data.materialtype = props.materialvalues.materialtype._id;\n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Item is updated successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader>Add Material</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemname\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid materialname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                      value={data.materialtype}\n                    >\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                      value={data.materialuom}\n                    >\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"ea\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                      \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                 \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateMaterialForm);\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMaterialForm from \"./MaterialForms/UpdateMaterialForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatematerialdetails, getMaterial } from \"../../actions/Product\";\n\nclass updateMaterial extends React.Component {\n  state = {\n    materialvalues: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    const materialid = this.props.match.params.id;\n    const materialvalues = this.props.materiallistvalues[materialid];\n    this.setState({ materialvalues });\n  }\n\n  submit = data => {\n    return this.props.updatematerialdetails(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { materialvalues } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/additem\">Add Item</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <UpdateMaterialForm\n          submit={this.submit}\n          materialvalues={materialvalues}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updatematerialdetails, getMaterial }\n)(updateMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass UpdateMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            materialname:this.props.materialoption.materialname,\n            id:this.props.materialoption.id\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    componentWillReceiveProps(props){\n        const dataRecord = props.materialoption;\n        this.setState({...this.state.data, data:dataRecord});\n    }\n\n    handleValidSubmit = () => {\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            // this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        console.log(this.props);\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Item details is updated successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Item data already exist.</Alert>\n                ) : null}\n                {!!errors.global ? (\n                    <Alert color=\"danger\">Something went wrong,Please try again later.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Update Item</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"materialname\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.materialname}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item name\"\n                                            },\n                                      \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid item name\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                    <div className=\"mg-20\">\n                        <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                            update\n                            {/* {loading} */}\n                        </Button>\n                    </div>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nUpdateMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n      materialoptionobjectlist: state.materialoption\n    };\n}\n\nexport default connect(mapStateToProps,{})(UpdateMaterialTypesForm);","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport UpdateMaterialTypeForm from \"./MaterialForms/UpdateMaterialTypesForm\";\nimport { updateMaterialType,getMaterialsTypes } from \"../../actions/Product\";\n\nclass UpdateMaterialType extends React.Component{\n    state={\n        materialoption:''\n    }\n    \n    componentDidMount(){\n        const materialid = this.props.match.params.id;\n        const materialoption = this.props.materialoptions[materialid];\n        this.setState({materialoption});\n    }\n\n    submit = (data) => this.props.updateMaterialType(data);\n\n\n    render(){\n        const { materialoption } = this.state;\n        return(\n            <div className=\"container mg-20\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/inventory_page\">Inventory</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to=\"/add_itemtype\">Item type</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Item View/Edit</BreadcrumbItem>\n                </Breadcrumb>\n                <UpdateMaterialTypeForm materialoption={materialoption} submit={this.submit} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        materialoptions: state.materialoption\n    }\n}\n\nexport default connect(mapStateToProps,{updateMaterialType,getMaterialsTypes})(UpdateMaterialType);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nclass ProductForm extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      data: {\n        productname: \"\",\n        values: [\"\"],\n        products: [\"\"],\n        productsqty: [\"\"],\n        productsuom: [\"\"],\n        productsqtyinmeter: [\"\"],\n        productsweight: [\"\"]\n      },\n      materiallistvalues: [],\n      uomlistvalues:[],\n      materiallistvaluesObject: {},\n      loading: false,\n      errors: {},\n      success: false\n    };\n  }\n  componentDidMount() {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(this.props.materiallistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n    this.getUnitmeasures()\n  }\n\n  componentWillReceiveProps(props) {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    //const uomlistvalues = Object.values(props.uomlistvalues);\n    // console.log(uomlistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n  }\n\n\n\n  getUnitmeasures(){\n    \n    this.setState({ loading: true });\n \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n    .then(res => {\n      console.log(res.data)\n      if(res.data.uomlist.uomdata.length > 0){\n        this.setState({\n          uomlistvalues:res.data.uomlist.uomdata\n        });\n      }\n      this.setState({ loading: false });\n    },\n    error =>{\n      this.setState({ loading: false });\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n\n  createSelectItems3 = optionvalue => {\n\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues\n    uomlistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.uomname}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItems = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'id': '1',\n    //     'itemname': 'Props'\n    //   },\n    //   {\n    //     'id': '2',\n    //     'itemname': 'MS Span'\n    //   },\n    //   {\n    //     'id': '3',\n    //     'itemname': 'MS Centering sheet'\n    //   },\n    //   {\n    //     'id': '4',\n    //     'itemname': 'Cuplock Vertical'\n    //   },\n    //   {\n    //     'id': '5',\n    //     'itemname': 'Cuoplock horizontal'\n    //   },\n    //   {\n    //     'id': '6',\n    //     'itemname': 'H Frame Scaffolding'\n    //   },\n    //   {\n    //     'id': '7',\n    //     'itemname': 'U Jack/ Base Jack'\n    //   },\n    //   {\n    //     'id': '8',\n    //     'itemname': 'Spigot pins'\n    //   },\n    //   {\n    //     'id': '9',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '10',\n    //     'itemname': 'pressed right cuplers'\n    //   },\n    //   {\n    //     'id': '11',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '12',\n    //     'itemname': 'Shttering clamps'\n    //   }\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    console.log(\"__MATERIAL_LIST_VALUES___\");\n    console.log(materiallistvalues);\n    materiallistvalues.filter((option, i) => {\n      if(option.masteritemtypename != \"\"){\n        if(option.masteritemtypename.split('')[0] == \"3\"){\n          items.push(\n            <option key={i} value={option.masteritemdescription}>\n              {option.masteritemdescription}\n            </option>\n          );\n        }\n      }\n   \n    });\n    return items;\n  };\n\n\n  createSelectItems2 = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'itemname': '50 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '6 mm MS Plate'\n    //   },\n    //   {\n    //     'itemname': 'Prop nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R sheet'\n    //   },\n    //   {\n    //     'itemname': 'Dia10 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': '65mm*6mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '75mm*75mm*8mm L Angle'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS span Bolt'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS Hexagonal nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R. Sheet'\n    //   },\n    //   {\n    //     'itemname': '25mm*25mm*5mm L angle.'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Top cup'\n    //   },\n    //   {\n    //     'itemname': 'Bottom cup'\n    //   },\n    //   {\n    //     'itemname': 'Dia 8 mm Rod'\n    //   },\n    //   {\n    //     'itemname': '20 NB H.R Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Ledger blade'\n    //   },\n    //   {\n    //     'itemname': 'locking pins'\n    //   },\n    //   {\n    //     'itemname': 'Dia 32 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': 'MS pLate'\n    //   },\n    //   {\n    //     'itemname': 'Cup nuts'\n    //   },\n    //   {\n    //     'itemname': 'dia 38 OD pipe'\n    //   },\n    //   {\n    //     'itemname': '40mm*40mm'\n    //   },\n    //   {\n    //     'itemname': '40mm*50mm'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm Ms flat'\n    //   }\n\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.masteritemdescription}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectunfinishedItems = optionvalue => {\n    let items = [];\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      if (option.masteritemtype.masteritemtypename !== optionvalue) {\n        items.push(\n          <option key={i} value={option.id}>\n            {option.masteritemtypename}\n          </option>\n        );\n      }\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        products: [...this.state.data.products, \"\"],\n        productsqty: [...this.state.data.productsqty, \"\"],\n        productsuom: [...this.state.data.productsuom, \"\"],\n        productsqtyinmeter: [...this.state.data.productsqtyinmeter, \"\"]\n      }\n    });\n  };\n  handleChange = (e, index) => {\n    this.state.data.products[index] = e.target.value;\n    const materialuom = this.state.materiallistvaluesObject[\n      this.state.data.products[index]\n    ];\n    this.state.data.productsqty[index] = \"1\";\n    this.state.data.productsuom[index] = materialuom.masteritemuom.uomname;\n    this.state.data.productsqtyinmeter[index] = \"\"\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        products: this.state.data.products,\n        productsuom: this.state.data.productsuom,\n        productsqty: this.state.data.productsqty,\n        productsqtyinmeter: this.state.data.productsqtyinmeter\n      }\n    });\n  };\n\n  ProductqtyhandleChange = (e, index) => {\n    console.log(index);\n    let arr = this.state.materiallistvalues.filter((item) =>{\n      return item.masteritemdescription == e.target.value\n    })\n    console.log(arr)\n    this.state.data.productsqty[index] = e.target.value;\n    this.state.data.productsweight[index] = \n    arr.length > 0 ? (arr[0].masteritemunitwt != 'undefined' && arr[0].masteritemunitwt != 'null' && arr[0].masteritemunitwt != '' ? arr[0].masteritemunitwt : 0) : 0\n    \n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, \n        productsqty: this.state.data.productsqty,\n        productsweight: this.state.data.productsweight\n      }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  ProductuomhandleChange = (e, index) => {\n    console.log(index);\n    this.state.data.productsuom[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsuom: this.state.data.productsuom }\n    });\n  };\n  \n  ProductqtyinmeterhandleChange = (e, index) => {\n    console.log(e.target.value);\n    this.state.data.productsqtyinmeter[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsqtyinmeter: this.state.data.productsqtyinmeter }\n    });\n  };\n  \n  removeClick = (e, index) => {\n    const removeProduct = { ...this.state.data };\n    const products = removeProduct.products;\n    const productsqty = removeProduct.productsqty;\n    const productsuom = removeProduct.productsuom;\n    const productsqtyinmeter = removeProduct.productsqtyinmeter;\n    const values = removeProduct.values;\n    products.splice(index, 1);\n    productsqty.splice(index, 1);\n    productsuom.splice(index, 1);\n    productsqtyinmeter.splice(index, 1);\n    values.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products, productsqty, productsuom,productsqtyinmeter, values }\n    });\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(\"product form data\");\n    console.log(this.state.data);\n    const products = this.state.data.products;\n    const productsqty = this.state.data.productsqty;\n    console.log(productsqty)\n    let productMaterials = [];\n    products.forEach(function (v, i) {\n      var obj = {};\n      obj.product_id = v;\n      obj.productqty = productsqty[i];\n      productMaterials.push(obj);\n    });\n\n    const data = { ...this.state.data, productMaterials };\n    delete data.products;\n    delete data.productsqty;\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            productname: \"\",\n            values: [\"\"],\n            products: [\"\"],\n            productsqty: [\"\"],\n            productsuom: [\"\"],\n            productsqtyinmeter: [\"\"]\n          },\n          materiallistvalues: this.initialState.materiallistvalues,\n          materiallistvaluesObject: this.initialState.materiallistvaluesObject\n        });\n        this.myFormRef.reset();\n\n      })\n      .catch(err => {\n        alert(\"Same product sub assembly is already added.\")\n        window.location.reload()\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  toggelbutton = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,uomlistvalues } = this.state;\n    console.log(\"__STATE_VALUE___DATA_\");\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Product detail is added successfully.</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className='small-font-size-bold'>Subassembly</ModalHeader>\n            <ModalBody >Subassembly is added successfully.</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggelbutton}>\n                Ok\n              </Button>{\" \"}\n\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.productname ? (\n          <Alert Label color=\"danger\">Product Name must be unique id.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Product Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"productname\" Label>Product Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"productname\"\n                      id=\"productname\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">select</option>\n          \n                      {this.createSelectItems(\"FinishedGoods\")}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={12}>\n                  <div>\n                    <div className=\"mg-20\">\n                      <Button color=\"info\" onClick={this.handleClick}>\n                        Add Component\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n\n              {data.values.map((value, index) => {\n                return (<Row key={index}>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qty+${index}`}>\n                        Sub assembly\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n\n                      <AvField\n                        Label\n                        type=\"select\"\n                        name=\"material_qty\"\n                        id={`Material-qty+${index}`}\n                        value={data.productsqty[index] || null}\n                        onChange={e =>\n                          this.ProductqtyhandleChange(e, index)\n                        }\n                      >\n                        <option value=\"\">select</option>\n             \n                        {this.createSelectItems2(\"\")}\n                      </AvField>\n                    </AvGroup>\n\n\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qtymeter+${index}`}>\n                        Quantity\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"text\"\n                      name=\"Material-qtymeter\"\n                      id={`Material-qtymeter+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsqtyinmeter[index]}\n                      onChange={e =>\n                        this.ProductqtyinmeterhandleChange(e, index)\n                      }\n                    >\n                     \n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-uom+${index}`}>\n                        UOM\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"Material-uom\"\n                      id={`Material-uom+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsuom[index]}\n                      onChange={e =>\n                        this.ProductuomhandleChange(e, index)\n                      }\n                    >\n                      <option value=\"\">Select unit</option>\n          \n                      {this.createSelectItems3(\"FinishedGoods\")}\n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  \n                  <Col sm={2}>\n                    <AvGroup style={{ marginTop: \"28px\" }}>\n                      <Button\n                        Label\n                        Label\n                        color='danger'\n                        type=\"button\"\n                        onClick={e => this.removeClick(e, index)}\n                      >\n                        -\n                  </Button>\n\n                    </AvGroup>\n\n                  </Col>\n                </Row>)\n              })}\n              {/* <div>\n                                    <button onClick={this.handleSubmit}>submit</button>\n                                </div> */}\n\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{paddingLeft: 15, paddingTop: 10}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader small-font-size\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.masteritemlistvalues\n    // masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductForm);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport { UOM_LIST } from \"../Services/types\";\nimport { uomListSchema } from \"../Schemas/schemas\";\n\nfunction uomListFetched(uomlist) {\n  return {\n    type: UOM_LIST,\n    uomlist\n  };\n}\n\nexport const getUomList = () => {\n  return dispatch => {\n    return api.uom.getUomDetails().then(uomlist => {\n      const uomlistvalue = uomlist.uomdata;\n      return dispatch(uomListFetched(normalize(uomlistvalue, [uomListSchema])));\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProductForm from \"./ProductForm/ProductForm\";\nimport { addproduct } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport { getUomList } from \"../../actions/uom\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass Product extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    //this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addproduct(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem  Label>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem  Label active>Add Subassembly</BreadcrumbItem>\n        </Breadcrumb>\n        <ProductForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  addproduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addproduct, getMasterItemList,getUomList }\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport axios from \"axios\";\n\nclass ViewProduct extends React.Component {\n  state = {\n    productlistvalue: \"\",\n    productMaterialslist: [],\n    productname: \"\"\n  };\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/product/getproduct/${this.props.match.params.id}`)\n      .then(res => {\n\n        console.log(res)\n        if (res.data.productlist.productdata.length > 0) {\n          let product = res.data.productlist.productdata[0]\n          let obj = {}, arr = []\n          const productname = product.productname;\n\n          for (var i = 0; i < product.productMaterial.length; i++) {\n            obj = {}\n            obj['materialitemtype'] = product.productname;\n            obj['materialname'] = product.productMaterial[i].productqty;\n            obj['materialuom'] = product.productsuom[i];\n            obj['productqty'] = product.productsqtyinmeter[i]\n            arr.push(obj)\n          }\n\n          this.setState({ 'productname': productname, 'productMaterialslist': arr });\n        }\n\n      },\n        error => {\n\n          alert(\"Server error\")\n        });\n\n    /* const productid = this.props.match.params.id;\n     const productlistvalue = this.props.productlistvalues[productid];\n     const productname = productlistvalue.productname.masteritemdescription;\n     const productMaterialslist = productlistvalue.productMaterial.map(\n       productMaterialData => {\n         let totalcost =\n           parseFloat(productMaterialData.productqty) *\n           parseFloat(productMaterialData.product_id.masteritemcostperunit);\n         let materialcostperunit =\n           productMaterialData.product_id.masteritemcostperunit;\n         return {\n           materialitemtype:\n             productMaterialData.product_id.masteritemtype.masteritemtypename,\n           materialname: productMaterialData.product_id.masteritemname,\n \n           materialdescription:\n             productMaterialData.product_id.masteritemdescription,\n \n           materialuom: productMaterialData.product_id.masteritemuom.uomname,\n           materialcostperunit:\n             materialcostperunit !== \"null\" ? materialcostperunit : \" \",\n           materialqty: productMaterialData.productqty,\n           totalcost: isNaN(totalcost) ? \" \" : totalcost\n         };\n       }\n     );\n     this.setState({ ...this.state, productMaterialslist, productname });*/\n  }\n  render() {\n    const { productMaterialslist, productname } = this.state;\n    let product;\n    if (productMaterialslist.length) {\n      product = productMaterialslist[0].materialitemtype;\n    }\n\n    const tablerows = productMaterialslist.map((itemlist, i) => {\n      return (\n        <tr key={i}>\n          {/* <td>{itemlist.materialitemtype}</td> */}\n          <td style={{textAlign:'left'}}>{itemlist.materialname}</td>\n          <td style={{textAlign:'left'}}>{itemlist.materialuom}</td>\n          <td style={{textAlign:'left'}}>{itemlist.productqty}</td>\n          \n          {/* <td>{itemlist.materialcostperunit}</td>\n          <td>{itemlist.materialqty}</td>\n          <td>{itemlist.totalcost}</td> */}\n        </tr>\n      );\n    });\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/viewproductlist\">View subassembly</Link>\n            </BreadcrumbItem>\n\n          </Breadcrumb>\n        </div>\n        {/* <h5>Product Name: {productname}</h5> */}\n        {/* <DataTable columnvalue={columnvalue} rowvalues={productMaterialslist} /> */}\n        <div style={{\n              marginBottom: 16}}>\n          <span\n            style={{\n              fontSize: 12,\n              fontWeight: 900,\n              marginRight: 16\n            }}>Product</span>\n          <span\n            style={{\n              fontSize: 12\n            }}>{product ? product : ''}</span>\n        </div>\n        <Table bordered style={{'width':'40%'}}>\n          <thead>\n            <tr>\n              {/* <th>Product Type</th> */}\n              <th>Subassembly</th>\n\n              <th>UOM</th>\n              <th>Quantity</th>\n              {/* (Meter) */}\n              {/* <th>Unit Cost</th>\n              <th>Item QTY</th>\n              <th>Total cost</th> */}\n            </tr>\n          </thead>\n          <tbody>{tablerows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ViewProduct);\n","import React from \"react\";\nimport { Alert, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass ViewProductList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    productlistvalues: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.dataHandler(true);\n  }\n  updateButton = id => {\n    let path = `/viewproduct/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const productlist = Object.values(props.productlistvalues);\n    const productlistvalues = productlist.map((productdata, i) => {\n      console.log(productdata)\n      return {\n        materialname: productdata.productname,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(productdata.id);\n            }}\n          >\n            View Sub assembly\n          </Button>\n        )\n      };\n    });\n    const count = productlistvalues.length;\n    this.setState({ ...this.state, count, productlistvalues });\n    this.dataHandler(false);\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading, count, productlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Product Name\",\n        field: \"productname\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"View\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 10\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Products</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        {count > 0 ? (\n          <DataTable columnvalue={columnvalue} \n          rowvalues={productlistvalues}\n          className=\"viewproductlist\" />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts }\n)(ViewProductList);\n","import { AvField, AvForm, AvGroup } from 'availity-reactstrap-validation';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Alert, Button, Card,\n  CardBody,\n  CardHeader, Col, Label, Modal, ModalBody,\n  ModalFooter, ModalHeader, Row\n} from 'reactstrap';\n\nclass CustomerForm extends React.Component {\n  state = {\n    data: {\n      customernumber: '',\n      customername: '',\n      customercontactnumber: '',\n      customergstnumber: '',\n      customeraddress1: '',\n      customeraddress2: '',\n      city: '',\n      pincode: '',\n      state: '',\n      country: '',\n      codate: new Date().getTime(),\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    sameAsBilling: false,\n    suppliercontactlistvalue: []\n  };\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.keys(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customernumber = count ? 1001 + count : 1001;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customernumber\n      }\n    });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        deliveryAddress: {\n          ...this.state.data.deliveryAddress,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n  sameAsBilling = e => {\n    let val = e.target.value === 'false' ? true : false;\n    this.setState({ ...this.state, sameAsBilling: val });\n    if (val) {\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          deliveryAddress: {\n            address1: this.state.data.customeraddress1,\n            address2: this.state.data.customeraddress2,\n            city: this.state.data.city,\n            pincode: this.state.data.pincode,\n            state: this.state.data.state,\n            country: this.state.data.country\n          }\n        }\n      });\n    }\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const {\n      data,\n      errors,\n      loading,\n      success,\n      visible,\n      sameAsBilling\n    } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is added successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color='danger' isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      value={data.customernumber.toString()}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customername'\n                      type='text'\n                      id='customername'\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Name'\n                        }\n                    \n                        // pattern: {\n                        //   value: '^[a-zA-Z ]+$',\n                        //   errorMessage: 'Please enter valid Supplier Name'\n                        // }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customercontactnumber'>Contact Number </Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customercontactnumber'\n                      type='text'\n                      id='customercontactnumber'\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer contact number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GSTN </Label>\n                    <AvField\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Billing Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress1'>Address 1</Label>\n                        <AvField\n                          name='customeraddress1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                      \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress2'>Address 2</Label>\n                        <AvField\n                          name='customeraddress2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Delivery Address */}\n              <Card>\n                <CardHeader>\n                  Delivery Address ({' '}\n                  <input\n                    type='checkbox'\n                    className='same_checkbox'\n                    value={sameAsBilling}\n                    name='same'\n                    onChange={this.sameAsBilling}\n                  ></input>{' '}\n                  Same as billing address)\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                         \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain atleast 1 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              <div className='mg-20'>\n                <Button\n                  color='primary'\n                  disabled={loading}\n                  className='lgn-loader'\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{' '}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CustomerForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col\n} from \"reactstrap\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    data: {\n      searchcustomername: '',\n      searchfromdate: null,\n      searchtodate: null\n    },\n    count: 0,\n    customerlistvalues: [],\n    backupcustomerlistvalues: [],\n    fromdatetimestamp: '',\n    todatetimestamp: '',\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n  };\n\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        // id: customerdata.id,\n        // customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber != '' ? customerdata.customercontactnumber : '-',\n        codate: customerdata.codate != undefined ? customerdata.codate : '-',\n\n        Transaction: (\n          <Button\n            // style={{ fontSize: '0.8rem' }}\n            Label\n            color=\"primary\"\n            onClick={() => {\n              localStorage.setItem('customername', customerdata.customername)\n              this.getTransaction(customerdata.id);\n            }}\n          >\n            Transaction\n          </Button>\n        )\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, backupcustomerlistvalues: customervalues, count });\n    this.setState({ customerlistvalues: customervalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n\n  getTransaction = id => {\n    this.props.history.push(`/transaction/${id}`);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n\n  onChange = e => {\n    console.log(e)\n    this.setState({\n      //data: { ...this.state.data, [e.target.name]: e.target.value }\n      data: {\n        searchcustomername: e.target.value,\n        searchfromdate: null,\n        searchtodate: null\n      },\n      fromdatetimestamp: '',\n      todatetimestamp: ''\n    }, () => {\n      this.filterCustomer(this.state.data.searchcustomername)\n    });\n\n  };\n\n  getDateByMMDDYYYY(date) {\n    let searchdate = date != '-' ?\n      (new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n      + \"/\" +\n      (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n  handleDateChanges(dateName, dateValue) {\n\n    let { data, fromdatetimestamp, todatetimestamp } = this.state;\n    if (dateName === 'startDateTime') {\n      data.searchfromdate = dateValue;\n      fromdatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    } else {\n      data.searchtodate = dateValue;\n      todatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    }\n    data.searchcustomername = ''\n    this.setState({\n      data,\n      fromdatetimestamp,\n      todatetimestamp\n    }, () => {\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        this.filterBydates(this.state.fromdatetimestamp, this.state.todatetimestamp)\n      }\n      else {\n        this.initializeCustomers();\n      }\n    });\n  };\n\n  filterCustomer(ev) {\n    this.initializeCustomers();\n    setTimeout(() => {\n      const val = ev\n      if (val && val.trim() != '') {\n        let filtereddata = this.state.customerlistvalues.filter((item) => {\n          return (item.customername.toLowerCase().indexOf(val.toLowerCase()) > -1\n          )\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  filterBydates(date1, date2) {\n    this.initializeCustomers();\n    setTimeout(() => {\n\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        let filtereddata = this.state.customerlistvalues.filter((customer) => {\n          let comparedate =\n            (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1)\n            + \"/\" + (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate())\n            + \"/\" + new Date(parseInt(customer.codate)).getFullYear()\n\n          return (new Date(this.getDateByMMDDYYYY(comparedate)).getTime() >= date1 && new Date(this.getDateByMMDDYYYY(comparedate)).getTime() <= date2)\n\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  initializeCustomers() {\n    this.setState({\n      customerlistvalues: this.state.backupcustomerlistvalues\n    })\n  }\n\n\n  render() {\n    const { count, customerlistvalues, data, loading } = this.state;\n\n    const customerBlock = customerlistvalues.map(customer => {\n      customer['codate2'] = customer.codate != '-' ? (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate()) +\n        \"/\" + (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1) + \"/\" + new Date(parseInt(customer.codate)).getFullYear() : '-'\n      return (\n        <tr key={customer.customernumber}>\n\n          <td style={{'width' : '15%'}}>{customer.customername}</td>\n          {/* <td style={{ textAlign: 'center' }}>{customer.customernumber}</td> */}\n          <td style={{ textAlign: 'center','width' : '12%' }}>{customer.customercontactnumber}</td>\n\n          <td style={{ textAlign: 'center','width' : '8%' }}>{customer.Transaction}</td>\n        </tr>\n      )\n    });\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            {/* <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            /> */}\n\n            {/* <Card>\n           \n            <CardBody> */}\n            <Row>\n              <Col sm={3}>\n                <Label className='small-font-size' for=\"searchcustomername\">Search Customer Name</Label>\n\n\n                <input\n                  name=\"searchcustomername\"\n                  type=\"text\"\n                  id=\"searchcustomername\"\n                  className=\"form-control small-font-size\"\n                  value={data.searchcustomername}\n\n                  onChange={this.onChange}\n                />\n\n              </Col>\n\n\n\n              {/* <Col sm={3}>\n                  <Label for=\"searchfromdate\">Transaction from date</Label>\n                \n\n                     <DatePicker\n                    selected={data.searchfromdate}\n     \n                    onChange={date => this.handleDateChanges('startDateTime', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchfromdate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n                 <Col sm={3}>\n                  <Label for=\"searchtodate\">Transaction to date</Label>\n                 \n                  \n                  <DatePicker\n                    selected={data.searchtodate}\n                    onChange={date => this.handleDateChanges('endDateTime', date)}\n                    className=\"form-control\"\n                    isClearable={true}\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchtodate\"\n                  />\n                 \n                </Col> */}\n\n            </Row>\n            {/* </CardBody>\n                </Card> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{ 'marginTop': '10px','width': '40%' }}>\n              <thead>\n                <tr>\n\n                  <th style={{'width': '15%'}}>Customer Name</th>\n                  {/* <th>Customer Number</th> */}\n                  <th style={{'width': '12%'}}>Contact</th>\n                  <th style={{'width': '8%'}}>Transaction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerBlock}\n              </tbody>\n            </table>\n\n\n\n\n          </div>\n        ) : (\n            <div>\n              <Alert color=\"info\" Label>Loading Customer data</Alert>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import axios from \"axios\";\n\nexport default {\n  customer: {\n    addcustomer: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/customer/addcustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.customerdata;\n        });\n    },\n    getcustomer: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customer/getcustomer`)\n        .then(res => {\n          return res.data.customerlist;\n        });\n    },\n    updatecustomer: data => {\n      return axios\n        .patch(`${process.env.REACT_APP_BASE_URL}/customer/updatecustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  customerTransaction: {\n    getcustomerTransaction: (id) => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/${id}`)\n        .then(res => {\n          \n          return res.data.customerlist;\n        });\n    },\n  \n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/customerapi\";\nimport {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED,\n  CUSTOMERTRANSACTION_FETCHED\n} from \"../Services/types\";\nimport { customerListSchema,customerTransactionSchema } from \"../Schemas/schemas\";\n\nconst customerCreated = customerlist => {\n  return {\n    type: ADD_CUSTOMER_CONTACT,\n    customerlist\n  };\n};\n\nconst customerListFetched = customerlist => {\n\n  return {\n    type: CUSTOMER_CONTACT_FETCHED,\n    customerlist\n  };\n};\n\nconst customerTransactionFetched = customerlist => {\n\n  return {\n    type: CUSTOMERTRANSACTION_FETCHED,\n    customerlist\n  };\n};\n\nexport const addCustomerContact = data => {\n  return dispatch => {\n    return api.customer.addcustomer(data).then(customerlistvalues => {\n      return dispatch(\n        customerCreated(normalize(customerlistvalues, customerListSchema))\n      );\n    });\n  };\n};\n\nexport const getCustomerList = () => {\n  return dispatch => {\n    return api.customer.getcustomer().then(customerlist => {\n      const customerlistvalue = customerlist.customerdata;\n      return dispatch(\n        customerListFetched(normalize(customerlistvalue, [customerListSchema]))\n      );\n    });\n  };\n};\n\nexport const getCustomerTransaction = (id) => {\n  return dispatch => {\n    return api.customerTransaction.getcustomerTransaction(id).then(customerlist => {\n      const customertransationvalues = customerlist.customerdata;\n      console.log(customertransationvalues)\n      if(customertransationvalues.length != 0){\n        return dispatch(\n          customerTransactionFetched(normalize(customertransationvalues, [customerTransactionSchema]))\n        );\n      }\n      // console.log(normalize(customertransationvalues, [customerTransactionSchema]))\n\n    });\n  };\n};\n\nexport const updateCustomerContact = data => {\n  return dispatch => {\n    return api.customer.updatecustomer(data).then(customerlistvalues => {\n      return customerlistvalues;\n      // return dispatch(\n      //   customerCreated(normalize(customerlistvalues, customerListSchema))\n      // );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport AddCustomerForm from \"./AddCustomer/CustomerForm/CustomerForm\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass Customer extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddCustomerForm submit={this.submit} />\n        </div>\n        {/* <div>\n          <ViewCustomerList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n    getCustomerTransaction\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\n\n\nclass Transaction extends React.Component {\n  \n  state = {\n    data: {\n      enquirydate:null,\n      quotationdate:null,\n      podate:null\n    },\n    enquirytimestamp:null,\n    quotationtimestamp:null,\n    podatetimestamp:null,\n    userid : this.props.match.params.id,\n    loading: false,\n    count:0,\n    success: false,\n    message:'',\n    ponum:'',\n    podate:'',\n    customerName:localStorage.getItem('customername') !=null ? localStorage.getItem('customername') : '',\n    transactionID:'',\n    customertransationvalues:[],\n    backupcustomertransationvalues:[]\n  };\n  componentDidMount = () => {\n    // this.props.match.params.id\n    // 5d7245b928e146194b806e38\n    \n    this.getTransaction(this.props.match.params.id);\n  };\n\n  componentWillReceiveProps(props) {\n    let customervalues = Object.values(props.customertransationvalues).map(customerdata => {\n      return {\n        customerid: customerdata.customerid,\n        Transactionhistory: customerdata.Transactionhistory,\n        id:new Date().getTime()\n      };\n    });\n    if(customervalues.length > 0){\n      customervalues = customervalues.filter((item) =>{\n        return item.customerid == this.props.match.params.id\n      })\n      this.setState({ \n        customertransationvalues: customervalues,\n        backupcustomertransationvalues:customervalues,\n        count:customervalues.length\n      }, () => {\n        console.log(JSON.stringify(this.state.backupcustomertransationvalues))\n      })\n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  \n  initializeTransactions = () => {\n    this.setState({\n      customertransationvalues:this.state.backupcustomertransationvalues\n    },() =>{\n      console.log(this.state.backupcustomertransationvalues)\n    })\n  }\n\n  newEnquiry(){\n    localStorage.setItem('ids',this.state.userid)\n    this.setState({ success: true, message:'Are you sure want to add new enquiry' });\n  }\n\n  getTransaction(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n    .then(res => {\n      this.dataHandler(false)\n      if(res.data.customerlist.customerdata.length > 0){\n        let customervalues = res.data.customerlist.customerdata;\n        if(customervalues.length > 0){\n          customervalues = customervalues.filter((item) =>{\n            return item.customerid == this.props.match.params.id\n          })\n          this.setState({ customertransationvalues: customervalues,\n            backupcustomertransationvalues:customervalues,\n            count:customervalues.length}, () => {\n            console.log(JSON.stringify(this.state.customertransationvalues))\n          })\n        }\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  addenquiry(){\n    this.dataHandler(true)\n    let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) + \n    \"/\" + ( new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n     axios\n    .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`,\n    {\n      \"customerid\":this.state.userid,\n      \"enq_Date\" : date\n    })\n    .then(res => {\n      this.getTransaction(this.state.userid)\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  poreceived = value =>{\n    this.setState({\n      transactionID:value._id,\n      ponum:'',\n      podate:''\n    },() =>{\n      this.setState({ success: true, message:'update transaction' });\n    })\n  }\n\n  updatePO = () => {\n    if(this.state.ponum != '' && this.state.podate != ''){\n      let podates = this.state.podate.split('-')[2] + '/' + this.state.podate.split('-')[1] + '/' + this.state.podate.split('-')[0]\n      let obj = {}\n      obj['_id'] = this.state.transactionID\n      obj['po'] = podates\n      obj['ponum'] = this.state.ponum\n      this.dataHandler(true)\n      axios\n      .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n      .then(res => {\n        this.toggle()\n        this.getTransaction(this.state.userid)\n      },\n      error =>{\n        this.dataHandler(false)\n        this.toggle()\n        this.setState({ success: false, message:'Server error.' });\n      });\n    }\n    else\n      this.toggle()\n  }\n\n  onChange1 = e => {\n    this.setState({\n      'ponum' : e.target.value\n    });\n  }\n\n  onChange2 = e => {\n    console.log(e.target.value)\n    this.setState({\n      'podate' : e.target.value\n    });\n  }\n\n  getDateByMMDDYYYY(date){\n    let searchdate = date != '-' ? \n\n    (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" +\n    ( new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n    + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n    \n  handleDateChanges(dateName, dateValue) {\n\n    let { data,enquirytimestamp,quotationtimestamp,podatetimestamp } = this.state;\n    if (dateName === 'enquirydate') {\n      data.enquirydate = dateValue;\n      enquirytimestamp = this.getDateByMMDDYYYY(dateValue)\n    }\n    this.setState({\n      data,\n      enquirytimestamp\n    }, () => {\n      if (this.state.data.enquirydate != null) {\n        this.filterBydates()\n      }\n      else{\n        this.initializeTransactions();\n      }\n    });\n  };\n\n  filterBydates(){\n    this.initializeTransactions();\n    setTimeout(() => {\n        let filtereddata = this.state.customertransationvalues.filter((item) => {\n            return (this.state.enquirytimestamp != null && item.enq_Date == this.state.enquirytimestamp)\n            \n        })\n        this.setState({\n          customertransationvalues:filtereddata\n        })\n    })\n  }\n\n  render() {\n    let modaldata;\n\n    const { customertransationvalues,loading,count,success,message,data,customerName } = this.state;\n    if(message == 'update transaction' && success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Add customer PO</ModalHeader>\n        <ModalBody>\n          <input type=\"text\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.ponum} style={{'marginBottom': '15px'}} onChange={this.onChange1}/>\n          <input type=\"date\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.podate} onChange={this.onChange2}/>\n        </ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={this.updatePO}>\n            Update\n          </Button>\n        </ModalFooter>\n      </Modal>\n      )\n    }\n    else if(message == 'Server error.' && !success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Transaction</ModalHeader>\n        <ModalBody>{this.state.message}</ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n      )\n    }\n\n\n\n    const customerTransactionBlock = customertransationvalues.map((customer,index) => {\n      \n      let enquiry = '',quote = '',PO=(<td style={{textAlign:'center'}}>---</td>),invoice=(<td style={{textAlign:'center'}}>---</td>),dc=(<td style={{textAlign:'center'}}>---</td>)\n      enquiry = customer.enq_Date !=undefined ? (<td style={{textAlign:'center'}}> {customer.enq_Date}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      quote = customer.quotation !=undefined && customer.quotation != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.Qno} </b> <br/>{customer.quotation}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      PO = customer.po !=undefined && customer.po != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.ponum} </b> <br/> {customer.po}</td>) \n      : (<td style={{textAlign:'center'}}> \n           Customer PO not reveived<br/>\n           <Button color=\"primary\" onClick={() => this.poreceived(customer)} style={{fontSize: '12px'}}>\n            Add customer PO\n          </Button>\n      </td>)\n\n      if(customer.quotation == ''){\n        PO = (<td style={{textAlign:'center'}}>---</td>)\n      }\n\n      \n      return (\n        \n        <tr>\n          {/* <td></td>\n          {enquiry} */}\n          {quote}\n          {PO}\n          {invoice}\n          {dc}\n\n          </tr>\n             \n      )\n \n    })\n\n\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerlist\">CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{customerName}</BreadcrumbItem>\n        </Breadcrumb>\n     \n\n            {modaldata}\n \n        <h5 style={{ 'fontWeight': 'bold','margin': '15px'}}>{count} transaction found.</h5>\n        {customertransationvalues.length > 0 ?\n        (\n\n        <div>\n{/*           \n          <Row style={{ 'width': '75%','marginLeft': '9%'}}>\n                <Col sm={3} >\n                    <Label for=\"enquirydate\">Search enquiry date</Label>\n                    \n\n                      <DatePicker\n                    selected={data.enquirydate}\n\n                    onChange={date => this.handleDateChanges('enquirydate', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"enquirydate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n        \n\n                \n\n                </Row> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{'marginTop':'10px', 'width': '75%','marginLeft': '10%','background':'#fff'}}>\n\n              <tr>\n                {/* <th></th>\n                <th>Enquiry</th> */}\n                <th>Quotation</th>\n                <th>PO</th>\n                <th>Invoice</th>\n                <th>Delivary challan</th>\n                </tr>\n                {customerTransactionBlock}\n              </table>\n          </div>\n        ) : null\n       }\n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    customertransationvalues: state.customertransationvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getCustomerTransaction }\n)(Transaction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateCustomerForm extends React.Component {\n  state = {\n    data: {\n      id: \"\",\n      customernumber: \"\",\n      customername: \"\",\n      customercontactnumber: \"\",\n      customergstnumber: \"\",\n      customeraddress1: \"\",\n      customeraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    suppliercontactlistvalue: []\n  };\n  componentDidMount() {\n    const id = this.props.id;\n    const data = this.props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const data = props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({ ...this.state, data: {\n      ...this.state.data,\n      deliveryAddress:{\n        ...this.state.data.deliveryAddress,\n        [e.target.name] : e.target.value\n      }\n    } });\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success, visible } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is Updated successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color=\"danger\" isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customernumber\"\n                      type=\"number\"\n                      id=\"customernumber\"\n                      value={data.customernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Number\"\n                        },\n    \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customername\"\n                      type=\"text\"\n                      id=\"customername\"\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Name\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z ]+$\",\n                          errorMessage: \"Please enter valid Supplier Name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customercontactnumber\">Contact Number </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customercontactnumber\"\n                      type=\"text\"\n                      id=\"customercontactnumber\"\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer contact number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage:\n                            \"Your phone number must be composed only with numbers\"\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            \"Your phone number must be between 10 and 12 numbers\"\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            \"Your phone number be between 10 and 12 numbers\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GSTN </Label>\n                    <AvField\n                      name=\"customergstnumber\"\n                      type=\"text\"\n                      id=\"customergstnumber\"\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress1\">Address 1</Label>\n                        <AvField\n                          name=\"customeraddress1\"\n                          type=\"text\"\n                          id=\"customeraddress1\"\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress2\">Address 2</Label>\n                        <AvField\n                          name=\"customeraddress2\"\n                          type=\"text\"\n                          id=\"customeraddress2\"\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"city\">City</Label>\n                        <AvField\n                          name=\"city\"\n                          type=\"text\"\n                          id=\"city\"\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid city Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                        <AvField\n                          name=\"pincode\"\n                          type=\"text\"\n                          id=\"pincode\"\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                \"Pincode should contain atleast 6 characters\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                \"Pincode should contain between 6 to 10 characters\"\n                            },\n                            pattern: {\n                              value: \"^[0-9]+$\",\n                              errorMessage: \"Please enter valid PinCode\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"state\">State</Label>\n                        <AvField\n                          name=\"state\"\n                          type=\"text\"\n                          id=\"state\"\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid State Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"country\">Country</Label>\n                        <AvField\n                          name=\"country\"\n                          type=\"text\"\n                          id=\"country\"\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid Country Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                {/* Delivery Address */}\n                {/* Delivery Address */}\n              <Card>\n                <CardHeader>Delivery Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              </Card>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Update\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{\" \"}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateCustomerForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport UpdateCustomerForm from \"./UpdateCustomer/CustomerForm/UpdateCustomerForm\";\nimport {\n  updateCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader\n} from \"reactstrap\";\n\nclass Customer extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getCustomerList();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer List</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n\n          <UpdateCustomerForm submit={this.submit} id={id} />\n\n           \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\n\nclass ViewCustomerTable extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Link to=\"/crmlist\">CRM</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem active>Customer Transaction</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(ViewCustomerTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    count: 0,\n    customerlistvalues: []\n  };\n  componentWillReceiveProps(props) {\n    let customerlistvalues = Object.values(props.customerlistvalues);\n    //customerlistvalues= customerlistvalues.sort((a, b) => b.customernumber.toString().toLowerCase().localeCompare(a.customernumber.toString().toLowerCase()));\n    console.log(customerlistvalues)\n    customerlistvalues.sort(function(a, b){\n      return parseInt(b.customernumber) - parseInt(a.customernumber);\n    });\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber,\n        customergstnumber: customerdata.customergstnumber,\n        customeraddress1: customerdata.customeraddress1 != '' ? customerdata.customeraddress1 : '-',\n        customeraddress2: customerdata.customeraddress2 != '' ? customerdata.customeraddress2 : '-',\n        city: customerdata.city != '' ? customerdata.city : '-',\n        pincode: customerdata.pincode != '' ? customerdata.pincode : '-',\n        state: customerdata.state != '' ? customerdata.state : '-',\n        country: customerdata.country != '' ? customerdata.country : '-',\n        view: (\n          <Button\n            Label\n            // style={{ fontSize: '0.8rem' }}\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(customerdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, count });\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { count, customerlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Customer Number\",\n        field: \"customernumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Name\",\n        field: \"customername\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Contact\",\n        field: \"customercontactnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"GST Number\",\n        field: \"customergstnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address1\",\n        field: \"customeraddress1\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address2\",\n        field: \"customeraddress2\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"City\",\n        field: \"city\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Pincode\",\n        field: \"pincode\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"State\",\n        field: \"state\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Country\",\n        field: \"country\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n    return (\n      <div className=\"mg-t-20\">\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCustomerList } from \"../../../actions/customerContact\";\nimport ViewCustomerList from \"./ViewCustomerList\";\n\nclass CustomerInfo extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer Information</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(CustomerInfo);\n","import axios from \"axios\";\n\nexport default {\n  quotation: {\n    addquotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/addquotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    updatequotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/updatequotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    getquotation: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/quotation/getquotation`)\n        .then(res => {\n          return res.data.quotationlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/quotationapi\";\nimport { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\nimport { quotationListSchema } from \"../Schemas/schemas\";\n\nconst quotationCreated = quotationlist => {\n  return {\n    type: ADD_QUOTATION,\n    quotationlist\n  };\n};\n\nconst quotationFetched = quotationlist => {\n  return {\n    type: QUOTATION_FETCHED,\n    quotationlist\n  };\n};\n\nexport const addquotation = data => {\n  return dispatch => {\n    return api.quotation.addquotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\nexport const updatequotation = data => {\n  return dispatch => {\n    return api.quotation.updatequotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getquotation = () => {\n  return dispatch => {\n    return api.quotation.getquotation().then(quotationlist => {\n      const quotationlistvalues = quotationlist.quotationdata;\n      return dispatch(\n        quotationFetched(normalize(quotationlistvalues, [quotationListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { searchquotation } from \"../../../../actions/quotation\";\n\nclass CustomerQuotationList extends React.Component {\n  componentDidMount() {\n    const customerid = this.props.match.params.id;\n    this.props\n      .searchquotation(customerid)\n      .then(data => {})\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer list</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer status</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { searchquotation }\n)(CustomerQuotationList);\n","import { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Alert, Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nclass AddYearForm extends React.Component {\r\n  state = {\r\n    data: {\r\n      addyear: \"\",\r\n      updateyear: \"\",\r\n      updateid: \"\",\r\n    },\r\n    exists: false,\r\n    errors: {},\r\n    loading: false,\r\n    success: false,\r\n    visible: false,\r\n    updated: false,\r\n    suppliercontactlistvalue: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ loading: true });\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\r\n      (res) => {\r\n        if(res.data.year) {\r\n          this.setState({\r\n            ...this.state,\r\n            data: {\r\n              ...this.state.data,\r\n              updateid: res.data.year._id,\r\n              updateyear: res.data.year.currentyear\r\n            },\r\n          });\r\n          this.setState({ exists: true });\r\n        }\r\n        this.setState({ loading: false });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: {\r\n            ...this.state.errors,\r\n            error,\r\n          },\r\n          loading: false,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n  handleValidSubmit = () => {\r\n    this.setState({ loading: true });\r\n    const { data } = this.state;\r\n    console.log(JSON.stringify(data));\r\n    this.props\r\n      .submit(data)\r\n      .then((data) => {\r\n        this.setState({ success: true, loading: false, errors: {} });\r\n        this.onShowAlert();\r\n        this.myFormRef.reset();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ errors: err.response.data.errors, loading: false });\r\n        this.onShowAlert();\r\n      });\r\n  };\r\n\r\n  onShowAlert = () => {\r\n    this.setState({ visible: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ visible: false });\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ ...this.state, success: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, errors, loading, success, exists, visible } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {!!success ? (\r\n            // <Alert color=\"info\" isOpen={visible}>\r\n            //   Customer is added successfully.\r\n            // </Alert>\r\n            <Modal\r\n              isOpen={success}\r\n              toggle={this.toggle}\r\n              className={this.props.className}\r\n            >\r\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\r\n              <ModalBody>Year Added successfully</ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>\r\n                  Ok\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={(el) => (this.myFormRef = el)}\r\n        >\r\n          <div>\r\n            {!!errors.global ? (\r\n              <Alert color=\"danger\">{errors.global}</Alert>\r\n            ) : null}\r\n          </div>\r\n          {!!exists ? (\r\n            <Card>\r\n              <CardHeader>Update Year</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Update Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"updateyear\"\r\n                        type=\"text\"\r\n                        placeholder={data.updateyear.toString()}\r\n                        id=\"addyear\"\r\n                        value={data.updateyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>AddYear</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Add Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"addyear\"\r\n                        type=\"text\"\r\n                        placeholder=\"ex: 2020-21\"\r\n                        id=\"addyear\"\r\n                        value={data.addyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </AvForm>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(AddYearForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport {\r\n  addYear, updateYear\r\n} from \"../../../actions/financialYearAdd\";\r\nimport CustomLoader from \"../../../Components/loader/loader\";\r\nimport AddYearForm from \"./AddYear/AddYearForm/AddYearForm\";\r\n\r\nclass AddFinancialYear extends React.Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  submit = data => {\r\n    if(data.updateid !== \"\") {\r\n      this.dataHandler(true);\r\n    return this.props\r\n      .updateYear(data)\r\n      .then(data => {\r\n        this.dataHandler(false);\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        this.dataHandler(false);\r\n        throw err;\r\n      });    \r\n    }\r\n    else {\r\n      this.dataHandler(true);\r\n      return this.props\r\n        .addYear(data)\r\n        .then(data => {\r\n          this.dataHandler(false);\r\n          return data;\r\n        })\r\n        .catch(err => {\r\n          this.dataHandler(false);\r\n          throw err;\r\n        });\r\n    }\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"container mg-t-20\">\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/admin_dashboard\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/inventory_page\">Setup</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/financialYearAdd\">Add Year</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Add Year</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddYearForm submit={this.submit} />\r\n        </div>\r\n        {/* <div>\r\n          <ViewCustomerList />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { addYear,updateYear }\r\n)(AddFinancialYear);\r\n","import api from \"../Services/api\";\r\n\r\n\r\n export const addYear = data => {\r\n    return dispatch => {\r\n      return api.year.addyear(data);\r\n    }\r\n  }\r\n\r\n  export const updateYear = data => {\r\n    return dispatch => {\r\n      return api.year.updateyear(data);\r\n    }\r\n  }","import axios from 'axios';\n\nexport default {\n  challan: {\n    addchallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/addchallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    updatechallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/updatechallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    \n    getchallan: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n        .then(res => {\n          return res.data.challanlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport { challanListSchema } from \"../Schemas/schemas\";\nimport api from \"../Services/challanapi\";\nimport { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nconst challanCreated = challanlist => {\n  return {\n    type: ADD_CHALLAN,\n    challanlist\n  };\n};\n\nconst challanFetched = challanlist => {\n  return {\n    type: CHALLAN_FETCHED,\n    challanlist\n  };\n};\n\nexport const addChallan = data => {\n  return dispatch => {\n    return api.challan.addchallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\nexport const updateChallan = data => {\n  return dispatch => {\n    return api.challan.updatechallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getChallan = () => {\n  return dispatch => {\n    return api.challan.getchallan().then(challanlist => {\n      console.log(challanlist)\n      const challanlistvalues = challanlist.challandata;\n      console.log(challanlistvalues)\n      return dispatch(\n        challanFetched(normalize(challanlistvalues, [challanListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass ChallanForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [],\n        itemlocation: [null],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      },\n      customerdetail: {\n        id: \"\",\n        customername: \"\"\n      },\n      deliverychallanno: '',\n      toaddress: '',\n      mobilenumber: '',\n      site: '',\n      date: new Date(),\n      ponumber: '',\n      podate: new Date(),\n      vehiclenumber: '',\n      gstno: '',\n      otherreference: '',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    customerlistvalues: [],\n    customerlistSelect: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:'',\n    counts:1\n  };\n\n  componentDidMount() {\n  \n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        customerlistvalues,\n        customerobjects,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data\n        }\n      },() =>{\n        if (this.props.ID != undefined) {\n          this.getDCDetails(this.props.ID)\n        }\n        else{\n          //if(Object.keys(this.props.challanlistvalues).length == 0){\n            this.getChallandata()\n          //}\n        }\n      });\n    \n  }\n\n  getChallandata(){\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n      // if (res.data.challanlist.challandata.length > 0) {\n         \n        let deliverychallanno =\n        res.data.challanlist.challandata.length > 0 ? 1 + res.data.challanlist.challandata.length : 1;\n\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        });\n      //}\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n  getDCDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/challan/getsinglechallan/${id}`)\n      .then(res => {\n\n        console.log(res.data)\n         if (res.data.challanlist.challandata.length > 0) {\n           let founddata = res.data.challanlist.challandata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.deliverychallanno = founddata[0].deliverychallanno;\n           newState.data.toaddress = founddata[0].toaddress;\n           newState.data.site = founddata[0].site;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.ponumber = founddata[0].ponumber;\n           newState.data.podate =  new Date(founddata[0].podate);\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.otherreference = founddata[0].otherreference;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.mobilenumber = founddata[0].mobilenumber ? founddata[0].mobilenumber : ''\n           newState.data.customerdetail.id = founddata[0].customerid ? founddata[0].customerid._id : '';\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n          \n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState);\n\n         \n         \n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.ID == undefined){\n      const materialoptionlistvalues = Object.values(\n        props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n      const masteritemlistvaluesobject = props.masteritemlistvalues;\n      const currencylistvalues = Object.values(props.currencylistvalues);\n      const uomlistvalues = Object.values(props.uomlistvalues);\n      const locationlistvalue = Object.values(props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const challanlistvalues = Object.keys(this.props.challanlistvalues);\n      \n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      let arraySet = [];    \n      customerlistvalues.map((option, i) => {\n        let objset = {\n          value: option.id, label: option.customername\n        }\n        arraySet.push(objset);\n      });\n\n      let deliverychallanno =\n        challanlistvalues.length > 0 ? 1 + challanlistvalues.length : 1;\n  \n        this.setState({\n          ...this.state,\n          masteritemlistvalues,\n          masteritemlistvaluesobject,\n          materialoptionlistvalues,\n          currencylistvalues,\n          locationlistvalue,\n          customerlistvalues,\n          customerlistSelect: arraySet,\n          customerobjects,\n          uom: uomlistvalues,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        },()=>{\n          console.log(this.state.customerlistvalues)\n        });\n    }\n \n    \n\n      \n \n  }\n\n  handleChallanDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: date\n      }\n    });\n  };\n\n  handlePODate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        podate: date\n      }\n    });\n  };\n\n  handleChange = e => {\n    console.log( e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChange2 = e => {\n\n    let selected_id = e.value ? e.value : e\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n\n    let toaddress = customerdetail ? customerdetail.customeraddress1 +\n    \" \" +\n    customerdetail.customeraddress2 +\n    \" \" +\n    customerdetail.city +\n    \" \" +\n    customerdetail.state +\n    \" \" +\n    customerdetail.country +\n    \" \" +\n    customerdetail.pincode : ''\n\n  \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail,\n        toaddress\n      }\n    },()=>{\n      localStorage.setItem('custname',this.state.data.customerdetail.customername)\n      console.log(this.state.data.customerdetail)\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n\n  createSelectcustomer = () => {\n    let items = [];\n    let customerlistvalues = this.state.customerlistvalues;\n    console.log(this.state.customerlistvalues)\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.target ? e.target.value : e;\n    console.log(this.state.masteritemlistvaluesobject)\n    console.log(selected_id)\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //   : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        \n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        }\n  \n        this.setState({\n  \n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          this.totalValue();\n        });\n      }\n      \n      }\n\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    const remarks = removeItem.selectedItemlist.remarks;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    remarks.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks\n        }\n      }\n    },() =>{\n      console.log(this.state.data.selectedItemlist)\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    console.log(this.state.data.customerdetail)\n    const { supplierdetail, selectedItemlist,customerdetail } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    data['customerdetail'].customername = localStorage.getItem('custname')\n    \n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    \n\n    this.props\n      .submit(data)\n      .then(() => {\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n        }\n\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n\n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n          }\n        \n      });\n  };\n\n  \n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success,successmsg } = this.state;\n    const customerID = data.customerdetail ? (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n    //   value={data.customerdetail.id}\n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />    \n    ) : (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n  \n    //   required={true}\n    //   onChange={e => this.handleChange2(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange2.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />        \n    )\n    return (\n      <div>\n\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Delivery Challan</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Delivery Challan</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallanno'>DC</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='deliverychallanno'\n                      type='text'\n                      id='deliverychallanno'\n                      value={data.deliverychallanno || null}\n                      onChange={this.handleChange}\n                 \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To address </Label>\n                    <AvField\n                      Label\n                      name='toaddress'\n                      type='text'\n                      id='toaddress'\n                      value={data.toaddress}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='site'>Site</Label>\n                  <AvField\n                    Label\n                    name='site'\n                    type='text'\n                    id='site'\n                    value={data.site || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='mobilenumber'>Mobile No</Label>\n                  <AvField\n                    Label\n                    name='mobilenumber'\n                    type='text'\n                    id='mobilenumber'\n                    value={data.mobilenumber || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='quotationno'>Date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChallanDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>PO no</Label>\n                    <AvField\n                      Label\n                      type='text'\n                      name='ponumber'\n                      id='ponumber'\n                      value={data.ponumber || null}\n                      onChange={e => this.handleChange(e)}\n                    ></AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='podate'>PO Date</Label>\n                  <DatePicker\n                    selected={data.podate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handlePODate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='podate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='vehiclenumber'>Vehicle Number</Label>\n                    <AvField\n                      Label\n                      name='vehiclenumber'\n                      type='text'\n                      id='vehiclenumber'\n                      value={data.vehiclenumber}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      Label\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='otherreference'>Other reference</Label>\n                    <AvField\n                      Label\n                      name='otherreference'\n                      type='text'\n                      id='otherreference'\n                      value={data.otherreference}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              {/* className='purchaseorder-item-row' */}\n              <div >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                readOnly\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                \n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                            \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                readOnly\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] || null\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='remarks'>Remarks</Label>\n                              <AvField\n                                Label\n                                name='remarks'\n                                type='text'\n                                id='remarks'\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChallanForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addChallan } from '../../../../actions/challan';\nimport { getChallan } from '../../../../actions/challan';\nimport { updateChallan } from '../../../../actions/challan';\n\nimport ChallanForm from './ChallanForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddChallan extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n\n      return this.props\n      .updateChallan(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n        .addChallan(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n    }\n  \n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Challan</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ChallanForm submit={this.submit}  ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addChallan,\n    updateChallan,\n    getCustomerList,\n    getChallan\n  }\n)(AddChallan);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getChallan } from '../../../../actions/challan';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nclass ViewChallan extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    challanlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    \n    console.log(this.props);\n    if (this.props.challanlistvalues) {\n      let quotationlist = Object.values(this.props.challanlistvalues);\n\n      quotationlist.sort(function(a, b){\n        return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n      });\n      const challanlistvalues = quotationlist.map(quotationvalue => {\n        return {\n          deliverychallanno: quotationvalue.deliverychallanno,\n          ponumber: quotationvalue.ponumber,\n          vehiclenumber: quotationvalue.vehiclenumber,\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, challanlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.challanlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.deliverychallanno.toLowerCase().localeCompare(a.deliverychallanno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n    });\n    const challanlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        deliverychallanno: quotationvalue.deliverychallanno,\n        ponumber: quotationvalue.ponumber,\n        vehiclenumber: quotationvalue.vehiclenumber,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, challanlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_challanpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  updatechallan(id) {\n    let path = `/editchallan/${id}`;\n    this.props.history.push(path);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, challanlistvalues } = this.state;\n    console.log(challanlistvalues)\n    const columnvalue = [\n      {\n        label: 'Delivery Challan',\n        field: 'deliverychallanno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'PO Number',\n        field: 'ponumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Vehicle Number',\n        field: 'vehiclenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={challanlistvalues} \n          columnvalue={columnvalue}\n          className=\"challanlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getChallan \n    }\n)(ViewChallan);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ challanlistvalues, data_cond }) => {\n  console.log(JSON.stringify(challanlistvalues));\n  const data = challanlistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = challanlistvalues.totalvalue\n    ? challanlistvalues.totalvalue\n    : '';\n  const taxableAmount = challanlistvalues.taxableamount;\n  const date = moment(challanlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(challanlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(challanlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = challanlistvalues.billingaddress;\n  const deliveryaddress = challanlistvalues.deliveryaddress;\n  const vendorcode = challanlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = challanlistvalues;\n\n  let {\n    deliverychallanno,\n    toaddress,\n    site,\n    ponumber,\n    vehiclenumber,\n    otherreference,\n    gstno,\n    customername\n  } = challanlistvalues;\n  let arr = [],toAD='',arr1 = [],siteAD='',customername1 = ''\n  let mobileno = challanlistvalues.mobilenumber ? challanlistvalues.mobilenumber : ''\n  // if(toaddress.indexOf(',') > -1){\n  //   arr = toaddress.split(',');\n  //   customername = arr[0]\n  //   if(arr.length > 2){\n  //     for(var i=1;i<arr.length;i++){\n  //       toAD = i > 1 ? toAD + ',' + arr[i] : toAD + arr[i]\n  //     }\n  //   }\n  // }\n  // else\n  //   toAD = toaddress\n\n\n    toAD = toaddress\n  \n    // if(site.indexOf(',') > -1){\n    //   arr1 = site.split(',');\n    //   customername1 = arr1[0]\n    //   if(arr1.length > 2){\n    //     for(var i=1;i<arr1.length;i++){\n    //       siteAD = i > 1 ? siteAD + ',' + arr1[i] : siteAD + arr1[i]\n    //     }\n    //   }\n    // }\n    // else\n    //   siteAD = site\n\n    \n\n\n  const purchaseordernumber = challanlistvalues.purchaseordernumber;\n  const tax = challanlistvalues.tax ? challanlistvalues.tax : '';\n  const taxpercentage = challanlistvalues.tax\n    ? challanlistvalues.tax / 100\n    : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = challanlistvalues.selectedcontactlist[0]\n  //     ? challanlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, { color: 'red', paddingLeft: 16 }]}>{deliverychallanno}</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{toAD}</Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={styles.dcaddress}>Site</Text>\n              <Text style={styles.dcaddress}>{site}</Text>\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={styles.header_tintext}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.weighteach}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.costperunit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.totalcost}</Text>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text>\n\n    \n\n        {/* <Text>{'\\n'}</Text> */}\n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, {\n                  color: 'red',\n                  paddingLeft: 16,\n                }]}>{deliverychallanno}/2020-21</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{toAD}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}> Phone no : {mobileno} </Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>Site</Text>\n              {/* <Text style={styles.dcaddress}>{site}</Text> */}\n              {/* <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername1}</Text> */}\n\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{site}</Text>\n\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Text>{'\\n'}</Text>\n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>REMARKS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getChallan } from '../../../../actions/challan';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewChallan';\n\nclass ViewChallanPdf extends React.Component {\n  state = {\n    challanlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getChallan();\n    const quotationid = this.props.match.params.id;\n    const challanlistvalues = this.props.challanlistvalues[quotationid];\n    challanlistvalues.requestdeliverydate = moment(\n      challanlistvalues.date\n    ).format('DD MMM, YYYY');\n    challanlistvalues.addeditemlist = challanlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          itemdiscount: 0,\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = challanlistvalues.customerid;\n    const customernumber = challanlistvalues.customernumber;\n    const customername = challanlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(challanlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        challanlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/challanlist');\n          }, 300);\n        });\n   \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, challanlistvalues, link } = this.state;\n    console.log(this.state);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                challanlistvalues={this.state.challanlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getChallan }\n)(ViewChallanPdf);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../../Components/loader/loader\";\nimport axios from \"axios\";\n\n\nclass EnquiryPage extends React.Component {\n  state = {\n    searchtodate: null,\n    count: null,\n    success: false,\n    update: false,\n    enquirylistvalues: [],\n    backupenquirylistvalues: [],\n    loading: false,\n    errorMsg: '',\n    data: {\n      eno: '',\n      company: '',\n      name: '',\n      phone: '',\n      email: '',\n      detail: '',\n      enquiryFrom: '',\n //   quoteno: '',\n      quotationCreated: false\n    }\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n    this.getEnquiries()\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  quotationCreated = e => {\n    const val = this.state.data.quotationCreated;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [\"quotationCreated\"]: !val }\n    })\n  }\n  updateButton = e => {\n    console.log(e);\n    if (!e.quotationCreated) { e.quotationCreated = false; }\n    this.setState({ ...this.state, success: true, update: true, data: e });\n  }\n  getEnquiries() {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/Enquiry/getenquiry`)\n      .then(res => {\n        this.dataHandler(false)\n        if (res.data.enquirylist.enquirydata.length > 0) {\n          let enquiryvalues = res.data.enquirylist.enquirydata;\n          if (enquiryvalues.length > 0) {\n            enquiryvalues = enquiryvalues.reverse()\n            enquiryvalues = enquiryvalues.map(enquiry => {\n              console.log(enquiry)\n              let created = \"No\"\n              if (enquiry.quotationCreated) {\n                created = \"Yes\"\n              }\n              return {\n                date: enquiry.date,\n                name: enquiry.name,\n                phone: enquiry.phone,\n                company: enquiry.company,\n                email: enquiry.email,\n                detail: enquiry.detail,\n                enquiryFrom: enquiry.enquiryFrom || null,\n            //    quoteno: enquiry.quoteno || null,\n                view: (\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(enquiry);\n                    }}\n                  >\n                    Edit\n                </Button>\n                )\n\n              };\n            });\n\n            this.setState({\n              enquirylistvalues: enquiryvalues,\n              count: enquiryvalues.length\n            }, () => {\n            })\n          }\n        }\n        else {\n          this.setState({ count: 0 })\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  addenquiry = () => {\n    this.setState({\n      success: true, update: false,\n      data: {\n        eno: '',\n        company: '',\n        name: '',\n        phone: '',\n        email: '',\n        detail: '',\n        enquiryFrom: '',\n   //   quoteno: '',\n        quotationCreated: false\n      }\n    });\n  }\n\n  addnewenquiry = () => {\n    const { data } = this.state;\n    if (data.company == '' || data.name == '' || data.phone == '' || data.email == '' || data.detail == '' || data.enquiryFrom == '') {\n      this.setState({ 'errorMsg': 'Fill all fields' });\n    }\n    else {\n      console.log(this.state.data)\n\n      this.dataHandler(true)\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      axios\n        .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/addenquiry`,\n          {\n            \"eno\": \"\",\n            \"company\": data.company,\n            \"name\": data.name,\n            \"phone\": data.phone,\n            \"email\": data.email,\n            \"detail\": data.detail,\n            \"date\": date,\n            \"enquiryFrom\": data.enquiryFrom,\n          //  \"quoteno\": data.quoteno,\n            \"quotationCreated\": data.quotationCreated\n          })\n        .then(res => {\n          this.getEnquiries()\n          this.toggle();\n        },\n          error => {\n            this.dataHandler(false)\n            this.setState({ success: false, message: 'Server error.' });\n          });\n    }\n  }\n\n  updateenquiry = () => {\n    const { data } = this.state;\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/updateenquiry`,\n        {\n          \"_id\": data._id,\n          \"eno\": \"\",\n          \"company\": data.company,\n          \"name\": data.name,\n          \"phone\": data.phone,\n          \"email\": data.email,\n          \"detail\": data.detail,\n          \"date\": data.date,\n          \"enquiryFrom\": data.enquiryFrom,\n        //  \"quoteno\": data.quoteno,\n          \"quotationCreated\": data.quotationCreated\n        })\n      .then(res => {\n        this.getEnquiries()\n        this.toggle();\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  }\n\n  render() {\n    const { count, enquirylistvalues, loading, success, data, errorMsg, update } = this.state;\n\n    const columnvalue = [\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Phone number\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Company name\",\n        field: \"company\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Item detail\",\n        field: \"detail\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Enquiry\",\n        field: \"enquiryFrom\",\n        sort: \"asc\",\n        width: 50\n      },\n      // {\n      //   label: \"Quotation created\",\n      //   field: \"quotationCreated\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Edit\",\n        field: \"edit\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n\n\n\n    let modaldata, errormessage;\n    errormessage = errorMsg != '' ? (<p style={{ 'textAlign': 'center', 'color': 'red' }}>{errorMsg}</p>) : null\n    if (success) {\n      modaldata = (\n        <Modal\n          isOpen={success}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Enquiry</ModalHeader>\n          <ModalBody>\n\n            <input type=\"text\" className=\"form-control\" placeholder=\"Company name\" name=\"company\" value={data.company} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Person name\" name=\"name\" value={data.name} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Mode of enquiry\" name=\"enquiryFrom\" value={data.enquiryFrom} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"number\" className=\"form-control\" placeholder=\"Phone number\" name=\"phone\" value={data.phone} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" value={data.email} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  />\n            <textarea type=\"text\" className=\"form-control\" placeholder=\"Item details\" name=\"detail\" value={data.detail} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  ></textarea>\n            {/* <input type=\"text\" className=\"form-control\" placeholder=\"Quotation Number\" name=\"quoteno\" value={data.quoteno} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} /> */}\n            {/* <input type=\"checkbox\" className=\"\" value={data.quotationCreated} onChange={this.quotationCreated} checked={data.quotationCreated} /> <span style={{position:'relative',top:'-12px'}}> Quotation created </span> */}\n            {errormessage}\n          </ModalBody>\n          <ModalFooter>\n            {update ? (\n              <Button\n                Label\n                style={{ float: 'right' }}\n                color=\"primary\"\n                onClick={this.updateenquiry}\n              >\n                Update\n          </Button>\n            ) : (\n                <div>\n                  <Button color=\"primary\" onClick={this.toggle} style={{ fontSize: '0.8rem' }}>\n                    Cancel\n          </Button>\n                  <Button\n                    Label\n                    style={{ float: 'right' }}\n                    color=\"primary\"\n                    onClick={this.addnewenquiry}\n                  >\n                    Submit\n        </Button>\n                </div>\n              )}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n \n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/crmlist\">CRM</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Enquiries</BreadcrumbItem>\n\n            </Breadcrumb>\n\n\n            <Button\n              Label\n              style={{ float: 'right' }}\n              color=\"primary\"\n              onClick={this.addenquiry}\n            >\n              Add Enquiry\n          </Button>\n\n            {modaldata}\n\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={enquirylistvalues}\n              className=\"customerlist\"\n            />\n\n          </div>\n         \n      </div>\n    );\n  }\n}\n\n\n\nexport default EnquiryPage\n","import axios from \"axios\";\n\nexport default {\n  invoice: {\n    addinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/addinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    updateinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/updateinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    \n    getinvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    getproformainvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/invoiceapi\";\nimport { ADD_INVOICE, INVOICE_FETCHED,PROFORMAINVOICE_FETCHED } from \"../Services/types\";\nimport { invoiceListSchema,proformainvoiceListSchema } from \"../Schemas/schemas\";\n\nconst invoiceCreated = invoicelist => {\n  return {\n    type: ADD_INVOICE,\n    invoicelist\n  };\n};\n\nconst invoiceFetched = invoicelist => {\n  return {\n    type: INVOICE_FETCHED,\n    invoicelist\n  };\n};\n\nconst proformainvoiceFetched = proformainvoicelist => {\n  return {\n    type: PROFORMAINVOICE_FETCHED,\n    proformainvoicelist\n  };\n};\n\nexport const addinvoice = data => {\n  return dispatch => {\n    return api.invoice.addinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\nexport const updateinvoice = data => {\n  return dispatch => {\n    return api.invoice.updateinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getinvoice = () => {\n  return dispatch => {\n    return api.invoice.getinvoice().then(invoicelist => {\n      const invoicelistvalues = invoicelist.invoicedata;\n      console.log(invoicelistvalues)\n      return dispatch(\n        invoiceFetched(normalize(invoicelistvalues, [invoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const getproformainvoice = () => {\n  return dispatch => {\n    return api.invoice.getproformainvoice().then(invoicelist => {\n      const proformainvoicelist = invoicelist.invoicedata;\n      console.log(proformainvoicelist)\n      return dispatch(\n        proformainvoiceFetched(normalize(proformainvoicelist, [proformainvoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass InvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      advanceamountreceived:'',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    customerlistSelect: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n      if(Object.keys(this.props.invoicelistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n         // if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          //}\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n      else{\n        const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n        this.setState({\n          data: {\n            ...this.state.data,\n            invoicenumber\n          }\n        })\n      }\n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/invoice/getsingleinvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n              console.log(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      customerlistSelect: arraySet,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        \n          // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n          // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    },()=>{\n      this.totalValue();\n    });\n  \n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    console.log(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    \n    if(customerdetail){\n      console.log(customerdetail)\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      });\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      \n\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          if(selectedChallan.customerid) {\n            this.handleChange(selectedChallan.customerid._id);\n          }\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n               \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Delivery Challan No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Delivery challan date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n\n                {/* <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> */}\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    readOnly\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n         \n                   <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n              {/* <Row>\n                <div className='mg-t-20' style={{ 'marginLeft': '15px','fontSize': '16px','fontWeight': 'bold'}}>\n                   For Proforma Invoice:\n                </div>\n              </Row>\n              \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Despath </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n              </Row> */}\n\n\n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n           \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(InvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport InvoiceForm from \"./InvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n  submit = data => {\n    console.log(data)\n    this.dataHandler(true);\n      if(this.props.match.params.id != undefined){\n        data['_id'] = this.props.match.params.id;\n        return this.props\n        .updateinvoice(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n      else{\n        return this.props\n        .addinvoice(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <InvoiceForm submit={this.submit} ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(AddInvoice);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ProformaInvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    proformainvoicelist: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      transportationgst:'',\n      advanceamountreceived:'',\n      transportchargerequired: 'Yes',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    customerlistSelect: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          }\n          else{\n            const invoicenumber = 1\n            this.setState({\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            })\n          }\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n    \n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getsingleproformainvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.transportationgst = founddata[0].transportationgst ?  founddata[0].transportationgst : ''\n           \n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.data.transportchargerequired = founddata[0].transportchargerequired ? founddata[0].transportchargerequired : ''\n           \n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerlistSelect: arraySet,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    console.log(e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n\n    if (this.props.ID != undefined) {\n      data['_id'] = this.props.ID;\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/updateproformainvoice`, {\n        data\n      })\n      .then(res => {\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      },(err) =>{\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      });\n    }\n\n    else{\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/addproformainvoice`, {\n        data\n      })\n      .then(res => {\n        \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      },(err) =>{\n \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      this.setState(newState);\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n      let addeditemlist = selectedChallan.addeditemlist;\n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n       \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n          this.handleChange(selectedChallan.customerid._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Proforma Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Proforma Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Proforma Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n              \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Delivery Challan No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Delivery challan date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n               \n\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    readOnly\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n           \n\n                 <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> \n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n            \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Dispatch </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationgst'>Transportation GST </Label>\n                    <AvField\n                      Label\n                      name='transportationgst'\n                      type='text'\n                      id='transportationgst'\n                      value={data.transportationgst}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportchargerequired'>GST required for Transport charge </Label>\n                    <AvField\n                      Label\n                      name='transportchargerequired'\n                      type='select'\n                      id='transportchargerequired'\n                      value={data.transportchargerequired}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    >\n                    <option value='Yes'>Yes</option>\n                    <option value='No'>No</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n\n             \n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n         \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProformaInvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport ProformaInvoiceForm from \"./ProformaInvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddProformaInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Proforma Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProformaInvoiceForm ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(AddProformaInvoice);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n\n    console.log(this.props);\n    if (this.props.invoicelistvalues) {\n      let quotationlist = Object.values(this.props.invoicelistvalues);\n      quotationlist.sort(function(a, b){\n        return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n      });\n      const invoicelistvalues = quotationlist.map(quotationvalue => {\n        return {\n          invoicenumber: quotationvalue.invoicenumber,\n          customername: quotationvalue.customername,\n          customernumber: quotationvalue.customernumber,\n          customercontactnumber: quotationvalue.customercontactnumber,\n\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, invoicelistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.invoicelistvalues);\n    console.log(quotationlist)\n    //quotationlist= quotationlist.sort((a, b) => b.invoicenumber.toString().toLowerCase().localeCompare(a.invoicenumber.toString().toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n    });\n    const invoicelistvalues = quotationlist.map(quotationvalue => {\n      return {\n        invoicenumber: quotationvalue.invoicenumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, invoicelistvalues });\n    this.dataHandler(false);\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = id => {\n    let path = `/view_invoicepdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editinvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, invoicelistvalues,success } = this.state;\n    console.log(invoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={invoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(ViewInvoice);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport './ViewInvoice.scss';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n   padding:5,\n   paddingLeft:10,\n   paddingRight:10,\n\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n    border: 'none',\n    boxShadow: 'none',\n    border: '30px solid green',\n    background:'#000'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  nobordertable: {\n    borderWidth: 0, borderRightWidth: 0, borderBottomWidth: 0\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = invoicelistvalues.taxableamount;\n  taxableAmount = parseFloat(taxableAmount)\n  taxableAmount = taxableAmount.toFixed(2)\n  console.log(taxableAmount)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername\n  } = invoicelistvalues;\n  let purchaseordernumber = invoicelistvalues.purchaseordernumber;\n\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n   \n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n\n\n\n\n  freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n  freightcharges = freightcharges.toFixed(2)\n  subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n  subtotal = parseFloat(subtotal)\n  subtotal = subtotal.toFixed(2)\n  \n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n\n\n  total = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total = total.toFixed(2)\n\n  roundoffamount = roundoffamount != '' && roundoffamount != null ? parseFloat(roundoffamount) : 0\n  roundoffamount = roundoffamount.toFixed(2)\n\n  grandtotal = parseFloat(total) + parseFloat(roundoffamount)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader style={styles.section}>\n              <TableCell weighting={1.087} style={styles.section}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13} style={styles.section}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n          \n                      GST No: {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                      GST No. {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              \n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            \n         \n\n\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n            <Text style={styles.headerwidth}>INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n           \n           \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                 \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}/2020-21\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table styles={{'borderWidth':'0'}}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n               \n                  {deliveryaddress} \n                </Text>\n              </TableCell>\n\n              <TableCell weighting={0.5} >\n                <Table style={styles.section} style={{borderWidth: 0}}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                {/* style={styles.headerfont} */}\n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n              {/* <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell> */}\n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            */}\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n          <Table style={[styles.section,styles.nobordertable]}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  Remarks:\n                  {'\\n'}\n                  {'\\n'}\n                  {remarks}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n                <Text style={styles.headerfont3}>{amountinwords}</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.087}>\n                        <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                      </TableCell>\n                      <TableCell weighting={0.45}>\n                        <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                      <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n            \n              </TableCell>\n            </TableHeader>\n          </Table>\n          \n          {/* Two */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n      \n              </TableCell>\n            </TableHeader>\n          </Table> */}\n          {/* Three */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                {amountinwords}\n                </Text>\n              </TableCell>\n   \n            </TableHeader>\n          </Table> */}\n          {/* ends here */}\n          <Text> {'\\n'}</Text>\n          </Page>\n          <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n          \n            </View>\n\n       \n\n          </View>\n\n          <View style={styles.row}>\n            \n              <View>\n              <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n              </View>\n            \n          </View>\n          </Page>\n\n     \n     \n    </Document >\n  );\n};\n\nexport default MyDocument;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport \"./ViewInvoice\";\n\nclass ViewInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\"\n  };\n  componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    const invoicelistvalues = this.props.invoicelistvalues[quotationid];\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        invoicelistvalues,\n        status: true\n      });\n    },2000);\n   \n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/invoicelist\");\n          }, 300);\n        });\n  \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewInvoicePdf);\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproformainvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport axios from 'axios';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewProformaInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.getProformaInvoice();\n    this.props.getChallan();\n  }\n\n\n  getProformaInvoice(){\n     axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n         console.log(res)\n         this.dataHandler(false);\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let invoicelist = res.data.invoicelist.invoicedata;\n           //invoicelist= invoicelist.sort((a, b) => b.invoicenumber.toLowerCase().localeCompare(a.invoicenumber.toLowerCase()));\n           invoicelist.sort(function(a, b){\n            return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n          });\n          const proformainvoicelistvalues = invoicelist.map(quotationvalue => {\n            return {\n              invoicenumber: quotationvalue.invoicenumber,\n              customername: quotationvalue.customername,\n              customernumber: quotationvalue.customernumber,\n              customercontactnumber: quotationvalue.customercontactnumber,\n      \n              view: (\n                <div className=\"actionbuttons\">\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(quotationvalue);\n                    }}\n                  >\n                    Print\n                  </Button>\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateinvoice(quotationvalue._id);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  </div>\n              )\n            };\n          });\n          this.setState({ ...this.state, proformainvoicelistvalues });\n         }\n        },error =>{\n          this.dataHandler(false)\n         \n        });\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = obj => {\n    sessionStorage.setItem(\"pformadata\",JSON.stringify(obj))\n    let path = `/view_proformainvoicepdf/123`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editproformainvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, proformainvoicelistvalues,success } = this.state;\n    console.log(proformainvoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={proformainvoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    proformainvoicelistvalues: state.proformainvoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getproformainvoice,\n    getChallan\n  }\n)(ViewProformaInvoice);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport moment from 'moment';\nimport React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\nimport './ViewInvoice.scss';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  \n  pagepadding: {\n    padding:5,\n    paddingLeft:10,\n    paddingRight:10,\n  },\n  section: {\n    // position: 'relative',\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument2 = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  const financialYear = invoicelistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = parseFloat(invoicelistvalues.taxableamount)\n  taxableAmount = taxableAmount.toFixed(2)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  let workorderdate = invoicelistvalues.workorderdate != '' ? moment(invoicelistvalues.workorderdate).format('DD MMM, YYYY') : '';\n  let despathdate = invoicelistvalues.despathdate != '' ? moment(invoicelistvalues.despathdate).format('DD MMM, YYYY') : '-';\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername,\n    deliverychallandata,\n    workorderno,\n    removaltime,\n    transportationcharge,\n    transportationgst,\n    advanceamountreceived,\n    transportchargerequired\n  } = invoicelistvalues;\n  deliverychallannumber = deliverychallannumber && deliverychallannumber != '' ? deliverychallannumber.toString() + '/2020-21': ''\n  let purchaseordernumber = deliverychallannumber && deliverychallannumber != '' ? invoicelistvalues.purchaseordernumber : ''\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n\n\n  \n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n   freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n   freightcharges = freightcharges.toFixed(2)\n   subtotal = 0;\n   subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n   subtotal = parseFloat(subtotal)\n   subtotal = subtotal.toFixed(2)\n  // total = parseFloat(total)\n  // total = total.toFixed(2)\n\n\n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n  let total2 = 0\n  total2 = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total2 = parseFloat(total2)\n  total2 = total2.toFixed(2)\n  let transportationgstper=0;\n  transportationgst = transportationgst && transportationgst != '' ? parseFloat(transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n  transportationcharge = transportationcharge != '' && transportationcharge != null ? parseFloat(transportationcharge) : 0\n  transportationcharge = transportationcharge.toFixed(2)\n  let transportationchargegst = transportationcharge * transportationgst\n  transportationchargegst = transportationchargegst.toFixed(2)\n  transportationchargegst = transportchargerequired != '' && transportchargerequired == 'No' ? 0.00 : transportationchargegst\n  let totalaftertransportcharge = parseFloat(total2) + parseFloat(transportationchargegst) + parseFloat(transportationcharge)\n  totalaftertransportcharge = parseFloat(totalaftertransportcharge)\n  totalaftertransportcharge = totalaftertransportcharge.toFixed(2)\n\n\n  advanceamountreceived = advanceamountreceived != '' && advanceamountreceived != null ? parseFloat(advanceamountreceived) : 0\n  advanceamountreceived = advanceamountreceived.toFixed(2)\n  grandtotal = parseFloat(totalaftertransportcharge) - parseFloat(advanceamountreceived)\n  grandtotal = parseFloat(grandtotal)\n  grandtotal = grandtotal.toFixed(2)\n\n  \n  RsPaise(grandtotal)\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n            <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n            \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Proforma Invoice No: {invoicenumber}/{financialYear}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Dispatch Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {despathdate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n         \n                  {deliveryaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n        </Page>\n        <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n   \n                   <Text style={styles.headerfont3}>\n                  {amountinwords}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges </Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {subtotal}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n              \n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                     <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total2}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation Charge</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation @ {transportationgstper}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationchargegst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalaftertransportcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Advance Received</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {advanceamountreceived}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Balance Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n          {'\\n'}\n          {'\\n'}\n            {'\\n'}\n          </Text> \n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.0}>\n                <Text style={styles.headerfont3}>\n                 \n                  \n                  Our Bank details:-  {'\\n'} {'\\n'}\n                  Company Name : Pondhan Scaffolding Pvt Ltd  {'\\n'}\n                  Bank : Vijaya Bank, Branch: Byatarayanapura, Bangalore-92  {'\\n'}\n                  A/c No: 104 00 6211 000 006 Transportation {'\\n'}\n                  IFSC Code: VIJB 000 1040\n                </Text>\n              </TableCell>\n             \n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* Three */}\n\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                  {'\\n'}{'\\n'}{'\\n'}{'\\n'}\n                </Text>\n                <Text\n                 style={[styles.descriptionText, { color: 'red' }]}\n                > Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                \n         \n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n              \n                      <View style={{ flexDirection: 'row', justifyContent: 'center', padding: 5  }}>\n                        <Image style={{ width: 53, height: 53 }} src={sign} />\n                        <Image style={{ width: 53, height: 53 }} src={seal} />\n                      </View>\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                   \n                  </TableCell>\n                </TableHeader>\n               \n              </Table>\n          \n            </View>\n\n       \n            \n          </View>\n          </Page>\n    </Document >\n  );\n};\n\nexport default MyDocument2;","import { PDFViewer } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport logo from \"../../../../Images/logo.png\";\nimport MyDocument2 from \"./Component2\";\nimport \"./ViewInvoice\";\n\nclass ViewProformaInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\"\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    let invoicelistvalues = JSON.parse(sessionStorage.getItem('pformadata'))\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.invoicelistvalues,\n        invoicelistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/proformainvoicelist\");\n          }, 300);\n        });\n       \n      }\n    } else {\n    }\n  }\n  \n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument2\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewProformaInvoicePdf);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass AddItemListForm extends React.Component {\n  state = {\n    data: {\n      masteritemtype: '',\n      masteritemname: null,\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      costperunit: null,\n      masteritemrate: null,\n      masteritemunitwt: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null,\n      masteritemimagefile: null\n    },\n    materialoptionlistvalues: [],\n    masteritemlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    filename:''\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  onItemTypeChange = e => {\n    const selecteditemtype = e.target.value;\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    const masteritemlistvalues = this.state.masteritemlistvalues;\n    const selecteditemtypevalue = materialoptionlistvalues.filter(\n      (option, i) => {\n        if (option.id === selecteditemtype) {\n          return option;\n        }\n      }\n    );\n    const selectitemid = selecteditemtypevalue[0].id;\n    if (selectitemid) {\n      const selecteditemvalues = masteritemlistvalues.filter(item => {\n        if (item.masteritemtype._id == selectitemid) {\n          return item;\n        }\n      });\n      console.log(selecteditemtypevalue);\n      console.log(selecteditemvalues);\n      const count = selecteditemvalues.length;\n      if ((selectitemid === '5d263475917f5e27146d9ee4' || selectitemid === '5df361a6f57a6f7c679da493' || selectitemid === '5f0830f14d38d207245a37eb')) {\n        const itemname = count > 0 ? 1002 + count : 1001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d263480917f5e27146d9ee5' || selectitemid == '5df361e1f57a6f7c679da494'  || selectitemid === '5f0831104d38d207245a37ec')) {\n        const itemname = count > 0 ? 2002 + count : 2001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d270f30136e660798dce139' || selectitemid == '5df361eaf57a6f7c679da495'  || selectitemid === '5f0831204d38d207245a37ed')) {\n        const itemname = count > 0 ? 3002 + count : 3001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n\n      if ((selectitemid === '5d5e206ea24f1806712491b7' || selectitemid == '5df361f3f57a6f7c679da496'  || selectitemid === '5f08312c4d38d207245a37ee')) {\n        const itemname = count > 0 ? 4002 + count : 4001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n    }\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleValidSubmit = () => {\n    let { data } = this.state;\n    this.setState({ loading: true });\n    let formdata = new FormData();\n    console.log(data)\n    formdata.append('imagefile', data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    formdata.append('itemName', data.itemName);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('costperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n        })\n        .catch(err => {\n          this.props.error(false);\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(this.state.data)\n    console.log('invalid submit');\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is added successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is added successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>{' '}\n             \n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onItemTypeChange}\n                      required={true}\n                      Label\n                    >\n                      <option value=''>select</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='Number'\n                      id='masteritemname'\n                      value={data.masteritemname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Code'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=''>Please select value</option>\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit Cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      Label\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className=\"required-label\">*</span> */}\n        \n\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader small-font-size'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddItemListForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert, Modal,ModalHeader,ModalBody,ModalFooter } from \"reactstrap\";\nimport { getMasterItemList } from \"../../../../actions/Transaction\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { deleteMasterItemList } from \"../../../../actions/Transaction\";\n\nclass ViewMasterItemList extends React.Component {\n  state = {\n    loading: false,\n    showModal: false,\n    setDeleteId: '',\n    masteritemlist: [],\n    count: 0\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemList();\n    console.log(\"master item list\", this.props);\n    if(this.props.masteritemlistvalues) {\n      let masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n      const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n        return {\n          masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n          masteritemtypename: masteritemdata.masteritemtypename,\n          masteritemdescription: masteritemdata.masteritemdescription,\n          masteritemshortdescription:masteritemdata.masteritemshortdescription,\n          masteritemuom: masteritemdata.masteritemuom.uomname,\n          // masteritemrate: masteritemdata.masteritemrate,\n          masteritemcostperunit: masteritemdata.masteritemcostperunit,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(masteritemdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          ),\n          delete: (\n            <Button\n            color=\"danger\"\n            onClick={() => {\n              this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n            }}\n          >\n            Delete\n          </Button>\n          )        \n        };\n      });\n      const count = masteritemlistvalues.length;\n      this.setState({ ...this.state, masteritemlist, count });\n      this.dataHandler(false);    \n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, showModal: false });\n  };\n\n  componentWillReceiveProps(props) {\n    console.log(\"master item list in props\", this.props);\n    let masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n    const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n      return {\n        masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n        masteritemtypename: masteritemdata.masteritemtypename,\n        masteritemdescription: masteritemdata.masteritemdescription,\n        masteritemshortdescription:masteritemdata.masteritemshortdescription,\n        masteritemuom: masteritemdata.masteritemuom.uomname,\n        // masteritemrate: masteritemdata.masteritemrate,\n        masteritemcostperunit: masteritemdata.masteritemcostperunit,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(masteritemdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.setState({ ...this.state, showModal: true, setDeleteId: masteritemdata.id });\n          }}\n        >\n          Delete\n        </Button>\n        )        \n      };\n    });\n    const count = masteritemlistvalues.length;\n    this.setState({ ...this.state, masteritemlist, count });\n    this.dataHandler(false);\n  }\n\n  deleteItem = () => {\n    return this.props.deleteMasterItemList(this.state.setDeleteId)\n    .then((data) => {\n      this.props.getMasterItemList();\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  };\n\n  updateButton = id => {\n    let path = `/m_updateitemlist/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { loading, count, masteritemlist, showModal } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"masteritemtype\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Code\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"masteritemdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Short Description\",\n        field: \"masteritemshortdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"UOM\",\n        field: \"masteritemuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      // {\n      //   label: \"Item Rate\",\n      //   field: \"masteritemrate\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Unit Cost\",\n        field: \"masteritemcostperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        {showModal ? (\n                      <Modal\n                      isOpen={showModal}\n                      className={this.props.className}\n                    >\n                      <ModalHeader toggle={this.toggle}>Delete</ModalHeader>\n                      <ModalBody>Do you want to delete this product?</ModalBody>\n                      <ModalFooter>\n                        <Button color='primary' onClick={this.deleteItem}>\n                          Yes\n                        </Button>\n                        <Button color='primary' onClick={this.toggle}>\n                          No\n                        </Button>                        \n                      </ModalFooter>\n                    </Modal>\n        ) : null\n        }\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={masteritemlist}\n              className=\"masteritemlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getMasterItemList, deleteMasterItemList }\n  )(ViewMasterItemList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddmasterItemList extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemList(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemList();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemListForm submit={this.submit} error={this.errorHandler}/>\n        </div>\n        {loading ? (\n        <CustomLoader/>\n        ) : null}\n        {/* <div>\n          <ViewMasterItemList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nAddmasterItemList.propTypes = {\n  addMasterItemList: PropTypes.func.isRequired,\n  getMasterItemList: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addMasterItemList, getMasterItemList, getUomList, getMasterItemTypes }\n)(AddmasterItemList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\n\nclass MasterItemListValues extends React.Component {\n  render() {\n    return (\n      <div class=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <ViewMasterItemList />\n      </div>\n    );\n  }\n}\n\nexport default MasterItemListValues;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass UpdateItemListForm extends React.Component {\n  state = {\n    data: {\n      id: null,\n      masteritemtype: '',\n      masteritemname: '',\n      itemName: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      itemImage: '',\n      costperunit: null,\n      // masteritemrate: null,\n      masteritemunitwt: null,\n      masteritemimagefile: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null\n    },\n    materialoptionlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    imageChanged: false,\n    filename:''\n  };\n\n  componentDidMount() {\n    const id = this.props.id;\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const masteritemlistvalues = props.masteritemlistvalues[id];\n    console.log(masteritemlistvalues)\n    const data = {};\n    data.id = masteritemlistvalues.id;\n\n    data.masteritemname = masteritemlistvalues.masteritemtypename;\n    data.masteritemdescription = masteritemlistvalues.masteritemdescription;\n    data.masteritemshortdescription = masteritemlistvalues.masteritemshortdescription;\n    data.itemName = masteritemlistvalues.itemName;\n    \n    data.permeter = masteritemlistvalues.permeter;\n    data.masteritemunitwt = masteritemlistvalues.masteritemunitwt;\n\n    data.perfeet =  masteritemlistvalues.permeter / 3.2808.toFixed(2)\n    data.perinch =  masteritemlistvalues.permeter / 39.3701.toFixed(2)\n    data.itemImage = masteritemlistvalues.masteritemimage != undefined && \n                     masteritemlistvalues.masteritemimage != null &&\n                     masteritemlistvalues.masteritemimage != '' ? `${process.env.REACT_APP_IMAGE_BASE_URL}` + '/' + masteritemlistvalues.masteritemimage : ''\n    \n    console.log(data.itemImage)\n    data.masteritemtype = masteritemlistvalues.masteritemtype._id;\n    data.masteritemuom = masteritemlistvalues.masteritemuom._id;\n    data.costperunit = masteritemlistvalues.masteritemcostperunit != undefined && \n                       masteritemlistvalues.masteritemcostperunit != null ? \n                      masteritemlistvalues.masteritemcostperunit.toString() : 0\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      data\n    });\n  }\n\n  onNameChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['itemName']: e.target.value, ['masteritemshortdescription']: e.target.value }\n    });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      ...this.state,\n      imageChanged: true,\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleInvalidSubmit = () =>{\n    console.log(this.state.data)\n  }\n\n  handleValidSubmit = () => {\n\n    const { data, imageChanged } = this.state;\n    this.setState({ loading: true });\n    const formdata = new FormData();\n    if (imageChanged) {\n      formdata.append('imagefile', data.masteritemimagefile);\n    }\n    // formdata.append(\"imagefile\", data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('id', data.id);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('masteritemcostperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    const itemimg = this.state.data.itemImage != '' ?\n    (<img src={data.itemImage} style={{'maxWidth': '150px','maxHeight' : '130px'}}/>) : ''\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is Updated successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemtype || null}\n                    >\n                      <option value=''>select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='text'\n                      id='masteritemname'\n                      value={data.masteritemname || null}\n                      readOnly\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='itemName'>Item Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='itemName'\n                      type='text'\n                      id='itemName'\n                      value={data.itemName}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>                \n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription || null}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onNameChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n\n                {/* <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemrate\">Item Rate</Label>\n                    <AvField\n                      name=\"masteritemrate\"\n                      type=\"text\"\n                      id=\"masteritemrate\"\n                      value={data.masteritemrate}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        maxLength: {\n                          value: 150,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Item Rate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col> */}\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemuom || null}\n                    >\n                      <option value=''>Please select value</option>\n                      {/* <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option> */}\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      className='small-font-size'\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      \n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className='required-label'>*</span> */}\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n                  </AvGroup>\n                </Col>\n\n                 <Col sm={6}>\n                {itemimg}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport UpdateMasterItemListForm from \"../Form/ItemList/UpdateItemListForm\";\nimport { updatemasteritemlist } from \"../../../../actions/Transaction\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateMasterItemList extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updatemasteritemlist(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/mitemlistvalues\">Item List</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Update Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <UpdateMasterItemListForm id={id} submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    updatemasteritemlist,\n    addMasterItemList,\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList\n  }\n)(UpdateMasterItemList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass MasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      itemtype: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type data is Added successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Added successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item Type data already exist.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item Type</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"itemtype\"\n                      type=\"text\"\n                      id=\"masteritemtype\"\n                      value={data.option}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item Type\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid Item Type name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup className=\"mg-20\">\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader\"\n                    >\n                      Submit\n                      {/* {loading} */}\n                    </Button>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default MasterItemTypeForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport MasterItemTypeForm from \"../Form/MasterItemTypeForm\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass MasterItemType extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemType(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemTypes();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Type</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemTypeForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(MasterItemType);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nclass ItemMasterTypeList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    masteritemtypesvalues: []\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemTypes();\n  }\n  componentWillReceiveProps(props) {\n    const masteritemtypenamevaluelist = Object.values(\n      props.masteritemtypenamevalue\n    );\n    const masteritemtypesvalues = masteritemtypenamevaluelist.map(\n      (masteritemtypedata, i) => {\n        return {\n          masteritemtypename: masteritemtypedata.masteritemtypename,\n          view: (\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                this.updateButton(masteritemtypedata.id);\n              }}\n            >\n              view / Edit\n            </MDBBtn>\n          )\n        };\n      }\n    );\n    const count = masteritemtypesvalues.length;\n    this.setState({ ...this.state, masteritemtypesvalues, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/update_mitemtype/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { loading, count, masteritemtypesvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 && (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={masteritemtypesvalues}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(ItemMasterTypeList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateMasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      id: this.props.masteritemtypenamevalue.id,\n      masteritemtypename: this.props.masteritemtypenamevalue.masteritemtypename\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const dataRecord = props.masteritemtypenamevalue;\n    this.setState({ ...this.state.data, data: dataRecord });\n  }\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type is updated successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Updated successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>{\" \"}\n         \n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item data already exist.</Alert>\n        ) : null}\n        {!!errors.global ? (\n          <Alert color=\"danger\">\n            Something went wrong,Please try again later.\n          </Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Update Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"item\">Item</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"masteritemtypename\"\n                      type=\"text\"\n                      id=\"item\"\n                      value={data.masteritemtypename}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item name\"\n                        },\n                   \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid item name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalueobjectlist: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateMasterItemTypeForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMasterItemTypeForm from \"../Form/UpdateMasterItemTypeForm\";\nimport {\n  getMasterItemTypes,\n  updateMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateItemMasterType extends React.Component {\n  state = {\n    loading: false,\n    masteritemtypenamevalue: {}\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    const masteritemid = this.props.match.params.id;\n    const masteritemtypenamevalue = this.props.masteritemtypenamevalue[\n      masteritemid\n    ];\n    this.setState({ masteritemtypenamevalue });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updateMasterItemTypes(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { loading, masteritemtypenamevalue } = this.state;\n\n    return (\n      <div className=\"mg-t-20 container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/masteritemtypelist\">Item Type</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <UpdateMasterItemTypeForm\n            submit={this.submit}\n            masteritemtypenamevalue={masteritemtypenamevalue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMasterItemTypes, updateMasterItemTypes }\n)(UpdateItemMasterType);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../loader/loader\";\n\nclass EditTable extends React.Component {\n  state = {\n    data: {\n      poid: null,\n      ponumber: null,\n      poitemid: [],\n      itemid: [],\n      itemuom: [],\n      itemquantity: [],\n      receivedqty: [],\n      recevingqty: [],\n      itemlocation: [],\n      totalqty: [],\n      date: []\n    },\n    receiptnumber: null,\n    selectedItem: [],\n    locationlistvalue: [],\n    sucess: false,\n    errors: {},\n    uomlistvalues: [],\n    loading: false,\n    loadingvalue: false,\n    visible: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const ponumber = this.props.ponumber;\n    const poid = this.props.poid;\n    const selectedItemlistvalues = this.props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const poid = props.poid;\n    const ponumber = props.ponumber;\n    const selectedItemlistvalues = props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const itemlocation = [...this.state.data.itemlocation];\n    itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        itemlocation\n      }\n    });\n  };\n  quantityChange = (e, index) => {\n    const selected_qty = e.target.value;\n    const recevingqty = [...this.state.data.recevingqty];\n    const totalqty = [...this.state.data.totalqty];\n    const receivedqty = [...this.state.data.receivedqty];\n    recevingqty[index] = selected_qty;\n    totalqty[index] =\n      parseFloat(receivedqty[index]) + parseFloat(recevingqty[index]);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        recevingqty,\n        totalqty\n      }\n    });\n  };\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n  handleValidSubmit = () => {\n    this.dataHandler(true);\n    let data = {};\n    let AddedIteminfo = [];\n    const {\n      poid,\n      ponumber,\n      poitemid,\n      itemid,\n      itemuom,\n      itemquantity,\n      receivedqty,\n      recevingqty,\n      itemlocation,\n      totalqty,\n      date\n    } = this.state.data;\n    data.ponumber = ponumber;\n    data.poid = poid;\n    itemid.forEach(function(id, i) {\n      let obj = {};\n      obj.poitemid = poitemid[i];\n      obj.itemid = itemid[i];\n      obj.itemuom = itemuom[i];\n      obj.itemquantity = itemquantity[i];\n      obj.receivedqty = receivedqty[i];\n      obj.recevingqty = recevingqty[i];\n      obj.itemlocation = itemlocation[i];\n      obj.totalqty = totalqty[i];\n      AddedIteminfo.push(obj);\n    });\n    data.iteminfo = AddedIteminfo;\n    this.props\n      .itemlistsubmit(data)\n      .then(data => {\n        this.onShowAlert();\n        this.dataHandler(false);\n        this.setState({\n          success: true,\n          loading: false,\n          receiptnumber: data.receiptnumber\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ errors: err.response.data.error, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  dataHandler = value => {\n    this.setState({ loadingvalue: value });\n  };\n\n  render() {\n    // const { selectedItem } = this.props;\n    const {\n      loading,\n      data,\n      success,\n      errors,\n      selectedItem,\n      receiptnumber,\n      visible,\n      loadingvalue\n    } = this.state;\n    const tableBody = selectedItem.map((itemlist, i) => {\n      let nowDate = new Date();\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={itemlist.poitemid}>\n          <td>{i + 1}</td>\n          <td>{itemlist.itemname}</td>\n          <td>{itemlist.itemdescription}</td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`uom${i}`}\n              onChange={this.onChange}\n              required={true}\n              value={itemlist.itemuom || \" \"}\n            >\n              <option value=\"\">uom</option>\n              {this.createSelectUomItems()}\n            </AvField>\n          </td>\n          <td>{itemlist.quantity}</td>\n          <td>{itemlist.receivedqty}</td>\n          <td>\n            <AvField\n              name={`quantity${i}`}\n              type=\"number\"\n              id={`quantity${i}`}\n              value={itemlist.recevingqty.toString() || null}\n              min={0}\n              max={itemlist.recevingqty}\n              onChange={e => this.quantityChange(e, i)}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter Item Quantity\"\n                },\n                minLength: {\n                  value: 1,\n                  errorMessage: \"quantity value is required\"\n                },\n                pattern: {\n                  value: \"^[0-9.]*$\",\n                  errorMessage: \"Please enter valid quantity\"\n                }\n              }}\n            />\n          </td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`location${i}`}\n              onChange={e => this.locationChange(e, i)}\n              required={true}\n              value={itemlist.itemlocation}\n            >\n              {this.createSelectLocationItems()}\n            </AvField>\n          </td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loadingvalue ? <CustomLoader /> : null}\n        {success && (\n          // <Alert color=\"info\" isOpen={visible}>\n          //   Receipt {receiptnumber} created Successfully\n          // </Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Receipt {receiptnumber} created Successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        )}\n        {!!errors.global ? <Alert color=\"danger\">{errors.global}</Alert> : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>SI No</th>\n                    <th>Item Name</th>\n                    <th>Item Description</th>\n                    <th>UOM</th>\n                    <th>PO Qty</th>\n                    <th>Received Qty</th>\n                    <th>Receiving Qty</th>\n                    <th>location</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>{tableBody}</tbody>\n              </table>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    uomlistvalues: state.uomlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditTable);\n","import axios from \"axios\";\n\nexport default {\n  location: {\n    getLocationList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/location/getlocation`)\n        .then(res => {\n          return res.data.locationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/locationapi\";\nimport { Location_LIST } from \"../Services/types\";\nimport { locationListSchema } from \"../Schemas/schemas\";\n\nfunction locationListFetched(locationlist) {\n  return {\n    type: Location_LIST,\n    locationlist\n  };\n}\n\nexport const getLocationList = () => {\n  return dispatch => {\n    return api.location.getLocationList().then(locationlist => {\n      const locationlistvalue = locationlist.locationdata;\n      return dispatch(\n        locationListFetched(normalize(locationlistvalue, [locationListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert\n} from \"reactstrap\";\n\nclass ReceiptScreenForm extends React.Component {\n  state = {\n    data: {\n      ponumber: null\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onhandleChange = e => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        // eslint-disable-next-line prettier/prettier\n        this.setState({ errors: err.response.data.errors, loading: false, success: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Receipt Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    {!!errors.global ? (\n                      <Alert color=\"danger\" Label>Result Not Found</Alert>\n                    ) : null}\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\" Label>PO Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"ponumber\"\n                        type=\"number\"\n                        id=\"ponumber\"\n                        value={data.ponumber}\n                        onChange={this.onChange}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader small-font-size\"\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      Find\n                      {/* {loading} */}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptScreenForm;\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\n\nclass ReceiptTable extends React.Component {\n  state = {\n    receiptlistitems: []\n  };\n  componentDidMount() {\n    const receiptlistitems = this.props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const receiptlistitems = props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n  render() {\n    const { receiptlistitems } = this.state;\n    const receiptlisttable = receiptlistitems.map((receiptvalue, i) => {\n      let loc = receiptvalue.itemlocation ? receiptvalue.itemlocation.locationname : '-'\n      let nowDate = new Date(receiptvalue.date);\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={receiptvalue.id}>\n          <td>{i + 1}</td>\n          <td>{receiptvalue.itemid.masteritemname}</td>\n          <td>{receiptvalue.itemid.masteritemdescription}</td>\n          <td>{receiptvalue.itemuom.uomname}</td>\n          <td>{receiptvalue.itemquantity}</td>\n          <td>{receiptvalue.recevingqty}</td>\n          <td>{loc}</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>SI No</th>\n              <th>Item Name</th>\n              <th>Item Description</th>\n              <th>UOM</th>\n              <th>PO Qty</th>\n              <th>Received Qty</th>\n              <th>location</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>{receiptlisttable}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport async from \"async\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Button\n} from \"reactstrap\";\nimport EditTable from \"../../../../Components/EditTable/EditTable\";\nimport {\n  getPurchaseOrder,\n  searchPoNumber,\n  addorupdateitemsinlocation,\n  getReceiptlist\n} from \"../../../../actions/Transaction\";\nimport { getLocationList } from \"../../../../actions/Location\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport ReceiptScreenForm from \"./ReceiptScreenForm/ReceiptScreenForm\";\nimport ReceiptTable from \"./ReceiptScreenForm/ReceiptTable\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ReceiptScreen extends React.Component {\n  state = {\n    count: 0,\n    poid: null,\n    ponumber: null,\n    selectedItem: [],\n    success: false,\n    receiptlistitems: [],\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getLocationList();\n    this.props.getUomList();\n    const purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  componentWillReceiveProps(props) {\n    const purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  submit = data => {\n    this.dataHandler(true);\n    this.props.getReceiptlist(data).then(receiptlist => {\n      this.dataHandler(false);\n      const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n        return receiptvalue;\n      });\n      this.setState({\n        ...this.state,\n        receiptlistitems: receiptlistitems\n      });\n    });\n\n    return this.props\n      .searchPoNumber(data)\n      .then(podata => {\n        this.dataHandler(false);\n        const selectedItem = podata.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n        const ponumber = data.ponumber;\n        const poid = podata._id;\n        this.setState({\n          ...this.state,\n          selectedItem,\n          ponumber,\n          poid,\n          success: true\n        });\n        return podata;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ ...this.state, success: false });\n        throw err;\n      });\n  };\n\n  itemlistsubmit = data => {\n    const datavalue = {};\n    datavalue.ponumber = data.ponumber;\n    this.dataHandler(true);\n    this.props.getReceiptlist(datavalue).then(receiptlist => {\n      this.dataHandler(false);\n      if (receiptlist) {\n        const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n          return receiptvalue;\n        });\n        this.setState({\n          ...this.state,\n          receiptlistitems: receiptlistitems\n        });\n      }\n    });\n\n    return this.props\n      .addorupdateitemsinlocation(data)\n      .then(async data => {\n        this.dataHandler(false);\n        const receiptlist = await this.props.getReceiptlist(datavalue);\n        const searchporesult = await this.props.searchPoNumber(datavalue);\n        data = {\n          searchdata: data,\n          receiptlist: receiptlist,\n          searchporesult: searchporesult\n        };\n        return data;\n      })\n      .then(data => {\n        console.log(data);\n        const receiptlistitems = data.receiptlist.receiptlist.map(\n          receiptvalue => {\n            return receiptvalue;\n          }\n        );\n\n        const selectedItem = data.searchporesult.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n\n        this.setState({\n          ...this.state,\n          receiptlistitems,\n          selectedItem\n        });\n\n        return data.searchdata;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  savereport = value => {\n    sessionStorage.setItem(\"Receipt\",JSON.stringify(value))\n    let path = `/viewreceipt`;\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      poid,\n      ponumber,\n      count,\n      success,\n      selectedItem,\n      receiptlistitems,\n      loading\n    } = this.state;\n\n    const receiptlisttable = receiptlistitems.map(receiptvalue => {\n      return (\n        <div className=\"container mg-t-20\" key={receiptvalue.id}>\n          {loading ? <CustomLoader /> : null}\n          <Card>\n            <CardHeader>\n              <span> Receipt No : {receiptvalue.receiptnumber} </span>\n              <span> || </span>\n              <span> PO Number : {receiptvalue.ponumber} </span>\n              <div style={{ 'float':'right','marginTop': '-8px','marginBottom':'-5px'}}>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        this.savereport(receiptvalue);\n                      }}\n                      className=\"lgn-loader small-font-size\"\n                      \n                    >\n                      Save Report\n                     \n                    </Button>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <ReceiptTable itemlist={receiptvalue.itemlist} />\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Receipt Screen</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <ReceiptScreenForm submit={this.submit} />\n              {success && (\n                <EditTable\n                  selectedItem={selectedItem}\n                  ponumber={ponumber}\n                  poid={poid}\n                  itemlistsubmit={this.itemlistsubmit}\n                />\n              )}\n              {receiptlistitems.length > 0 && receiptlisttable}\n            </div>\n          ) : (\n              <Alert color=\"info\" Label>Please Add purchase order </Alert>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPurchaseOrder,\n    searchPoNumber,\n    addorupdateitemsinlocation,\n    getReceiptlist,\n    getLocationList,\n    getUomList\n  }\n)(ReceiptScreen);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 50,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height:50,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n\nconst today = new Date().getDate() + '/' +  (new Date().getMonth()+1) + '/' + new Date().getFullYear()\nconst data = orderlistvalues.addeditemlist;\n  const {\n    ponumber,\n    receiptnumber\n  } = orderlistvalues;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small>\n              </View>\n       \n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : 40 & 41 (corner) Road,no.5, Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>Off: +91 080 23339150, Mob: +91 9900069150</Bold>\n    \n        </Text>\n        <Text> {'\\n'}</Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black',textAlign:'center' }]}>\n          <Bold>Goods Received Note</Bold>\n        </Text>\n\n        \n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>GRN No. </Text>\n                <Text style={[styles.dcaddress, {\n                \n                  paddingLeft: 16,\n                }]}>{receiptnumber}/2019-20 \n                {'\\n'}\n                </Text>\n              </View>\n            \n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>PO No.</Text>\n                <Text style={[styles.dcaddress, {\n                    paddingLeft: 16,\n                    wordWrap: 'break-word'\n                }]}> PSPL/2019-20/{ponumber}\n                {'\\n'}\n                </Text>\n             </View>\n            </View>\n           \n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {today}\n                  {'\\n'}\n                </Text>\n              </View>\n            </View>\n            <Text>{'\\n'}</Text> \n          </View>\n          <Text>{'\\n'}</Text> \n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>UOM</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>PO Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Received Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>Received Date</Text>\n              </TableCell>\n              \n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Remaining Qty</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemuom}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.poqty}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receivedqty}</Text>} />\n            <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receiptDate}</Text>} />\n                \n                <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.availqty}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             Authorised : Yes {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspection Required : Yes {'\\n'}\n             \n            </Text>\n          </View>\n          <Text>{'\\n'}</Text> \n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             EDP Prepared by {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Store incharge {'\\n'}\n             \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspected By {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Manager {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Accounts Department {'\\n'}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\n//import './ViewOrder';\n\nclass ViewReceiptPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    let data = JSON.parse(sessionStorage.getItem(\"Receipt\"))\n    let receipts = JSON.parse(sessionStorage.getItem(\"SelectedItem\"))\n    receipts.map((item)=>{\n      for(var j=0;j<data.itemlist.length;j++){\n        if( data.itemlist[j].itemid.masteritemname == item.itemname){\n          data.itemlist[j]['TotalRecQty'] = item.recevingqty;break\n        }\n      }\n    })\n    let poreceiptvalues = {}\n    poreceiptvalues['ponumber'] = data['ponumber']\n    poreceiptvalues['receiptnumber'] = data['receiptnumber']\n    console.log(data.itemlist)\n    poreceiptvalues['addeditemlist'] = data.itemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemid.masteritemdescription ? itemlist.itemid.masteritemdescription : '',\n          itemcode: itemlist.itemid.masteritemname ? itemlist.itemid.masteritemname : '',\n          itemuom: itemlist.itemuom.uomname ? itemlist.itemuom.uomname : '',\n          poqty: itemlist.itemquantity ? itemlist.itemquantity.toString() : '',\n          receivedqty: itemlist.recevingqty ? itemlist.recevingqty.toString() : '',\n          receiptDate:  itemlist.date ? new Date(itemlist.date).getDate() + \"/\" + (new Date(itemlist.date).getMonth() + 1) + \"/\" + new Date(itemlist.date).getFullYear() : '',\n          availqty: itemlist.TotalRecQty ? itemlist.TotalRecQty : 0\n        };\n      }\n    );\n\n    setTimeout(() => {\n      this.setState({\n        orderlistvalues : poreceiptvalues,\n        status: true\n      },()=>{\n        console.log(this.state.orderlistvalues)\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 6000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/receipt_screen');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n           {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )} \n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps\n)(ViewReceiptPdf);\n","import axios from 'axios';\n\nexport default {\n  moveorder: {\n    addmoveorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/moveorder/addmoveorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.moveorderdata;\n        });\n    },\n    getmoveorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n        .then(res => {\n          return res.data.moveorderlist;\n        });\n    },\n    getItemsMoveOrder: (id) => {\n      return axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getItemsMoveOrder/`+id)\n      .then(res => {\n        return res.data.itemlist;\n      });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/moveorderapi';\nimport { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\nimport { moveorderListSchema } from '../Schemas/schemas';\n\nconst moveorderCreated = moverorderlist => {\n  return {\n    type: ADD_MOVEORDER,\n    moverorderlist\n  };\n};\n\nconst moveorderFetched = moverorderlist => {\n  return {\n    type: MOVEORDER_FETCHED,\n    moverorderlist\n  };\n};\n\nexport const addMoveOrder = data => {\n  return dispatch => {\n    return api.moveorder.addmoveorder(data).then(moverorderlistvalues => {\n      return dispatch(\n        moveorderCreated(normalize(moverorderlistvalues, moveorderListSchema))\n      );\n    });\n  };\n};\n\nexport const getMoveOrder = () => {\n  return dispatch => {\n    return api.moveorder.getmoveorder().then(moverorderlist => {\n      console.log(moverorderlist);\n      const moverorderlistvalues = moverorderlist.moveorderdata;\n      console.log(moverorderlistvalues);\n      return dispatch(\n        moveorderFetched(normalize(moverorderlistvalues, [moveorderListSchema]))\n      );\n    });\n  };\n};\n\nexport const getItemsMoveOrder = (id) => {\n    return api.moveorder.getItemsMoveOrder(id).then(itemorderlist => {\n      console.log(itemorderlist);\n      const itemorderlistvalues = itemorderlist.itemdata;\n      console.log(itemorderlistvalues);\n      return itemorderlistvalues;\n    });\n}\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass MoveOrderScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        availableQuantity: [null],\n        totalcost: [null],\n        remarks: [null]\n      },\n      moveorderno: '1',\n      fromaddress: '',\n      toaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const moveorderlistvalues = Object.keys(this.props.moveorderlistvalues);\n    const moveorderno =\n      moveorderlistvalues.length > 0 ? 1 + moveorderlistvalues.length : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        moveorderno\n      }\n    },()=>{\n      if(moveorderlistvalues.length == 0)\n        this.getMovedata()\n    });\n  }\n\n  getMovedata(){\n    if(Object.keys(this.props.moveorderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n      .then(res => {\n         //if (res.data.moveorderlist.moveorderdata.length > 0) {\n           \n          let moveorderno =\n          res.data.moveorderlist.moveorderdata.length > 0 ? 1 + res.data.moveorderlist.moveorderdata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              moveorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    console.log(this.state.masteritemlistvalues)\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      let itemdesc = ''\n      this.state.masteritemlistvalues.map((item) =>{\n        if(item.masteritemtypename == selected_item.itemname)\n          itemdesc = item.masteritemshortdescription != '' ? item.masteritemshortdescription : item.masteritemdescription\n       })\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc;\n  \n      // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n      // : selected_item.masteritemshortdescription\n      // selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      // selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      // selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n      // selectedItemlist.itemlocation[index] = null;\n      // selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      selectedItemlist.quantity[index] = selected_item.itemquantity;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity;\n      // selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(\n      item => item.id !== e.target.value\n    );\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n      const itemlist = data.itemlist.map(item => {\n        return {\n          id: item.id,\n          locationname: item.locationname,\n          itemid:item.itemid,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'itemname')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          availableQuantity: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n    \n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    availableQuantity.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          availableQuantity,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n\n   \n \n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    if(Number(e.target.value) > selectedItemlist.availableQuantity[index]){\n      window.alert('Move quantity cannot be greater than available quantity')\n      console.log(this.state.data.selectedItemlist.quantity)\n      selectedItemlist.quantity[index] = '0'\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n    else{\n      selectedItemlist.quantity[index] = e.target.value;\n      const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n      this.totalValue();\n    }\n\n\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>Order moved successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Move Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='moveorderno'>Move Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='moveorderno'\n                      type='text'\n                      id='moveorderno'\n                      value={data.moveorderno || null}\n                      onChange={this.handleChange}\n    \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Move Order No'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>From location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To location </Label>\n                    <AvField\n                      type='select'\n                      name='toaddress'\n                      onChange={this.onhandlerToChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createToLocationList()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Name</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Available quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                disabled='true'\n                                value={\n                                  data.selectedItemlist.availableQuantity[\n                                    index\n                                  ]\n                                }\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`movequantity${index}`}>\n                                Move quantity\n                              </Label>\n                              <AvField\n                                name={`movequantity${index}`}\n                                type='number'\n                                id={`movequantity${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.quantity[\n                                    index\n                                  ]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { totalitemvaluesearch }\n)(MoveOrderScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport MoveOrderScreenForm from './MoveOrderScreenForm/MoveOrderScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\n\nclass MoveOrderScreen extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addMoveOrder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Move</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <MoveOrderScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList\n  }\n)(MoveOrderScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getMoveOrder } from '../../../../actions/moveorder';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewProduction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    moveorderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getMoveOrder();\n    // console.log(this.props);\n    // if (this.props.moveorderlistvalues) {\n    //   const quotationlist = Object.values(this.props.moveorderlistvalues);\n    //   const moveorderlistvalues = quotationlist.map(quotationvalue => {\n    //     return {\n    //       moveorderno: quotationvalue.moveorderno,\n    //       fromaddress: quotationvalue.fromaddress,\n    //       toaddress: quotationvalue.toaddress\n    //     };\n    //   });\n    //   this.setState({ ...this.state, moveorderlistvalues });\n    //   this.dataHandler(false);\n    // }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.moveorderlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\n    });\n    const moveorderlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        moveorderno: quotationvalue.moveorderno,\n        fromaddress: quotationvalue.fromaddress,\n        toaddress: quotationvalue.toaddress,\n        view: (\n          <Button\n          color=\"primary\"\n          onClick={() => {\n            let path = `/view_ItemsOrder/${quotationvalue._id}`;\n            this.props.history.push(path);\n          }}\n        >\n          View Items\n        </Button>\n        )\n      };\n    });\n    this.setState({ ...this.state, moveorderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_invoicepdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, moveorderlistvalues } = this.state;\n    console.log(moveorderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Move Order No',\n        field: 'moveorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'From Address',\n        field: 'fromaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'To Address',\n        field: 'toaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'view',\n        width: 100,\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={moveorderlistvalues}\n            columnvalue={columnvalue}\n            className=\"moveorderlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMoveOrder }\n)(ViewProduction);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItemsMoveOrder } from '../../../../actions/moveorder';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewMoveOrderProduction extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    itemorderlistvalues: []\r\n  };\r\n  async componentDidMount() {\r\n    const moveorderid = this.props.match.params.id;\r\n    let receivedData = await getItemsMoveOrder(moveorderid);\r\n    console.log(\"itemorder list values\", receivedData);\r\n    let quotationlist = Object.values(receivedData);\r\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\r\n    quotationlist.sort(function(a, b){\r\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\r\n    });\r\n    const itemorderlistvalues = quotationlist.map(quotationvalue => {\r\n      return {\r\n        itemname: quotationvalue.itemname,\r\n        itemdescription: quotationvalue.itemdescription,\r\n        quantity: quotationvalue.quantity\r\n      };\r\n    });\r\n    this.setState({ ...this.state, itemorderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n  async componentWillReceiveProps(props) {\r\n    const moveorderid = this.props.match.params.id;\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_invoicepdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, itemorderlistvalues } = this.state;\r\n    console.log(itemorderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Item Name',\r\n        field: 'itemname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Item Description',\r\n        field: 'itemdescription',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'quantity',\r\n        field: 'quantity',\r\n        sort: 'asc',\r\n        width: 40\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/move-order'>Move Order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/moveorderlist'>Move Order List</Link>\r\n          </BreadcrumbItem>          \r\n          <BreadcrumbItem active>Items</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable\r\n            rowvalues={itemorderlistvalues}\r\n            columnvalue={columnvalue}\r\n            className=\"moveorderlist\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    moveorderlistvalues: state.moveorderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getItemsMoveOrder }\r\n)(ViewMoveOrderProduction);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch, getMasterItemList } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass AddOnHandScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemlocation: [null],\n        quantity: [null],\n        availableQuantity: [null],\n      },\n      fromaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false,\n    masterItemList: []\n  };\n\n  componentDidMount() {\n    // this.props.getLocationList();\n    this.props.getMasterItemList().then((result) => {\n      console.log('result..............................');\n      console.log(result);\n\n      let items = [];\n      //MasterItemTypeList.entities.masteritemtypelistvalues\n      for (let key in result.MasterItemTypeList.result) {\n        const data = result.MasterItemTypeList.entities.masteritemtypelistvalues[result.MasterItemTypeList.result[key]];\n        console.log(data);\n        items.push({\n          id: data['id'],\n          itemid: data['id'],\n          itemname: data['masteritemtypename'],\n          itemdescription: data['masteritemshortdescription'] != '' ? data['masteritemshortdescription'] : data['masteritemdescription'],\n          quantity: 0,\n          availableQuantity: 0\n        });\n      }\n\n      console.log('UUUUUUUUUUUUUUUUUUUUUUUU');\n      console.log(items);\n      this.setState({\n        masterItemList: items\n      });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data\n      }\n    }, () => {\n\n    });\n  }\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      console.log(this.state.masterItemList)\n      let itemdesc = ''\n      this.state.masterItemList.map((item) =>{\n        if(item.itemname == selected_item.itemname)\n          itemdesc = item.itemdescription\n      })\n\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc != '' ? itemdesc : selected_item.itemdescription;\n      selectedItemlist.quantity[index] = selected_item.itemquantity || 0;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity || 0;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(item => item.id !== e.target.value);\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    let location = e.target.value;\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n\n\n      const isAdded = [];\n      const itemlist = [];\n      data.itemlist.forEach(item => {\n        if (item['itemname']) {\n          itemlist.push({\n            id: item.id,\n            locationname: item.locationname,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n\n      itemlist.forEach(data => {\n        if (data['itemname']) {\n          isAdded.push(data['itemname'])\n        }\n      });\n\n      console.log('Before Adding Remaining');\n      console.log(itemlist);\n\n      const allItems = this.state.masterItemList;\n      allItems.forEach((item, index) => {\n        if (!(isAdded.indexOf(item.itemname) > -1)) {\n          itemlist.push({\n            id: item.id,\n            locationname: location,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n      console.log('After Adding Remaining');\n      console.log(itemlist);\n\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    console.log('###################################');\n    console.log(masteritemlistvalues);\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues, 'itemname');\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues = masteritemlistvalues.sort((a,b)=>{return a['itemname'].toLowerCase().localeCompare(b['itemname'].toLowerCase())})\n    \n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          availableQuantity: [...this.state.data.selectedItemlist.quantity, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemlocation.splice(index, 1);\n    quantity.splice(index, 1);\n    availableQuantity.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemlocation,\n          availableQuantity,\n          quantity\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n\n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    selectedItemlist.quantity[index] = e.target.value;\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let iteminfo = [];\n    const { supplierdetail, selectedItemlist, fromaddress } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    // const itemlocation = selectedItemlist.itemlocation;\n    const quantity = selectedItemlist.quantity;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemid = id[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemlocation = fromaddress;//itemlocation[i] || null;\n      obj.recevingqty = quantity[i] || null;\n      iteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['iteminfo'] = iteminfo;\n    this.setState({ loading: true });\n    // console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            selectedItemlist: {\n              id: [null],\n              itemname: [null],\n              itemdescription: [null],\n              itemlocation: [null],\n              quantity: [null],\n              availableQuantity: [null],\n            },\n            fromaddress: '',\n            values: ['']\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>On Hand Updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>On Hand</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>Select location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={data.selectedItemlist.availableQuantity[index]}\n                                disabled={true}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`newquantity${index}`}>\n                                New Quantity\n                              </Label>\n                              <AvField\n                                name={`newquantity${index}`}\n                                type='number'\n                                id={`newquantity${index}`}\n                                value={data.selectedItemlist.quantity[index]}\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    totalitemvaluesearch,\n    // getLocationList,\n    getMasterItemList\n  }\n)(AddOnHandScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport AddOnHandScreenForm from './AddOnHandScreenForm/AddOnHandScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\nimport { additemsinlocation } from '../../../actions/Transaction';\n\nclass AddOnHand extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .additemsinlocation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add On Hand</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddOnHandScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList,\n    additemsinlocation\n  }\n)(AddOnHand);","import axios from 'axios';\n\nexport default {\n  production: {\n    addproduction: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/production/addproduction`, {\n          data\n        })\n        .then(res => {\n          return res.data.productiondata;\n        });\n    },\n    getproduction: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n        .then(res => {\n          return res.data.productionlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/productionapi';\nimport { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\nimport { productionListSchema } from '../Schemas/schemas';\n\nconst productionCreated = productionlist => {\n  return {\n    type: ADD_PRODUCTION,\n    productionlist\n  };\n};\n\nconst productionFetched = productionlist => {\n  return {\n    type: PRODUCTION_FETCHED,\n    productionlist\n  };\n};\n\nexport const addproduction = data => {\n  return dispatch => {\n    return api.production.addproduction(data).then(productionlistvalues => {\n      return dispatch(\n        productionCreated(normalize(productionlistvalues, productionListSchema))\n      );\n    });\n  };\n};\n\nexport const getproduction = () => {\n  return dispatch => {\n    return api.production.getproduction().then(productionlist => {\n      const productionlistvalues = productionlist.productiondata;\n      console.log(productionlistvalues);\n      return dispatch(\n        productionFetched(\n          normalize(productionlistvalues, [productionListSchema])\n        )\n      );\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass ProductionForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        totalcost: [null],\n        remarks: [null],\n        totalweight: [null],\n        readystock: [null],\n        firstround: [null],\n        secondround: [null],\n        thirdround: [null]\n      },\n      products: [],\n      productionorderno: '',\n      customerid: '',\n      item: '',\n      date: new Date(),\n      quantity: '',\n      subAssembly: [],\n      values: ['']\n    },\n    errors: {},\n    itemname:'',\n    materialoptionlistvalues: [],\n    productMaterial: [],\n    customerlistvalues: [],\n    productlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    customerlistSelect: [],\n    loading: false,\n    success: false\n  };\n  dummyProductMapping = {\n    props: [\n      { assembly: '50 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '40 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '6 mm MS Plate', unit: 'Kgs' },\n      { assembly: 'Prop nut', unit: 'Kgs' }\n    ]\n  };\n\n \n\n  componentWillReceiveProps(props) {\n   \n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    console.log(productlistvalues)\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const productionlistvalues = Object.keys(this.props.productionlistvalues);\n    const productionorderno =\n      productionlistvalues.length > 0\n        ? 1 + productionlistvalues.length\n        : 1;\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      customerlistvalues,\n      productlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      customerlistSelect: arraySet,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        productionorderno\n      }\n    },()=>{\n      if(productionlistvalues.length == 0)\n        this.getProddata()\n    });\n  }\n\n  getProddata(){\n    if(Object.keys(this.props.productionlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n      .then(res => {\n         //if (res.data.productionlist.productiondata.length > 0) {\n           \n          let productionorderno =\n          res.data.productionlist.productiondata.length > 0 ? 1 + res.data.productionlist.productiondata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              productionorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChangeCust = (e,index) => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, customerid:  e.value}\n    });\n  }\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let products2 = this.state.data.products;\n    console.log(products2[index].quantity)\n\n    let item = e.target.options[e.target.selectedIndex].text;\n    console.log(item)\n    const selected_id = e.target.value;\n    console.log(selected_id)\n    let productMaterial2 = [],found=0;\n    let obj = {},arr = []\n    productMaterial2.push(this.props.masteritemlistvalues[selected_id])\n    let itemname = productMaterial2[0].masteritemtypename\n    console.log(productMaterial2)\n \n    for(var i=0;i<this.state.productlistvalues.length;i++){\n      if(this.state.productlistvalues[i].productname.toString().trim().toLowerCase() == productMaterial2[0].masteritemdescription.toString().trim().toLowerCase()){\n        found = 1;\n        break;\n      }\n    }\n    if(found == 1){\n      if(this.state.productlistvalues[i].productMaterial != null && this.state.productlistvalues[i].productMaterial.length > 0){\n        this.state.productlistvalues[i].productMaterial.map((item,index) =>{\n          console.log(item)\n          obj = {}\n          obj['masteritemdescription'] = item.productqty\n          obj['masteritemuom'] = new Object()\n          obj['permeter'] = this.state.productlistvalues[i].permeter\n          obj['perfeet'] = this.state.productlistvalues[i].perfeet\n          obj['perinch'] = this.state.productlistvalues[i].perinch\n          obj['quantityPerMeter'] = this.state.productlistvalues[i].productsqtyinmeter[index] ? this.state.productlistvalues[i].productsqtyinmeter[index] : 0\n          obj['quantityPerKg'] = this.state.productlistvalues[i].productsweight[index] ? this.state.productlistvalues[i].productsweight[index] : 0\n          obj['masteritemuom']['uomname'] =  this.state.productlistvalues[i].productsuom[index]\n          arr.push(obj)\n        })\n      }\n      productMaterial2 = arr\n    }\n    console.log(arr)\n    let subAssembly = [];\n    console.log(productMaterial2)\n    let calculationArray = [];\n    productMaterial2.map(product => {\n\n      let calculationdata = { permeter: null, perfeet: null, perinch: null };\n      product.quantityPerMeter = parseInt(product.quantityPerMeter)\n      product.quantityPerKg = parseInt(product.quantityPerKg)\n      product.quantityPerMeter = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) : product.quantityPerMeter\n      product.quantityPerKg = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) * product.quantityPerKg : product.quantityPerMeter * product.quantityPerKg\n\n      subAssembly.push({\n        name: product.masteritemdescription,\n        unit: product.masteritemuom.uomname,\n        thickness: 0,\n        quantity: 0,\n        quantityPerMeter:product.quantityPerMeter,\n        quantityPerKg: product.quantityPerKg,\n        total: 0\n      });\n      if (product.permeter && product.permeter !== null) {\n        calculationdata.permeter = Number(product.permeter);\n      }\n\n      if (product.perfeet && product.perfeet !== null) {\n        calculationdata.perfeet = Number(product.perfeet);\n      }\n\n      if (product.perinch && product.perinch !== null) {\n        calculationdata.perinch = Number(product.perinch);\n      }\n      calculationArray.push(calculationdata);\n    });\n    console.log(this.state.data.products)\n    let products = this.state.data.products;\n    products[index].subAssembly = subAssembly;\n    products[index].item = item;\n    products[index].calculationArray = calculationArray;\n    console.log(\"item selected is \",item);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, item, subAssembly, products },\n      itemname: 'Item code: ' + '\\n' + itemname,\n      productMaterial2\n    });\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    let productlistvalues = this.state.masteritemlistvalues;\n    console.log(productlistvalues)\n    productlistvalues = productlistvalues.filter((item) =>{\n      return item.masteritemtype.masteritemtypename == 'FinishedGoods'\n    })\n    productlistvalues.map((option, i) => {\n     option['masteritemdescription2'] = option.masteritemshortdescription != '' ?  option.masteritemshortdescription : option.masteritemdescription\n      \n     items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            products: [],\n            subAssembly: []\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggelreload = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  onthicknessChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['thickness'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onQuantityChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantity'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // METER\n  onQuantityChangeMeter = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerMeter'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) / Number(calc.permeter);\n      subAssembly[index]['quantityPerKg'] = kg;\n    }\n\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // KG\n  onQuantityChangeKg = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerKg'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) * Number(calc.permeter);\n      subAssembly[index]['quantityPerMeter'] = kg;\n    }\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onTotalChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['total'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  addItemComp = () => {\n    let products = this.state.data.products;\n    let items = { item: '', quantity: 0, subAssembly: [] };\n    products.push(items);\n    this.setState({\n      ...this.state.data,\n      products\n    });\n  };\n  changeQuantity = (e, index) => {\n    let products = this.state.data.products;\n    products[index].quantity = e.target.value;\n    console.log(products[index])\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, productMaterial,itemname } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Production</ModalHeader>\n              <ModalBody>Production order is generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggelreload}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>\n              Production\n              <Button\n                color='primary'\n                disabled={loading}\n                className='lgn-loader'\n                style={{ float: 'right' }}\n              >\n                Submit\n                {/* {loading} */}\n              </Button>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='productionorderno'>Production No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='productionorderno'\n                      type='text'\n                      id='productionorderno'\n                      value={data.productionorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter production order no'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customerid'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    {/* <AvField\n                      type='select'\n                      name={`customerid`}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    <Select name={`customerid`} classNamePrefix=\"select\" onChange={this.handleChangeCust.bind(this)} styles={customStyles} defaultValue={this.state.customerlistSelect[0]} options={this.state.customerlistSelect} />\n                  </AvGroup>\n                </Col>\n              </Row>\n              {data.products &&\n                data.products.map((item, maninindex) => {\n                  return (\n                    <div>\n                      <Row>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='item'>Item</Label>\n                          <AvField\n                            type='select'\n                            name='item'\n                          \n                            onChange={e => this.selectitemchange(e, maninindex)}\n                            //required={true}\n                          >\n                            <option value=''>select Item</option>\n                            {this.createSelectItems()}\n                          </AvField>\n                          <div style={{'color':'#707070','fontSize':'12px','fontWeight':'bold'}}>{itemname}</div>\n                        </Col>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='quantity'>Quantity</Label>\n                          <AvField\n                            name='quantity'\n                            type='number'\n                            id='quantity'\n                            value={data.quantity || ' ' || null}\n                            onChange={e => this.changeQuantity(e, maninindex)}\n                          />\n                        </Col>\n                      </Row>\n                      {/* Get table based on selected value */}\n                      {data.products[maninindex].subAssembly.length > 0 && (\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>Sub Assembly</th>\n                              <th>UOM</th>\n                              <th>Thickness</th>\n                              <th>Quantity (in meters)</th>\n                              <th>Quantity (in Kgs)</th>\n                              {/* <th>Total</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data.products[maninindex].subAssembly.map(\n                              (product, index) => {\n                                return (\n                                  <tr>\n                                    <td>{product.name}</td>\n                                    <td>{product.unit}</td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`thickness${index}`}\n                                          type='number'\n                                          id={`thickness${index}`}\n                                          placeholder='thickness'\n                                          onChange={e =>\n                                            this.onthicknessChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In meterts'\n                                          onChange={e =>\n                                            this.onQuantityChangeMeter(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerMeter}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In Kgs'\n                                          onChange={e =>\n                                            this.onQuantityChangeKg(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerKg}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    {/* <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`total${index}`}\n                                          type='number'\n                                          id={`total${index}`}\n                                          placeholder='total'\n                                          onChange={e =>\n                                            this.onTotalChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td> */}\n                                  </tr>\n                                );\n                              }\n                            )}\n                          </tbody>\n                        </Table>\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                    onClick={e => this.addItemComp()}\n                  >\n                    Add item\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    productionlistvalues: state.productionlistvalues,\n    customerlistvalues: state.customerlistvalues,\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductionForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addproduction } from '../../../../actions/Production';\nimport { getproduction } from '../../../../actions/Production';\nimport { getproducts } from '../../../../actions/Product';\nimport ProductionForm from './ProductionForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddProduction extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getproduction();\n    this.props.getproducts();\n  }\n  componentWillReceiveProps() {\n    \n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addproduction(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Production</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProductionForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getproduction,\n    getCustomerList,\n    addproduction,\n    getproducts\n  }\n)(AddProduction);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Modal,\n  Label,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproduction } from '../../../../actions/Production';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nclass ViewProudction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success: false,\n    quantity : '',\n    productiondate:'',\n    description:'',\n    id:'',\n    qtyAvaillength:0,\n    isViewList:false,\n    productionTodayList: [],\n    productionlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getproduction();\n    console.log(this.props);\n\n    if (this.props.productionlistvalues) {\n      let quotationlist = Object.values(this.props.productionlistvalues);\n      //quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n      quotationlist.sort(function(a, b){\n        return parseInt(b.productionorderno) - parseInt(a.productionorderno);\n      });\n      let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            obj['items'].push(subitem.item)\n          })\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n        \n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n          \n        };\n      });\n      this.setState({ ...this.state, productionlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.productionlistvalues);\n    quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n    let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            if(parseInt(subitem.quantity) > 0)\n              obj['items'].push(subitem.item)\n\n          })\n        }\n        if(obj['items'].length > 0){\n          obj['items'] = obj['items'].join(\", \")\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n\n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n        };\n      });\n    this.setState({ ...this.state, productionlistvalues });\n    this.dataHandler(false);\n  }\n\n  viewTransaction(arr){\n    this.setState({\n      isViewList:true,\n      productionTodayList : arr\n    })\n  }\n  addTransaction(data,totalqty){\n    console.log(data)\n    let usedqty = 0\n    if(data.transactionHistrory && data.transactionHistrory.length > 0){\n      data.transactionHistrory.map((item) =>{\n        usedqty = usedqty + parseInt(item.qty)\n      })\n    }\n    this.setState({success:true,id:data._id,quantity:'',productiondate:'',description:'',qtyAvaillength: totalqty - usedqty},() =>{\n      console.log(this.state.qtyAvaillength)\n    })\n  }\n\n  updateTransaction = () => {\n    // updateproductionqty\n    if(this.state.quantity == '' || this.state.productiondate == ''){\n      window.alert('All fields are manditory.')\n      return\n    }\n    if(parseInt(this.state.quantity) > this.state.qtyAvaillength){\n      window.alert('Quantity should be less than or equal to : ' + this.state.qtyAvaillength)\n      return\n    }\n    console.log(this.state.id)\n    let data = {}\n    data['_id'] = this.state.id\n    data['transactionHistrory'] = [{'qty' : this.state.quantity,\n              'productiondate' : this.state.productiondate,\n              'description' : this.state.description}]\n\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/production/updateproductionqty`, {\n      data\n      })\n      .then(res => {\n          this.toggle();\n          this.props.getproduction();\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggle2 = () => {\n    this.setState({ ...this.state, isViewList: false });\n  };\n  \n  onhandlerChange = e => { \n    this.setState({\n      quantity : e.target.value\n    });\n  };\n\n  onhandlerChange2 = e => { \n    this.setState({\n      description : e.target.value\n    });\n  };\n\n  \n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      productiondate : date\n    });\n  };\n\n  render() {\n    const { loading, count, isViewList,productionlistvalues,success,quantity,productiondate,description,qtyAvaillength,productionTodayList } = this.state;\n    console.log(\"productionlistvalues is \",productionlistvalues);\n    let headerBlock = '',contentBlock = ''\n    if(isViewList){\n      headerBlock = \n      (\n      <div className=\"row meetingspace\">\n        <div className=\"col split1\">Quantity</div>\n        <div className=\"col split1\">Date</div>\n        <div className=\"col split1\">Remarks</div>\n      </div>\n    )\n\n\n    contentBlock = productionTodayList.map((value,index) => {\n    value['description'] = value.description ? value.description : '-'\n    value.productiondate = \n    (new Date(value.productiondate).getDate() < 10 ? ('0' + new Date(value.productiondate).getDate()) : new Date(value.productiondate).getDate()) + '/' +\n    (new Date(value.productiondate).getMonth()+1 < 10 ? ('0' + (new Date(value.productiondate).getMonth()+1) ) : (new Date(value.productiondate).getMonth()+1)) + '/' + new Date(value.productiondate).getFullYear()\n    return (\n      <div key={index} className=\"row meetingspace\">\n        <div className=\"col split2\">{value.qty}</div>\n        <div className=\"col split2\" >{value.productiondate}</div>\n        <div className=\"col split2\" >{value.description}</div>\n\n      </div>\n    )\n  });\n\n  }\n\n\n\n\n    const columnvalue = [\n      {\n        label: 'Production no',\n        field: 'productionorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'item',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Quantity',\n        field: 'quantity',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: \"View Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      },\n      {\n        label: \"Add Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n\n         {!!isViewList ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={isViewList}\n              toggle={this.toggle2}\n              className={this.props.className}\n            >\n              <ModalHeader toggle2={this.toggle2}>View transaction <br/>\n              \n              </ModalHeader>\n              <ModalBody style={{'margin': '10px'}}>\n                {headerBlock}\n                {contentBlock}\n               \n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle2}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Add transaction <br/>\n              <span style={{ 'fontSize': '14px','fontWeight': 'bold'}}>Note: Available quantity is {qtyAvaillength}</span>\n              </ModalHeader>\n              <ModalBody>\n                \n                 <Label className='small-font-size' for=\"Quantity\">Quantity(*)</Label>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Quantity\" name=\"Quantity\" value={quantity} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n                 \n                  <Label className='small-font-size' for=\"productiondate\">Production Date(*)</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={productiondate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"productiondate\"\n                  />\n\n                 <Label className='small-font-size' for=\"description\">Remarks</Label>\n                  <textarea className=\"form-control\" placeholder=\"Remarks\" name=\"description\" value={description} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange2} ></textarea>\n                 \n\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.updateTransaction}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={productionlistvalues}\n            columnvalue={columnvalue}\n            className=\"productionlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productionlistvalues: state.productionlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproduction }\n)(ViewProudction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./purchaseorder.css\";\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass PurchaseOrderForm extends React.Component {\n  \n  state = {\n    data: {\n      isEditdone:false,\n      supplierdetail: {\n        id: null,\n        suppliernumber: \"\",\n        suppliername: \"\",\n        supplieraddress1: \"\",\n        supplieraddress2: \"\",\n        suppliercontactlistvalue: [],\n        city: \"\",\n        pincode: \"\",\n        state: \"\",\n        country: \"\",\n        suppliergstnumber: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      ponumber: \"\",\n      refno: \"\",\n      subject: \"\",\n      requestdeliverydate: \"\",\n      suppliercontactid: \"\",\n      values: [\"\"],\n      quotationno: null,\n      currency: \"5d3437e21c9d4400008624b7\",\n      totalvalue: null,\n      gst: null,\n      cgst:'',\n      sgst:'',\n      igst:'',\n      scheduledays:'',\n      schedulepayment:''\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:''\n   \n  };\n  \n  componentDidMount(){\n    console.log( Object.keys(this.props.purchaseorderlistvalues))\n    if(this.props.ID != undefined){\n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const supplierdetaillistvalue = Object.values(\n        this.props.supplierdetaillistvalue\n      );\n      const supplierdetaillistvalueobject = this.props.supplierdetaillistvalue;\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n  \n\n      this.setState({\n        ...this.state,\n        supplierdetaillistvalue,\n        supplierdetaillistvalueobject,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      },()=>{\n        this.getPODetails(this.props.ID)\n      });\n    }\n    else{\n      \n\n      if(Object.keys(this.props.purchaseorderlistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder//getpurchaseorderrlist`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n     \n            const purchaseorderlistlength =\n\n            res.data.purchaseorderlist.purchaseorderlistdata.length > 0 ? res.data.purchaseorderlist.purchaseorderlistdata.length : 0;\n      \n            let ponumber = (1 + purchaseorderlistlength).toString();\n       \n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                ponumber\n              }\n            });\n          \n            \n          }\n        \n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n    }\n\n  }\n\n  getPODetails(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorder/${id}`)\n    .then(res => {\n\n      this.dataHandler(false)\n      if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n        let founddata = res.data.purchaseorderlist.purchaseorderlistdata;\n        let podetail = {...this.state.data}\n \n         podetail.supplierdetail.suppliername = founddata[0].suppliername;\n         podetail.supplierdetail.supplierid = founddata[0].supplierid;\n        \n        const newState = Object.assign({}, this.state);\n        newState.data.ponumber = founddata[0].ponumber;\n        newState.data.refno = founddata[0].referenceno;\n        newState.data.values = founddata[0].addeditemlist;\n        newState.data.subject = founddata[0].subject;\n        newState.data.requestdeliverydate = new Date(founddata[0].requestdeliverydate);\n        newState.data.currency = founddata[0].currencyid;\n        newState.data.totalvalue =  founddata[0].totalvalue;\n        newState.data.gst = '0';\n        newState.data.cgst = founddata[0].cgst;\n        newState.data.sgst = founddata[0].sgst;\n        newState.data.igst = founddata[0].igst;\n        newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n        newState.data.schedulepayment = founddata[0].schedulepayment ? founddata[0].schedulepayment : \"\";\n        \n        newState.data.suppliercontactid = founddata[0].suppliercontactid;\n        if(founddata[0].addeditemlist.length > 0){\n          \n          for(var i=0;i<founddata[0].addeditemlist.length;i++){\n            newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n            newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom)\n            newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n            newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n            newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n            newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n            newState.data.selectedItemlist.itemlocation.push(founddata[0].addeditemlist[i].itemlocation)\n          }\n        }\n\n\n        this.setState(newState);\n      \n        console.log(this.state)\n      }\n      else{\n        this.setState({count:0})\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    \n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const purchaseorderlistlength =\n      purchaseorderlist.length > 0 ? purchaseorderlist.length : 0;\n\n    let ponumber = (1 + purchaseorderlistlength).toString();\n    if(this.props.ID != undefined){\n      ponumber = this.state.data.ponumber\n    }\n    this.setState({\n      ...this.state,\n      supplierdetaillistvalue,\n      supplierdetaillistvalueobject,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        ponumber\n      }\n    });\n\n    if(this.state.data.supplierdetail.supplierid && this.state.data.supplierdetail.supplierid != '' && this.props.ID != undefined && !this.state.isEditdone){\n        this.setState({isEditdone:true},()=>{\n          this.handleChange2(this.state.data.supplierdetail.supplierid)\n        })\n    }\n    //console.log(props.supplierdetaillistvalue)\n    \n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    \n    const selected_id = e.target.value;\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        supplierdetail\n      }\n    });\n\n  };\n\n  handleChange2 = e => {\n    const selected_id = e\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    console.log(supplierdetail)\n    \n    if(supplierdetail != undefined){\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          supplierdetail\n        }\n      });\n    }\n \n    \n\n  };\n\n  totalValue = () => {\n    // const { totalcost } = this.state.data.selectedItemlist;\n    // if (totalcost.length > 0) {\n    //   let totalvalue = totalcost\n    //     .map((value, i) => {\n    //       if (value) {\n    //         return parseFloat(value);\n    //       } else {\n    //         return 0;\n    //       }\n    //     })\n    //     .reduce((a, b) => {\n    //       return a + b;\n    //     });\n    //   // Check if tax exists and handle tax  \n    //   let {gst} = this.state.data;\n    //   if(gst !== null) {\n    //     gst = parseFloat(gst).toFixed(2);\n    //   let per = (gst * totalvalue) / 100;\n    //   totalvalue = parseFloat(Number(per)+Number(totalvalue)).toFixed(2);\n    //   }\n    //   this.setState({\n    //     ...this.state.data,\n    //     data: {\n    //       ...this.state.data,\n    //       totalvalue\n    //     }\n    //   });\n    // }\n    this.calculatePercentageAmount()\n  };\n\n\n\n  calculatePercentageAmount = () => {\n\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n\n            // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(totalvalue)\n      ? Number(parseFloat(totalvalue).toFixed(2))\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n      console.log(cgst)\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['totalvalue']: grandtotal\n      }\n    });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        console.log(selected_item)\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        //  selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //                                                                                           : selected_item.masteritemshortdescription\n        selectedItemlist.itemdescription[index] = selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },() =>{\n          this.totalValue();\n        });\n\n      }\n    \n      }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  createSelectSupplier = () => {\n    let items = [];\n    const supplierdetaillistvalue = this.state.supplierdetaillistvalue;\n    supplierdetaillistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.suppliername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      this.totalValue()\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectSupplierContact = () => {\n    let items = [];\n    const suppliercontactlistvalues = this.state.data.supplierdetail\n      .suppliercontactlistvalue;\n    suppliercontactlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option._id}>\n          {option.suppliercontactname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    },()=>{\n      console.log(this.state.data.values)\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    console.log(values)\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    },()=>{\n      this.totalValue()\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || \"\";\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const {\n      values,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      totalvalue,\n      ponumber,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const data = {\n      supplierdetail,\n      AddedIteminfo,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      ponumber,\n      totalvalue,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        \n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order edited successfully' });\n          }\n         \n      \n        \n   \n      })\n      .catch(err => {\n        \n          this.setState({ errors: err.response.data.errors, loading: false });\n        \n        \n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  \n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Purchase Order</ModalHeader>\n              <ModalBody>{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Purchase Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">PO Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"ponumber\"\n                      type=\"number\"\n                      id=\"ponumber\"\n  \n                      value={data.ponumber || null}\n                      onChange={this.onChange}\n                      \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter PO Number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"refno\">Reference No </Label>\n                   \n                    <AvField\n                      name=\"refno\"\n                      type=\"text\"\n                      id=\"refno\"\n                      value={data.refno}\n                      onChange={e => this.onhandlerChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"totalcost\">Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"currency\">Currency</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`currency`}\n                      required={true}\n                      value={data.currency || null}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select currency</option>\n                      {this.createSelectCurrencyItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"quotationno\">Request Delivery Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.requestdeliverydate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"schedulepayment\">Payment Schedule</Label>\n                  <AvField\n                      name=\"schedulepayment\"\n                      type=\"text\"\n                      id=\"schedulepayment\"\n                      value={data.schedulepayment || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                \n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`suppliername`}\n                      value={data.supplierdetail.supplierid}\n                      //required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select supplier name</option>\n                      {this.createSelectSupplier()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliernumber\"\n                      type=\"number\"\n                      readOnly\n                      id=\"suppliernumber\"\n                      value={data.supplierdetail.suppliernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier Number\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GST </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliergstnumber\"\n                      type=\"text\"\n                      readOnly\n                      id=\"suppliergstnumber\"\n                      value={data.supplierdetail.suppliergstnumber}\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier GST Number\"\n                        },\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliercontactinfo\">\n                      Supplier Contact Name\n                    </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      \n                      name={`suppliercontactid`}\n                      value={data.suppliercontactid}\n                      required={true}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select contact</option>\n                      {this.createSelectSupplierContact()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"supplieraddress\">Supplier Address</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"supplieraddress\"\n                      type=\"text\"\n                      id=\"supplieraddress\"\n                      readOnly\n                      value={\n                        data.supplierdetail.supplieraddress1 ||\n                        \"\" + \" \" + data.supplierdetail.supplieraddress2 ||\n                        \"\" + \" \" + data.supplierdetail.city ||\n                        \"\" + \" \" + data.supplierdetail.state ||\n                        \"\" + \" \" + data.supplierdetail.country ||\n                        \"\" + \" \" + data.supplierdetail.pincode ||\n                        \"\"\n                      }\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                  <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>  \n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                \n                    <AvField\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                 \n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"cgst\">CGST(%)</Label>\n                    \n                    <AvField\n                      name=\"cgst\"\n                      type=\"text\"\n                      id=\"cgst\"\n                      value={data.cgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"sgst\">SGST(%)</Label>\n                    \n                    <AvField\n                      name=\"sgst\"\n                      type=\"text\"\n                      id=\"sgst\"\n                      value={data.sgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"igst\">IGST(%)</Label>\n                    \n                    <AvField\n                      name=\"igst\"\n                      type=\"text\"\n                      id=\"igst\"\n                      value={data.igst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className=\"purchaseorder-item-row\">\n                {data.values.map((values, index) => {\n                  \n                  \n        const itemnameinfo = values.id != undefined ? (   \n          <AvField\n          type=\"select\"\n          value={values.id}\n          name={`selectitem${index}`}\n          onChange={e => this.selectitemchange(e, index)}\n          required={true}\n        >\n          <option value=\"\">select Item</option>\n          {this.createSelectItems()}\n        </AvField>\n  \n        ) : \n          (\n               <AvField\n               type=\"select\"\n               name={`selectitem${index}`}\n               value={\n                data.selectedItemlist.id[index]\n              }\n               onChange={e => this.selectitemchange(e, index)}\n               required={true}\n             >\n               <option value=\"\">select Item</option>\n               {this.createSelectItems()}\n             </AvField>\n             \n          )\n\n\n\n                  return (\n                    <div key={index}>\n                      <div className=\"purchaseorder-table\">\n                      \n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for=\"selectitem\">Item Code</Label>\n                              <span className=\"required-label\">*</span>\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type=\"text\"\n                                readOnly\n                                id=\"masteritemdescription\"\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      \"Please enter Item Description\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                style={{ width: \"150px\" }}\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] \n                                }\n                              >\n                                <option value=\"\">select</option>\n                                {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] \n                                }\n                              >\n                                <option value=\"\">uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`location${index}`}>\n                                Delivery Location\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                name={`location${index}`}\n                                onChange={e => this.locationChange(e, index)}\n                                \n                                 value={data.selectedItemlist.itemlocation[index]}\n                              >\n                                <option value=\"\">select location</option>\n                                {this.createSelectLocationItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                name={`costperunit${index}`}\n                                type=\"number\"\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index] \n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage:\n                                      \"Please enter valid costperunit\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type=\"number\"\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: \"Please enter Item Quantity\"\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage: \"Please enter valid quantity\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                name={`totalcost${index}`}\n                                type=\"number\"\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : \" \"\n                                }\n                                onChange={e => this.onChange(e, index)}\n                                // validate={{\n                                //   minLength: {\n                                //     value: 1,\n                                //     errorMessage: \"Total Cost value is required\"\n                                //   }\n                                // }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type=\"button\"\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: \"30px\" }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PurchaseOrderForm);\n","import axios from \"axios\";\n\nexport default {\n  suppliercontact: {\n    addSupplierContact: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/addsuppliercontact`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.supplierContactdata;\n        });\n    },\n    getSupplierContact: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/getsuppliercontact`\n        )\n        .then(res => {\n          return res.data.suppliercontactlist;\n        });\n    }\n  },\n  supplierdetail: {\n    addsupplierdetails: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/addsupplierdetail`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getSupplierDetails: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/getSupplierdetail`\n        )\n        .then(res => {\n          return res.data.supplierdetaillist;\n        });\n    },\n    updateSupplierContact: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/updateSupplierdetail?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/supplierapi\";\nimport { SUPPLIER_CONTACT_LIST, SUPPLIER_DETAIL_LIST } from \"../Services/types\";\nimport {\n  supplierContactListSchema,\n  supplierDetailListSchema\n} from \"../Schemas/schemas\";\n\nexport const suppplierContactListFetched = suppliercontactlistvalue => {\n  return {\n    type: SUPPLIER_CONTACT_LIST,\n    suppliercontactlistvalue\n  };\n};\n\nexport const suppplierDetailListFetched = supplierdetaillistvalue => {\n  return {\n    type: SUPPLIER_DETAIL_LIST,\n    supplierdetaillistvalue\n  };\n};\nexport const addSupplierContact = data => {\n  return dispatch => {\n    return api.suppliercontact.addSupplierContact(data);\n  };\n};\n\nexport const addSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.addsupplierdetails(data);\n  };\n};\n\nexport const getSupplierContact = () => {\n  return dispatch => {\n    return api.suppliercontact\n      .getSupplierContact()\n      .then(suppliercontactlist => {\n        const suppliercontactlistvalue =\n          suppliercontactlist.suppliercontactlistdata;\n        return dispatch(\n          suppplierContactListFetched(\n            normalize(suppliercontactlistvalue, [supplierContactListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const getSupplierDetails = () => {\n  return dispatch => {\n    return api.supplierdetail.getSupplierDetails().then(supplierdetaillist => {\n      const supplierdetaillistvalue = supplierdetaillist.supplierdetaillistdata;\n      return dispatch(\n        suppplierDetailListFetched(\n          normalize(supplierdetaillistvalue, [supplierDetailListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const updateSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.updateSupplierContact(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  currency: {\n    getCurrencyList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/currency/getcurrency`)\n        .then(res => {\n          return res.data.currencylist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/currency\";\nimport { CURRENCY_LIST } from \"../Services/types\";\nimport { currencyListSchema } from \"../Schemas/schemas\";\n\nfunction currencyListFetched(currencylist) {\n  return {\n    type: CURRENCY_LIST,\n    currencylist\n  };\n}\n\nexport const getCurrencyList = () => {\n  return dispatch => {\n    return api.currency.getCurrencyList().then(currencylist => {\n      const currencylistvalue = currencylist.currencydata;\n      return dispatch(\n        currencyListFetched(normalize(currencylistvalue, [currencyListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport PurchaseOrderForm from \"./PurchaseOrderForm/PurchaseOrderForm\";\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  addPurchaseOrder,\n  updatePurchaseOrder,\n  getPurchaseOrder,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport axios from \"axios\";\nclass purchaseOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n    \n    \n  }\n  submit = data => {\n\n    this.dataHandler(true);\n    if(this.props.match.params.id != undefined){\n      \n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatePurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n      \n      // axios\n      // .post(`${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,{\n      //   data\n      // })\n      // .then(res => {\n  \n      //   this.dataHandler(false)\n      //   if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n  \n      //   }\n      //   else{\n      //     this.setState({count:0})\n      //   }\n      // },\n      // error =>{\n      //   this.dataHandler(false)\n      //   this.setState({ success: false, message:'Server error.' });\n      // });\n\n      \n    }\n    else{\n      return this.props\n      .addPurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/view_purchaseorderlist\">Purchase Order</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <PurchaseOrderForm submit={this.submit} ID={ID} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    addPurchaseOrder,\n    updatePurchaseOrder,\n    getPurchaseOrder,\n    getMasterItemTypes\n  }\n)(purchaseOrder);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getPurchaseOrder } from \"../../../actions/Transaction\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\n\nclass ViewPurchaseOrderlist extends React.Component {\n  state = {\n    loading: true,\n    purchaseorderlistvalues: [],\n    count: 0\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  componentDidMount() {\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n\n    this.props.getPurchaseOrder();\n    \n    let purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.supplierstate +\n            \"\" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    // this.dataHandler(false);\n  }\n\n  componentWillReceiveProps(props) {\n    let purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    console.log(purchaseorderlist)\n    //purchaseorderlist= purchaseorderlist.sort((a, b) => b.ponumber.toString().toLowerCase().localeCompare(a.ponumber.toString().toLowerCase()));\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\" style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updatePO(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/view_purchaseorderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updatePO = id => {\n    let path = `/purchase_order_update/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { count, purchaseorderlistvalues, loading } = this.state;\n    const columnvalue = [\n\n      {\n        label: \"PO Number\",\n        field: \"ponumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Reference Number\",\n        field: \"referenceno\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Address\",\n        field: \"address\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Action\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Purchase Order List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {loading ? <CustomLoader /> : null}\n          <div className=\"container mg-20\">\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={purchaseorderlistvalues}\n                className=\"viewpurchaseorder\"\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    getMasterItemTypes,\n    getPurchaseOrder }\n)(ViewPurchaseOrderlist);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport React from 'react';\nimport client from '../../../Images/client.png';\nimport logo from '../../../Images/logo.png';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: '6px',\n    paddingRight: 20,\n    backgroundColor: 'white'\n  },\n  columnSection: {\n    paddingRight: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  padd6: {\n    paddingTop: '6px',\n    paddingBottom: '6px'\n  },\n  padding2: {\n    padding: 5\n  },\n\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: '100%',\n    paddingTop: 20,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  headerwidthNew: {\n    width: 140,\n    padding: 20\n  },\n  headerwidthdate: {\n    fontSize: 12,\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 210,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  fontsize18bold: {\n    fontSize: 10,\n    fontWeight: 900,\n    paddingBottom: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, textAlign: 'left', paddingLeft: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ purchaseorderlistvalue, data_cond }) => {\n  const ponumber = purchaseorderlistvalue.ponumber.toString();\n  const financialYear = purchaseorderlistvalue.financialyear.toString();\n  const data = purchaseorderlistvalue.addeditemlist;\n  let totaleachitem = 0\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n\n\n\n  let totalrs = purchaseorderlistvalue.totalvalue\n    ? purchaseorderlistvalue.totalvalue\n    : '';\n  const tax = purchaseorderlistvalue.cgst ? purchaseorderlistvalue.cgst : '';\n  let cgst = purchaseorderlistvalue.cgst && purchaseorderlistvalue.cgst != '' ? purchaseorderlistvalue.cgst : 0\n  cgst = parseFloat(cgst)\n  let cgstval = parseFloat(totaleachitem) * (cgst/100)\n  cgstval = parseFloat(cgstval)\n  cgstval = cgstval.toFixed(2)\n\n  let sgst = purchaseorderlistvalue.sgst && purchaseorderlistvalue.sgst != '' ? purchaseorderlistvalue.sgst : 0\n  sgst = parseFloat(sgst)\n  let sgstval = parseFloat(totaleachitem) * (sgst/100)\n  sgstval = parseFloat(sgstval)\n  sgstval = sgstval.toFixed(2)\n\n  let igst = purchaseorderlistvalue.igst && purchaseorderlistvalue.igst != '' ? purchaseorderlistvalue.igst : 0\n  igst = parseFloat(igst)\n  let igstval = parseFloat(totaleachitem) * (igst/100)\n  igstval = parseFloat(igstval)\n  igstval = igstval.toFixed(2)\n\n  console.log(purchaseorderlistvalue.scheduledays)\n\n  let scheduledays = purchaseorderlistvalue.scheduledays ? purchaseorderlistvalue.scheduledays : ''\n  let schedulepayment = purchaseorderlistvalue.schedulepayment ? purchaseorderlistvalue.schedulepayment : ''\n  const taxpercentage = purchaseorderlistvalue.gst\n    ? purchaseorderlistvalue.gst / 100\n    : '';\n  const grandtotal =  totalrs+igstval+cgstval+sgstval;\n  const selectecontactlist = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactname\n    : '';\n  const suppliercontactnumber = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactnumber\n    : '';\n  const cond_data = data_cond;\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          {/* <Text style={styles.logo}></Text> */}\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works:</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            visit us: www.pondhan.com\n          </Text>\n        </View> */}\n        <Text style={styles.headerwidth}><Header>Purchase Order</Header> \n        \n        \n        \n        </Text>\n\n        <View style={[styles.section, { paddingBottom: 15, marginTop: 8 }]}>\n        \n        <Text style={styles.refstyle}>\n            PO No. PSPL/{financialYear}/{ponumber}\n          </Text>\n          {/* <Text style={styles.refstyle}>\n            Ref No.{purchaseorderlistvalue.referenceno}\n          </Text> */}\n          <Text style={styles.headerwidthdate}>\n            Date:{purchaseorderlistvalue.requestdeliverydate}\n          </Text>\n        </View>\n\n        <View style={styles.columnSection}>\n          <View>\n            <View>\n              <Text style={styles.fontsize18bold}>Vendor Address:</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>M/S {purchaseorderlistvalue.suppliername}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.supplieraddress1}{' '}\n                {purchaseorderlistvalue.supplieraddress2}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.suppliercity}{' '}\n                {purchaseorderlistvalue.supplierstate}{' '}\n                {purchaseorderlistvalue.supplierpincode}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>{purchaseorderlistvalue.suppliercountry}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>Mobile: {suppliercontactnumber}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>GSTIN No: {purchaseorderlistvalue.suppliergstnumber}</Text>\n            </View>\n          </View>\n          <View>\n            <Text style={styles.fontsize18}>Billing & Delivery Address: {'\\n'}{'\\n'}\n              Pondhan Scaffolding Pvt Ltd.{'\\n'}\n              Plot No : 40&41, Rd. No 5{'\\n'}\n              3rd Phase, KIADB- Obadenahalli{'\\n'}\n              Industrial Area, Doddabalapura,{'\\n'}\n              Bangalore Rural- 561203{'\\n'}\n              GSTIN No : 29AAGCP4018E1ZJ{'\\n'}\n              Contact Person : Nehal Ganapathy{'\\n'}\n              Contact Number : 9844039150/9900069150\n\n      </Text>\n          </View>\n        </View>\n        <View >\n          <Text style={styles.kindattend}>Kind Attn:{selectecontactlist}</Text>\n        </View>\n  \n        <View >\n          <Text style={styles.kindattend}>{'\\n'}</Text>\n        </View>\n        <View>\n          <Text style={styles.main}>Dear Sir,</Text>\n        </View>\n        <View>\n          <Text style={[styles.main, styles.padd6]}>\n            With ref to the discussions we had with you, we are pleased to place our order for the below mentioned\n  material as per the rates quoted by you and as per the T&C given below. ( Ref No ({purchaseorderlistvalue.referenceno}))\n          </Text>\n        </View>\n        <Table style={(styles.section, styles.padding)} data={data}>\n          <TableHeader textAlign={'center'}>\n            <TableCell weighting={0.08}>\n              <Text style={styles.headerfont}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.headerfont}>Material Description</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Rate</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              \n              weighting={0.08}\n              getContent={r => <Small>{r.slno}</Small>}\n            />\n            <DataTableCell\n              style={{ maxWidth: 200, wordWrap: 'break-word' }}\n              weighting={0.6}\n              getContent={r => <Description>{r.itemname}</Description>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.itemdescription}</Small>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Total.</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>CGST@{cgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{cgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>SGST@{sgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{sgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>IGST@{igst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{igstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>\n                {totalrs}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n      \n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n     \n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View> */}\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}>Terms & conditions:</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>1. Payment Schedule: {schedulepayment} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>2. Delivery Schedule: {scheduledays} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            3. Unloading : Exclusive . (M/S Pondhan’s Scope)\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            4. Painting of material : If applicable\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            5. The weight mentioned above will be subject to toleranc of +/-\n            0.5%. Difference in weight beyond tolerance limit will not be\n            accepted and any shortfall in weight will be deducted from your\n            Invoice as applicable.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            6. All material shall be as per IS standard and acceptable quality.\n            You will take rejected material back at your cost.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            7. Weighing slip shall be sent along with each supply.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            8. Please specify the order No on challan & Bills.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            9. All your bills must contain our PO number, receipt along with the\n            bill, failing which the same will not be passed for the payment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            10. In the event you fail to mention GST number & HSN code of\n            purchaser and seller on the Invoice, the GST component will be\n            released only after the compliance of the same. (mandatory as per\n            the provision of GST ACT.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            11. Please ensure your GST Invoice is submitted to us immediately\n            after supply of materials, which should contain our GST number also.\n            Our GST no is : 29AAGCP4018E1ZJ & PAN is AAGCP4018E.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            12. We will recover the GST amount in case of mismatch of GST credit\n            with the GST return filed by the vendor.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            13. Above price is inclusive of loading but excludes transportation\n            charges & unloading comes under the perview of Pondhan Scaffolding\n            Pvt Ltd.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            14. The Transport Vehicle must have fitness certificate, emission\n            certificate, Inscurance, RC documents and all statutory vehicle\n            documents & Driver should have valid driving Liscenceas well as\n            driver alongwith unloaders compulsory to wear safety helmets,\n            reflection jackets and Shoes also.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            15. Special Terms : Relevant Eway bill has to be attached alongwith\n            each and every consignment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            16. Special Note : Relevant manufacturer test certificate has to be\n            submittedalongwith the material. (if applicable).\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            17. Special Note : Please ensure to put up your signature alongwith\n            your company seal, on TAX INVOICE without fail.\n          </Text>\n        </View>\n        <View >\n          <Text>{'\\n'}</Text>\n        </View>\n\n        <View>\n          <Text style={styles.main}>Note: {purchaseorderlistvalue.subject}</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            Kindly sign and return the duplicate copy of this PO as a token of\n            acceptance. {'\\n'} Thanking you, {'\\n'} {'\\n'} For Pondhan\n            Scaffolding Pvt Ltd. {'\\n'} {'\\n'} Authorised Signatory {'\\n'}\n          </Text>\n        </View>\n        <View style={styles.row}>\n          <Text style={styles.main}>Prepared By:</Text>\n          <Text style={styles.main}>Checked By:</Text>\n        </View>\n\n        <View>\n        <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getSupplierDetails } from '../../../actions/Supplier';\nimport { getPurchaseOrder } from '../../../actions/Transaction';\nimport logo from '../../../Images/logo.png';\nimport MyDocument from './Component';\nimport './ViewPurchaseOrder.scss';\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    purchaseorderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getSupplierDetails();\n    const purchaseorderid = this.props.match.params.id;\n    const purchaseorderlistvalues = this.props.purchaseorderlistvalues[\n      purchaseorderid\n    ];\n    console.log(purchaseorderlistvalues)\n    purchaseorderlistvalues.requestdeliverydate = moment(\n      purchaseorderlistvalues.requestdeliverydate\n    ).format('DD MMM, YYYY');\n    purchaseorderlistvalues.addeditemlist = purchaseorderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          itemdescription: itemlist.quantity\n            ? itemlist.quantity.toString()\n            : '',\n          quantity: itemlist.costperunit ? itemlist.costperunit.toString() : '',\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : ''\n        };\n      }\n    );\n    const supplierid = purchaseorderlistvalues.supplierid;\n    const suppliercontactid = purchaseorderlistvalues.suppliercontactid;\n    const supplierlistvalue = this.props.supplierdetaillistvalue[supplierid];\n    const selectedcontact = supplierlistvalue.suppliercontactlistvalue.filter(\n      contactid => {\n        if (contactid._id == suppliercontactid) {\n          return contactid;\n        }\n      }\n    );\n    console.log('__SELECTED_CONTACT_LIST____');\n    console.log(selectedcontact);\n    purchaseorderlistvalues.selectedcontactlist = selectedcontact;\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          purchaseorderlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          purchaseorderlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        purchaseorderlistvalues.financialyear = \"2020-21\";\n      }\n    );\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        purchaseorderlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/view_purchaseorderlist');\n          }, 300);\n        });\n      \n      }\n    } else {\n    }\n  }\n\n  render() {\n    //const link = \"blob:http://localhost:3000/0ef925bb-e930-4ea4-b861-2621aa6447ad\"\n\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                purchaseorderlistvalue={this.state.purchaseorderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getPurchaseOrder, getSupplierDetails }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport client from '../../../../../Images/client.png';\nimport CustomLoader from \"../../../../../Components/loader/loader\";\nclass QuotationForm extends React.Component {\n\n  state = {\n    customerID: null,\n    isRemovedCalled: false,\n    isVisible: true,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: \"\",\n        customernumber: \"\",\n        customergstnumber: \"\",\n        customercontactnumber: \"\",\n        customeraddress1: \"\",\n        customeraddress2: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\",\n        pincode: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemdiscountamount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      quotationnumber: null,\n      subject: \"\",\n      gst: null,\n      totalvalue: \"\",\n      values: [],\n      tcharge: \"\",\n      transportationgst: \"\",\n      transitinsurance:\"\",\n      ws: \"\",\n      loadingcharge: \"\",\n      scheduledays:\"\",\n      date: new Date()\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    uom: [],\n    customerlistSelect: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: true,\n    success: false,\n    visible: false\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getQuotationDetails(id) {\n    this.dataHandler(true)\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/quotation/getsinglequotation/${id}`)\n      .then(res => {\n\n\n        if (res.data.quotationlist.quotationdata.length > 0) {\n          let founddata = res.data.quotationlist.quotationdata;\n\n          const newState = Object.assign({}, this.state);\n          newState.data.customerdetail.id = founddata[0].customerid;\n\n          newState.data.values = founddata[0].addeditemlist;\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n\n\n          newState.data.subject = founddata[0].subject;\n          newState.data.date = new Date(founddata[0].date);\n          newState.data.quotationnumber = founddata[0].quotationnumber;\n          localStorage.setItem('QTno', founddata[0].quotationnumber)\n          newState.data.totalvalue = founddata[0].totalvalue;\n          newState.data.gst = founddata[0].tax;\n          newState.data.ws = founddata[0].ws != undefined && founddata[0].ws != null ? founddata[0].ws : '';\n          newState.data.tcharge = founddata[0].tcharge != undefined && founddata[0].tcharge != null ? founddata[0].tcharge : '';\n          newState.data.transportationgst = founddata[0].transportationgst != undefined && founddata[0].transportationgst != null ? founddata[0].transportationgst : '';\n          \n          newState.data.transitinsurance = founddata[0].transitinsurance != undefined && founddata[0].transitinsurance != null ? founddata[0].transitinsurance : '';\n          \n          newState.data.loadingcharge = founddata[0].loadingcharge != undefined && founddata[0].loadingcharge != null ? founddata[0].loadingcharge : '';\n          newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].itemdiscountamount = founddata[0].addeditemlist[i].itemdiscountamount == null || founddata[0].addeditemlist[i].itemdiscountamount == '' ?\n                founddata[0].addeditemlist[i].itemdiscountamount = 0 : founddata[0].addeditemlist[i].itemdiscountamount\n              founddata[0].addeditemlist[i].itemdiscountamount = (founddata[0].addeditemlist[i].itemdiscountamount).toString()\n\n\n\n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n              newState.data.selectedItemlist.itemdiscountamount.push(founddata[0].addeditemlist[i].itemdiscountamount)\n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.ID != undefined) {\n      this.getQuotationDetails(this.props.ID)\n    }\n    else{\n      setTimeout(() =>{\n        this.dataHandler(false)\n      },100)\n      // quotation/getquotation\n    }\n      \n    const quotationlistvalues = Object.keys(this.props.quotationlistvalues);\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n\n\n    if (this.props.ID == undefined) {\n\n      let quotationnumber = '';\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n      this.setState({\n        data: {\n          ...this.state.data,\n          quotationnumber\n        }\n      })\n\n    }\n    // else{\n    //   alert(this.state.data.quotationnumber)\n    // }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    //this.dataHandler(false)\n  }\n\n  componentWillReceiveProps(props) {\n    const quotationlistvalues = Object.keys(props.quotationlistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n    let quotationnumber = ''\n    if (this.props.ID == undefined) {\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n    }\n\n    let arraySet = [];    \n    customerlistvalues.map((option, i) => {\n      let objset = {\n        value: option.id, label: option.customername\n      }\n      arraySet.push(objset);\n    });\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      customerlistSelect: arraySet,\n      uom,\n      data: {\n        ...this.state.data,\n        quotationnumber\n      }\n    });\n  }\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      if (name === 'gst') {\n        this.totalValue();\n      }\n    });\n  };\n\n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onSubjectHandler = e => {\n\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },()=>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange2 = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      }, () => {\n        console.log(this.state.data.values)\n      });\n    }\n  }\n\n  selectitemchange = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate._id;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n  \n        if (this.props.ID == undefined) {\n          selectedItemlist.itemdiscount[index] = \"0\";\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n          selectedItemlist.quantity[index] = (1).toString();\n          selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n        }\n  \n  \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        }, () => {\n          this.totalValue();\n        });\n      }\n     \n    }\n   \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || \"\";\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : \"\";\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    console.log(unitcost)\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      //   selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost) - (parseFloat(unitcost) * discount) / 100).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(selectedItemlist.costperunit[index]) -\n        (parseFloat(selectedItemlist.costperunit[index]) * selectedItemlist.itemdiscount[index]) / 100).toFixed(2);\n\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n\n  /*itemdiscountChange = (e, index) => {\n    \n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n    \n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n        selectedItemlist.itemdiscountamount[index] = null;\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };*/\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      // Check if tax exists and handle tax  \n      let { gst } = this.state.data;\n      if (gst !== null) {\n        gst = parseFloat(gst).toFixed(2);\n        let per = (gst * totalvalue) / 100;\n        totalvalue = parseFloat(Number(per) + Number(totalvalue)).toFixed(2);\n      }\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.value ? e.value : e\n    this.updateQuotation(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail\n      }\n    });\n\n  };\n\n  handleClick = e => {\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, [\"\"]],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, \"0\"],\n          itemdiscountamount: [...this.state.data.selectedItemlist.itemdiscountamount, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"1\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    }, () => {\n      console.log(this.state.data.values)\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    console.log(index)\n\n    let removeItem = { ...this.state.data };\n    console.log(removeItem.selectedItemlist)\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n    let itemdiscountamount = removeItem.selectedItemlist.itemdiscountamount;\n\n    values.splice(index, 1);\n\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n\n    costperunit.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    quantity.splice(index, 1);\n    itemdiscountamount.splice(index, 1);\n\n    totalcost.splice(index, 1);\n\n    console.log(removeItem.selectedItemlist)\n\n\n\n    //setTimeout(() =>{\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          itemdiscountamount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      },\n      isVisible: false,\n      isRemovedCalled: true\n    }, () => {\n      // setTimeout(() =>{\n      this.setState({\n        'isVisible': true\n      })\n      console.log(this.state.data.values)\n      console.log(this.state.data.selectedItemlist)\n      if (this.state.data.selectedItemlist.id.length > 0) {\n        this.state.data.selectedItemlist.id.filter((item, index) => {\n          if (typeof item == 'string' && item != '') {\n\n            this.selectitemchange2(item, index)\n          }\n\n        })\n\n      }\n      // },200)\n\n      this.totalValue();\n\n    });\n    //},200)\n\n\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const {\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const itemdiscountamount = selectedItemlist.itemdiscountamount;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.itemdiscountamount = itemdiscountamount[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    let data = {\n      customerdetail,\n      AddedIteminfo,\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    };\n    console.log(transportationgst)\n    data['quotationnumber'] = data['quotationnumber'] == '' ? localStorage.getItem('QTno') : data['quotationnumber']\n    data['customeraddress'] = document.getElementById('customeraddress').value ? document.getElementById('customeraddress').value : ''\n\n    this.setState({ loading: true });\n\n    if (localStorage.getItem('customerId') != null) {\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      let obj = {}\n      obj['customerid'] = localStorage.getItem('customerId')\n      obj['Qno'] = this.state.data.quotationnumber\n      obj['quotation'] = date\n\n\n\n      if (this.props.ID != undefined) {\n        console.log(data)\n        this.props\n          .submit(data)\n          .then(() => {\n            this.dataHandler(false)\n            this.setState({ loading: false, errors: {}, success: true });\n            this.onShowAlert();\n          })\n          .catch(err => {\n            this.setState({ loading: false, errors: {}, success: true });\n            if (err.response) {\n              this.setState({ errors: err.response.data.errors, loading: false });\n              this.onShowAlert();\n            }\n\n          });\n\n      }\n      else {\n        axios\n          .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`, obj)\n          .then(res => {\n            this.props\n              .submit(data)\n              .then(() => {\n                this.setState({ loading: false, errors: {}, success: true });\n                this.myFormRef.reset();\n                this.onShowAlert();\n              })\n              .catch(err => {\n                this.setState({ errors: err.response.data.errors, loading: false });\n                this.onShowAlert();\n              });\n          },\n            error => {\n              this.setState({ errors: error.response.data.errors, loading: false });\n              this.onShowAlert();\n            });\n      }\n    }\n    else {\n      this.props\n        .submit(data)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n          this.onShowAlert();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n          this.onShowAlert();\n        });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id)\n      // this.setState({ loading: true,transaction:[] });\n      // axios\n      // .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n      // .then(res => {\n      //   this.setState({ loading: false });\n      //   if(res.data.customerlist.customerdata.length > 0){\n      //     let customervalues = res.data.customerlist.customerdata;\n      //     if(customervalues.length > 0){\n      //       customervalues = customervalues.filter((item,index) =>{\n      //         return index == customervalues.length-1\n      //       })\n      //       if(customervalues.length == 1){\n      //         this.setState({ transaction: customervalues },() =>{\n      //           console.log(this.state.transaction)\n      //         });\n      //       }\n      //     }\n      //   }\n      // },\n      // error =>{\n      //   this.setState({ loading: false });\n      // });\n    }\n\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const customStyles = {\n      control: base => ({\n        ...base,\n        height: 35,\n        minHeight: 35\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n        padding: '0 6px'\n      }),\n  \n      input: (provided, state) => ({\n        ...provided,\n        margin: '0px',\n      }),\n      indicatorSeparator: state => ({\n        display: 'none',\n      }),\n      indicatorsContainer: (provided, state) => ({\n        ...provided,\n        height: '35px',\n      }),\n    };\n    const { data, errors, loading, success, visible, isVisible } = this.state;\n    const successmsg = this.props.ID != undefined ? 'Quotation is updated successfully' : 'Quotation is added successfully'\n    const customerID = data.customerdetail ? (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n    //   value={data.customerdetail.id}\n    //   required={true}\n    //   onChange={e => this.handleChange(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required defaultValue={data.customerdetail.id} options={this.state.customerlistSelect} />\n    ) : (\n    //   <AvField\n    //   Label\n    //   type=\"select\"\n    //   name={`customername`}\n  \n    //   required={true}\n    //   onChange={e => this.handleChange(e)}\n    // >\n    //   <option value=\"\">select customer name</option>\n    //   {this.createSelectcustomer()}\n    // </AvField>\n    <Select name={`customername`} classNamePrefix=\"select\" onChange={this.handleChange.bind(this)} styles={customStyles} required options={this.state.customerlistSelect} />    \n    )\n\n    const customerNumber = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      value={data.customerdetail.customernumber}\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerGST = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" readOnly\n      id=\"customergstnumber\"\n      value={data.customerdetail.customergstnumber}\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" \n      readOnly\n      id=\"customergstnumber\"\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerAddress = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n      value={\n        data.customerdetail.customeraddress1 +\n        \" \" +\n        data.customerdetail.customeraddress2 +\n        \" \" +\n        data.customerdetail.city +\n        \" \" +\n        data.customerdetail.state +\n        \" \" +\n        data.customerdetail.country +\n        \" \" +\n        data.customerdetail.pincode\n      }\n      onChange={this.onCustomerChange}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n\n      onChange={this.onCustomerChange}\n    />\n    )\n\n\n\n\n\n    const dataelem = isVisible ? (\n\n      <div className=\"purchaseorder-item-row\">\n        {data.values.map((values, index) => {\n\n          const itemnameinfo = values.id != undefined ? (\n            <AvField\n              type=\"select\"\n              value={values.id._id}\n              name={`selectitem${index}`}\n              onChange={e => this.selectitemchange(e, index)}\n              required={true}\n            >\n              <option value=\"\">select Item</option>\n              {this.createSelectItems()}\n            </AvField>) :\n            (\n              <AvField\n                type=\"select\"\n                name={`selectitem${index}`}\n                value={\n                  data.selectedItemlist.id[index]\n                }\n                onChange={e => this.selectitemchange(e, index)}\n                required={true}\n              >\n                <option value=\"\">select Item</option>\n                {this.createSelectItems()}\n              </AvField>\n\n            )\n          return (\n            <div key={index}>\n\n              <div className=\"purchaseorder-table\">\n                <Row key={index}>\n                  <Col sm={1}>\n\n                    <AvGroup>\n\n                      <Label for=\"selectitem\">Item Code</Label>\n                      <span className=\"required-label\">*</span>\n                      {itemnameinfo}\n\n\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label for={`masteritemdescription${index}`}>\n                        Description\n                    </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`masteritemdescription${index}`}\n                        type=\"text\"\n                        readOnly\n                        id=\"masteritemdescription\"\n                        value={\n                          data.selectedItemlist.itemdescription[index]\n                        }\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              \"Please enter Item Description\"\n                          }\n\n\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemtype${index}`}>Type</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        style={{ width: \"150px\" }}\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemtype${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemtype[index]\n                        }\n                      >\n                        <option value=\"\">select</option>\n                        {this.createSelectItemTypes()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemuom${index}`}>UOM</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemuom${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemuom[index]\n                        }\n                      >\n                        <option value=\"\">uom</option>\n                        {this.createSelectUomItems()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`discount${index}`}>Discount %</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`itemdiscount${index}`}\n                        type=\"number\"\n                        id={`itemdiscount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscount[index]\n                        }\n                        onChange={e =>\n                          this.itemdiscountChange(e, index)\n                        }\n                        validate={{\n                          minLength: {\n                            value: 1,\n                            errorMessage:\n                              \"item Discount value is required\"\n                          },\n                          maxLength: { value: 100 },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid value\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`quantity${index}`}>Quantity</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`quantity${index}`}\n                        type=\"number\"\n                        id={`quantity${index}`}\n                        value={\n                          data.selectedItemlist.quantity[index]\n                        }\n                        onChange={e => this.quantityChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Item Quantity\"\n                          },\n                          minLength: {\n                            value: 1,\n                            errorMessage: \"quantity value is required\"\n                          },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid quantity\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`costperunit${index}`}>\n                        MRP Cost\n                    </Label>\n                      <AvField\n                        name={`costperunit${index}`}\n                        type=\"number\"\n                        id={`costperunit${index}`}\n                        value={\n                          data.selectedItemlist.costperunit[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Please enter cost'\n                          },\n\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage:\n                              \"Please enter valid costperunit\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`itemdiscountamount${index}`}>\n                        Discount Cost\n                    </Label>\n                      <AvField\n                        name={`itemdiscountamount${index}`}\n                        type=\"number\"\n                        id={`itemdiscountamount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscountamount[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`totalcost${index}`}>\n                        Total Cost\n                    </Label>\n                      <AvField\n                        name={`totalcost${index}`}\n                        type=\"number\"\n                        id={`totalcost${index}`}\n                        value={\n                          data.selectedItemlist.totalcost[index]\n                            ? data.selectedItemlist.totalcost[index]\n                            : \" \"\n                        }\n                        onChange={e => this.onChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <Button\n                      type=\"button\"\n                      onClick={e => this.removeClick(e, index)}\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      -\n                  </Button>\n                  </Col>\n                </Row>\n              </div>\n\n\n            </div>\n          );\n        })}\n      </div>\n\n\n    ) : null\n\n\n\n    return (\n      <div>\n        <div>\n\n          {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Quotation</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert color=\"danger\" isOpen={visible} Label>\n              Quotation number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Quotation</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">Quotation Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"quotationnumber\"\n                      type=\"number\"\n                      id=\"quotationnumber\"\n                      value={data.quotationnumber || null}\n                      onChange={this.onhandlerChange}\n\n                      validate={{\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"totalcost\" Label>Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"date\">Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.date}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control small-font-size\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label F\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    {customerNumber}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GST </Label>\n                    {customerGST}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customeraddress\">Customer Address</Label>\n                    {customerAddress}\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n              <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={this.onSubjectHandler}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                  \n                    <AvField\n                      Label\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                  \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"loadingcharge\">\n                      Loading and Handling Charges </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"loadingcharge\"\n                      type=\"number\"\n                      id=\"loadingcharge\"\n                      value={data.loadingcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Loading and Handling Charges\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ws\">\n                      W.S</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"ws\"\n                      type=\"number\"\n                      id=\"ws\"\n                      value={data.ws || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter W.S\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transitinsurance\">\n                    Transit Insurance</Label>\n     \n                    <AvField\n                      Label\n                      name=\"transitinsurance\"\n                      type=\"number\"\n                      id=\"transitinsurance\"\n                      value={data.transitinsurance || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />  \n                  </AvGroup>\n                </Col>\n\n                \n\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"tcharge\">\n                      Transportation Charges</Label>\n     \n                    <AvField\n                      Label\n                      name=\"tcharge\"\n                      type=\"number\"\n                      id=\"tcharge\"\n                      value={data.tcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transportationgst\">Transportation GST(%) </Label>\n                    <AvField\n                      Label\n                      name=\"transportationgst\"\n                      type=\"number\"\n                      id=\"transportationgst\"\n                      value={data.transportationgst || \"\"} \n                      onChange={this.onSubjectHandler}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n\n              {dataelem}\n\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(QuotationForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addquotation } from \"../../../../actions/quotation\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updatequotation } from \"../../../../actions/quotation\";\n\nimport QuotationForm from \"./QuotationForm/QuotationForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddQuotation extends React.Component {\n\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  }\n\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    \n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatequotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      \n      return this.props\n      .addquotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n          <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <QuotationForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addquotation,\n    updatequotation,\n    getCustomerList,\n    getquotation\n  }\n)(AddQuotation);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getquotation } from '../../../../actions/quotation';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\nclass ViewQuotation extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    quotationlistvalues: []\n  };\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n\n    let quotationlist = Object.values(this.props.quotationlistvalues);\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n  \n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              // style={{ 'fontSize': '0.8rem' }}\n              Label\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              Label\n              // style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.quotationlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.quotationnumber.toLowerCase().localeCompare(a.quotationnumber.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateQuotation(id) {\n    let path = `/editquotation/${id}`;\n    this.props.history.push(path);\n  }\n\n  updateButton = id => {\n    let path = `/view_quotationpdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, quotationlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: 'Quotation Number',\n        field: 'quotationnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n    \n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Action',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n       \n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <DataTable\n            rowvalues={quotationlistvalues}\n            columnvalue={columnvalue}\n            className=\"quotationlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getquotation \n  }\n)(ViewQuotation);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport justDial from '../../../../Images/js.jpg';\nimport makeInIdia from '../../../../Images/mk.jpg';\nimport proud from '../../../../Images/proud.jpg';\nimport scaff from '../../../../Images/scaff.jpg';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\n\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n\n  pagepadding: {\n    padding: 35\n  },\n  section: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  tableHeader: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    // backgroundColor: '#548DD4',\n    // width: '100%',\n    // height: 40,\n    // color: 'white',\n    // textAlign: 'center',\n    // padding: 5\n  },\n  refno: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  cutoff: {\n    // overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n    // width:'150px',\n    //wordBreak: 'break-all'\n\n    'whiteSpace': 'normal',\n    'wordBreak': 'breakAll',\n\n  },\n\n  bgblue: {\n    backgroundColor: '#000'\n  },\n  padding5: {\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  fontbold: {\n    fontWeight: 'bolder'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  smallicon: {\n    width: 25\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 300,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n\n  padding1: {\n    paddingTop: 6\n  },\n\n  kindattend: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  padding: {\n    padding: 0\n  },\n  main: {\n    fontSize: 10\n  },\n  flexview: {\n    fontSize: 10,\n    display: 'flex'\n  },\n  tableheaderbgcolor: {\n    backgroundColor: '#000',\n    color: 'red',\n    background: '#000'\n  },\n  footerfixed: {\n    // position: 'absolute',\n    // bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst RedBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'red'}}>{children}</Text>\n  )\n}\n\nconst BlackBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'black'}}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ quotationlistvalues, data_cond }) => {\n  console.log(quotationlistvalues)\n\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n\n  const data = quotationlistvalues.addeditemlist;\n  let totaleachitem = 0;\n  console.log('data');\n  console.log(data);\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n  // const data = [\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   }\n  // ];\n  console.log(quotationlistvalues)\n\n  let customeraddress = quotationlistvalues.customeraddress ? quotationlistvalues.customeraddress : ''\n  let loadingcharges = quotationlistvalues.loadingcharge != undefined\n    && quotationlistvalues.loadingcharge != null ?\n    parseFloat(quotationlistvalues.loadingcharge) : 0.00\n\n  let ws = quotationlistvalues.ws != undefined\n    && quotationlistvalues.ws != null ?\n    parseFloat(quotationlistvalues.ws) : 0.00\n\n  let transitinsurance = quotationlistvalues.transitinsurance != undefined\n    && quotationlistvalues.transitinsurance != null ?\n    parseFloat(quotationlistvalues.transitinsurance) : 0.00\n\n    \n\n  let tcharge = quotationlistvalues.tcharge != undefined\n    && quotationlistvalues.tcharge != null ?\n    parseFloat(quotationlistvalues.tcharge) : 0.00\n\n\n  loadingcharges = loadingcharges.toFixed(2)\n  let tchargegst = 0.00\n  ws = ws.toFixed(2)\n  transitinsurance = transitinsurance.toFixed(2)\n  tcharge = tcharge.toFixed(2)\n  let subtotal = parseFloat(totaleachitem) + parseFloat(loadingcharges) + parseFloat(ws) + parseFloat(transitinsurance)\n  subtotal = subtotal.toFixed(2)\n  let subtotalgst = parseFloat(subtotal * 0.18)\n  subtotalgst = subtotalgst.toFixed(2)\n  let totalincludegst = parseFloat(subtotal) + parseFloat(subtotalgst)\n  totalincludegst = totalincludegst.toFixed(2)\n\n  let transportationgstper=0,transportationgst;\n  transportationgst = quotationlistvalues.transportationgst && quotationlistvalues.transportationgst != '' ? parseFloat(quotationlistvalues.transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n\n  tchargegst = tcharge * transportationgst\n  tchargegst = tchargegst.toFixed(2)\n  let grandtotal = parseFloat(tcharge) + parseFloat(totalincludegst) + parseFloat(tchargegst)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  let scheduledays = quotationlistvalues.scheduledays ? quotationlistvalues.scheduledays + ' days' : ''\n\n  const totalrs = quotationlistvalues.totalvalue\n    ? quotationlistvalues.totalvalue\n    : '';\n  const tax = quotationlistvalues.tax ? quotationlistvalues.tax : '';\n  const taxpercentage = quotationlistvalues.tax\n    ? quotationlistvalues.tax / 100\n    : '';\n  //const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = quotationlistvalues.selectedcontactlist[0]\n  //     ? quotationlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const refno = 'Quotation no:PSPL/Quote/' + quotationlistvalues.quotationnumber + '/2020-21'\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: '#000' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n\n\n        <View style={[styles.section]}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n          \n         \n        </View>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={data}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ background: '#000' }}\n          >\n            <TableCell weighting={0.08}>\n              <Text style={[styles.headerfont, {}]}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.tableHeader}>Particular</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>\n                After Dist Rate/Each{'\\n'}\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              weighting={0.08}\n              style={styles.padding}\n              getContent={r => r.slno}\n            />\n            <DataTableCell\n              style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n              weighting={0.6}\n              getContent={r => {\n                return (\n                  <View>\n                    <Text style={{ fontSize: 11 }}><Small\n                    >{r.itemname}</Small>{'\\n'}</Text>\n                    {/* {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text></View>) : (<View></View>)} */}\n\n                  </View>\n                );\n              }}\n            />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            <DataTableCell\n              weighting={0.2}\n              style={styles.padding}\n              getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n            />\n            <DataTableCell\n              weighting={0.2}\n              style={styles.padding}\n              getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n            />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        </Page>\n\n        <Page size='A4' style={styles.pagepadding} wrap>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Loading and Handling Charges per ton Rs185.00 x (No of tons)</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{loadingcharges}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>W.S</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{ws}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}> Transit Insurance</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transitinsurance}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Sub Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@18%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotalgst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalincludegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Transportation Charges</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@{transportationgstper}%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tchargegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                {grandtotal}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n{/* \n        <Text style={[styles.headerfont, { textAlign: 'right' }]}>\n        {'\\n'} \n            {amountinwords}\n        </Text> */}\n\n       \n\n        {/* <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View> */}\n      </Page>\n\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text>We hope the rates quoted are reasonable and looking forward for your kind orders.</Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} >Thanking you </Text>\n          <Text style={styles.padding1}>Yours truly,</Text>\n          <Text style={styles.brandname}>For PONDHAN SCAFFOLING PVT LTD</Text>\n        </View>\n\n\n\n        <View style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\n          <Image style={{ width: 70, height: 70 }} src={sign} />\n          <Image style={{ width: 70, height: 70 }} src={seal} />\n        </View>\n\n        <View>\n          {/* <Image src={seal} style={styles.smallicon} />\n          <Image src={sign} style={styles.smallicon} /> */}\n          <Text style={styles.brandname}>A.B. Ponnappa {'\\n'}\n            Managing Director\n          </Text>\n          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.brandname} > Note:</Text>\n          \n          <Text style={styles.padding1}>Delivery Schedule: {scheduledays}</Text>\n          <Text style={styles.padding1}>1, 100% Payment Along With Purchase Order.</Text>\n          <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n          <Text style={styles.padding1}>3, Transportation Charges extra as actual.</Text>\n\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.brandname} > Bank Details:-</Text>\n          <Text style={styles.padding1}>Name: Pondhan scaffolding Pvt ltd.</Text>\n          <Text style={styles.padding1}>Bank: Vijaya Bank Branch: Byatarayanapura</Text>\n          <Text style={styles.padding1}>City: Bangalore-560092</Text>\n          <Text style={styles.padding1}>A/C No: 104006211000006.</Text>\n          <Text style={styles.padding1}>IFSC: Code: VIJB-0001040.</Text>\n        </View>\n\n        <View>\n            <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={[styles.footerfixed]}>\n          <Image src={client} />\n        </View>\n\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport \"./ViewQuotation.scss\";\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    quotationlistvalues: {},\n    status: false\n  };\n  componentDidMount() {\n    this.props.getquotation();\n\n    const quotationid = this.props.match.params.id;\n    const quotationlistvalues = this.props.quotationlistvalues[quotationid];\n    quotationlistvalues.requestdeliverydate = moment(\n      quotationlistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    quotationlistvalues.addeditemlist = quotationlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        console.log(itemlist)\n        itemlist.itemdiscountamount = parseFloat(itemlist.itemdiscountamount)\n        itemlist.itemdiscountamount = itemlist.itemdiscountamount.toFixed(2)\n        itemlist.quantity = parseInt(itemlist.quantity)\n        if(itemlist.itemdiscountamount != '0.00' && itemlist.itemdiscountamount != 'NaN' && itemlist.itemdiscountamount != null) {\n          itemlist.totalcost = parseFloat(itemlist.itemdiscountamount) * parseInt(itemlist.quantity);\n        }\n        else {\n          itemlist.totalcost = parseFloat(itemlist.totalcost) * parseInt(itemlist.quantity);  \n        }\n  \n        itemlist.totalcost = parseFloat(itemlist.totalcost)\n        itemlist.totalcost = itemlist.totalcost.toFixed(2)\n\n        if(itemlist.itemdiscountamount == '0.00' || itemlist.itemdiscountamount == 'NaN' || itemlist.itemdiscountamount == null) {\n          itemlist.itemdiscountamount = \"0\";\n        }\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.id.masteritemunitwt && itemlist.id.masteritemunitwt != \"undefined\" && \n          itemlist.id.masteritemunitwt != \"null\"\n            ? itemlist.id.masteritemunitwt\n            : \"-\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n          itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n            itemdiscountamount:itemlist.itemdiscountamount\n            ? itemlist.itemdiscountamount\n            : \"0\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost\n            : \"\"\n        };\n      }\n    );\n    const customerid = quotationlistvalues.customerid;\n    const customernumber = quotationlistvalues.customernumber;\n    const customername = quotationlistvalues.customername;\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(quotationlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        quotationlistvalues,\n        status: true\n      });\n    }, 2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        });\n\n        setTimeout(() => {\n          document.getElementById(\"D1\").click();\n          this.props.history.push(\"/quotationlist\");\n        }, 200);\n    \n      }\n    } else {\n    }\n  }\n\n\n\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, quotationlistvalues,link } = this.state;\n    return (\n      <div>\n        <div className=\"pdf-class\">\n        Downloading file.Please wait.\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                \n                quotationlistvalues={this.state.quotationlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getquotation }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass SupplierContactForm extends React.Component {\n  state = {\n    data: {\n      suppliercontactname: \"\",\n      suppliercontactnumber: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Supplier Contact is added Successfully</Alert>\n          ) : null}\n          {!!errors.suppliercontactnumber ? (\n            <Alert color=\"danger\">Supplier Contact Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\">Full Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliercontactname\"\n                        type=\"text\"\n                        id=\"fullname\"\n                        value={data.suppliercontactname}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Your Name\"\n                          },\n                      \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"phone\">Phone</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"text\"\n                        name=\"suppliercontactnumber\"\n                        id=\"phone\"\n                        value={data.suppliercontactnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter your phone number\"\n                          },\n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage:\n                              \"Your phone number must be composed only with numbers\"\n                          },\n                          minLength: {\n                            value: 10,\n                            errorMessage:\n                              \"Your phone number must be between 10 and 12 numbers\"\n                          },\n                          maxLength: {\n                            value: 12,\n                            errorMessage:\n                              \"Your phone number be between 10 and 12 numbers\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierContactForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierContactForm from \"../SupplierForm/SupplierContact\";\nimport {\n  addSupplierContact,\n  getSupplierContact\n} from \"../../../../actions/Supplier\";\n\nclass SupplierContact extends React.Component {\n  componentDidMount() {\n    this.props.getSupplierContact();\n  }\n  submit = data => {\n    return this.props.addSupplierContact(data);\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Admin Dashboard</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/transaction_page\">Transaction</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/supplier\">Supplier</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Supplier Contact</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div>\n          <SupplierContactForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierContact.propTypes = {\n  addSupplierContact: PropTypes.func.isRequired,\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addSupplierContact, getSupplierContact }\n)(SupplierContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [\"\"],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const suppliercontactlistvalue = Object.values(\n      props.suppliercontactlistvalue\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const count = supplierdetaillistvalue.length;\n    const suppliernumber = count > 0 ? 10001 + count : 10001;\n    this.setState({\n      ...this.state,\n      suppliercontactlistvalue,\n      data: { ...this.state.data, suppliernumber }\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function (value, i) {\n      var obj = {};\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is added successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody >Supplier data is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>{\" \"}\n               \n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert Label color=\"danger\">Supplier Number alreadt exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert Label color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString()}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                        \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                          minLength: {\n                            value: 3,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          maxLength: {\n                            value: 300,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader Label>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader Label>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            designation{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              maxLength: {\n                                value: 100,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          Label\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                  <AvGroup>\n                                    <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                    <span className=\"required-label\">*</span>\n                                    <AvField\n                                      type=\"select\"\n                                      name=\"contactnumber\"\n                                      onChange={this.onChange}\n                                      required={true}\n                                      disabled={true}\n                                    >\n                                      <option value=\"\">123</option>\n                                      <option value=\"\">345</option>\n                                      <option value=\"\"></option>\n                                      {this.createSelectNumbers()}\n                                    </AvField>\n                                  </AvGroup>\n                                </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    suppliercontactlistvalue: state.suppliercontactlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(SupplierDetail);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailForm from \"../SupplierForm/SupplierDetail\";\nimport {\n  getSupplierContact,\n  addSupplierDetails,\n  getSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierContact();\n    this.props.getSupplierDetails();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetail.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { getSupplierContact, addSupplierDetails, getSupplierDetails }\n)(SupplierDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetailUpdateForm extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [null],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"],\n      mongoid: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.supplierdetaillistvalue;\n    const suppliercontactname = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactname\n    );\n\n    const mongoid = data.suppliercontactlistvalue.map(obj => obj._id);\n    const suppliercontactnumber = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactnumber\n    );\n\n    const suppliercontactdesignation = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactdesignation\n    );\n\n    const suppliercontactemail = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactemail\n    );\n    data.mongoid = mongoid;\n    data.values = suppliercontactname;\n    data.suppliercontactnamelist = suppliercontactname;\n    data.suppliercontactdesignation = suppliercontactdesignation;\n    data.suppliercontactnumber = suppliercontactnumber.map((item, i) => {\n      return item ? item.toString() : item;\n    });\n    data.suppliercontactemail = suppliercontactemail;\n    this.setState({ ...this.state.data, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactid = this.state.data.mongoid;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function(value, i) {\n      var obj = {};\n      obj.id = suppliercontactid[i] || null;\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is updated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody>Supplier data is updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert color=\"danger\">Supplier Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString() || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                  \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                       \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            Contact designation{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact designation name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact designation name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                      <AvGroup>\n                                        <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                        <span className=\"required-label\">*</span>\n                                        <AvField\n                                          type=\"select\"\n                                          name=\"contactnumber\"\n                                          onChange={this.onChange}\n                                          required={true}\n                                          disabled={true}\n                                        >\n                                          <option value=\"\">123</option>\n                                          <option value=\"\">345</option>\n                                          <option value=\"\"></option>\n                                          {this.createSelectNumbers()}\n                                        </AvField>\n                                      </AvGroup>\n                                    </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(SupplierDetailUpdateForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailUpdateForm from \"../SupplierForm/SupplierDetailUpdate\";\nimport {\n  getSupplierDetails,\n  updateSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetailUpdate extends React.Component {\n  state = {\n    supplierdetaillistvalue: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierDetails();\n    const supplierdetailid = this.props.match.params.id;\n    const supplierdetaillistvalue = this.props.supplierdetaillistvalue[\n      supplierdetailid\n    ];\n    this.setState({ supplierdetaillistvalue });\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, supplierdetaillistvalue } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Set Up</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail Update</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailUpdateForm\n            supplierdetaillistvalue={supplierdetaillistvalue}\n            submit={this.submit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetailUpdate.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails, updateSupplierDetails }\n)(SupplierDetailUpdate);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem, Button, Alert } from \"reactstrap\";\nimport { getSupplierDetails } from \"../../../../actions/Supplier\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass Supplierlist extends React.Component {\n  state = {\n    supplierdetaillist: [],\n    count: 0,\n    loading: false\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getSupplierDetails();\n  }\n  componentWillReceiveProps(props) {\n    let supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    //supplierdetaillistvalue= supplierdetaillistvalue.sort((a, b) => b.suppliernumber.toString().toLowerCase().localeCompare(a.suppliernumber.toString().toLowerCase()));\n\n    supplierdetaillistvalue.sort(function(a, b){\n      return parseInt(b.suppliernumber) - parseInt(a.suppliernumber);\n    });\n    const count = supplierdetaillistvalue.length;\n    const supplierdetaillist = supplierdetaillistvalue.map(\n      (supplierdata, i) => {\n        return {\n          suppliernumber: supplierdata.suppliernumber,\n          suppliername: supplierdata.suppliername,\n          suppliergstnumber: supplierdata.suppliergstnumber,\n          supplierAddress:\n            supplierdata.supplieraddress1 +\n            \" \" +\n            supplierdata.supplieraddress2 +\n            \" \" +\n            supplierdata.city +\n            \" \" +\n            supplierdata.state +\n            \" \" +\n            supplierdata.country +\n            \" \" +\n            supplierdata.pincode,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(supplierdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          )\n        };\n      }\n    );\n    this.setState({ supplierdetaillist, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/supplierdetail_update/${id}`;\n    this.props.history.push(path);\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { supplierdetaillist, count, loading } = this.state;\n    const columnvalue = [\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier GST\",\n        field: \"suppliergstnumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Address\",\n        field: \"supplierAddress\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier list</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={supplierdetaillist}\n                className=\"supplierlist\"\n              />\n            </div>\n          ) : (\n              <div>\n                <Alert color=\"info\">Please add Supplier details</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails }\n)(Supplierlist);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass ItemQuantitySearch extends React.Component {\n  state = {\n    data: {\n      locationid: \"\",\n      itemid: \"\"\n    },\n    locationlistvalue: [],\n    masteritemlistvalues: [],\n    loading: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    console.log('XXXXXXXXXXXXX');\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n  selectitemchange = () => { };\n  \n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          ...this.state,\n          loading: false\n        });\n      })\n      .catch(err => { });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Search Item Quantity</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>location</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"locationid\"\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>Item</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name={`itemid`}\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select Item</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    type=\"submit\"\n                    onClick={this.submit}\n                    style={{ marginTop: \"30px\" }}\n                  >\n                    Find\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ItemQuantitySearch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Alert } from \"reactstrap\";\nimport ItemSearch from \"./TotalQuantityForm/ItemQuantitySearch\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport {\n  totalitemvaluesearch,\n  getMasterItemList\n} from \"../../../actions/Transaction\";\nimport { ar } from \"date-fns/locale\";\n\nclass TotalQuantity extends React.Component {\n  state = {\n    itemlist: [],\n    success: false\n  };\n  componentDidMount() {\n    this.props.getLocationList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    return this.props.totalitemvaluesearch(data).then(data => {\n   \n       //console.log(itemsArray)\n      // var i=0,j,arr = [],count=0,isAllDuplicate=false;\n      // for(i=0;i<data.itemlist.length;i++){\n      //   j=i;\n      //   j = j + 1;\n      //   console.log(data.itemlist[i].itemquantity)\n      //   if(j < data.itemlist.length){\n      //     if(data.itemlist[i].itemname == data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[i].itemquantity)\n      //       isAllDuplicate = true;\n      //     }\n      //     else if(data.itemlist[i].itemname != data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[j].itemquantity)\n      //       if(count > 0)\n      //         data.itemlist[i].itemquantity = count\n      //       arr.push(data.itemlist[i])\n      //       count=0;\n      //       isAllDuplicate=false;\n      //     }\n      //   }\n      //   else if(j == data.itemlist.length){\n      //     console.log(data.itemlist[i].itemquantity)\n      //      if(count > 0)\n      //          data.itemlist[i].itemquantity = data.itemlist[i].itemquantity + count\n      //   }\n\n        \n      // }\n\n      // //console.log(count)\n      // //console.log(i)\n      // if(isAllDuplicate){\n      //   i > data.itemlist.length - 1 ?  arr.push(data.itemlist[i-1]) : arr.push(data.itemlist[i])\n      // }\n        \n\n      // console.log(arr)\n\n      // data.itemlist = arr;\n      \n      \n      const itemlist = data.itemlist.map(item => {\n        return {\n          // locationname: item.locationname,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist,\n        success: true\n      });\n   \n    });\n  };\n  render() {\n    const { success, itemlist } = this.state;\n    const columnvalue = [\n      // {\n      //   label: \"location\",\n      //   field: \"locationname\",\n      //   sort: \"asc\",\n      //   width: 40\n      // },\n      {\n        label: \"Item Code\",\n        field: \"itemname\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Item Description\",\n        field: \"itemdescription\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Quantity\",\n        field: \"itemquantity\",\n        sort: \"asc\",\n        width: 40\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transaction</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Total Item Quantity</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ItemSearch submit={this.submit} />\n        </div>\n        <div className=\"mg-t-20\">\n          {itemlist.length > 0 ? (\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={itemlist}\n              className=\"totalquantity\"\n            />\n          ) : (\n              <div>\n                <Alert color=\"info\" Label>Result Not Found.</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getLocationList, totalitemvaluesearch, getMasterItemList }\n)(TotalQuantity);\n","import axios from 'axios';\n\nexport default {\n  order: {\n    addorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/addorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    updateaddorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/updateworkorder`, {\n          data\n        })\n        .then(res => {\n          return true;\n        });\n    },\n\n    getorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n        .then(res => {\n          return res.data.orderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/order';\nimport { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\nimport { orderListSchema } from '../Schemas/schemas';\n\nconst orderCreated = orderlist => {\n  return {\n    type: ADD_ORDER,\n    orderlist\n  };\n};\n\nconst orderFetched = orderlist => {\n  return {\n    type: ORDER_FETCHED,\n    orderlist\n  };\n};\n\nexport const addorder = data => {\n  return dispatch => {\n    return api.order.addorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\nexport const updateaddorder = data => {\n  return dispatch => {\n    return api.order.updateaddorder(data).then(orderlistvalues => {\n      return true\n    });\n  };\n};\n\n\n\nexport const getorder = () => {\n  return dispatch => {\n    return api.order.getorder().then(orderlist => {\n      console.log(orderlist);\n      const orderlistvalues = orderlist.orderdata;\n      console.log(orderlistvalues);\n      return dispatch(\n        orderFetched(normalize(orderlistvalues, [orderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass OrderForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: [],\n        totalweight: [],\n        readystock: [],\n        firstround: [],\n        secondround: [],\n        thirdround: []\n      },\n      workorderno: '',\n      companydetails: '',\n      contactperson: '',\n      date: new Date(),\n      officeno: '',\n      deliveryschedule: new Date(),\n      orderdate: new Date(),\n      deliveryaddress: '',\n      distance: '',\n      sitecontactperson: '',\n      gstno: '',\n      pono: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n\n    if (this.props.ID != undefined) {\n      this.getWorkorderDetails(this.props.ID)\n    }\n  }\n\n  getWorkorderDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getsingleworkorder/${id}`)\n      .then(res => {\n\n         if (res.data.orderlist.orderdata.length > 0) {\n           let founddata = res.data.orderlist.orderdata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.workorderno = founddata[0].workorderno;\n           newState.data.companydetails = founddata[0].companydetails;\n           newState.data.contactperson = founddata[0].contactperson;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.officeno = founddata[0].officeno;\n           newState.data.deliveryschedule =  new Date(founddata[0].deliveryschedule);\n           newState.data.orderdate =  new Date(founddata[0].orderdate);\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.distance = founddata[0].distance;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.pono = founddata[0].pono\n           newState.data.sitecontactperson = founddata[0].sitecontactperson\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n               \n              newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.totalweight.push(founddata[0].addeditemlist[i].totalweight)\n              newState.data.selectedItemlist.readystock.push(founddata[0].addeditemlist[i].readystock)\n              newState.data.selectedItemlist.firstround.push(founddata[0].addeditemlist[i].firstround)\n              newState.data.selectedItemlist.secondround.push(founddata[0].addeditemlist[i].secondround)\n              newState.data.selectedItemlist.thirdround.push(founddata[0].addeditemlist[i].thirdround)\n   \n\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState,()=>{\n              console.log(this.state.data.selectedItemlist)\n            });\n\n         \n         \n          // if (founddata[0].addeditemlist.length > 0) {\n          //   founddata[0].addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index);\n          //   })\n          // }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  componentWillReceiveProps(props) {\n\n    console.log(this.props.orderlistvalues);\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const orderlistvalues = Object.keys(this.props.orderlistvalues);\n    if (this.props.ID == undefined) {\n      const workorderno =\n      orderlistvalues.length > 0 ? 1 + orderlistvalues.length : 1;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data,\n          workorderno\n        }\n      },() =>{\n        if(orderlistvalues.length == 0)\n          this.getOrderData()\n      });\n    }\n    else{\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      });\n    }\n\n  }\n\n  getOrderData(){\n    if(Object.keys(this.props.orderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n      .then(res => {\n        console.log(res.data.orderlist.orderdata)\n         //if (res.data.orderlist.orderdata.length > 0) {\n           \n          let workorderno =\n          res.data.orderlist.orderdata.length > 0 ? 1 + res.data.orderlist.orderdata.length : 1;\n\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              workorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChangeDeliveryschedule = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        deliveryschedule: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n      // selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        : selected_item.masteritemshortdescription\n\n      selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n     // selectedItemlist.itemlocation[index] = null;\n\n\n\n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n\n          selectedItemlist.totalweight[index] = \n          selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n          selected_item.masteritemunitwt != \"\" ? (1 * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n          \n        } \n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 1],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, ''],\n          totalweight: [...this.state.data.selectedItemlist.totalweight, ''],\n          readystock: [...this.state.data.selectedItemlist.readystock, ''],\n          firstround: [...this.state.data.selectedItemlist.firstround, ''],\n          secondround: [...this.state.data.selectedItemlist.secondround, ''],\n          thirdround: [...this.state.data.selectedItemlist.thirdround, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    let removeItem = { ...this.state.data };\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemlocation = removeItem.selectedItemlist.itemlocation;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n\n    let remarks = removeItem.selectedItemlist.remarks;\n    let totalweight = removeItem.selectedItemlist.totalweight;\n    let readystock = removeItem.selectedItemlist.readystock;\n    let firstround = removeItem.selectedItemlist.firstround;\n    let secondround = removeItem.selectedItemlist.secondround;\n    let thirdround = removeItem.selectedItemlist.thirdround;\n\n\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n    remarks.splice(index, 1);\n    totalweight.splice(index, 1);\n    readystock.splice(index, 1);\n    firstround.splice(index, 1);\n    secondround.splice(index, 1);\n    thirdround.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks,\n          totalweight,\n          readystock,\n          firstround,\n          secondround,\n          thirdround\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    console.log(selectedItemlist)\n    \n    const selected_item = this.state.masteritemlistvaluesobject[selectedItemlist.id[index]];\n    console.log(selected_item)\n\n\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    const wtperunit = selectedItemlist.totalweight[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit  \n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue ? parseFloat(totalValue).toFixed(2)\n      : '';\n\n\n    selectedItemlist.totalweight[index] = \n    selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n    selected_item.masteritemunitwt != \"\" ? (e.target.value * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n\n    const totalweight = selectedItemlist.totalweight;\n    const readystock = selectedItemlist.readystock;\n    const firstround = selectedItemlist.firstround;\n    const secondround = selectedItemlist.secondround;\n    const thirdround = selectedItemlist.thirdround;\n\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      obj.totalweight = totalweight[i] || null;\n      obj.readystock = readystock[i] || null;\n      obj.firstround = firstround[i] || null;\n      obj.secondround = secondround[i] || null;\n      obj.thirdround = thirdround[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Work Order</ModalHeader>\n              <ModalBody>Work order is edited/generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Work order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='companydetails'>Company Name & address </Label>\n                    <AvField\n                      name='companydetails'\n                      type='text'\n                      id='companydetails'\n                      value={data.companydetails}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='contactperson'>Contact Person</Label>\n                  <AvField\n                    name='contactperson'\n                    type='text'\n                    id='contactperson'\n                    value={data.contactperson || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='officeno'>Office Number</Label>\n                  <AvField\n                    name='officeno'\n                    type='number'\n                    id='officeno'\n                    value={data.officeno || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryschedule'>Delivery Schedule</Label>\n                    <DatePicker\n                    autoComplete=\"new-password\"\n                      selected={data.deliveryschedule}\n                      onChange={this.handleChangeDeliveryschedule}\n                      className='form-control'\n                      autoComplete=\"new-password\"\n                      dateFormat='dd/MM/yyyy'\n                      id='deliveryschedule'\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='orderdate'>Order Date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.orderdate}\n                    onChange={this.handleChangeDeliveryDate}\n                    className='form-control'\n                    autoComplete=\"new-password\"\n                    dateFormat='dd/MM/yyyy'\n                    id='orderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      value={data.deliveryaddress}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='distance'>Distance(KM)</Label>\n                    <AvField\n                      name='distance'\n                      type='text'\n                      id='distance'\n                      value={data.distance}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sitecontactperson'>Site contact person</Label>\n                    <AvField\n                      name='sitecontactperson'\n                      type='text'\n                      id='sitecontactperson'\n                      value={data.sitecontactperson}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='pono'>PO NO</Label>\n                    <AvField\n                      name='pono'\n                      type='number'\n                      id='pono'\n                      value={data.pono}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={data.selectedItemlist.id[index]}\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalweight${index}`}>Total weight</Label>\n                              <AvField\n                                name={`totalweight${index}`}\n                                type='text'\n                                id={`totalweight${index}`}\n                                value={\n                                  data.selectedItemlist.totalweight[index] \n                                \n                                }\n                                onChange={e => this.weightChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`readystock${index}`}>Ready stock</Label>\n                              <AvField\n                                name={`readystock${index}`}\n                                type='text'\n                                id={`readystock${index}`}\n                                value={\n                                  data.selectedItemlist.readystock[index]\n                                }\n                                onChange={e => this.stockChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`firstround${index}`} >1st round</Label>\n                              <AvField\n                                name={`firstround${index}`}\n                                type='text'\n                                id={`firstround${index}`}\n                                value={\n                                  data.selectedItemlist.firstround[index]\n                                }\n                                onChange={e => this.firstChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`secondround${index}`}>2nd round</Label>\n                              <AvField\n                                name={`secondround${index}`}\n                                type='text'\n                                id={`secondround${index}`}\n                                value={\n                                  data.selectedItemlist.secondround[index]\n                                }\n                                onChange={e => this.secondChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`thirdround${index}`}>3rd round</Label>\n                              <AvField\n                                name={`thirdround${index}`}\n                                type='text'\n                                id={`thirdround${index}`}\n                                value={\n                                  data.selectedItemlist.thirdround[index]\n                                }\n                                onChange={e => this.thirdChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`remarks${index}`}>Remarks</Label>\n                              <AvField\n                                name={`remarks${index}`}\n                                type='text'\n                                id={`remarks${index}`}\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OrderForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { getorder } from '../../../../actions/order';\nimport OrderForm from './OrderForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getorder();\n  }\n  \n  componentWillReceiveProps() {\n    \n  }\n\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      return this.props\n      .updateaddorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n      .addorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Work order</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <OrderForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getorder,\n    getCustomerList,\n    addorder,\n    updateaddorder\n  }\n)(AddOrder);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewOrder extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    orderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getorder();\n    console.log(this.props);\n    if (this.props.orderlistvalues) {\n      let orderlist = Object.values(this.props.orderlistvalues);\n      orderlist.sort(function(a, b){\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\n      });\n      const orderlistvalues = orderlist.map(quotationvalue => {\n        if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n          const DateNow = new Date();\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\n          return {\n            workorderno: quotationvalue.workorderno,\n            companyname: quotationvalue.companydetails,\n            contactperson: quotationvalue.contactperson,\n            officeno: quotationvalue.officeno,\n            view: (\n              <div className=\"actionbuttons\">\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateButton(quotationvalue._id);\n                  }}\n                >\n                  Print\n                </Button>\n                <Button\n                  Label\n                  color='primary'\n                  onClick={() => {\n                    this.updateworkorder(quotationvalue._id);\n                  }}\n                >\n                  Edit\n                </Button>\n                </div>\n            ),\n            complete: deliveryDate.getTime() < DateNow.getTime() ? (\n              <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Complete\n            </Button>\n            ) : null\n          };\n        }\n      });  \n      this.setState({ ...this.state, orderlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let orderlist = Object.values(props.orderlistvalues);\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\n    orderlist.sort(function(a, b){\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\n    });\n    console.log(props);\n    const orderlistvalues = orderlist.map(quotationvalue => {\n      if(!quotationvalue.completed || quotationvalue.completed != \"yes\") {\n      const DateNow = new Date();\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\n      return {\n        workorderno: quotationvalue.workorderno,\n        companyname: quotationvalue.companydetails,\n        contactperson: quotationvalue.contactperson,\n        officeno: quotationvalue.officeno,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        ),\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\n          <Button\n          Label\n          color='primary'\n          onClick={() => {\n            this.updateCompleteOrder(quotationvalue._id);\n          }}\n        >\n          Complete\n        </Button>\n        ) : null        \n      };\n    }\n    });\n    this.setState({ ...this.state, orderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_orderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updateCompleteOrder = id => {\n    let data = this.props.orderlistvalues[id];\n    data['_id'] = id;\n    data['AddedIteminfo'] = data.addeditemlist;\n    data['completed'] = \"yes\";\n    return this.props\n    .updateaddorder(data)\n    .then(data => {\n      this.dataHandler(false);\n      this.props.getorder();\n      window.location.reload(true);\n    })\n    .catch(err => {\n      this.dataHandler(false);\n      throw err;\n    });\n  };\n\n\n  updateworkorder= id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editworkorder/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, orderlistvalues } = this.state;\n    console.log(orderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Work order',\n        field: 'workorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Company Name',\n        field: 'companyname',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Contact Person',\n        field: 'contactperson',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Office Number',\n        field: 'officeno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Complete',\n        field: 'complete',\n        sort: 'asc',\n        width: 20\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={orderlistvalues} \n          columnvalue={columnvalue}\n          className=\"orderlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getorder, updateaddorder }\n)(ViewOrder);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getorder } from '../../../../actions/order';\r\nimport { Button, Alert } from 'reactstrap';\r\nimport DataTable from '../../../../Components/Table/DatatablePage';\r\nimport CustomLoader from '../../../../Components/loader/loader';\r\n\r\nclass ViewCompletedOrder extends React.Component {\r\n  state = {\r\n    count: 0,\r\n    loading: true,\r\n    orderlistvalues: []\r\n  };\r\n  componentDidMount() {\r\n    this.props.getorder();\r\n    console.log(this.props);\r\n    if (this.props.orderlistvalues) {\r\n      let orderlist = Object.values(this.props.orderlistvalues);\r\n      orderlist.sort(function(a, b){\r\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n      });\r\n      const orderlistvalues = orderlist.map(quotationvalue => {\r\n        if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n          const DateNow = new Date();\r\n          const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n          return {\r\n            workorderno: quotationvalue.workorderno,\r\n            companyname: quotationvalue.companydetails,\r\n            contactperson: quotationvalue.contactperson,\r\n            officeno: quotationvalue.officeno,\r\n            view: (\r\n              <div className=\"actionbuttons\">\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateButton(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Print\r\n                </Button>\r\n                <Button\r\n                  Label\r\n                  color='primary'\r\n                  onClick={() => {\r\n                    this.updateworkorder(quotationvalue._id);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                </div>\r\n            )\r\n          };\r\n        }\r\n      });  \r\n      this.setState({ ...this.state, orderlistvalues });\r\n      this.dataHandler(false);\r\n    }\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    let orderlist = Object.values(props.orderlistvalues);\r\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\r\n    orderlist.sort(function(a, b){\r\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\r\n    });\r\n    console.log(props);\r\n    const orderlistvalues = orderlist.map(quotationvalue => {\r\n      if(quotationvalue.completed && quotationvalue.completed == \"yes\") {\r\n      const DateNow = new Date();\r\n      const deliveryDate = new Date(quotationvalue.deliveryschedule);\r\n      return {\r\n        workorderno: quotationvalue.workorderno,\r\n        companyname: quotationvalue.companydetails,\r\n        contactperson: quotationvalue.contactperson,\r\n        officeno: quotationvalue.officeno,\r\n        view: (\r\n          <div className=\"actionbuttons\">\r\n            <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateButton(quotationvalue._id);\r\n              }}\r\n            >\r\n              Print\r\n            </Button>\r\n            {/* <Button\r\n              Label\r\n              color='primary'\r\n              onClick={() => {\r\n                this.updateworkorder(quotationvalue._id);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button> */}\r\n            </div>\r\n        ),\r\n        complete: deliveryDate.getTime() < DateNow.getTime() ? (\r\n          <Button\r\n          Label\r\n          color='primary'\r\n          onClick={() => {\r\n            this.updateCompleteOrder(quotationvalue._id);\r\n          }}\r\n        >\r\n          Complete\r\n        </Button>\r\n        ) : null        \r\n      };\r\n    }\r\n    });\r\n    this.setState({ ...this.state, orderlistvalues });\r\n    this.dataHandler(false);\r\n  }\r\n\r\n  updateButton = id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/view_orderpdf/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n\r\n  updateworkorder= id => {\r\n    // let path = `/view_invoicepdf/${id}`;\r\n    // window.open(path, '_blank');\r\n    let path = `/editworkorder/${id}`;\r\n    //window.open(path, \"_blank\");\r\n    this.props.history.push(path);\r\n  };\r\n\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n\r\n  render() {\r\n    const { loading, count, orderlistvalues } = this.state;\r\n    console.log(orderlistvalues);\r\n    const columnvalue = [\r\n      {\r\n        label: 'Work order',\r\n        field: 'workorderno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Company Name',\r\n        field: 'companyname',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Contact Person',\r\n        field: 'contactperson',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Office Number',\r\n        field: 'officeno',\r\n        sort: 'asc',\r\n        width: 40\r\n      },\r\n      {\r\n        label: 'Print',\r\n        field: 'view',\r\n        sort: 'asc',\r\n        width: 20\r\n      }\r\n    ];\r\n    return (\r\n      <div className='container mg-t-20'>\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/admin_dashboard'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/transaction_page'>Transactions</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to='/work-order'>Work order</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>List</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <DataTable \r\n          rowvalues={orderlistvalues} \r\n          columnvalue={columnvalue}\r\n          className=\"orderlist\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    orderlistvalues: state.orderlistvalues\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getorder }\r\n)(ViewCompletedOrder);\r\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  headerfont3: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  headerfont4: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold'\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 10\n  },\n  dcaddress_left: {\n    fontSize: 10\n  },\n  view_border: {\n    border: '1pt solid #000',\n    flexGrow: 1,\n    height: 100\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingLeft: 100\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 10,\n    fontWeight: 'bolder',\n    textAlign: 'center'\n  },\n  header_tintext: {\n    fontSize: 10,\n    fontWeight: 900\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, textAlign: 'left', wordWrap: 'break-word' }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n  console.log(JSON.stringify(orderlistvalues));\n  let data = orderlistvalues.addeditemlist;\n  let totalwt = 0\n  if(data.length > 0){\n   \n    for(var i=0;i<data.length;i++){\n      totalwt += parseFloat(data[i].totalweight)\n    }\n  }\n  console.log('data');\n  console.log(totalwt);\n  totalwt = parseFloat(totalwt)\n  totalwt = totalwt.toFixed(2)\n  const totalrs = orderlistvalues.totalvalue ? orderlistvalues.totalvalue : '';\n  const taxableAmount = orderlistvalues.taxableamount;\n  const date = moment(orderlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(orderlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(orderlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = orderlistvalues.billingaddress;\n  const vendorcode = orderlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = orderlistvalues;\n\n  let {\n    workorderno,\n    companydetails,\n    contactperson,\n    officeno,\n    deliveryschedule,\n    orderdate,\n    gstno,\n    deliveryaddress,\n    distance,\n    sitecontactperson,\n    pono\n  } = orderlistvalues;\n  //orderdate = new Date(orderdate)\n  const purchaseordernumber = orderlistvalues.purchaseordernumber;\n\n  const tax = orderlistvalues.tax ? orderlistvalues.tax : '';\n  const taxpercentage = orderlistvalues.tax ? orderlistvalues.tax / 100 : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = orderlistvalues.selectedcontactlist[0]\n  //     ? orderlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>PO No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{pono}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => r.itemname}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.totalweight} />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.readystock} />\n              <DataTableCell weighting={0.2} getContent={r => r.firstround} />\n              <DataTableCell weighting={0.2} getContent={r => r.secondround} />\n              <DataTableCell weighting={0.2} getContent={r => r.thirdround} />\n              <DataTableCell weighting={0.4} getContent={r => r.remarks} />\n            </TableBody>\n          </Table>\n          \n          <Text>{'\\n'}</Text>\n          \n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        <Text style={{ fontSize: 14, fontWeight: 900, textAlign: 'center', margin: 8 }}>WORK ORDER</Text>\n        <Text style={{ fontSize: 12, fontWeight: 500, textAlign: 'right', margin: 8 }}>Workorder Date : {orderdate}</Text>\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{workorderno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder Date</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{orderdate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table> */}\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>9</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Distance</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{distance} Km</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text>{'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont3}>SL</Text>\n              </TableCell>\n              <TableCell weighting={0.7}>\n                <Text style={styles.headerfont3}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n               \n                getContent={r => <Text style={styles.headerfont4}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                \n                weighting={0.7}\n                getContent={r => <Text style={styles.headerfont4}>{r.itemname}</Text>}\n              />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.totalweight}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.quantity}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.readystock}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.firstround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.secondround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.thirdround}</Text>} />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Text style={styles.headerfont4}>Total Weight : {totalwt}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getorder } from '../../../../actions/order';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewOrder';\n\nclass ViewOrderPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getorder();\n    const quotationid = this.props.match.params.id;\n    console.log(this.props.orderlistvalues);\n    const orderlistvalues = this.props.orderlistvalues[quotationid];\n    orderlistvalues.requestdeliverydate = moment(orderlistvalues.date).format(\n      'DD MMM, YYYY'\n    );\n    orderlistvalues.deliveryschedule = moment(\n      orderlistvalues.deliveryschedule\n    ).format('DD MMM, YYYY');\n    \n    orderlistvalues.orderdate = moment(\n      orderlistvalues.orderdate\n    ).format('DD MMM, YYYY');\n\n    orderlistvalues.addeditemlist = orderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          // itemdiscount: itemlist.itemdiscount.toString()\n          //   ? itemlist.itemdiscount\n          //   : \"0\",\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          totalweight: itemlist.totalweight\n            ? itemlist.totalweight.toString()\n            : '',\n          readystock: itemlist.readystock ? itemlist.readystock.toString() : '',\n          firstround: itemlist.firstround ? itemlist.firstround.toString() : '',\n          secondround: itemlist.secondround\n            ? itemlist.secondround.toString()\n            : '',\n          thirdround: itemlist.thirdround ? itemlist.thirdround.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = orderlistvalues.customerid;\n    const customernumber = orderlistvalues.customernumber;\n    const customername = orderlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(orderlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        orderlistvalues,\n        status: true\n      });\n    },5000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 4000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/orderlist');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    console.log(this.state.orderlistvalues);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrderPdf);\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../../actions/actions\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport moment from \"moment\";\nimport { deleteUser } from \"../../actions/actions\";\n\nclass AdminRole extends React.Component {\n  state = {\n    count: \"\",\n    userdata: []\n  };\n\n  updateButton = id => {\n    let path = `/updateuser/${id}`;\n    this.props.history.push(path);\n  };\n\n  deleteButton = id => {\n    this.props.deleteUser(id)\n    .then((data) => {\n      window.location.reload(true);\n    })\n    .catch((err) => {console.log(\"could not delete\")})\n  }\n\n  componentDidMount() {\n    this.props.getUser().catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const userlist = Object.values(props.userlist);\n    const userdata = userlist.map((userdata, i) => {\n      return {\n        title: userdata.title,\n        name: `${userdata.firstname} ${userdata.lastname}`,\n        email: userdata.email,\n        phone: userdata.phone,\n        startdat: moment(userdata.startdate).format(\"DD MMM, YYYY\"),\n        enddate: userdata.enddate ? moment(userdata.enddate).format(\"DD MMM, YYYY\"):\" \",\n        persontype: userdata.persontype,\n        department: userdata.department,\n        job: userdata.job,\n        location: userdata.location,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(userdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        ),\n        delete: (\n          <Button\n          color=\"danger\"\n          onClick={() => {\n            this.deleteButton(userdata.id);\n          }}\n        >\n          Delete\n        </Button>\n        )\n      };\n    });\n    this.setState({ userdata });\n  }\n  render() {\n    const columnvalue = [\n      {\n        label: \"Title\",\n        field: \"title\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Full Name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 270\n      },\n      {\n        label: \"Phone\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 200\n      },\n      {\n        label: \"Start date\",\n        field: \"startdate\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"End date\",\n        field: \"enddate\",\n        sort: \"asc\",\n        width: 150\n      },\n      {\n        label: \"Person type\",\n        field: \"persontype\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Department\",\n        field: \"department\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Job\",\n        field: \"job\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Location\",\n        field: \"location\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        width: 100\n      },\n      {\n        label: \"Delete\",\n        field: \"delete\",\n        width: 100        \n      }\n    ];\n    return (\n      <div style={{ overflow: \"hidden\" }} className=\"mg-t-20\">\n        <DataTable columnvalue={columnvalue} rowvalues={this.state.userdata} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUser,deleteUser }\n)(AdminRole);\n","import React from \"react\";\n\nclass EmployeeRole extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h6>Employee List</h6>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeRole;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass BOMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>BOM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/addproduct\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/viewproductlist\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BOMPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ChallanPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Delivery challan</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addchallan'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Challan</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/challanlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Challan List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ChallanPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass CRMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>CRM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n          \n\n            <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/enquiry'>\n                    <i className='fas fa-envelope fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>New Enquiry</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                     \n                <li className='bg-color-lg-blue'>\n                  <div className='icon-eleme'>\n                    <Link to='/quotationpage'>\n                      <i className='fas fa-credit-card fa-3x'></i>\n                      <div style={{ paddingTop: '5px' }}>\n                        <span>Quotations</span>\n                      </div>\n                    </Link>\n                  </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/customerlist'>\n                    <i className='fas fa-users fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Customer Transaction</span>\n                    </div>\n                    </Link>\n                </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CRMPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass CustomerPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div class=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/AddCustomer\">\n                  <i class=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Add Customer</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n    \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customerinfo\">\n                  <i class=\"fas fa-list fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Customer List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass InventoryPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Setup</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\" style={{'top': '55%', 'width': '55%'}}>\n          <ul className=\"clearfix\">\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemtype\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/masteritemtypelist\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* \n             */}\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/itemspage\">\n                  <i className=\"fas fa-cart-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Items</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n          {/* <li className='bg-colo-lg-red'>\n            <div className='icon-eleme'>\n              <Link to='/productbilling'>\n                <i className='fas fa-kaaba fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                  <span>Item Cost</span>\n                </div>\n              </Link>\n            </div>\n          </li> */}\n\n      \n\n             <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/bomproductlist\">\n                  <i className=\"fa fa-cog fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n            \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Suppliers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customer\">\n                  <i className=\"fas fa-users fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Customers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/financialYearAdd\">\n                  <i className=\"fas fa-calendar-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add/Update FinancialYear</span>\n                  </div>\n                </Link>\n              </div>\n            </li>            \n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InventoryPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice1'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Normal Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice2'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage1 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addinvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n           \n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage1;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage2 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Proforma Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n      \n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addproformainvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/proformainvoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage2;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass ItemsPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Items</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n          <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/madditem\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Item</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemlistvalues\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ItemsPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ManufacturingPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Manufacturing</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n            <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/work-order'>\n              <i className='fas fa-shopping-cart fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Work Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/production'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Production</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ManufacturingPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass MoveOrder extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Move Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/move'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Move Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/moveorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Move Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveOrder;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass OnHandPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/quantitypage'>Quantity</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>On Hand</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addonhand'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Update On Hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>View On hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default OnHandPage;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ProductionPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n            <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Production</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/add-production'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Production</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/productionlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Production list</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProductionPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass PurchaceOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/purchase_order'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>Purchase Order</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/view_purchaseorderlist'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>View Purchase Order List</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PurchaceOrderPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuantityPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quantity</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/receipt_screen'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>PO receipts</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/onhand'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                {/* <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand Old</span>\n                    </div>\n                    </Link>\n                </div>\n                </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuantityPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuotationPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/crmlist'>CRM</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quotation</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addquotation'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Add Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/quotationlist'>\n                    <i className='fas fa-list fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>List Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuotationPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass SupplierPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Supplier</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_detail\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Supplier</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_list\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Supplier List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass TransactionPage extends React.Component {\n  render() {\n    const adminMenu = (\n      <React.Fragment>\n     \n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        {/*  */}\n        \n        {/*  */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-cart-arrow-down fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Inventory</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        \n   \n        \n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/addquotation'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Add Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quotationlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n      \n\n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n          <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const financeMenu = (\n      <React.Fragment>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const purchaseMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_order'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/view_purchaseorderlist'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const salesMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/enquiry'>\n              <i className='fas fa-envelope fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>New Enquiry</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const storeMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/receipt_screen'>\n              <i className='fas fa-dolly-flatbed fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Receive quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/totalitemquantity'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>On hand quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n         <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-folder fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      </React.Fragment>\n    );\n    const productionMenu = (\n      <React.Fragment>\n        \n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    return (\n      <div className='container mg-20'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Transactions</BreadcrumbItem>\n        </Breadcrumb>\n        <div className='admin-dashboard-icons' style={{'top': '55%','width': '55%'}}>\n          <ul className='clearfix'>\n            {this.props.role === 'management'\n              ? adminMenu\n              : this.props.role === 'finance'\n              ? financeMenu\n              : this.props.role === 'purchase'\n              ? purchaseMenu\n              : this.props.role === 'sales'\n              ? salesMenu\n              : this.props.role === 'stores'\n              ? storeMenu\n              : this.props.role === 'production'\n              ? productionMenu\n              : ''}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\nexport default connect(mapStateToProps)(TransactionPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass WorkOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Work order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addorder'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Work Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/orderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Current Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/completedorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Completed Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>              \n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default WorkOrderPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst GuestRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\n    }\n  />\n);\n\nGuestRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GuestRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst UserRoute = ({\n  isAuthenticated,\n  roles,\n  role,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      // return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      if (!isAuthenticated) {\n        return <Redirect to='/login' />;\n      }\n      if (typeof roles === 'string') {\n        if (!(role === roles)) {\n          return <Redirect to='/' />;\n        }\n      } else if (!roles.includes(role)) {\n        return <Redirect to='/' />;\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\n\nUserRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  // role: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token,\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UserRoute);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport AddUser from './Containers/AddUser/AddUser';\nimport UpdateUser from './Containers/AddUser/UpdateUser';\nimport AdminDashboard from './Containers/Admin/AdminDashboard';\nimport ProductBilling from './Containers/Billing/ProductBilling';\nimport LoginPage from './Containers/LoginPage/LoginPage';\nimport AddMaterial from './Containers/Material/AddMaterial';\nimport AddMaterialType from './Containers/Material/AddMaterialType';\nimport UpdateMaterial from './Containers/Material/UpdateMaterial';\nimport UpdateMaterialType from './Containers/Material/UpdateMaterialType';\nimport ProductList from './Containers/Product/Product';\nimport ViewProduct from './Containers/Product/ViewProduct';\nimport ViewProductList from './Containers/Product/ViewProductList';\nimport AddCustomer from './Containers/SetUp/Customer/Customer';\nimport Transaction from './Containers/SetUp/Customer/Transaction';\nimport UpdateCustomer from './Containers/SetUp/Customer/UpdateCustomer';\nimport ViewCustomerTable from './Containers/SetUp/Customer/ViewCustomerTable';\nimport CustomerInfo from './Containers/SetUp/CustomerInfo/CustomerInfo';\nimport CustomerQuotationList from './Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList';\nimport AddFinancialYear from './Containers/SetUp/FinancialYear/AddFinancialYear';\nimport AddChalan from './Containers/Transaction/Challan/Challan/AddChalan';\nimport ViewChallan from './Containers/Transaction/Challan/View/ViewChallan';\nimport ViewChallanPdf from './Containers/Transaction/Challan/View/ViewChallanPdf';\nimport EnquiryPage from './Containers/Transaction/Enquiry';\nimport AddInvoice from './Containers/Transaction/Invoice/Invoice/AddInvoice';\nimport AddProformaInvoice from './Containers/Transaction/Invoice/Invoice/AddProformaInvoice';\nimport ViewInvoice from './Containers/Transaction/Invoice/View/ViewInvoice';\nimport ViewInvoicePdf from './Containers/Transaction/Invoice/View/ViewInvoicePdf';\nimport ViewProformaInvoice from './Containers/Transaction/Invoice/View/ViewProformaInvoice';\nimport ViewProformaInvoicePdf from './Containers/Transaction/Invoice/View/ViewProformaInvoicePdf';\nimport AddMasterItemList from './Containers/Transaction/Item/ItemList/AddMasterItemList';\nimport MasterItemList from './Containers/Transaction/Item/ItemList/MasterItemListValues';\nimport UpdateMasterItemList from './Containers/Transaction/Item/ItemList/UpdateMasterItemList';\nimport MasterItemType from './Containers/Transaction/Item/ItemType/ItemMasterType';\nimport MasterItemTypeList from './Containers/Transaction/Item/ItemType/ItemMasterTypeList';\nimport UpdateMasterItemType from './Containers/Transaction/Item/ItemType/UpdateItemMasterType';\nimport ReceiptScreen from './Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen';\nimport ViewReceiptPdf from './Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt';\nimport MoveOrderScreen from './Containers/Transaction/MoveOrder/MoveOrderScreen';\nimport ViewMoveOrder from './Containers/Transaction/MoveOrder/View/ViewMoveOrder';\nimport ViewItemsMoveOrder from './Containers/Transaction/MoveOrder/View/viewOrderItems';\nimport AddOnHand from './Containers/Transaction/OnHand/AddOnHand';\nimport AddProduction from './Containers/Transaction/ProductionScreen/Production/AddProduction';\nimport ViewProudction from './Containers/Transaction/ProductionScreen/View/ViewProudction';\nimport PurchaseOrder from './Containers/Transaction/PurchaseOrder/PurchaseOrder';\nimport ViewPurchaseOrderList from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList';\nimport ViewPurchaseOrderPdf from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf';\nimport AddQuotation from './Containers/Transaction/Quotation/Quotation/AddQuotation';\nimport ViewQuotation from './Containers/Transaction/Quotation/View/ViewQuotation';\nimport ViewQuotationPdf from './Containers/Transaction/Quotation/View/ViewQuotationPdf';\nimport SupplierContact from './Containers/Transaction/Supplier/SupplierContact/SupplierContact';\nimport SupplierDetail from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetail';\nimport SupplierDetailUpdate from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate';\nimport SupplierList from './Containers/Transaction/Supplier/SupplierDetail/Supplierlist';\nimport TotalQuantity from './Containers/Transaction/TotalQuantityScreen/TotalQuantity';\nimport AddOrder from './Containers/Transaction/WorkOrder/Order/AddOrder';\nimport ViewOrder from './Containers/Transaction/WorkOrder/View/ViewOrder';\nimport ViewCompletedOrder from './Containers/Transaction/WorkOrder/View/ViewCompletedOrder';\nimport ViewOrderPdf from './Containers/Transaction/WorkOrder/View/ViewOrderPdf';\nimport ViewAdmin from './Containers/View/AdminRole';\nimport ViewEmployee from './Containers/View/EmployeeRole';\nimport './global/global.scss';\nimport BOMPage from './Pages/BOMPage';\nimport ChallanPage from './Pages/Challan';\nimport CRMPage from './Pages/CRMPage';\nimport CustomerPage from './Pages/CustomerPage';\nimport InventoryPage from './Pages/InventoryPage';\nimport InvoicePage from './Pages/InvoicePage';\nimport InvoicePage1 from './Pages/InvoicePage1';\nimport InvoicePage2 from './Pages/InvoicePage2';\nimport ItemsPage from './Pages/ItemsPage';\nimport ManufacturingPage from './Pages/ManufacturingPage';\nimport MoveOrder from './Pages/MoveOrder';\nimport OnHandPage from './Pages/OnHandPage';\nimport ProductionPage from './Pages/Production';\nimport PurchaceOrderPage from './Pages/PurchaceOrderPage';\nimport QuantityPage from './Pages/QuantityPage';\nimport QuotationPage from './Pages/QuotationPage';\nimport SupplierPage from './Pages/SupplierPage';\nimport TransactionPage from './Pages/TransactionPage';\nimport WorkOrderPage from './Pages/WorkOrder';\nimport GuestRoute from './Routes/GuestRoute';\nimport UserRoute from './Routes/UserRoute';\nimport { Roles } from './Services/Roles';\n\n\n\n\n\n\n\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route path='/' exact component={LoginPage} />\n        <GuestRoute path='/login' exact component={LoginPage} />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/admin_dashboard'\n          exact\n          component={AdminDashboard}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adduser'\n          exact\n          component={AddUser}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adminlist'\n          exact\n          component={ViewAdmin}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/employeelist'\n          exact\n          component={ViewEmployee}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/updateuser/:id'\n          exact\n          component={UpdateUser}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/enquiry'\n          exact\n          component={EnquiryPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addproduct'\n          exact\n          component={ProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproductlist'\n          exact\n          component={ViewProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/bomproductlist'\n          exact\n          component={BOMPage}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproduct/:id'\n          exact\n          component={ViewProduct}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/add_itemtype'\n          exact\n          component={AddMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_itemtype/:id'\n          exact\n          component={UpdateMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/additem'\n          exact\n          component={AddMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_material/:id'\n          exact\n          component={UpdateMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productbilling'\n          exact\n          component={ProductBilling}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/inventory_page'\n          exact\n          component={InventoryPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[\n            Roles.ADMIN,\n            Roles.FINANCE,\n            Roles.PURCHASE,\n            Roles.SALES,\n            Roles.STORE,\n            Roles.PRODUCTION\n          ]}\n          path='/transaction_page'\n          exact\n          component={TransactionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice'\n          exact\n          component={InvoicePage}\n        />\n          <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice1'\n          exact\n          component={InvoicePage1}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice2'\n          exact\n          component={InvoicePage2}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/delivery-challan'\n          exact\n          component={ChallanPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addonhand'\n          exact\n          component={AddOnHand}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move-order'\n          exact\n          component={MoveOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move'\n          exact\n          component={MoveOrderScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/moveorderlist'\n          exact\n          component={ViewMoveOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_ItemsOrder/:id'\n          exact\n          component={ViewItemsMoveOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/work-order'\n          exact\n          component={WorkOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/editworkorder/:id'\n          exact\n          component={AddOrder}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/manufacturing'\n          exact\n          component={ManufacturingPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customer'\n          exact\n          component={CustomerPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/financialYearAdd'\n          exact\n          component={AddFinancialYear}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/transaction/:id'\n          exact\n          component={Transaction}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier'\n          exact\n          component={SupplierPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/quotationpage'\n          exact\n          component={QuotationPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/quantitypage'\n          exact\n          component={QuantityPage}\n        />\n\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/itemspage'\n          exact\n          component={ItemsPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtype'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtypelist'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/masteritemtypelist'\n          exact\n          component={MasterItemTypeList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/madditem'\n          exact\n          component={AddMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemlistvalues'\n          exact\n          component={MasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/m_updateitemlist/:id'\n          exact\n          component={UpdateMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_mitemtype/:id'\n          exact\n          component={UpdateMasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order'\n          exact\n          component={PurchaseOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_orderpage'\n          exact\n          component={PurchaceOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderpdf/:id'\n          exact\n          component={ViewPurchaseOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderlist'\n          exact\n          component={ViewPurchaseOrderList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_detail'\n          exact\n          component={SupplierDetail}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_contact'\n          exact\n          component={SupplierContact}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order_update/:id'\n          exact\n          component={PurchaseOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplierdetail_update/:id'\n          exact\n          component={SupplierDetailUpdate}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_list'\n          exact\n          component={SupplierList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/receipt_screen'\n          exact\n          component={ReceiptScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/viewreceipt'\n          exact\n          component={ViewReceiptPdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/totalitemquantity'\n          exact\n          component={TotalQuantity}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/onhand'\n          exact\n          component={OnHandPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/AddCustomer'\n          exact\n          component={AddCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/customerlist'\n          exact\n          component={ViewCustomerTable}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/crmlist'\n          exact\n          component={CRMPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/updatecustomer/:id'\n          exact\n          component={UpdateCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerinfo'\n          exact\n          component={CustomerInfo}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addquotation'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/editquotation/:id'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/quotationlist'\n          exact\n          component={ViewQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/view_quotationpdf/:id'\n          exact\n          component={ViewQuotationPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerquotationlist/:id'\n          exact\n          component={CustomerQuotationList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addinvoice'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addproformainvoice'\n          exact\n          component={AddProformaInvoice}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editinvoice/:id'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editproformainvoice/:id'\n          exact\n          component={AddProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addchallan'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editchallan/:id'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addorder'\n          exact\n          component={AddOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/orderlist'\n          exact\n          component={ViewOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/completedorderlist'\n          exact\n          component={ViewCompletedOrder}\n        />        \n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoicelist'\n          exact\n          component={ViewInvoice}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/proformainvoicelist'\n          exact\n          component={ViewProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/challanlist'\n          exact\n          component={ViewChallan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productionlist'\n          exact\n          component={ViewProudction}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_invoicepdf/:id'\n          exact\n          component={ViewInvoicePdf}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_proformainvoicepdf/:id'\n          exact\n          component={ViewProformaInvoicePdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_orderpdf/:id'\n          exact\n          component={ViewOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_challanpdf/:id'\n          exact\n          component={ViewChallanPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/production'\n          exact\n          component={ProductionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/add-production'\n          exact\n          component={AddProduction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport user from '../reducer/user';\nimport userlist from '../reducer/userlist';\nimport materialoptionlist from '../reducer/materialoptionlist';\nimport materiallistvalues from '../reducer/materiallistvalues';\nimport productlistvalues from '../reducer/productlistvalues';\nimport masteritemtypenamevalue from '../reducer/masteritemtypenamevalue';\nimport masteritemtypelistvalues from '../reducer/masteritemlistnamevalue';\nimport suppliercontactlistvalue from '../reducer/suppliercontactlistvalue';\nimport supplierdetaillistvalue from '../reducer/supplierdetaillistvalue';\nimport uomlistvalue from '../reducer/uomlistvalue';\nimport currencylistvalue from '../reducer/currencylistvalue';\nimport locationlistvalue from '../reducer/locationlistvalue';\nimport purchaseorderlistvalue from '../reducer/purchaseorderlistvalue';\nimport receiptlistvalues from '../reducer/receiptlistvalues';\nimport customerlistvalues from '../reducer/customerlistvalues';\nimport quotationlistvalues from '../reducer/quotationlistvalues';\nimport invoicelistvalues from '../reducer/invoicelistvalues';\nimport proformainvoicelistvalues from '../reducer/proformainvoicelistvalues';\n\nimport challanlistvalues from '../reducer/challanlistvalues';\nimport orderlistvalues from '../reducer/orderlistvalues';\nimport productionlistvalues from '../reducer/productionlistvalues';\nimport moveorderlistvalues from '../reducer/moveorderlistvalues';\nimport customertransationvalues from '../reducer/customertransationvalues';\n\nimport { USER_LOGGED_OUT } from '../Services/types';\n\nconst appReducer = combineReducers({\n  user: user,\n  userlist: userlist,\n  materialoption: materialoptionlist,\n  materiallistvalues: materiallistvalues,\n  productlistvalues: productlistvalues,\n  masteritemtypenamevalue: masteritemtypenamevalue,\n  masteritemlistvalues: masteritemtypelistvalues,\n  suppliercontactlistvalue: suppliercontactlistvalue,\n  supplierdetaillistvalue: supplierdetaillistvalue,\n  uomlistvalue: uomlistvalue,\n  currencylistvalue: currencylistvalue,\n  locationlistvalue: locationlistvalue,\n  purchaseorderlistvalue: purchaseorderlistvalue,\n  receiptlistvalues: receiptlistvalues,\n  customerlistvalues: customerlistvalues,\n  customertransationvalues: customertransationvalues,\n  quotationlistvalues: quotationlistvalues,\n  invoicelistvalues: invoicelistvalues,\n  proformainvoicelistvalues: proformainvoicelistvalues,\n  challanlistvalues: challanlistvalues,\n  orderlistvalues: orderlistvalues,\n  productionlistvalues: productionlistvalues,\n  moveorderlistvalues: moveorderlistvalues\n});\n\nconst rootReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGGED_OUT:\n      state = {};\n      storage.removeItem('persist:root');\n      return {};\n    default:\n      return appReducer(state, action);\n  }\n};\n\nexport default rootReducer;\n","import storage from \"redux-persist/lib/storage\";\nimport { USER_LOGGED_IN } from \"../Services/types\";\nimport { USER_LOGGED_OUT } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return action.user;\n    case USER_LOGGED_OUT:\n      storage.removeItem(\"persist:root\");\n      return {};\n    default:\n      return state;\n  }\n}\n","import { USER_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_FETCHED:\n      return { ...state, ...action.userlist.entities.users };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_OPTIONS } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_OPTIONS:\n      return {\n        ...state,\n        ...action.materialoption.entities.materialoptions\n      };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.materialsvalues.entities.materialslistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PRODUCT_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCT_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.productlistvalues.entities.productlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_TYPES } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_TYPES:\n      return {\n        ...state,\n        ...action.MasterItemTypeName.entities.masteritemtypenamevalue\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_LIST,DELETE_MASTER_ITEM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_LIST:\n      return {\n        ...state,\n        ...action.MasterItemTypeList.entities.masteritemtypelistvalues\n      };\n    case DELETE_MASTER_ITEM_LIST  : \n      let arrayData = [];\n      Object.keys(state).forEach(function(key, index) {\n        arrayData.push(state[key]);\n      });\n      let fileteredData = arrayData.filter((item, id) => item.id !== action.payload);\n      let obj = {};\n      fileteredData.map((data,ind) => {\n        obj[data.id] = data;\n      });\n      return obj;\n    default:\n      return state;\n  }\n}","import { SUPPLIER_CONTACT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_CONTACT_LIST:\n      return {\n        ...state,\n        ...action.suppliercontactlistvalue.entities.suppliercontactlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_DETAIL_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_DETAIL_LIST:\n      return {\n        ...state,\n        ...action.supplierdetaillistvalue.entities.supplierdetaillistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { UOM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UOM_LIST:\n      return {\n        ...state,\n        ...action.uomlist.entities.uomlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { CURRENCY_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case CURRENCY_LIST:\n      return {\n        ...state,\n        ...action.currencylist.entities.currencylistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { Location_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case Location_LIST:\n      return {\n        ...state,\n        ...action.locationlist.entities.locationlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PURCHASE_ORDER_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PURCHASE_ORDER_LIST:\n      return {\n        ...state,\n        ...action.purchaseorderlistvalues.entities.purchaseorderlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PO_RECEIPT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PO_RECEIPT_LIST:\n      return {\n        ...state,\n        ...action.receiptlistvalues.entities.receiptlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED\n} from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(state)\n  switch (action.type) {\n    case CUSTOMER_CONTACT_FETCHED:\n    \n    case ADD_CUSTOMER_CONTACT:\n      return {\n        ...state,\n        ...action.customerlist.entities.customerlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    CUSTOMERTRANSACTION_FETCHED,\n    ADD_CUSTOMER_TRANSACTION\n  } from \"../Services/types\";\n  \n  export default function(state = {}, action) {\n    console.log(action)\n    switch (action.type) {\n      case CUSTOMERTRANSACTION_FETCHED:\n      return {\n        ...state,\n        ...action.customerlist.entities.customertransationvalues\n      };\n      case ADD_CUSTOMER_TRANSACTION:\n        return {\n          ...state,\n          ...action.customerlist.entities.customertransationvalues\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case QUOTATION_FETCHED:\n    case ADD_QUOTATION:\n      return {\n        ...state,\n        ...action.quotationlist.entities.quotationlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_INVOICE, INVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case INVOICE_FETCHED:\n    case ADD_INVOICE:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","\n\nimport { ADD_PROFORMA_INVOICE, PROFORMAINVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PROFORMAINVOICE_FETCHED:\n    case ADD_PROFORMA_INVOICE:\n      return {\n        ...state,\n        ...action.proformainvoicelist.entities.proformainvoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(action)\n  switch (action.type) {\n    case CHALLAN_FETCHED:\n    case ADD_CHALLAN:\n      return {\n        ...state,\n        ...action.challanlist.entities.challanlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ADD_ORDER:\n    case ORDER_FETCHED:\n      return {\n        ...state,\n        ...action.orderlist.entities.orderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCTION_FETCHED:\n    case ADD_PRODUCTION:\n      return {\n        ...state,\n        ...action.productionlist.entities.productionlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MOVEORDER_FETCHED:\n    case ADD_MOVEORDER:\n      return {\n        ...state,\n        ...action.moverorderlist.entities.moveorderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport LocalStorage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: LocalStorage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n);\n\nexport default store;\n","import { persistStore } from \"redux-persist\";\nimport store from \"./store\";\n\nexport default persistStore(store);\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCalendarPlus, faCube, faDollyFlatbed, faHome, faKaaba, faUser, faUserFriends, faUsers, faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport jwtDecode from \"jwt-decode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { userLoggedIn } from \"./actions/actions\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport persistor from \"./Store/persistStore\";\nimport store from \"./Store/store\";\nimport setAuthorizationHeader from \"./utils/setAuthorizationHeader\";\n\nlibrary.add(\n  faHome,\n  faDollyFlatbed,\n  faCube,\n  faKaaba,\n  faUsers,\n  faUser,\n  faUsersCog,\n  faUserFriends,\n  faCalendarPlus\n);\n\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n\nif (localStorage.Mob_JWT) {\n  const token = localStorage.Mob_JWT;\n  setAuthorizationHeader(token);\n  var decoded = jwtDecode(localStorage.Mob_JWT);\n  const userinfo = {\n    email: decoded.email,\n    role: decoded.role,\n    token: localStorage.Mob_JWT\n  };\n  store.dispatch(userLoggedIn(userinfo));\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App component={App} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}